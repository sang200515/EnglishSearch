  https://www.youtube.com/watch?v=F2ojC6TNwws
  hello and welcome 🍀 xin chào và chào mừng
  in this 14 day beginner challenge you're 🍀 trong thử thách mới bắt đầu 14 ngày này, bạn
  going to start your app journey off with 🍀 sẽ bắt đầu hành trình ứng dụng của bạn với
  a bang 🍀 một tiếng nổ
  you're going to learn how apps are made 🍀 bạn sẽ tìm hiểu cách các ứng dụng được tạo ra
  and how they end up on the app store 🍀 và cách chúng kết thúc trên cửa hàng ứng dụng
  you're going to get familiar with xcode 🍀 bạn sẽ làm quen với xcode
  and how to start your very own app 🍀 và làm thế nào để bắt đầu ứng dụng của riêng bạn
  project 🍀 dự án
  you're going to learn how to build user 🍀 bạn sẽ học cách xây dựng người dùng
  interfaces with swift ui 🍀 giao diện với swift ui
  and you're going to learn swift 🍀 và bạn sẽ học nhanh
  programming basics so that you can read 🍀 kiến thức cơ bản về lập trình để bạn có thể đọc
  and write simple swift code 🍀 và viết mã nhanh chóng đơn giản
  now in the next 14 lessons you're going 🍀 bây giờ trong 14 bài học tiếp theo bạn sẽ
  to gain all of these new skills 🍀 để đạt được tất cả những kỹ năng mới này
  and you're going to have built your very 🍀 và bạn sẽ xây dựng rất
  own app that you can install on your 🍀 ứng dụng riêng mà bạn có thể cài đặt trên
  device 🍀 thiết bị
  and show all of your friends and family 🍀 và hiển thị tất cả bạn bè và gia đình của bạn
  what you've done 🍀 những gì bạn đã làm
  more importantly than that however you 🍀 quan trọng hơn thế tuy nhiên bạn
  will be extremely confident 🍀 sẽ vô cùng tự tin
  and excited to continue growing your app 🍀 và hào hứng tiếp tục phát triển ứng dụng của bạn
  development skills 🍀 kỹ năng phát triển
  beyond what we've covered here this 🍀 ngoài những gì chúng tôi đã đề cập ở đây
  really could be the start of something 🍀 thực sự có thể là sự khởi đầu của một cái gì đó
  new for you 🍀 mới cho bạn
  now just in case you're new around here 🍀 bây giờ chỉ trong trường hợp bạn là người mới ở đây
  my name is chris and welcome to code 🍀 tên tôi là chris và chào mừng bạn đến với mã
  with chris the place to be 🍀 với chris nơi để được
  if you want to learn how to make an app 🍀 nếu bạn muốn học cách tạo một ứng dụng
  we've taught thousands of people with no 🍀 chúng tôi đã dạy hàng ngàn người không có
  coding experience 🍀 kinh nghiệm mã hóa
  how to code and how to make apps and i'm 🍀 cách viết mã và cách tạo ứng dụng và tôi
  sure that we can do the same thing for 🍀 chắc chắn rằng chúng ta có thể làm điều tương tự cho
  you 🍀 Bạn
  on that note why are you here learning 🍀 trên ghi chú đó tại sao bạn ở đây học
  app development 🍀 phát triển ứng dụng
  let me know by leaving a quick comment 🍀 cho tôi biết bằng cách để lại một bình luận nhanh chóng
  below and on your way down there if you 🍀 bên dưới và trên đường xuống đó nếu bạn
  wouldn't mind please give this video a 🍀 không phiền xin vui lòng cung cấp cho video này một
  quick thumbs up 🍀 ngón tay cái lên nhanh chóng
  it really helps the video out and i 🍀 nó thực sự giúp ích cho video và tôi
  appreciate that so much 🍀 đánh giá cao điều đó rất nhiều
  okay so if you're ready let's roll up 🍀 được rồi, nếu bạn đã sẵn sàng, hãy cuộn lên
  our sleeves and get started 🍀 tay áo của chúng tôi và bắt đầu
  i'm going to walk through this diagram 🍀 tôi sẽ đi qua sơ đồ này
  and then after i'll tell you where to 🍀 và sau đó tôi sẽ cho bạn biết nơi để
  get all of the pieces 🍀 có được tất cả các mảnh
  it all starts with the xcode ide 🍀 tất cả bắt đầu với ý tưởng xcode
  now ide stands for integrated 🍀 bây giờ ide là viết tắt của tích hợp
  development 🍀 phát triển
  environment which is a term for the 🍀 môi trường là thuật ngữ chỉ
  application 🍀 ứng dụng
  and all of the tools a developer uses to 🍀 và tất cả các công cụ mà nhà phát triển sử dụng để
  build something 🍀 xây dựng một cái gì đó
  for the rest of this course we'll simply 🍀 trong phần còn lại của khóa học này, chúng ta sẽ chỉ đơn giản
  call it xcode 🍀 gọi nó là xcode
  this is where we build our app by 🍀 đây là nơi chúng tôi xây dựng ứng dụng của mình bằng cách
  writing swift code building the user 🍀 viết mã nhanh chóng xây dựng người dùng
  interface 🍀 giao diện
  or ui for short and connecting it with 🍀 hoặc gọi tắt là ui và kết nối nó với
  all of our data 🍀 tất cả dữ liệu của chúng tôi
  swift is the programming language we use 🍀 swift là ngôn ngữ lập trình chúng tôi sử dụng
  to express our logic 🍀 để thể hiện logic của chúng tôi
  and to tell the system what we want to 🍀 và nói với hệ thống những gì chúng ta muốn
  do we can even build the ui 🍀 chúng ta thậm chí có thể xây dựng giao diện người dùng không
  through swift code as you'll soon see 🍀 thông qua mã nhanh như bạn sẽ sớm thấy
  now swift ui 🍀 bây giờ nhanh lên ui
  is a ui framework that makes it easy for 🍀 là một khung giao diện người dùng giúp dễ dàng
  us to rapidly build apps 🍀 chúng tôi để nhanh chóng xây dựng các ứng dụng
  for all of apple's platforms a nice 🍀 đối với tất cả các nền tảng của apple, thật tuyệt
  benefit of learning xcode 🍀 lợi ích của việc học xcode
  swift and swift ui is that there are the 🍀 swift và swift ui là có
  same skills and tools 🍀 kỹ năng và công cụ giống nhau
  used to build all apps for all of 🍀 được sử dụng để xây dựng tất cả các ứng dụng cho tất cả
  apple's platforms 🍀 nền tảng của apple
  including ios ipad os tv os 🍀 bao gồm ios ipad os tv os
  watch os and mac os and in some cases 🍀 xem os và mac os và trong một số trường hợp
  your app will be able to work on 🍀 ứng dụng của bạn sẽ có thể hoạt động trên 1
  multiple platforms without much 🍀 nhiều nền tảng mà không cần nhiều
  changes at all now once your app is 🍀 bây giờ hoàn toàn thay đổi sau khi ứng dụng của bạn được
  built you can distribute it with apple's 🍀 được xây dựng, bạn có thể phân phối nó với apple
  app store this is done by joining the 🍀 cửa hàng ứng dụng điều này được thực hiện bằng cách tham gia
  apple developer program which requires 🍀 chương trình nhà phát triển apple yêu cầu
  an annual enrollment fee 🍀 lệ phí tuyển sinh hàng năm
  once you're enrolled you get access to 🍀 khi bạn đã đăng ký, bạn có quyền truy cập vào
  multiple benefits including 🍀 nhiều lợi ích bao gồm
  the app store connect portal test flight 🍀 chuyến bay thử nghiệm cổng kết nối cửa hàng ứng dụng
  and the provisioning portal 🍀 và cổng cung cấp
  there are some more benefits including 🍀 có một số lợi ích hơn bao gồm
  access to beta software and support from 🍀 truy cập vào phần mềm beta và hỗ trợ từ
  apple engineers and i'll provide a link 🍀 các kỹ sư của apple và tôi sẽ cung cấp một liên kết
  to the full list below 🍀 vào danh sách đầy đủ dưới đây
  the provisioning portal gives you access 🍀 cổng cung cấp cung cấp cho bạn quyền truy cập
  to tools for identifying and code 🍀 đến các công cụ để xác định và mã hóa
  signing your app 🍀 ký ứng dụng của bạn
  it's like putting your signature on the 🍀 nó giống như đặt chữ ký của bạn trên
  app so that apple can identify who built 🍀 ứng dụng để apple có thể xác định ai đã xây dựng
  it 🍀 Nó
  and this is important for the safety of 🍀 và điều này rất quan trọng đối với sự an toàn của
  the end users downloading your app 🍀 người dùng cuối tải xuống ứng dụng của bạn
  and it's also important for you because 🍀 và nó cũng quan trọng đối với bạn bởi vì
  it stops malicious coders from 🍀 nó ngăn chặn các lập trình viên độc hại từ
  pretending to be you 🍀 giả vờ là bạn
  once your app is in a testable state 🍀 khi ứng dụng của bạn ở trạng thái có thể kiểm tra
  test flight allows you to 🍀 chuyến bay thử nghiệm cho phép bạn
  invite people to download and beta test 🍀 mời mọi người tải về và thử nghiệm bản beta
  your app they'll be able to send 🍀 ứng dụng của bạn họ sẽ có thể gửi
  feedback and bug reports directly to you 🍀 phản hồi và báo cáo lỗi trực tiếp cho bạn
  through the test flight program use test 🍀 thông qua chương trình bay thử nghiệm sử dụng thử nghiệm
  flight to ensure that your app is as 🍀 chuyến bay để đảm bảo rằng ứng dụng của bạn là
  polished as it can be before launch 🍀 được đánh bóng hết mức có thể trước khi ra mắt
  and finally app store connect is where 🍀 và cuối cùng kết nối cửa hàng ứng dụng là nơi
  you'll create the app listing for your 🍀 bạn sẽ tạo danh sách ứng dụng cho
  app 🍀 ứng dụng
  including all of the metadata and 🍀 bao gồm tất cả các siêu dữ liệu và
  screenshots 🍀 ảnh chụp màn hình
  if your app has in-app purchases this is 🍀 nếu ứng dụng của bạn có mua hàng trong ứng dụng thì đây là
  also where you would configure them 🍀 cũng là nơi bạn sẽ cấu hình chúng
  once your app is tested and the listing 🍀 sau khi ứng dụng của bạn được thử nghiệm và danh sách
  is ready you can upload the app from 🍀 đã sẵn sàng, bạn có thể tải ứng dụng lên từ
  xcode 🍀 xcode
  to app store connect from there the 🍀 đến cửa hàng ứng dụng kết nối từ đó
  certification team at apple will review 🍀 nhóm chứng nhận tại apple sẽ xem xét
  your app to ensure that it meets the app 🍀 ứng dụng của bạn để đảm bảo rằng nó đáp ứng ứng dụng
  store quality guidelines 🍀 hướng dẫn chất lượng cửa hàng
  this takes a couple of days and don't 🍀 việc này mất vài ngày và không
  worry if you fail because you can fix 🍀 lo lắng nếu bạn thất bại vì bạn có thể sửa chữa
  whatever they point out and resubmit it 🍀 bất cứ điều gì họ chỉ ra và gửi lại nó
  for review 🍀 Để đánh giá
  if everything looks good they'll approve 🍀 nếu mọi thứ có vẻ tốt, họ sẽ chấp thuận
  the app and your app will be live 🍀 ứng dụng và ứng dụng của bạn sẽ hoạt động
  congratulations 🍀 Chúc mừng
  alright so where can you get these 🍀 được rồi, vậy bạn có thể lấy những thứ này ở đâu
  different pieces of the apple 🍀 những miếng táo khác nhau
  developer ecosystem you can download 🍀 hệ sinh thái nhà phát triển bạn có thể tải xuống
  xcode for free from the mac app store 🍀 xcode miễn phí từ cửa hàng ứng dụng mac
  i'll provide a link below 🍀 tôi sẽ cung cấp một liên kết dưới đây
  you don't need to get swift or swift ui 🍀 bạn không cần phải nhanh chóng hoặc nhanh chóng ui
  those just 🍀 những cái đó chỉ
  come with xcode as for the apple 🍀 đi kèm với xcode như đối với apple
  developer program i'll provide a link to 🍀 chương trình dành cho nhà phát triển, tôi sẽ cung cấp một liên kết đến
  the enrollment page below 🍀 trang đăng ký bên dưới
  i want to mention that joining the apple 🍀 tôi muốn đề cập đến việc tham gia apple
  developer program is completely optional 🍀 chương trình dành cho nhà phát triển là hoàn toàn tùy chọn
  if your goal isn't to distribute apps 🍀 nếu mục tiêu của bạn không phải là phân phối ứng dụng
  into the app store 🍀 vào cửa hàng ứng dụng
  don't join it you'll still be able to 🍀 không tham gia nó bạn vẫn có thể
  learn how to build apps for yourself 🍀 tìm hiểu cách xây dựng ứng dụng cho chính mình
  so that's the apple developer ecosystem 🍀 vậy đó là hệ sinh thái nhà phát triển apple
  it's the process that i'll be taking you 🍀 đó là quá trình mà tôi sẽ đưa bạn
  through if you continue on with this app 🍀 thông qua nếu bạn tiếp tục với ứng dụng này
  journey 🍀 hành trình
  now by the end of this learning path 🍀 bây giờ khi kết thúc con đường học tập này
  you'll be building your own apps using 🍀 bạn sẽ xây dựng các ứng dụng của riêng mình bằng cách sử dụng.
  all of these tools that we've covered 🍀 tất cả những công cụ này mà chúng tôi đã đề cập
  even if you don't have any coding 🍀 ngay cả khi bạn không có bất kỳ mã hóa nào
  experience right now 🍀 trải nghiệm ngay bây giờ
  i promise you you'll be surprised at 🍀 tôi hứa với bạn bạn sẽ ngạc nhiên
  what you can do by the end of this 🍀 những gì bạn có thể làm vào cuối này
  challenge 🍀 thử thách
  now i highly recommend that you go over 🍀 bây giờ tôi thực sự khuyên bạn nên đi qua
  to codewithkris.com and create 🍀 đến codewithkris.com và tạo
  an account you can take this same course 🍀 một tài khoản bạn có thể tham gia cùng khóa học này
  and get 🍀 và lấy
  all of the supplemental material and get 🍀 tất cả các tài liệu bổ sung và nhận được
  access to all of the quizzes 🍀 truy cập vào tất cả các câu đố
  and exercises to make your learning 🍀 và các bài tập để làm cho việc học của bạn
  truly effective 🍀 thực sự hiệu quả
  in fact if you go and do that right now 🍀 trên thực tế nếu bạn đi và làm điều đó ngay bây giờ
  there is a quiz that you can take to 🍀 có một bài kiểm tra mà bạn có thể làm
  reinforce what you've learned here 🍀 củng cố những gì bạn đã học được ở đây
  today in the next lesson we're going to 🍀 hôm nay trong bài học tiếp theo chúng ta sẽ
  dive right into xcode and if you don't 🍀 đi sâu vào xcode và nếu bạn không
  want to miss it make sure you're 🍀 muốn bỏ lỡ nó chắc chắn rằng bạn
  subscribed to the channel by hitting 🍀 đã đăng ký kênh bằng cách nhấn
  that subscribe button below 🍀 nút đăng ký bên dưới
  and turn on bell notifications so that 🍀 và bật chuông thông báo để
  you get notified 🍀 bạn nhận được thông báo
  alright i'll see you in the next lesson 🍀 được rồi tôi sẽ gặp bạn trong bài học tiếp theo
  hello and welcome in this xcode tutorial 🍀 xin chào và chào mừng trong hướng dẫn xcode này
  you're going to get familiar 🍀 bạn sẽ làm quen
  with the development environment that 🍀 với môi trường phát triển
  you'll be building apps in 🍀 bạn sẽ xây dựng các ứng dụng trong
  i'll show you where to download xcode 🍀 tôi sẽ chỉ cho bạn nơi tải xuống xcode
  and how to start a new app project 🍀 và cách bắt đầu một dự án ứng dụng mới
  and then we're going to go through the 🍀 và sau đó chúng ta sẽ đi qua
  major areas of xcode 🍀 các lĩnh vực chính của xcode
  and then what each of the files in your 🍀 và sau đó mỗi tệp trong số của bạn là gì
  app project is for 🍀 dự án ứng dụng là dành cho
  and then finally we'll wrap up the 🍀 và sau đó cuối cùng chúng ta sẽ kết thúc
  lesson with some quick tips on how to 🍀 bài học với một số mẹo nhanh về cách
  navigate around 🍀 điều hướng xung quanh
  in xcode all right with that said let's 🍀 trong xcode được rồi với điều đó đã nói, hãy
  dive in 🍀 lặn trong
  let's start by talking about where to 🍀 hãy bắt đầu bằng cách nói về nơi để
  get xcode it's free so you don't need to 🍀 nhận xcode miễn phí nên bạn không cần
  pay for it just launch 🍀 trả tiền cho nó chỉ cần khởi chạy
  the mac app store on your computer and 🍀 cửa hàng ứng dụng mac trên máy tính của bạn và
  then search for xcode 🍀 sau đó tìm kiếm xcode
  you're going to get to a page like this 🍀 bạn sẽ đến một trang như thế này
  in the search results 🍀 trong kết quả tìm kiếm
  click into it and you're going to be 🍀 nhấp vào nó và bạn sẽ được
  able to download it for free 🍀 có thể tải xuống miễn phí
  so i've already got it downloaded so 🍀 vì vậy tôi đã tải nó xuống rồi
  that's why it says update here 🍀 đó là lý do tại sao nó nói cập nhật ở đây
  i want you to just ignore the warning 🍀 tôi muốn bạn bỏ qua cảnh báo
  here it's actually a 🍀 đây thực sự là một
  very large uh app with a lot of 🍀 uh ứng dụng rất lớn với rất nhiều
  different features it's understandable 🍀 các tính năng khác nhau có thể hiểu được
  that there are a few bugs and 🍀 rằng có một vài lỗi và
  if you look at the reviews there are 🍀 nếu bạn nhìn vào các đánh giá có
  people complaining about other things 🍀 mọi người phàn nàn về những thứ khác
  unrelated to the app they're complaining 🍀 không liên quan đến ứng dụng mà họ đang phàn nàn
  about the way apple is running their 🍀 về cách Apple đang điều hành họ
  business 🍀 việc kinh doanh
  and so on and so forth and some of these 🍀 vân vân và vân vân và một số trong số này
  are um 🍀 là ừm
  very very old okay i want you to 🍀 rất rất cũ được rồi tôi muốn bạn
  take note of this important information 🍀 lưu ý thông tin quan trọng này
  click on this 🍀 bấm vào đây
  just to make sure what the requirements 🍀 chỉ để đảm bảo những yêu cầu
  are to install xcode 🍀 là cài đặt xcode
  and also double check that you have 🍀 và cũng kiểm tra lại xem bạn có
  enough free hard drive space 🍀 đủ dung lượng ổ cứng trống
  now in my experience it actually takes 🍀 bây giờ theo kinh nghiệm của tôi, nó thực sự cần
  more hard drive space over time 🍀 nhiều dung lượng ổ cứng hơn theo thời gian
  than what it says here so if you have 🍀 hơn những gì nó nói ở đây vì vậy nếu bạn có
  something like 🍀 cái gì đó như
  12 gigs free it might not let you 🍀 12 hợp đồng biểu diễn miễn phí, nó có thể không cho phép bạn
  install this 🍀 cài đặt cái này
  because during the installation process 🍀 Vì trong quá trình cài đặt
  it actually takes up more space and then 🍀 nó thực sự chiếm nhiều không gian hơn và sau đó
  i think it gets rid of a bunch of files 🍀 tôi nghĩ rằng nó sẽ thoát khỏi một loạt các tập tin
  and it stops at 🍀 và nó dừng lại ở
  this size however over time when you 🍀 kích thước này tuy nhiên theo thời gian khi bạn
  download 🍀 Tải xuống
  additional developer components and 🍀 các thành phần nhà phát triển bổ sung và
  additional ios simulators 🍀 trình giả lập ios bổ sung11
  this can actually get even higher so 🍀 điều này thực sự có thể cao hơn nữa vì vậy
  make sure you have sufficient hard drive 🍀 đảm bảo bạn có đủ ổ cứng
  space 🍀 không gian
  all right so if for some reason you 🍀 được rồi vì vậy nếu vì lý do nào đó bạn
  can't get access to the mac app store 🍀 không thể truy cập vào cửa hàng ứng dụng mac
  you can also visit the official xcode 🍀 bạn cũng có thể truy cập xcode chính thức
  page 🍀 trang
  on the apple developer site so the url 🍀 trên trang web của nhà phát triển apple nên url
  is 🍀 là
  developer.apple.com xcode 🍀 developer.apple.com xcode
  and you can immediately click on the 🍀 và bạn có thể nhấp ngay vào
  resources link up here 🍀 tài nguyên liên kết lên ở đây
  and then you'll be taken to a page where 🍀 và sau đó bạn sẽ được đưa đến một trang nơi
  you can download 🍀 bạn có thể tải về
  xcode here it just takes you to the mac 🍀 xcode ở đây nó chỉ đưa bạn đến mac
  app store actually 🍀 cửa hàng ứng dụng thực sự
  you can also download beta versions of 🍀 bạn cũng có thể tải xuống phiên bản beta của
  xcode now i wouldn't recommend this 🍀 xcode bây giờ tôi không khuyến nghị điều này
  because oftentimes it actually 🍀 bởi vì đôi khi nó thực sự
  is pretty buggy their beta software so i 🍀 phần mềm beta của họ khá lỗi nên tôi
  would recommend 🍀 muốn giới thiệu
  to stick with the official releases if 🍀 gắn bó với các bản phát hành chính thức nếu
  for some reason you want to download an 🍀 vì một số lý do bạn muốn tải xuống một
  older version of xcode you can scroll 🍀 phiên bản cũ hơn của xcode bạn có thể cuộn
  down here 🍀 Xuống đây
  and you can click this link here now 🍀 và bạn có thể nhấp vào liên kết này ở đây ngay bây giờ
  just a note in order to download 🍀 chỉ cần một ghi chú để tải về
  beta versions of apple software you need 🍀 phiên bản beta của phần mềm apple bạn cần
  to be enrolled in their apple developer 🍀 để được ghi danh vào nhà phát triển apple của họ
  program 🍀 chương trình
  which we talked about in the previous 🍀 mà chúng ta đã nói về trong phần trước
  lesson to download older versions of 🍀 bài học để tải xuống các phiên bản cũ hơn của
  xcode i don't think you need to be 🍀 xcode tôi không nghĩ bạn cần phải như vậy
  enrolled in that program i think you 🍀 ghi danh vào chương trình đó tôi nghĩ rằng bạn
  just need a free apple id and lastly if 🍀 chỉ cần một id apple miễn phí và cuối cùng nếu
  you are on a pc 🍀 bạn đang ở trên máy tính
  you're running windows check the 🍀 bạn đang chạy windows hãy kiểm tra
  resources in the beginning of the course 🍀 tài liệu đầu khóa học
  for options for you alright so now take 🍀 cho các tùy chọn cho bạn được rồi, vì vậy bây giờ hãy
  the opportunity to download and install 🍀 cơ hội để tải về và cài đặt
  xcode if you haven't already 🍀 xcode nếu bạn chưa có
  and then launch it for the first time 🍀 và sau đó khởi chạy nó lần đầu tiên
  during your first launch it's going to 🍀 trong lần ra mắt đầu tiên của bạn, nó sẽ
  ask you for your administrative password 🍀 hỏi bạn mật khẩu quản trị của bạn
  to install additional development 🍀 để cài đặt phát triển bổ sung
  components you're going to want to 🍀 các thành phần bạn sẽ muốn
  do this so go ahead and enter in your 🍀 làm điều này vì vậy hãy tiếp tục và nhập vào của bạn
  admin password 🍀 mật khẩu quản trị
  after you've done that let's continue on 🍀 sau khi bạn làm xong, hãy tiếp tục
  with the rest of the video 🍀 với phần còn lại của video
  alright so now let's talk about how to 🍀 được rồi, bây giờ chúng ta hãy nói về cách
  start a brand new xcode app project 🍀 bắt đầu một dự án ứng dụng xcode hoàn toàn mới
  this should be the first welcome screen 🍀 đây sẽ là màn hình chào mừng đầu tiên
  that you see when you launch xcode 🍀 mà bạn thấy khi khởi chạy xcode
  if you don't see this don't worry you 🍀 nếu bạn không thấy điều này đừng lo lắng bạn
  can always go to file 🍀 luôn có thể đi đến tập tin
  new and choose project 🍀 mới và chọn dự án
  otherwise from this welcome screen you 🍀 mặt khác, từ màn hình chào mừng này, bạn
  can go ahead and click create a new 🍀 có thể tiếp tục và nhấp vào tạo mới
  xcode project from here 🍀 dự án xcode từ đây
  from here you're going to choose a 🍀 từ đây bạn sẽ chọn một
  template for your new project you're 🍀 mẫu cho dự án mới của bạn, bạn đang
  going to configure 🍀 sắp cấu hình
  the project properties for this and then 🍀 các thuộc tính dự án cho cái này và sau đó
  you're going to choose a place to save 🍀 bạn sẽ chọn một nơi để lưu
  it 🍀 Nó
  so let's start by choosing a template 🍀 vì vậy hãy bắt đầu bằng cách chọn một mẫu
  the most basic one 🍀 cái cơ bản nhất
  for our purposes is under ios 🍀 cho mục đích của chúng tôi là dưới ios
  and app so go ahead and choose that and 🍀 và ứng dụng, vì vậy hãy tiếp tục và chọn ứng dụng đó và
  hit 🍀 đánh
  next and then here you're going to 🍀 tiếp theo và sau đó bạn sẽ đến đây
  configure the properties 🍀 cấu hình các thuộc tính
  for your project so if you don't have a 🍀 cho dự án của bạn vì vậy nếu bạn không có
  team here 🍀 đội ở đây
  don't worry later on you can add your 🍀 đừng lo lắng sau này bạn có thể thêm
  apple account here 🍀 tài khoản apple tại đây
  and then you can configure the team for 🍀 và sau đó bạn có thể định cấu hình nhóm cho
  the project 🍀 dự án
  one thing that you will want to make 🍀 một điều mà bạn sẽ muốn làm
  sure of though is 🍀 chắc chắn mặc dù là
  to set your organization identifier here 🍀 để đặt số nhận dạng tổ chức của bạn tại đây
  if you have a business or a website you 🍀 nếu bạn có một doanh nghiệp hoặc một trang web bạn
  can use 🍀 co thể sử dụng
  a reverse domain style name here 🍀 một tên miền kiểu đảo ngược ở đây
  com dot whatever that may be and you 🍀 com chấm bất cứ điều gì có thể được và bạn
  could even use your first and last name 🍀 thậm chí có thể sử dụng tên và họ của bạn
  here if you'd want 🍀 ở đây nếu bạn muốn
  and then here you'd fill in the name for 🍀 và sau đó ở đây bạn sẽ điền tên cho
  your app 🍀 ứng dụng của bạn
  or the product name so here 🍀 hoặc tên sản phẩm ở đây
  if i put in test you'll see that this 🍀 nếu tôi đưa vào thử nghiệm, bạn sẽ thấy điều này
  bundle identifier 🍀 số nhận dạng gói
  is a combination of the organization 🍀 là sự kết hợp của tổ chức
  identifier plus the product name and 🍀 số nhận dạng cộng với tên sản phẩm và
  this together 🍀 điều này cùng nhau
  forms this unique bundle identifier this 🍀 tạo thành mã định danh gói duy nhất này
  bundle identifier is used in 🍀 định danh gói được sử dụng trong
  different places to identify your app 🍀 những nơi khác nhau để xác định ứng dụng của bạn
  such as in the app store 🍀 chẳng hạn như trong cửa hàng ứng dụng
  or in the provisioning portal or in app 🍀 hoặc trong cổng cung cấp hoặc trong ứng dụng
  store connect 🍀 cửa hàng kết nối
  so this is very important don't worry 🍀 vì vậy điều này rất quan trọng đừng lo lắng
  you can change the bundle identifier for 🍀 bạn có thể thay đổi số nhận dạng gói cho
  your project later on 🍀 dự án của bạn sau này
  i just want to draw your attention to 🍀 tôi chỉ muốn thu hút sự chú ý của bạn đến
  how it's formed and what it's used for 🍀 nó được hình thành như thế nào và nó được sử dụng để làm gì
  all right next up for your interface 🍀 được rồi tiếp theo cho giao diện của bạn
  you're going to make sure that you have 🍀 bạn sẽ đảm bảo rằng bạn có
  swift ui selected and for life cycle 🍀 swift ui được chọn và cho vòng đời
  you're going to make sure you have swift 🍀 bạn sẽ chắc chắn rằng bạn có swift
  ui app selected 🍀 ứng dụng ui đã chọn
  and then finally for language choose 🍀 và cuối cùng chọn ngôn ngữ
  swift 🍀 nhanh
  and for these options just leave them 🍀 và đối với các tùy chọn này, chỉ cần để chúng
  all unchecked 🍀 tất cả không được kiểm tra
  or if they are checked just uncheck them 🍀 hoặc nếu chúng được chọn, chỉ cần bỏ chọn chúng
  now a brief note on these drop downs 🍀 bây giờ là một ghi chú ngắn gọn về các trình đơn thả xuống này 111
  right here over time 🍀 ngay tại đây theo thời gian
  as app development for ios has evolved 🍀 khi phát triển ứng dụng cho ios đã phát triển
  there have been a couple of programming 🍀 đã có một vài chương trình
  languages 🍀 ngôn ngữ
  and also a couple of ways of building 🍀 và cũng có một vài cách để xây dựng
  user interfaces 🍀 giao diện người dùng
  the latest and greatest is swift ui and 🍀 mới nhất và lớn nhất là Swift ui và
  swift so that's what we want to be using 🍀 swift vì vậy đó là những gì chúng tôi muốn sử dụng
  let's go ahead and hit next if you're 🍀 hãy tiếp tục và nhấn tiếp theo nếu bạn
  happy with all of your selections here 🍀 hài lòng với tất cả các lựa chọn của bạn ở đây
  and then choose a place to save it i'm 🍀 và sau đó chọn một nơi để lưu nó, tôi
  just going to save it on my desktop 🍀 chỉ cần lưu nó trên máy tính để bàn của tôi
  so that it's easy to find since i've 🍀 để dễ dàng tìm thấy vì tôi đã
  already got a project there i was just 🍀 đã có một dự án ở đó tôi chỉ
  going to replace it 🍀 sẽ thay thế nó
  alright welcome to your brand new xcode 🍀 được rồi, chào mừng bạn đến với xcode hoàn toàn mới của bạn
  project now it might seem overwhelming 🍀 dự án bây giờ nó có vẻ áp đảo
  with all of the different panels and 🍀 với tất cả các bảng khác nhau và
  areas but 🍀 khu vực nhưng
  it's actually not so complex once you 🍀 nó thực sự không quá phức tạp một khi bạn
  know how it 🍀 biết làm thế nào nó
  gets broken down there are actually only 🍀 bị phá vỡ thực sự chỉ có
  four major areas of xcode 🍀 bốn lĩnh vực chính của xcode
  let's start from the very very left here 🍀 hãy bắt đầu từ bên trái ở đây
  we have the navigator panel or the 🍀 chúng tôi có bảng điều hướng hoặc
  navigator area 🍀 khu vực hoa tiêu
  and as you can see here we have a file 🍀 và như bạn có thể thấy ở đây, chúng tôi có một tập tin
  listing 🍀 niêm yết
  of all of the different files in our app 🍀 của tất cả các tệp khác nhau trong ứng dụng của chúng tôi
  project 🍀 dự án
  the navigator area actually has 🍀 khu vực điều hướng thực sự có
  different tabs 🍀 các tab khác nhau
  to navigate through different things as 🍀 để điều hướng qua những thứ khác nhau như
  well which we will get to 🍀 tốt mà chúng ta sẽ nhận được
  in future lessons for now it's set to 🍀 trong các bài học trong tương lai bây giờ nó được đặt thành
  the first tab 🍀 tab đầu tiên
  and we have a listing of our files 🍀 và chúng tôi có một danh sách các tập tin của chúng tôi
  when you click on a file it changes what 🍀 khi bạn bấm vào một tập tin, nó sẽ thay đổi những gì
  is shown in this big 🍀 được hiển thị trong lớn này
  main area and this is called the editor 🍀 khu vực chính và đây được gọi là trình soạn thảo
  area it allows us to edit the files that 🍀 khu vực nó cho phép chúng tôi chỉnh sửa các tập tin
  we choose 🍀 Chúng tôi chọn
  in the file navigator you can see that 🍀 trong trình điều hướng tệp, bạn có thể thấy điều đó
  it adapts to 🍀 nó thích nghi với
  the type of file that you choose if i 🍀 loại tập tin mà bạn chọn nếu tôi
  choose a dot swift file those are code 🍀 chọn một tệp dot swift đó là mã
  files 🍀 các tập tin
  if i choose this xc assets file this is 🍀 nếu tôi chọn tệp nội dung xc này thì đây là
  an 🍀 MỘT
  image library so it's showing me 🍀 thư viện hình ảnh để nó hiển thị cho tôi
  something like this the editor area 🍀 một cái gì đó như thế này khu vực biên tập
  is a place to edit the file that i 🍀 là nơi để chỉnh sửa tập tin mà tôi
  choose 🍀 chọn
  here so the last tab 🍀 đây là tab cuối cùng
  is on the very right hand side and this 🍀 nằm ở phía bên tay phải và cái này
  is called the inspector area 🍀 được gọi là khu vực thanh tra
  and it either shows me additional 🍀 và nó cho tôi thấy bổ sung
  supplemental information 🍀 thông tin bổ sung //TODO: here
  on what i select in the editor area or 🍀 về những gì tôi chọn trong khu vực biên tập hoặc
  it allows me to configure or edit 🍀 nó cho phép tôi cấu hình hoặc chỉnh sửa
  the thing that i select in the editor 🍀 thứ mà tôi chọn trong trình chỉnh sửa
  area depending on 🍀 khu vực tùy thuộc vào
  what sort of editor i'm currently 🍀 tôi hiện đang là loại biên tập viên nào
  working in so for example this is a code 🍀 làm việc trong ví dụ đây là một mã
  editor 🍀 biên tập viên
  because i'm looking at a dot swift file 🍀 bởi vì tôi đang xem một tập tin dot swift
  so when i hover over 🍀 vì vậy khi tôi di chuột qua
  or select the keyword here if i'm on 🍀 hoặc chọn từ khóa ở đây nếu tôi đang bật
  this 🍀 cái này
  quick help tab it's showing me some 🍀 tab trợ giúp nhanh, nó đang hiển thị cho tôi một số
  quick information about 🍀 thông tin nhanh về
  what that piece of code or keyword is 🍀 đoạn mã hoặc từ khóa đó là gì
  for 🍀 vì
  the inspector panel also has a couple of 🍀 bảng thanh tra cũng có một vài
  different tabs up here 🍀 các tab khác nhau ở đây
  for example this one is an identity tab 🍀 ví dụ cái này là một tab nhận dạng
  it shows me information about 🍀 nó cho tôi thấy thông tin về
  that file that i've got selected about 🍀 tập tin mà tôi đã chọn về
  where it's located and 🍀 nó nằm ở đâu và
  which app it's included in and if we 🍀 nó được bao gồm trong ứng dụng nào và nếu chúng tôi
  were building our user interface now if 🍀 đang xây dựng giao diện người dùng của chúng tôi bây giờ nếu
  i were to select one of those elements 🍀 tôi đã chọn một trong những yếu tố đó
  and go to this tab it would allow me to 🍀 và chuyển đến tab này, nó sẽ cho phép tôi
  configure it 🍀 cấu hình nó
  so to sum it up the inspector panel here 🍀 Vì vậy, để tổng hợp nó, bảng điều khiển ở đây
  is contextual to what you select in the 🍀 là theo ngữ cảnh với những gì bạn chọn trong
  editor area 🍀 khu vực soạn thảo
  and the editor area is contextual to 🍀 và khu vực soạn thảo là theo ngữ cảnh để
  what you select in the navigator area 🍀 những gì bạn chọn trong khu vực điều hướng
  so it all stems from what you select 🍀 vì vậy tất cả bắt nguồn từ những gì bạn chọn
  here 🍀 đây
  on the left hand side first and then 🍀 ở phía bên trái đầu tiên và sau đó
  across the top 🍀 trên đầu trang
  we have the toolbar here let me explain 🍀 chúng tôi có thanh công cụ ở đây để tôi giải thích
  to you what this is 🍀 với bạn đây là gì
  there's a button here on the very left 🍀 có một nút ở đây bên trái
  and very right 🍀 và rất đúng
  to hide and show the navigator and 🍀 để ẩn và hiển thị bộ điều hướng và
  inspector these are handy 🍀 thanh tra đây là tiện dụng
  if you don't have a lot of screen real 🍀 nếu bạn không có nhiều màn hình thực
  estate next thing i want to draw your 🍀 bất động sản điều tiếp theo tôi muốn vẽ của bạn
  attention 🍀 chú ý
  to is in the middle here this is the 🍀 ở giữa đây là
  status bar 🍀 thanh trạng thái
  it tells you what's currently happening 🍀 nó cho bạn biết những gì đang xảy ra
  what is xcode doing 🍀 xcode đang làm gì
  do you have any errors do you have any 🍀 bạn có bất kỳ lỗi nào bạn có bất kỳ
  warnings and so on and so forth 🍀 cảnh báo và vân vân và vân vân
  to the left of that you have a drop down 🍀 ở bên trái của bạn có một trình đơn thả xuống
  to select 🍀 chọn
  a simulator and this ios 🍀 một trình giả lập và ios này
  simulator is basically a virtual 🍀 giả lập về cơ bản là ảo
  device that appears on the screen where 🍀 thiết bị xuất hiện trên màn hình nơi
  you can run your app and test it you 🍀 bạn có thể chạy ứng dụng của mình và kiểm tra nó
  don't actually need 🍀 không thực sự cần
  a physical device if you do have one 🍀 một thiết bị vật lý nếu bạn có một
  however and you plug it in 🍀 tuy nhiên và bạn cắm nó vào
  and you want to run your xcode project 🍀 và bạn muốn chạy dự án xcode của mình
  on your actual device 🍀 trên thiết bị thực tế của bạn
  you'll find that it will be selectable 🍀 bạn sẽ thấy rằng nó sẽ được lựa chọn
  from here once you plug it in 🍀 từ đây khi bạn cắm nó vào
  and then to the left of this menu you're 🍀 và sau đó ở bên trái của menu này, bạn
  going to see 🍀 đi xem
  a couple of buttons here to run your 🍀 một vài nút ở đây để chạy của bạn
  project 🍀 dự án
  hitting this button will actually run 🍀 nhấn nút này sẽ thực sự chạy
  your project in the simulator 🍀 dự án của bạn trong trình giả lập
  and hitting this stop button will stop 🍀 và nhấn nút dừng này sẽ dừng
  running your project in the simulator 🍀 chạy dự án của bạn trong trình mô phỏng
  and then all the way on the right hand 🍀 và sau đó tất cả các con đường trên tay phải
  side there are also two more buttons 🍀 bên cạnh cũng có thêm hai nút
  this is the library button where you're 🍀 đây là nút thư viện nơi bạn đang ở
  going to find 🍀 đi tìm
  different user interface elements 🍀 các yếu tố giao diện người dùng khác nhau
  different 🍀 khác biệt
  ways to modify those elements code 🍀 cách sửa đổi các mã phần tử đó
  snippets 🍀 đoạn trích
  any assets you've added to the project 🍀 bất kỳ nội dung nào bạn đã thêm vào dự án
  the colors that you've specified 🍀 các màu mà bạn đã chỉ định
  for your project and so on this little 🍀 cho dự án của bạn, v.v.
  library panel 🍀 bảng điều khiển thư viện
  is useful to do a search 🍀 hữu ích để thực hiện tìm kiếm
  and to quickly select and add things 🍀 và để nhanh chóng chọn và thêm mọi thứ
  into the editor area 🍀 vào khu vực soạn thảo
  we're going to get to that in the next 🍀 chúng ta sẽ đạt được điều đó trong phần tiếp theo
  lesson but for now 🍀 bài học nhưng bây giờ
  that's the library area this you 🍀 đó là khu vực thư viện mà bạn
  probably won't use 🍀 có lẽ sẽ không sử dụng
  too much in the beginning this is a 🍀 quá nhiều ngay từ đầu đây là một
  revision or code review sort of 🍀 loại sửa đổi hoặc đánh giá mã
  button that will show you if you're 🍀 nút sẽ hiển thị cho bạn nếu bạn đang
  using source control 🍀 sử dụng kiểm soát nguồn
  how your files have been changed through 🍀 làm thế nào các tập tin của bạn đã được thay đổi thông qua
  time so those are the four major areas 🍀 thời gian vì vậy đó là bốn lĩnh vực chính
  of the xcode user 🍀 của người dùng xcode
  interface all right now let's go 🍀 giao diện ổn ngay bây giờ chúng ta hãy đi
  over the files in your new project let's 🍀 qua các tệp trong dự án mới của bạn, hãy
  start from the very top this is the root 🍀 bắt đầu từ đầu đây là gốc
  node 🍀 nút
  or it's your project file if you select 🍀 hoặc đó là tệp dự án của bạn nếu bạn chọn
  it 🍀 Nó
  the editor area will change into this 🍀 khu vực soạn thảo sẽ thay đổi thành này
  configuration screen 🍀 màn hình cấu hình
  for you to edit some of those details 🍀 để bạn chỉnh sửa một số chi tiết đó
  that pertain to your project 🍀 liên quan đến dự án của bạn
  for example here's the bundle identifier 🍀 ví dụ đây là định danh gói
  that's changeable 🍀 điều đó có thể thay đổi được
  you can configure device orientation in 🍀 bạn có thể định cấu hình hướng thiết bị trong
  which devices 🍀 thiết bị nào
  and which platforms it can run on things 🍀 và nó có thể chạy trên những nền tảng nào
  like that 🍀 như thế
  if we go down a level you can see that 🍀 nếu chúng ta đi xuống một cấp độ, bạn có thể thấy điều đó
  there are two folders here 🍀 có hai thư mục ở đây
  this one is containing all of your code 🍀 cái này chứa tất cả mã của bạn
  files and 🍀 tập tin và
  project files this products one contains 🍀 tệp dự án mà sản phẩm này chứa
  the 🍀 các
  output when you build your app and 🍀 đầu ra khi bạn xây dựng ứng dụng của mình và
  compile it it gets turned into this app 🍀 biên dịch nó, nó được biến thành ứng dụng này
  which ultimately is that little 🍀 mà cuối cùng là ít
  deployable 🍀 có thể triển khai
  bundle or package that we send into the 🍀 gói hoặc gói mà chúng tôi gửi vào
  app store 🍀 cửa hàng ứng dụng
  you don't really have to do too much 🍀 bạn không thực sự phải làm quá nhiều
  here with this but 🍀 ở đây với cái này nhưng
  that's where it's stored all right let's 🍀 đó là nơi nó được lưu trữ
  take a look at this file 🍀 hãy xem tập tin này
  this will be named after your product 🍀 cái này sẽ được đặt tên theo sản phẩm của bạn
  name app.swift 🍀 đặt tên app.swift
  and you can see here with this main tag 🍀 và bạn có thể thấy ở đây với thẻ chính này
  here 🍀 đây
  this is the entry point to your app 🍀 đây là điểm vào ứng dụng của bạn
  at this point there's not too much to 🍀 tại thời điểm này không có quá nhiều để
  configure here all it really does 🍀 cấu hình ở đây tất cả những gì nó thực sự làm
  is create that first view that the user 🍀 là tạo chế độ xem đầu tiên mà người dùng
  sees 🍀 nhìn
  which is content view and you can see 🍀 đó là chế độ xem nội dung và bạn có thể thấy
  that this name 🍀 tên này
  maps to contentview.swift so let's take 🍀 bản đồ tới contentview.swift, vì vậy hãy thực hiện
  a look at this 🍀 một cái nhìn này
  this file represents the view that the 🍀 tập tin này đại diện cho quan điểm rằng
  user sees 🍀 người dùng nhìn thấy
  now you can create additional views but 🍀 bây giờ bạn có thể tạo các chế độ xem bổ sung nhưng
  by default you get this 🍀 theo mặc định, bạn nhận được điều này
  content view to start with and yes it's 🍀 xem nội dung để bắt đầu và vâng, đó là
  all code here so that means that 🍀 tất cả mã ở đây có nghĩa là
  the user interface is generated by code 🍀 giao diện người dùng được tạo bởi mã
  but also there is a visual way 🍀 nhưng cũng có một cách trực quan
  to customize the user interface which 🍀 để tùy chỉnh giao diện người dùng mà
  you'll see in the next lesson 🍀 bạn sẽ thấy trong bài học tiếp theo
  let's move on with our other files 🍀 hãy tiếp tục với các tệp khác của chúng tôi
  this one as i mentioned before is our 🍀 cái này như tôi đã đề cập trước đây là của chúng tôi
  asset library 🍀 thư viện tài sản
  this is where we can store the colors 🍀 đây là nơi chúng ta có thể lưu trữ màu sắc
  for our app as well as the app icons as 🍀 cho ứng dụng của chúng tôi cũng như các biểu tượng ứng dụng như
  well as 🍀 tốt như
  any other images that we want to add to 🍀 bất kỳ hình ảnh nào khác mà chúng tôi muốn thêm vào
  our project we just drag it and drop it 🍀 dự án của chúng tôi, chúng tôi chỉ cần kéo và thả nó
  in here 🍀 ở đây
  this is our image asset well not just 🍀 đây là tài sản hình ảnh của chúng tôi không chỉ
  images but asset library 🍀 hình ảnh nhưng thư viện nội dung
  and then we have an info.plist and this 🍀 và sau đó chúng tôi có một info.plist và cái này
  is some additional configuration 🍀 là một số cấu hình bổ sung
  information for the project here we have 🍀 thông tin cho dự án ở đây chúng tôi có
  preview content and this is another 🍀 xem trước nội dung và đây là nội dung khác
  asset library but these are only for 🍀 thư viện nội dung nhưng chúng chỉ dành cho
  pre-production assets so only images and 🍀 nội dung tiền sản xuất nên chỉ có hình ảnh và
  text and colors and things like that 🍀 văn bản và màu sắc và những thứ tương tự
  that you are testing with 🍀 mà bạn đang thử nghiệm với
  as the name preview suggests if it's an 🍀 như bản xem trước tên gợi ý nếu đó là một
  asset that will ultimately make it to 🍀 tài sản cuối cùng sẽ làm cho nó
  the app that you're going to push the 🍀 ứng dụng mà bạn sẽ đẩy
  app store then you can put it 🍀 cửa hàng ứng dụng thì bạn có thể đặt nó
  in the asset library here instead so 🍀 trong thư viện nội dung ở đây thay vì vậy
  that's a quick explanation of all of the 🍀 đó là một lời giải thích nhanh chóng của tất cả các
  files 🍀 các tập tin
  in your project in a nutshell in the 🍀 trong dự án của bạn một cách ngắn gọn trong
  future lessons we're going to dive 🍀 bài học trong tương lai chúng ta sẽ lặn
  deeper into each one and you're going to 🍀 sâu hơn vào từng cái và bạn sẽ
  see how each of these files 🍀 xem mỗi tập tin này như thế nào
  play a part in the construction of your 🍀 đóng một vai trò trong việc xây dựng của bạn
  app 🍀 ứng dụng
  the last thing i want to do in this 🍀 điều cuối cùng tôi muốn làm trong này
  lesson is to give you a couple of 🍀 bài học là cung cấp cho bạn một vài
  quick tips on navigating around xcode in 🍀 mẹo nhanh về điều hướng xung quanh xcode trong
  terms of 🍀 điều khoản của
  going through your files and also in 🍀 đi qua các tập tin của bạn và cả trong
  terms of 🍀 điều khoản của
  editing code so first of all let's talk 🍀 chỉnh sửa mã vì vậy trước hết hãy nói chuyện
  about navigating around in files 🍀 về điều hướng xung quanh trong các tập tin
  you'll notice these two arrows here 🍀 bạn sẽ nhận thấy hai mũi tên ở đây
  these are really handy because it's 🍀 những thứ này thực sự tiện dụng bởi vì nó
  going to let you 🍀 sẽ để cho bạn
  go to the last file you were looking at 🍀 đi đến tập tin cuối cùng bạn đang xem
  and although it seems a little trivial 🍀 và mặc dù nó có vẻ hơi tầm thường
  now 🍀 Hiện nay
  uh when you're jumping around editing in 🍀 uh khi bạn nhảy xung quanh chỉnh sửa trong
  files this becomes really handy instead 🍀 thay vào đó, điều này trở nên thực sự tiện dụng
  of having to go and reselect that file 🍀 phải đi và chọn lại tập tin đó
  from the navigator 🍀 từ hoa tiêu
  you can just hit back and jump back to 🍀 bạn chỉ có thể đánh trả và nhảy trở lại
  that previous file 🍀 tập tin trước đó
  you'll also notice that you can have 🍀 bạn cũng sẽ nhận thấy rằng bạn có thể có
  multiple tabs here 🍀 nhiều tab ở đây
  so you can hold down control and you can 🍀 để bạn có thể giữ điều khiển và bạn có thể
  click on a file 🍀 bấm vào một tập tin
  and you can always choose open in new 🍀 và bạn luôn có thể chọn open in new
  tab 🍀 chuyển hướng
  you can also open in a new window if 🍀 bạn cũng có thể mở trong một cửa sổ mới nếu
  you'd like 🍀 bạn muốn
  so since i already have that as a tab 🍀 vì vậy vì tôi đã có nó dưới dạng một tab
  then it's uh 🍀 sau đó là uh
  it's not going to open a second tab for 🍀 nó sẽ không mở tab thứ hai cho
  me now if you want to 🍀 tôi bây giờ nếu bạn muốn
  have things side by side you can do that 🍀 có những thứ cạnh nhau bạn có thể làm điều đó
  as well 🍀 cũng
  so let's say i wanted to look at both 🍀 vì vậy hãy nói rằng tôi muốn nhìn vào cả hai
  these files side by side 🍀 những tập tin này cạnh nhau
  so i can close this and then i can go 🍀 vì vậy tôi có thể đóng cái này và sau đó tôi có thể đi
  ahead 🍀 phía trước
  and i can add another editor pane 🍀 và tôi có thể thêm một khung soạn thảo khác
  on the right hand side so i can split my 🍀 ở phía bên tay phải để tôi có thể chia
  editor area into 🍀 khu vực soạn thảo vào
  two editor areas 🍀 hai khu vực soạn thảo
  you can see that here i'm looking at 🍀 bạn có thể thấy rằng ở đây tôi đang nhìn vào
  contentview.swift and for here 🍀 contentview.swift và cho ở đây
  let's look at the test app so they're 🍀 hãy xem ứng dụng thử nghiệm để chúng
  independent areas 🍀 khu vực độc lập
  and i might want to just get rid of my 🍀 và tôi có thể muốn thoát khỏi tôi
  canvas 🍀 Tranh sơn dầu
  and then i can see both files like that 🍀 và sau đó tôi có thể thấy cả hai tệp như vậy
  if you prefer 🍀 nếu bạn thích
  them to be horizontally stacked you can 🍀 chúng được xếp chồng lên nhau theo chiều ngang, bạn có thể
  hold down 🍀 giữ lại
  option and you can see that that icon 🍀 tùy chọn và bạn có thể thấy biểu tượng đó
  changes 🍀 thay đổi
  right if you hit this button again it's 🍀 đúng nếu bạn nhấn nút này một lần nữa thì đó là
  going to add another editor area to the 🍀 sẽ thêm một khu vực soạn thảo khác vào
  right so you're going to split into 🍀 đúng vậy bạn sẽ chia thành
  three 🍀 ba
  or you can hold down option 🍀 hoặc bạn có thể giữ tùy chọn
  and you can add an editor to the bottom 🍀 và bạn có thể thêm một trình chỉnh sửa vào phía dưới
  instead 🍀 thay vì
  so you could do that you can also do 🍀 vì vậy bạn có thể làm điều đó bạn cũng có thể làm
  that here hold down option 🍀 tùy chọn nhấn giữ ở đây
  and do that now a quick way 🍀 và làm điều đó ngay bây giờ một cách nhanh chóng
  to launch a file into a split editor 🍀 để khởi chạy một tệp vào trình chỉnh sửa phân tách
  view 🍀 xem
  so let's say i'm looking at test app and 🍀 vì vậy, giả sử tôi đang xem ứng dụng thử nghiệm và
  i want to 🍀 tôi muốn
  open up content view as a separate 🍀 mở chế độ xem nội dung dưới dạng riêng biệt
  editor area i can hold down option and 🍀 khu vực biên tập tôi có thể giữ tùy chọn và
  click 🍀 nhấp chuột
  on the file that i want to open in a 🍀 trên tệp mà tôi muốn mở trong một
  separate editor view 🍀 chế độ xem trình chỉnh sửa riêng biệt
  so those are some of the ways that you 🍀 vì vậy đó là một số cách mà bạn
  can work with your files 🍀 có thể làm việc với các tập tin của bạn
  just to recap you can navigate you can 🍀 chỉ để tóm tắt lại bạn có thể điều hướng bạn có thể
  go back and go forward 🍀 quay lại và đi về phía trước
  you can have different tabs and then 🍀 bạn có thể có các tab khác nhau và sau đó
  also you can split up your editor area 🍀 bạn cũng có thể chia khu vực soạn thảo của mình
  into multiple 🍀 thành nhiều
  instances of the editor now i want to 🍀 các phiên bản của trình chỉnh sửa bây giờ tôi muốn
  talk about editing code 🍀 nói về chỉnh sửa mã
  because this is a lot of what you will 🍀 bởi vì đây là rất nhiều những gì bạn sẽ
  be doing 🍀 đang làm
  and the code looks pretty short right 🍀 và mã trông khá ngắn phải không
  now but it can get 🍀 bây giờ nhưng nó có thể nhận được
  longer so it's handy to know a couple of 🍀 lâu hơn nên thật hữu ích khi biết một vài
  ways to deal with that 🍀 cách để đối phó với điều đó
  at the top here you're going to see this 🍀 ở trên cùng, bạn sẽ thấy cái này
  sort of breadcrumb menu and you'll 🍀 loại menu breadcrumb và bạn sẽ
  notice that that is the root node 🍀 lưu ý rằng đó là nút gốc
  corresponds to that right this is a 🍀 tương ứng với quyền đó, đây là một
  folder 🍀 thư mục
  or group you can see that and then this 🍀 hoặc nhóm bạn có thể thấy điều đó và sau đó điều này
  is the content view 🍀 là chế độ xem nội dung
  which is the file that you're looking at 🍀 đó là tập tin mà bạn đang xem
  which is here inside test 🍀 đây là bài kiểm tra bên trong
  and here we can actually click this and 🍀 và ở đây chúng ta thực sự có thể nhấp vào đây và
  you can jump to different sections of 🍀 bạn có thể chuyển đến các phần khác nhau của
  your code 🍀 ma cua ban
  you can see that content view matches 🍀 bạn có thể thấy rằng chế độ xem nội dung phù hợp
  that 🍀 cái đó
  body matches that right so this 🍀 cơ thể phù hợp với quyền đó nên điều này
  is a great way to jump to different 🍀 là một cách tuyệt vời để nhảy đến khác nhau
  sections in your code file 🍀 các phần trong tệp mã của bạn
  in case your code file gets pretty long 🍀 trong trường hợp tệp mã của bạn khá dài
  you can also 🍀 bạn cũng có thể
  add different comments in here that 🍀 thêm các bình luận khác nhau vào đây
  will correspond to 🍀 sẽ tương ứng với
  what you see up here so you can see here 🍀 những gì bạn thấy ở đây để bạn có thể thấy ở đây
  i've created 🍀 Tôi đã tạo
  my own documentation and 🍀 tài liệu của riêng tôi và
  it adds it here so this is a great way 🍀 nó thêm nó ở đây vì vậy đây là một cách tuyệt vời
  to organize your file 🍀 để tổ chức tập tin của bạn
  we're going to talk again about this in 🍀 chúng ta sẽ nói lại về điều này trong
  the future so don't worry if 🍀 tương lai vì vậy đừng lo lắng nếu
  this is going a little too fast 🍀 điều này đang diễn ra hơi quá nhanh
  all right now i want to talk about this 🍀 được rồi bây giờ tôi muốn nói về điều này
  little button here you've seen me use 🍀 nút nhỏ ở đây bạn đã thấy tôi sử dụng
  this to open up the canvas 🍀 cái này để mở canvas
  but you can also open up this mini map 🍀 nhưng bạn cũng có thể mở bản đồ nhỏ này
  right here 🍀 ngay chỗ này
  and this minimap will show you an 🍀 và bản đồ nhỏ này sẽ cho bạn thấy một
  outline of your code file 🍀 phác thảo của tập tin mã của bạn
  you can drag this to scrub through your 🍀 bạn có thể kéo cái này để xem qua
  code 🍀 mã số
  unfortunately i can't do it very much 🍀 tiếc là tôi không thể làm điều đó rất nhiều
  here because this code file 🍀 ở đây vì tập tin mã này
  isn't very long but if you had a really 🍀 không dài lắm nhưng nếu bạn thực sự có
  long code file 🍀 tệp mã dài
  it would show you the outline of that 🍀 nó sẽ cho bạn thấy phác thảo của điều đó
  code file down here and you can 🍀 tệp mã ở đây và bạn có thể
  navigate really easily by clicking and 🍀 điều hướng thực sự dễ dàng bằng cách nhấp và
  dragging this 🍀 kéo cái này
  you'll notice that even as i highlight 🍀 bạn sẽ nhận thấy rằng ngay cả khi tôi đánh dấu
  it it's going to show me the different 🍀 nó sẽ cho tôi thấy sự khác biệt
  parts of my code corresponding to what 🍀 các phần mã của tôi tương ứng với những gì
  we have here 🍀 chúng tôi có ở đây
  again those were just some quick fire 🍀 một lần nữa đó chỉ là một vài ngọn lửa nhanh chóng
  tips 🍀 lời khuyên
  don't worry if that flew by too fast 🍀 đừng lo lắng nếu điều đó trôi qua quá nhanh
  because we will be using all of these 🍀 bởi vì chúng tôi sẽ sử dụng tất cả những thứ này
  things together 🍀 Mọi thứ cùng nhau
  in the upcoming lessons so that's a 🍀 trong những bài học sắp tới vì vậy đó là một
  quick xcode tutorial to get you started 🍀 hướng dẫn xcode nhanh để giúp bạn bắt đầu
  not so complicated once you know where 🍀 không quá phức tạp một khi bạn biết nơi
  things are right just to recap 🍀 mọi thứ đều đúng chỉ để tóm tắt lại
  you found out where to download xcode 🍀 bạn đã tìm ra nơi để tải xuống xcode
  and how to start a new app project 🍀 và cách bắt đầu một dự án ứng dụng mới
  you learned what each of the files in 🍀 bạn đã học được nội dung của từng tệp trong
  your project is for and you learn the 🍀 dự án của bạn là dành cho và bạn tìm hiểu
  major areas of xcode including the 🍀 các lĩnh vực chính của xcode bao gồm
  navigator 🍀 hoa tiêu
  the editor the inspector and the toolbar 🍀 trình soạn thảo thanh tra và thanh công cụ
  finally you'll also learn some quick 🍀 cuối cùng bạn cũng sẽ học được một số cách nhanh chóng
  tips about how to navigate around with 🍀 mẹo về cách điều hướng xung quanh với
  an xcode 🍀 một xcode
  now don't worry if it's a little bit 🍀 bây giờ đừng lo lắng nếu nó là một chút
  overwhelming right now you'll feel right 🍀 áp đảo ngay bây giờ bạn sẽ cảm thấy đúng
  at home with xcode as we use it more 🍀 ở nhà với xcode khi chúng tôi sử dụng nó nhiều hơn
  often together in the upcoming lessons 🍀 thường xuyên cùng nhau trong các bài học sắp tới
  to help you get settled in i actually 🍀 để giúp bạn ổn định cuộc sống, tôi thực sự
  created an xcode cheat sheet which you 🍀 đã tạo một bảng cheat xcode mà bạn
  can print out 🍀 có thể in ra
  and keep by your side as you're learning 🍀 và luôn bên cạnh bạn khi bạn đang học
  to use xcode to get it simply visit the 🍀 để sử dụng xcode để lấy nó, chỉ cần truy cập
  resources link at the top navigation of 🍀 liên kết tài nguyên ở điều hướng trên cùng của
  your student dashboard 🍀 bảng điều khiển sinh viên của bạn
  and finally i have a quiz for you to 🍀 và cuối cùng tôi có một bài kiểm tra cho bạn
  take in the next lesson to reinforce 🍀 học bài sau để củng cố
  what you've learned today 🍀 những gì bạn đã học được ngày hôm nay
  after you take the quiz i highly 🍀 sau khi bạn làm bài kiểm tra, tôi đánh giá cao
  recommend that you try to create your 🍀 khuyên bạn nên thử tạo
  own 🍀 sở hữu
  xcode project on your own computer just 🍀 dự án xcode trên máy tính của riêng bạn chỉ
  for extra practice 🍀 để thực hành thêm
  in the next lesson we're going to use 🍀 trong bài học tiếp theo chúng ta sẽ sử dụng
  xcode to build our first user interface 🍀 xcode để xây dựng giao diện người dùng đầu tiên của chúng tôi
  alright i'll see you there 🍀 được rồi tôi sẽ gặp bạn ở đó
  hello and welcome in this lesson you're 🍀 xin chào và chào mừng bạn đến với bài học này
  going to learn how to use xcode to build 🍀 sẽ học cách sử dụng xcode để xây dựng
  user interfaces with swift ui 🍀 giao diện người dùng với swift ui
  we're going to first learn how to 🍀 đầu tiên chúng ta sẽ học cách
  preview the app so you actually can see 🍀 xem trước ứng dụng để bạn thực sự có thể thấy
  what the user interface looks like then 🍀 giao diện người dùng trông như thế nào sau đó
  i'll show you how to use xcode to 🍀 tôi sẽ chỉ cho bạn cách sử dụng xcode để
  visually construct the user interface 🍀 xây dựng trực quan giao diện người dùng
  or just ui for short now up until now 🍀 hoặc chỉ là ui cho đến bây giờ
  the learning has been pretty much 🍀 việc học đã khá nhiều
  passive meaning that you could just sit 🍀 bị động có nghĩa là bạn chỉ có thể ngồi
  back and watch the videos 🍀 quay lại và xem video
  but starting now we're going to switch 🍀 nhưng bắt đầu từ bây giờ chúng ta sẽ chuyển đổi
  into more active learning 🍀 học tích cực hơn
  i want you to do what i do replicate it 🍀 tôi muốn bạn làm những gì tôi làm sao chép nó
  on your own xcode project 🍀 trên dự án xcode của riêng bạn
  and i want you to attempt any of the 🍀 và tôi muốn bạn thử bất kỳ
  challenges that i have for you 🍀 những thách thức mà tôi có cho bạn
  this is the best way to learn and quite 🍀 đây là cách tốt nhất để học và khá
  frankly if you're just going to sit back 🍀 thẳng thắn nếu bạn chỉ ngồi lại
  and watch the lessons and not do any of 🍀 và xem các bài học và không làm bất kỳ
  the work 🍀 công việc
  you're not making the best of your time 🍀 bạn không làm tốt nhất thời gian của bạn
  this has been my personal experience and 🍀 đây là kinh nghiệm cá nhân của tôi và
  i think it'll be the same for you 🍀 tôi nghĩ nó sẽ giống với bạn
  so if you're ready we're going to start 🍀 vì vậy nếu bạn đã sẵn sàng, chúng ta sẽ bắt đầu
  getting our hands dirty let's do it 🍀 làm bẩn tay chúng ta hãy làm đi
  let's start by creating a brand new 🍀 hãy bắt đầu bằng cách tạo một thương hiệu mới
  xcode project 🍀 dự án xcode
  we're going to choose ios app 🍀 chúng ta sẽ chọn ứng dụng ios
  and i'm going to call this one ui test 🍀 và tôi sẽ gọi đây là bài kiểm tra ui
  just make sure interface is swift ui 🍀 chỉ cần đảm bảo giao diện nhanh chóng ui
  lifecycle 🍀 vòng đời
  is swift ui app and language is swift 🍀 là ứng dụng ui nhanh chóng và ngôn ngữ nhanh chóng
  other than that you can name it anything 🍀 ngoài ra bạn có thể đặt tên cho nó bất cứ điều gì
  you want 🍀 bạn muốn
  let's go ahead and save our project 🍀 hãy tiếp tục và lưu dự án của chúng tôi
  and like i mentioned in the previous 🍀 và như tôi đã đề cập trong phần trước
  lesson contentview.swift 🍀 nội dung bài họcview.swift
  represents your view but as you can see 🍀 đại diện cho quan điểm của bạn nhưng như bạn có thể thấy
  it's all code 🍀 đó là tất cả mã
  so how do you actually see what your ui 🍀 vậy làm thế nào để bạn thực sự nhìn thấy những gì ui của bạn
  looks like 🍀 giống như
  well there are two different ways the 🍀 cũng có hai cách khác nhau
  first way is to 🍀 cách đầu tiên là
  launch your app in an ios simulator like 🍀 khởi chạy ứng dụng của bạn trong trình giả lập ios như
  i mentioned before 🍀 tôi đã đề cập trước đây
  so let's go ahead and do that first 🍀 vì vậy hãy tiếp tục và làm điều đó trước
  select 🍀 lựa chọn
  one that you fancy so i'm going to 🍀 một cái mà bạn thích vì vậy tôi sẽ
  select iphone 🍀 chọn iphone
  11 and i'm going to hit this build and 🍀 11 và tôi sẽ đánh bản dựng này và
  run button 🍀 nút chạy
  now if it's the first time you're 🍀 bây giờ nếu đây là lần đầu tiên bạn
  launching the ios simulator it's going 🍀 khởi chạy trình giả lập ios, nó sẽ hoạt động
  to take a while to boot up 🍀 mất một lúc để khởi động
  just like it would be to boot up a real 🍀 giống như nó sẽ là để khởi động một thực
  device 🍀 thiết bị
  for me because i've launched the 🍀 cho tôi vì tôi đã khởi chạy
  simulator before 🍀 giả lập trước
  it's happening really really quickly as 🍀 nó đang diễn ra thực sự rất nhanh như
  you can see 🍀 bạn có thể thấy
  by default your project has a hello 🍀 theo mặc định, dự án của bạn có lời chào
  world label 🍀 nhãn thế giới
  we're going to talk about that in a 🍀 chúng ta sẽ nói về điều đó trong một
  second but first let me show you 🍀 thứ hai nhưng trước tiên hãy để tôi chỉ cho bạn
  the other way you can preview your app 🍀 cách khác bạn có thể xem trước ứng dụng của mình
  so let's go ahead and stop our project 🍀 vì vậy hãy tiếp tục và dừng dự án của chúng tôi
  and that's going to stop the app from 🍀 và điều đó sẽ ngăn ứng dụng khỏi
  running in the simulator the second way 🍀 chạy trong trình giả lập theo cách thứ hai
  is to preview your app in this canvas 🍀 là xem trước ứng dụng của bạn trong canvas này
  right here that's part of the editor 🍀 ngay đây là một phần của trình chỉnh sửa
  area 🍀 khu vực
  if you don't see this you can click on 🍀 nếu bạn không thấy điều này, bạn có thể nhấp vào
  this little button here and make sure 🍀 nút nhỏ này ở đây và chắc chắn rằng
  that there's a check mark beside 🍀 rằng có một dấu kiểm bên cạnh
  canvas and if you're looking at a dot 🍀 canvas và nếu bạn đang nhìn vào một dấu chấm
  swift file which is a view 🍀 tệp nhanh chóng là một chế độ xem
  you're going to be able to see this 🍀 bạn sẽ có thể thấy điều này
  canvas otherwise 🍀 vải khác
  if you're looking at this entry point 🍀 nếu bạn đang nhìn vào điểm vào này
  file here you can see that there's no 🍀 tập tin ở đây bạn có thể thấy rằng không có
  preview 🍀 xem trước
  so let's go back to content view make 🍀 Vì vậy, hãy quay lại chế độ xem nội dung
  sure we have our preview here 🍀 chắc chắn chúng tôi có bản xem trước của chúng tôi ở đây
  and click resume it's going to build and 🍀 và nhấp vào tiếp tục, nó sẽ được xây dựng và
  run it and then you're going to see the 🍀 chạy nó và sau đó bạn sẽ thấy
  preview here again if this is the first 🍀 xem trước ở đây một lần nữa nếu đây là lần đầu tiên
  time you're doing it it might take a 🍀 thời gian bạn đang làm nó có thể mất một
  little while 🍀 trong chốc lát
  let's use the zoom controls down here 🍀 hãy sử dụng các điều khiển thu phóng ở đây
  and zoom out a little bit so 🍀 và thu nhỏ một chút để
  that we can see the whole thing now just 🍀 rằng bây giờ chúng ta có thể thấy toàn bộ sự việc
  off the bat there 🍀 tắt dơi ở đó
  are a couple things i want to mention 🍀 là một vài điều tôi muốn đề cập đến
  here this is simply a preview 🍀 đây chỉ đơn giản là một bản xem trước
  whereas when you launched it in the 🍀 trong khi khi bạn khởi chạy nó trong
  simulator you're actually 🍀 giả lập bạn thực sự
  installing that app in a virtual 🍀 cài đặt ứng dụng đó trong ảo
  device so that you can interact with it 🍀 thiết bị để bạn có thể tương tác với nó
  and test it 🍀 và kiểm tra nó
  here this is a preview that you cannot 🍀 đây là bản xem trước mà bạn không thể
  interact with 🍀 tương tác với
  but there is a way that you can so if 🍀 nhưng có một cách mà bạn có thể làm như vậy nếu
  you click this button here 🍀 bạn bấm vào nút này ở đây
  live preview it goes into a mode where 🍀 xem trước trực tiếp nó chuyển sang chế độ mà
  it's just like the simulator that you 🍀 nó giống như trình giả lập mà bạn
  saw before 🍀 nhìn thấy trước
  but it's in this preview canvas so you 🍀 nhưng nó nằm trong canvas xem trước này nên bạn
  can go ahead and hit stop 🍀 có thể tiếp tục và nhấn dừng
  and then again it just becomes a normal 🍀 và sau đó một lần nữa nó trở thành bình thường
  preview that's only for previewing 🍀 bản xem trước chỉ để xem trước
  purposes 🍀 mục đích
  another cool thing about using this 🍀 một điều thú vị khác về việc sử dụng này
  preview canvas is that you can 🍀 xem trước canvas là bạn có thể
  hit this button here and you can choose 🍀 nhấn nút này ở đây và bạn có thể chọn
  a different device you can choose a 🍀 một thiết bị khác bạn có thể chọn một
  layout you can choose dark mode or light 🍀 bố cục bạn có thể chọn chế độ tối hoặc sáng
  mode and 🍀 chế độ và
  you can pick a number of different 🍀 bạn có thể chọn một số khác nhau
  things this is the preferred way 🍀 mọi thứ đây là cách ưa thích
  to preview your ui because as you are 🍀 để xem trước giao diện người dùng của bạn vì như bạn
  building your ui 🍀 xây dựng giao diện người dùng của bạn
  through code on this side you're going 🍀 thông qua mã ở bên này bạn đang đi
  to be able to see things 🍀 để có thể nhìn thấy mọi thứ
  change on the right here without having 🍀 thay đổi ở ngay tại đây mà không cần có
  to 🍀 ĐẾN
  relaunch the app in the simulator 🍀 khởi chạy lại ứng dụng trong trình mô phỏng
  all right now let's dive in and talk 🍀 được rồi bây giờ chúng ta hãy đi sâu vào và nói chuyện
  about how we're going to actually build 🍀 về cách chúng ta sẽ thực sự xây dựng
  the user interface 🍀 giao diện người dùng
  so make sure you have contentview.swift 🍀 vì vậy hãy chắc chắn rằng bạn có contentview.swift
  highlighted and go ahead 🍀 đánh dấu và tiếp tục
  and hide the file navigator now there is 🍀 và ẩn trình điều hướng tệp hiện có
  a bunch of code here that make up the 🍀 một loạt mã ở đây tạo nên
  view 🍀 xem
  but we're going to go through it in 🍀 nhưng chúng ta sẽ đi qua nó trong
  depth later on when you learn some of 🍀 chiều sâu sau này khi bạn tìm hiểu một số
  the 🍀 các
  swift programming basics for now to 🍀 kiến thức cơ bản về lập trình swift cho đến bây giờ
  avoid confusion 🍀 tránh nhầm lẫn
  i just want to draw your attention to 🍀 tôi chỉ muốn thu hút sự chú ý của bạn đến
  one thing which is this 🍀 một điều đó là điều này
  piece of code right here 🍀 đoạn mã ngay tại đây
  what i've highlighted on the screen is 🍀 những gì tôi đã đánh dấu trên màn hình là
  what is generating 🍀 những gì đang tạo ra
  this label here that you see in the 🍀 nhãn này ở đây mà bạn nhìn thấy trong
  preview 🍀 xem trước
  notice that we have a text keyword we 🍀 lưu ý rằng chúng tôi có một từ khóa văn bản chúng tôi
  have the hello world 🍀 có thế giới xin chào
  piece of text that you can see here and 🍀 đoạn văn bản mà bạn có thể thấy ở đây và
  we also have this 🍀 chúng tôi cũng có cái này
  padding element here which gives the 🍀 phần tử đệm ở đây mang lại cho
  padding around the word 🍀 đệm xung quanh từ
  let's take a look at this piece of code 🍀 chúng ta hãy xem đoạn mã này
  and break it down i'm actually just 🍀 và chia nhỏ nó ra, tôi thực sự chỉ là
  going to 🍀 sẽ
  go ahead and delete it as you can see 🍀 hãy tiếp tục và xóa nó như bạn có thể thấy
  xcode is going to throw 🍀 xcode sẽ ném
  all sorts of complaints and errors but 🍀 tất cả các loại khiếu nại và lỗi nhưng
  don't worry we're going to fix it right 🍀 đừng lo chúng tôi sẽ sửa nó ngay
  away 🍀 xa
  now our user interface elements have to 🍀 bây giờ các yếu tố giao diện người dùng của chúng tôi phải
  live in between this opening bracket 🍀 sống ở giữa dấu ngoặc mở này
  and this closing bracket and you can 🍀 và khung đóng này và bạn có thể
  only have 🍀 chỉ có
  one user interface element now obviously 🍀 một yếu tố giao diện người dùng bây giờ rõ ràng
  that doesn't make sense because 🍀 điều đó không có ý nghĩa bởi vì
  our user interfaces are made up of more 🍀 giao diện người dùng của chúng tôi được tạo thành từ nhiều hơn
  than one element but that's where 🍀 hơn một yếu tố nhưng đó là nơi
  container elements come into play 🍀 các yếu tố container đi vào chơi
  and i'll show you a couple of those in 🍀 và tôi sẽ chỉ cho bạn một vài trong số đó
  this lesson as well for now let's 🍀 bài học này cũng như bây giờ chúng ta hãy
  recreate that text element 🍀 tạo lại phần tử văn bản đó
  so what we write is that text keyword 🍀 vì vậy những gì chúng tôi viết là từ khóa văn bản đó
  followed by 🍀 theo dõi bởi
  a pair of brackets like that rounded 🍀 một cặp dấu ngoặc như thế được làm tròn
  brackets 🍀 dấu ngoặc
  and then inside there we have a pair of 🍀 và sau đó bên trong đó chúng ta có một cặp
  quotation marks 🍀 dấu ngoặc kép
  and then we put the piece of text that 🍀 và sau đó chúng tôi đặt đoạn văn bản đó
  we want to display 🍀 chúng tôi muốn hiển thị
  so here i'm just going to put hello but 🍀 vì vậy ở đây tôi sẽ chỉ chào nhưng
  you'll notice that this blue frame 🍀 bạn sẽ nhận thấy rằng khung màu xanh này
  wraps very tightly against my hello 🍀 quấn rất chặt vào lời chào của tôi
  text if you wanted to add the padding 🍀 văn bản nếu bạn muốn thêm phần đệm
  back 🍀 mặt sau
  then you would write dot and then you 🍀 sau đó bạn sẽ viết dấu chấm và sau đó bạn
  would just type in padding and using 🍀 sẽ chỉ cần gõ vào phần đệm và sử dụng
  autocomplete you can just select that 🍀 tự động hoàn thành, bạn chỉ cần chọn cái đó
  one right there 🍀 một ngay tại đó
  and just like that we've recreated that 🍀 và cứ như thế chúng tôi đã tạo lại điều đó
  label with padding 🍀 nhãn có đệm
  this right here is the text element or 🍀 đây là phần tử văn bản hoặc
  the label 🍀 nhãn
  this part with the dot padding 🍀 phần này với phần đệm dấu chấm
  this is called a modifier and you can 🍀 đây được gọi là công cụ sửa đổi và bạn có thể
  think of a modifier 🍀 nghĩ về một công cụ sửa đổi
  as an attachment to an element that 🍀 như một phần đính kèm vào một phần tử mà
  changes the look and behavior of it 🍀 thay đổi giao diện và hành vi của nó
  in this case this padding modifier adds 🍀 trong trường hợp này, công cụ sửa đổi phần đệm này thêm vào
  padding to the text element so that if 🍀 đệm vào phần tử văn bản để nếu
  there is an element right beside it 🍀 có một yếu tố ngay bên cạnh nó
  there will be some space surrounding our 🍀 sẽ có một số không gian xung quanh của chúng tôi
  text element 🍀 yếu tố văn bản
  and there are actually many more 🍀 và thực sự có nhiều hơn nữa
  modifiers that we can add to our user 🍀 công cụ sửa đổi mà chúng tôi có thể thêm vào người dùng của mình
  interface elements 🍀 phần tử giao diện
  for instance i can add one called 🍀 ví dụ tôi có thể thêm một cái gọi là
  background and i'll just add it to the 🍀 nền và tôi sẽ chỉ thêm nó vào
  end of the padding one 🍀 kết thúc của phần đệm một
  and i'm going to say that the background 🍀 và tôi sẽ nói rằng bối cảnh
  for this label should be blue 🍀 cho nhãn này phải có màu xanh
  so you can see that our preview canvas 🍀 để bạn có thể thấy canvas xem trước của chúng tôi
  very nicely 🍀 rất độc đáo
  represents what we're writing here 🍀 đại diện cho những gì chúng tôi đang viết ở đây
  through code 🍀 thông qua mã
  if there's any time that things get out 🍀 nếu có bất cứ lúc nào mà mọi thứ thoát ra
  of sync maybe the code you're writing 🍀 đồng bộ hóa có thể là mã bạn đang viết
  here 🍀 đây
  is saying the background should be green 🍀 đang nói rằng nền nên có màu xanh lá cây
  but you're not seeing it here 🍀 nhưng bạn không nhìn thấy nó ở đây
  the code is considered the source of 🍀 mã được coi là nguồn của
  truth because 🍀 sự thật bởi vì
  ultimately the preview canvas and even 🍀 cuối cùng là canvas xem trước và thậm chí
  what you see in the inspector panel are 🍀 những gì bạn thấy trong bảng điều khiển là
  just 🍀 chỉ
  visual representations of the code 🍀 biểu diễn trực quan của mã
  and that brings me to my next point 🍀 và điều đó đưa tôi đến điểm tiếp theo
  which is when you're building 🍀 đó là khi bạn đang xây dựng
  the user interface you don't have to 🍀 giao diện người dùng bạn không cần phải
  write code 🍀 viết mã
  there are so many visual ways for you to 🍀 có rất nhiều cách trực quan để bạn
  build the code 🍀 xây dựng mã
  let's erase this text element again and 🍀 hãy xóa phần tử văn bản này một lần nữa và
  let me show you some of the ways in 🍀 hãy để tôi chỉ cho bạn một số cách trong
  which you can we can visually 🍀 mà bạn có thể chúng tôi có thể trực quan
  build the user interface i talked about 🍀 xây dựng giao diện người dùng mà tôi đã nói đến
  the library panel before 🍀 bảng điều khiển thư viện trước
  so you can see here that we can simply 🍀 vì vậy bạn có thể thấy ở đây rằng chúng ta có thể đơn giản
  select 🍀 lựa chọn
  search for the text element select it 🍀 tìm kiếm phần tử văn bản chọn nó
  and we can drag it 🍀 và chúng ta có thể kéo nó
  into our code editor right here 🍀 vào trình chỉnh sửa mã của chúng tôi ngay tại đây
  and then we can change the placeholder 🍀 và sau đó chúng ta có thể thay đổi trình giữ chỗ
  text but we don't even have to 🍀 văn bản nhưng chúng tôi thậm chí không phải
  change the text here if you click on 🍀 thay đổi văn bản ở đây nếu bạn nhấp vào
  this text element 🍀 yếu tố văn bản này
  and you go into the inspector panel you 🍀 và bạn đi vào bảng điều khiển thanh tra bạn
  can change it here 🍀 có thể thay đổi nó ở đây
  like that and then also in this 🍀 như thế và sau đó cũng trong này
  inspector panel you'll see that there 🍀 bảng điều khiển thanh tra bạn sẽ thấy rằng ở đó
  are 🍀 là
  a bunch of modifiers that we can add so 🍀 một loạt các công cụ sửa đổi mà chúng ta có thể thêm vào
  to add the padding 🍀 để thêm phần đệm
  i could click this to add top padding 🍀 tôi có thể nhấp vào đây để thêm phần đệm trên cùng
  only 🍀 chỉ một
  and you can see that the code changes 🍀 và bạn có thể thấy rằng mã thay đổi
  and it's specifying that i only want 🍀 và nó xác định rằng tôi chỉ muốn
  padding on the top and you can see it 🍀 đệm trên đầu trang và bạn có thể nhìn thấy nó
  reflected here 🍀 phản ánh ở đây
  or i can click this one here 🍀 hoặc tôi có thể nhấp vào cái này ở đây
  and turn padding on or off and you can 🍀 và bật hoặc tắt phần đệm và bạn có thể
  see now i have padding on all sides 🍀 xem bây giờ tôi có đệm ở tất cả các bên
  so in addition to some of the modifiers 🍀 vì vậy ngoài một số công cụ sửa đổi
  that you see here 🍀 mà bạn thấy ở đây
  down here there's a text box where you 🍀 dưới đây có một hộp văn bản mà bạn
  can search for more modifiers 🍀 có thể tìm kiếm thêm công cụ sửa đổi
  so i can search for the background one 🍀 để tôi có thể tìm kiếm hình nền
  and click that 🍀 và nhấp vào đó
  and then select that blue background as 🍀 và sau đó chọn nền màu xanh đó là
  you can see here 🍀 bạn có thể thấy ở đây
  and then i can also add that padding now 🍀 và sau đó tôi cũng có thể thêm phần đệm đó ngay bây giờ
  in addition 🍀 Ngoài ra
  to using the modifiers that you see here 🍀 để sử dụng các công cụ sửa đổi mà bạn thấy ở đây
  and 🍀 Và
  using this add modifier text box you can 🍀 sử dụng hộp văn bản bổ trợ thêm này, bạn có thể
  also 🍀 Mà còn
  use the library to add modifiers so this 🍀 sử dụng thư viện để thêm công cụ sửa đổi để điều này
  first tab 🍀 tab đầu tiên
  gives you all of the user interface 🍀 cung cấp cho bạn tất cả giao diện người dùng
  elements that you can 🍀 các yếu tố mà bạn có thể
  add to your view here on the second tab 🍀 thêm vào chế độ xem của bạn ở đây trên tab thứ hai
  are modifiers 🍀 là công cụ sửa đổi
  so as you can see there's the padding 🍀 vì vậy như bạn có thể thấy có phần đệm
  one 🍀 một
  there's the background one so how do you 🍀 có cái nền vậy bạn làm thế nào
  go about adding these modifiers 🍀 tiếp tục thêm các công cụ sửa đổi này
  well you just click and you drag it but 🍀 bạn chỉ cần nhấp và kéo nó nhưng
  here you have to make sure that you drag 🍀 ở đây bạn phải chắc chắn rằng bạn kéo
  it to the end of the code 🍀 nó đến cuối mã
  because if you accidentally 🍀 bởi vì nếu bạn vô tình
  drag it in the middle of your code 🍀 kéo nó vào giữa mã của bạn
  it might not take or you might get 🍀 nó có thể không mất hoặc bạn có thể nhận được
  something like that 🍀 một cái gì đó như thế
  and that clearly is an error so let's 🍀 và đó rõ ràng là một lỗi vì vậy hãy
  undo that 🍀 hoàn tác điều đó
  so as if that weren't enough there are a 🍀 vì vậy như thể đó là không đủ có một
  couple more ways i want to show you 🍀 vài cách nữa tôi muốn chỉ cho bạn
  on how you can modify your user 🍀 về cách bạn có thể sửa đổi người dùng của mình
  interface 🍀 giao diện
  elements uh visually instead of writing 🍀 yếu tố uh trực quan thay vì viết
  code first of all 🍀 mã đầu tiên của tất cả
  let's finish configuring this background 🍀 hãy hoàn tất cấu hình nền này
  and 🍀 Và
  we're gonna select blue right there or 🍀 chúng ta sẽ chọn màu xanh ngay tại đó hoặc
  maybe green 🍀 có lẽ màu xanh lá cây
  okay that's not changing that so it is 🍀 được rồi, điều đó không thay đổi vì vậy nó là
  changing that but it's not changing here 🍀 thay đổi điều đó nhưng nó không thay đổi ở đây
  so 🍀 Vì thế
  i'm gonna go ahead and select 🍀 tôi sẽ tiếp tục và chọn
  color and uh okay we can do green 🍀 màu sắc và uh được rồi, chúng ta có thể làm màu xanh lá cây
  lowercase g all right so you can hold 🍀 chữ thường g được rồi để bạn có thể giữ
  down command on your keyboard 🍀 xuống lệnh trên bàn phím của bạn
  and then you can click on the user 🍀 và sau đó bạn có thể nhấp vào người dùng
  interface element 🍀 phần tử giao diện
  from your preview right here 🍀 từ bản xem trước của bạn ngay tại đây
  and then there are a number of things 🍀 và sau đó có một số điều
  you can do with that element including 🍀 bạn có thể làm với yếu tố đó bao gồm
  this one 🍀 cái này
  show swift ui inspector and then 🍀 hiển thị trình kiểm tra Swift ui và sau đó
  again you get this add modifier text 🍀 một lần nữa bạn nhận được văn bản sửa đổi thêm này
  field 🍀 cánh đồng
  which you can search for modifiers to 🍀 mà bạn có thể tìm kiếm các công cụ sửa đổi để
  add so i'm going to add one called blur 🍀 thêm vì vậy tôi sẽ thêm một cái gọi là mờ
  you can see that it is blurring the 🍀 bạn có thể thấy rằng nó đang làm mờ
  color green 🍀 màu xanh lá cây
  and you can see that now my background 🍀 và bạn có thể thấy rằng bây giờ nền tảng của tôi
  is a blurry green 🍀 là một màu xanh mờ
  now you can do the same thing on the 🍀 bây giờ bạn có thể làm điều tương tự trên
  code editor side so you can hold down 🍀 bên trình chỉnh sửa mã để bạn có thể nhấn giữ
  command 🍀 yêu cầu
  and you can click the text element and 🍀 và bạn có thể nhấp vào phần tử văn bản và
  you get this menu 🍀 bạn nhận được menu này
  you can again click show swift ui 🍀 bạn có thể nhấp lại vào show swift ui
  inspector 🍀 thanh tra
  and from here you can see that this menu 🍀 và từ đây bạn có thể thấy menu này
  looks like the inspector here 🍀 có vẻ như thanh tra ở đây
  and we can also add modifiers as well 🍀 và chúng tôi cũng có thể thêm công cụ sửa đổi
  so to illustrate my point i've shown you 🍀 vì vậy để minh họa quan điểm của tôi, tôi đã chỉ cho bạn
  a whole bunch of different ways 🍀 một loạt các cách khác nhau
  for you to modify your user interface 🍀 để bạn sửa đổi giao diện người dùng của mình
  visually 🍀 trực quan
  you don't have to write the code but 🍀 bạn không phải viết mã nhưng
  over time as you're doing this in the 🍀 theo thời gian khi bạn đang làm điều này trong
  visual manner you're seeing the code 🍀 cách trực quan mà bạn đang nhìn thấy mã
  that is generated 🍀 được tạo ra
  over and over again you're going to get 🍀 lặp đi lặp lại bạn sẽ nhận được
  to a point where it's so familiar 🍀 đến mức quá quen thuộc
  it's going to be faster for you just to 🍀 nó sẽ nhanh hơn cho bạn chỉ để
  type it out rather than clicking 🍀 gõ nó ra thay vì nhấp vào
  everywhere 🍀 mọi nơi
  so it's a really neat way to learn the 🍀 vì vậy đó là một cách thực sự gọn gàng để học
  user interface code 🍀 mã giao diện người dùng
  isn't that pretty cool xcode has come a 🍀 không phải là xcode khá tuyệt vời đã đến
  long way in the past it used to be 🍀 con đường dài trong quá khứ nó từng là
  very fussy to use the visual interface 🍀 rất cầu kỳ để sử dụng giao diện trực quan
  builder with xcode 🍀 xây dựng với xcode
  but swift ui has really changed things 🍀 nhưng Swift ui đã thực sự thay đổi mọi thứ
  for the better 🍀 Để tốt hơn
  now in this lesson you learned how to 🍀 bây giờ trong bài học này bạn đã học cách
  use the text element 🍀 sử dụng phần tử văn bản
  and how to modify its look and behavior 🍀 và làm thế nào để sửa đổi giao diện và hành vi của nó
  using modifiers 🍀 sử dụng công cụ sửa đổi
  in addition to that you also learned 🍀 ngoài ra bạn cũng đã học được
  that the ui is actually generated from 🍀 rằng giao diện người dùng thực sự được tạo ra từ
  swift code 🍀 mã nhanh
  however there are a multitude of ways in 🍀 tuy nhiên có vô số cách trong
  xcode 🍀 xcode
  to build your ui visually and as you 🍀 để xây dựng giao diện người dùng của bạn một cách trực quan và như bạn
  construct your ui visually through the 🍀 xây dựng giao diện người dùng của bạn một cách trực quan thông qua
  preview canvas or the inspector panel as 🍀 xem trước canvas hoặc bảng kiểm tra dưới dạng
  we demonstrated the swift code in the 🍀 chúng tôi đã chứng minh mã nhanh chóng trong
  code editor 🍀 biên tập mã
  updates automatically to reflect those 🍀 cập nhật tự động để phản ánh những
  changes so this is a great way to learn 🍀 thay đổi vì vậy đây là một cách tuyệt vời để tìm hiểu
  the swift code 🍀 mã nhanh
  now to reinforce what you've learned in 🍀 bây giờ để củng cố những gì bạn đã học được trong
  this lesson i have a quiz and a quick 🍀 bài học này tôi có một bài kiểm tra và một cách nhanh chóng
  challenge for you in the next lesson 🍀 thách thức cho bạn trong bài học tiếp theo
  so i highly recommend that you go 🍀 vì vậy tôi thực sự khuyên bạn nên đi
  through those to get familiar with 🍀 thông qua những người để làm quen với
  using xcode to build uis the next time 🍀 sử dụng xcode để xây dựng uis lần sau
  we sit together i'll introduce to you 🍀 chúng ta ngồi lại với nhau tôi sẽ giới thiệu với bạn
  additional views and containers that you 🍀 chế độ xem và vùng chứa bổ sung mà bạn
  can use so that you can build more 🍀 có thể sử dụng để bạn có thể xây dựng thêm
  complicated user interfaces all right 🍀 giao diện người dùng phức tạp được rồi
  i'll see you there 🍀 tôi sẽ gặp bạn ở đó
  hello and welcome in this lesson you're 🍀 xin chào và chào mừng bạn đến với bài học này
  going to learn how to use a variety of 🍀 sẽ học cách sử dụng nhiều loại
  different user interface 🍀 giao diện người dùng khác nhau
  elements and containers and then at the 🍀 các phần tử và vùng chứa và sau đó tại
  end of the lesson 🍀 kết thúc bài học
  i'll show you a couple of user 🍀 tôi sẽ chỉ cho bạn một vài người dùng
  interfaces that i'd like you to try to 🍀 giao diện mà tôi muốn bạn thử
  build yourself as practice 🍀 xây dựng bản thân như thực hành
  remember you're going to get a lot more 🍀 hãy nhớ rằng bạn sẽ nhận được nhiều hơn nữa
  out of this course if you stop 🍀 ra khỏi khóa học này nếu bạn dừng lại
  throughout the lesson 🍀 trong suốt bài học
  and try to replicate what i've done on 🍀 và cố gắng lặp lại những gì tôi đã làm
  your own xcode project 🍀 dự án xcode của riêng bạn
  alright enough talking let's get to the 🍀 được rồi, nói chuyện đủ rồi, hãy bắt đầu
  fun part 🍀 phần thú vị
  all right so you've learned about the 🍀 được rồi, vậy là bạn đã tìm hiểu về
  text element now i want to show you 🍀 yếu tố văn bản bây giờ tôi muốn cho bạn thấy
  the image element so we're going to go 🍀 yếu tố hình ảnh vì vậy chúng ta sẽ đi
  ahead and 🍀 phía trước và
  erase this and why don't we use 🍀 xóa cái này và tại sao chúng ta không sử dụng
  the library to look for the image 🍀 thư viện để tìm kiếm hình ảnh
  element so let's go ahead 🍀 yếu tố vì vậy hãy tiếp tục
  and drag and drop the image there now 🍀 và kéo và thả hình ảnh vào đó ngay bây giờ
  the problem is that 🍀 Vấn đề là ở đó
  we don't have any image to display but 🍀 chúng tôi không có bất kỳ hình ảnh nào để hiển thị nhưng
  before i tell you how to specify that 🍀 trước khi tôi cho bạn biết làm thế nào để xác định điều đó
  just notice that 🍀 chỉ cần chú ý rằng
  it's sort of in the same format as the 🍀 nó có cùng định dạng với
  text element right 🍀 yếu tố văn bản bên phải
  there is the image keyword here and then 🍀 có từ khóa hình ảnh ở đây và sau đó
  there is a set of round brackets 🍀 có một bộ dấu ngoặc tròn
  and in the middle we're going to put our 🍀 và ở giữa chúng ta sẽ đặt
  image name 🍀 Tên Hình ảnh
  now this image name maps to whatever 🍀 bây giờ tên hình ảnh này ánh xạ tới bất cứ thứ gì
  graphic 🍀 đồ họa
  asset we've put into our asset library 🍀 nội dung chúng tôi đã đưa vào thư viện nội dung của mình
  so if we 🍀 vì vậy nếu chúng ta
  open up our file navigator and we go 🍀 mở trình điều hướng tệp của chúng tôi và chúng tôi đi
  into our 🍀 vào của chúng tôi
  asset library you can see that it's all 🍀 thư viện nội dung bạn có thể thấy rằng đó là tất cả
  empty we don't have anything here 🍀 trống rỗng, chúng tôi không có gì ở đây
  so let's go ahead and put an image in 🍀 vì vậy hãy tiếp tục và đưa một hình ảnh vào
  here if you go into the 🍀 ở đây nếu bạn đi vào
  lesson resources you're going to see a 🍀 tài nguyên bài học bạn sẽ thấy một
  zip file called logo assets 🍀 tệp zip được gọi là tài sản logo
  and let's go ahead and unzip them and 🍀 và hãy tiếp tục và giải nén chúng và
  then inside you're going to find 🍀 sau đó bên trong bạn sẽ tìm thấy
  a local image you're going to find three 🍀 một hình ảnh địa phương bạn sẽ tìm thấy ba
  files actually 🍀 tập tin thực sự
  and they're named the same way 🍀 và chúng được đặt tên theo cùng một cách
  except with an at 2x and an at 3x 🍀 ngoại trừ với một ở mức 2x và một ở mức 3x
  and that is literally just two times 🍀 và đó thực sự chỉ là hai lần
  as big as the first one and this one is 🍀 lớn như cái đầu tiên và cái này là
  three times as big as the first one 🍀 lớn gấp ba lần cái đầu tiên
  and the reason why they come in 🍀 và lý do tại sao họ đến
  different sizes is because 🍀 kích cỡ khác nhau là vì
  there exists ios devices with different 🍀 tồn tại các thiết bị ios với các thiết bị khác nhau
  screen resolutions 🍀 độ phân giải màn hình
  so by adding all three sizes the 🍀 vì vậy bằng cách thêm cả ba kích thước
  platform 🍀 nền tảng
  will pick the right size to use for the 🍀 sẽ chọn kích thước phù hợp để sử dụng cho
  screen resolution 🍀 độ phân giải màn hình
  that it's being displayed on so all you 🍀 rằng nó đang được hiển thị trên tất cả các bạn
  have to do 🍀 phải làm
  is grab all three and then drag it into 🍀 là lấy cả ba và sau đó kéo nó vào
  the asset library like this 🍀 thư viện tài sản như thế này
  it's going to be smart enough to know 🍀 nó sẽ đủ thông minh để biết
  that those three 🍀 rằng ba người đó
  are in the same group and it's going to 🍀 đang ở trong cùng một nhóm và nó sẽ
  give it a name 🍀 đặt cho nó một cái tên
  you can always rename this so you can 🍀 bạn luôn có thể đổi tên cái này để bạn có thể
  click it 🍀 nhấp vào nó
  and you can name it anything you want 🍀 và bạn có thể đặt tên cho nó bất cứ điều gì bạn muốn
  but 🍀 Nhưng
  this name right here is what you are 🍀 tên này ngay tại đây là những gì bạn đang có
  going to be referencing 🍀 sẽ được tham khảo
  in the image element so go ahead 🍀 trong phần tử hình ảnh, vì vậy hãy tiếp tục
  and put in quotation marks that image 🍀 và đặt trong dấu ngoặc kép hình ảnh đó
  asset name 🍀 tên tài sản
  and you should see it appear here oh 🍀 và bạn sẽ thấy nó xuất hiện ở đây oh
  actually automatic preview updating 🍀 cập nhật bản xem trước thực sự tự động
  paused go ahead and hit resume 🍀 tạm dừng tiếp tục và nhấn tiếp tục
  all right and there we see our image now 🍀 được rồi và ở đó chúng ta thấy hình ảnh của chúng ta bây giờ
  by default 🍀 theo mặc định
  it displays the image at the size of the 🍀 nó hiển thị hình ảnh ở kích thước của
  graphic asset that you imported however 🍀 nội dung đồ họa mà bạn đã nhập tuy nhiên
  if you wanted to 🍀 nếu bạn muốn
  resize it scale it up or down you can 🍀 thay đổi kích thước nó phóng to hoặc thu nhỏ bạn có thể
  add a modifier 🍀 thêm một công cụ sửa đổi
  called resizable when you hit that 🍀 được gọi là thay đổi kích thước khi bạn nhấn vào đó
  it will be able to stretch when it 🍀 nó sẽ có thể kéo dài khi nó
  stretches 🍀 trải dài
  if you wanted to maintain the aspect 🍀 nếu bạn muốn duy trì khía cạnh
  ratio because you can see here it's 🍀 tỷ lệ bởi vì bạn có thể thấy ở đây nó là
  all stretched out and it doesn't look 🍀 tất cả kéo dài ra và nó không nhìn
  like the original image 🍀 giống như hình ảnh ban đầu
  you can add another modifier called 🍀 bạn có thể thêm một công cụ sửa đổi khác gọi là
  aspect ratio 🍀 tỷ lệ khung hình
  and don't forget even though i am typing 🍀 và đừng quên mặc dù tôi đang gõ
  out these modifiers through code here 🍀 ra những sửa đổi thông qua mã ở đây
  you can always add them through this 🍀 bạn luôn có thể thêm chúng thông qua điều này
  menu right you can find it right there 🍀 menu bên phải bạn có thể tìm thấy nó ngay tại đó
  and then the aspect ratio modifier 🍀 và sau đó là công cụ sửa đổi tỷ lệ khung hình
  allows you 🍀 cho phép bạn
  to select different ways in which 🍀 để chọn những cách khác nhau trong đó
  this should scale so if i say fit it's 🍀 cái này sẽ mở rộng quy mô vì vậy nếu tôi nói phù hợp thì nó
  going to 🍀 sẽ
  scale it up to fit within the bounds 🍀 mở rộng nó lên để phù hợp trong giới hạn
  but with maintaining aspect ratio 🍀 nhưng với việc duy trì tỷ lệ khung hình
  and while we're adding these modifiers 🍀 và trong khi chúng tôi đang thêm những công cụ sửa đổi này
  this would be a good point to mention 🍀 đây sẽ là một điểm tốt để đề cập đến
  that 🍀 cái đó
  a good practice is to hit enter 🍀 một thực hành tốt là nhấn enter
  on your modifiers here so that they 🍀 trên công cụ sửa đổi của bạn ở đây để chúng
  become aligned 🍀 trở nên liên kết
  because some elements might have a list 🍀 bởi vì một số yếu tố có thể có một danh sách
  of modifiers and 🍀 của sửa đổi và
  by putting them all on a new line they 🍀 bằng cách đặt tất cả chúng trên một dòng mới, chúng
  automatically 🍀 tự động
  indent under the user interface element 🍀 thụt lề dưới phần tử giao diện người dùng
  that 🍀 cái đó
  they pertain to and it becomes very easy 🍀 họ liên quan đến và nó trở nên rất dễ dàng
  to read 🍀 đọc
  all right now you know about text 🍀 tất cả ngay bây giờ bạn biết về văn bản
  elements and image elements 🍀 yếu tố và yếu tố hình ảnh
  how do we go about combining the two how 🍀 làm thế nào để chúng ta kết hợp cả hai
  do we go about having more than one 🍀 chúng ta có đi về việc có nhiều hơn một
  element for our user interface 🍀 yếu tố cho giao diện người dùng của chúng tôi
  this is where container elements come 🍀 đây là nơi các phần tử vùng chứa đến
  into play 🍀 Vào chơi
  so let's go ahead into our library 🍀 vì vậy hãy tiếp tục vào thư viện của chúng tôi
  and let's search for a vstack 🍀 và hãy tìm kiếm một vstack
  this is the one that i'm referring to 🍀 đây là cái mà tôi đang đề cập đến
  vertical stack 🍀 ngăn xếp dọc
  and you can go ahead and click and drag 🍀 và bạn có thể tiếp tục, nhấp và kéo
  it in here 🍀 nó ở đây
  now you're going to get some errors 🍀 bây giờ bạn sẽ gặp một số lỗi
  because this counts as an element too 🍀 bởi vì điều này cũng được tính là một yếu tố
  now it seems that xcode hasn't caught up 🍀 bây giờ có vẻ như xcode chưa bắt kịp
  but 🍀 Nhưng
  this wouldn't be a valid ui 🍀 đây sẽ không phải là một giao diện người dùng hợp lệ
  essentially we have two elements here 🍀 về cơ bản chúng ta có hai yếu tố ở đây
  what we want to do instead is we want to 🍀 những gì chúng tôi muốn làm thay vào đó là chúng tôi muốn
  take our image 🍀 lấy hình ảnh của chúng tôi
  and i'm going to cut that code and i'm 🍀 và tôi sẽ cắt mã đó và tôi
  going to paste it in between 🍀 sẽ dán nó vào giữa
  this opening bracket and closing bracket 🍀 khung mở và khung đóng này
  of the vertical stack 🍀 của ngăn xếp dọc
  inside the vertical stack you can put up 🍀 bên trong ngăn xếp dọc bạn có thể đặt lên
  to 10 elements 🍀 đến 10 phần tử
  and it's going to stack them vertically 🍀 và nó sẽ xếp chúng theo chiều dọc
  on top of each other 🍀 chồng lên nhau
  so here i'm going to also put a text 🍀 vì vậy ở đây tôi cũng sẽ đặt một văn bản
  element like that and you can see that 🍀 yếu tố như thế và bạn có thể thấy rằng
  now i'm able to have two elements 🍀 bây giờ tôi có thể có hai yếu tố
  and they are automatically stacked on 🍀 và chúng được tự động xếp chồng lên nhau
  top of each other 🍀 hàng đầu của nhau
  in addition to the vertical stack there 🍀 ngoài ngăn xếp dọc có
  is also a horizontal one 🍀 cũng là một đường nằm ngang
  and instead of v stack that is h stack 🍀 và thay vì ngăn xếp v là ngăn xếp h
  and if you change that to an h stack 🍀 và nếu bạn thay đổi nó thành ngăn xếp h
  you'll see that it's now stacked 🍀 bạn sẽ thấy rằng nó hiện đã được xếp chồng lên nhau
  horizontally beside each other 🍀 nằm ngang cạnh nhau
  and there's also one called zed stack 🍀 và cũng có một cái gọi là zed stack
  i'm in canada or z stack if you prefer 🍀 tôi đang ở canada hoặc z stack nếu bạn thích
  and this places things on top of each 🍀 và điều này đặt mọi thứ lên trên mỗi
  other with 🍀 khác với
  the elements at the top being the 🍀 các phần tử ở trên cùng là
  farthest 🍀 xa nhất
  in the back so you can see that our text 🍀 ở phía sau để bạn có thể thấy rằng văn bản của chúng tôi
  element 🍀 yếu tố
  hello sits on top of the image 🍀 xin chào ngồi trên cùng của hình ảnh
  now a cool thing is that you can nest 🍀 bây giờ một điều thú vị là bạn có thể làm tổ
  these different container elements 🍀 các phần tử vùng chứa khác nhau này
  so i can have let's say 🍀 vì vậy tôi có thể nói
  i want my image logo to be the 🍀 tôi muốn logo hình ảnh của tôi là
  background and on top 🍀 nền và trên cùng
  i want to have two text elements 🍀 tôi muốn có hai yếu tố văn bản
  side by side so then i can 🍀 cạnh nhau để sau đó tôi có thể
  use an h stack in here and rather than 🍀 sử dụng ngăn xếp h ở đây và thay vì
  typing it out or dragging it from the 🍀 gõ nó ra hoặc kéo nó từ
  library i'm going to show you 🍀 thư viện tôi sẽ chỉ cho bạn
  another way in which to embed your 🍀 một cách khác để nhúng của bạn
  elements into these stacks 🍀 các phần tử vào các ngăn xếp này
  if you hold down command and click on 🍀 nếu bạn giữ lệnh và nhấp vào
  the element 🍀 phần tử
  you've seen this menu before you can 🍀 bạn đã thấy menu này trước khi bạn có thể
  embed in 🍀 nhung vao
  h stack and it's just going to create 🍀 h ngăn xếp và nó sẽ tạo ra
  that h stack for you 🍀 ngăn xếp h đó cho bạn
  and that's probably the easiest way to 🍀 và đó có lẽ là cách dễ nhất để
  do it 🍀 làm đi
  so in this h stack i'm going to add 🍀 vì vậy trong ngăn xếp h này tôi sẽ thêm
  hello world you can see here 🍀 xin chào thế giới bạn có thể thấy ở đây
  that now my image is behind 🍀 rằng bây giờ hình ảnh của tôi ở phía sau
  this h stack with two text elements 🍀 ngăn xếp h này có hai phần tử văn bản
  now it seems pretty intuitive using 🍀 bây giờ nó có vẻ khá trực quan bằng cách sử dụng
  these stacks right 🍀 những ngăn xếp này đúng
  but how do you arrange the elements 🍀 nhưng làm thế nào để bạn sắp xếp các yếu tố
  inside the stacks 🍀 bên trong ngăn xếp
  well there are some options so if i 🍀 cũng có một số tùy chọn vì vậy nếu tôi
  click on this z stack here 🍀 nhấp vào ngăn xếp z này tại đây
  actually let's take a look at the h 🍀 thực sự chúng ta hãy nhìn vào h
  stack so i'm going to go ahead and click 🍀 ngăn xếp vì vậy tôi sẽ tiếp tục và nhấp vào
  that 🍀 cái đó
  this one actually has alignment so does 🍀 cái này thực sự có sự liên kết như vậy
  that stack doesn't because it just puts 🍀 ngăn xếp đó không phải vì nó chỉ đặt
  everything on top of each other 🍀 mọi thứ chồng lên nhau
  but for the h stack and the v stack 🍀 nhưng đối với ngăn xếp h và ngăn xếp v
  there's 🍀 có
  an alignment so you can choose to align 🍀 căn chỉnh để bạn có thể chọn căn chỉnh
  everything by their middles 🍀 tất cả mọi thứ bởi trung gian của họ
  align everything by their baselines or 🍀 sắp xếp mọi thứ theo đường cơ sở hoặc
  align everything by the top 🍀 sắp xếp mọi thứ ở trên cùng
  and you can also add spacing so you can 🍀 và bạn cũng có thể thêm khoảng cách để bạn có thể
  see here i'm adding a spacing of three 🍀 xem ở đây tôi đang thêm một khoảng cách ba
  you can see how it changes the code and 🍀 bạn có thể thấy cách nó thay đổi mã và
  it actually adds a spacing there now 🍀 nó thực sự thêm một khoảng cách ở đó bây giờ
  it's too little for you to 🍀 nó quá ít đối với bạn
  notice but let me add 20. you can see 🍀 thông báo nhưng để tôi thêm 20. bạn có thể thấy
  that there is a gap now all right so 🍀 rằng bây giờ có một khoảng cách được rồi
  you've learned that you can 🍀 bạn đã học được rằng bạn có thể
  align the elements inside a stack and 🍀 căn chỉnh các phần tử bên trong ngăn xếp và
  you can also add spacing between 🍀 bạn cũng có thể thêm khoảng cách giữa
  elements in a stack 🍀 các phần tử trong ngăn xếp
  but i want to show you another way of 🍀 nhưng tôi muốn chỉ cho bạn một cách khác
  arranging elements inside of a stack 🍀 sắp xếp các phần tử bên trong ngăn xếp
  in order to do that i'm going to change 🍀 để làm được điều đó tôi sẽ thay đổi
  this z-stack into a v-stack 🍀 ngăn xếp z này thành ngăn xếp v
  so we're going to get something like 🍀 vì vậy chúng tôi sẽ nhận được một cái gì đó như
  that now let's say 🍀 bây giờ chúng ta hãy nói
  i wanted this logo to be at the top and 🍀 tôi muốn logo này ở trên cùng và
  i wanted 🍀 tôi muốn
  my two text labels here to be at the 🍀 hai nhãn văn bản của tôi ở đây để được ở
  bottom 🍀 đáy
  one way i could do it is actually 🍀 một cách tôi có thể làm là thực sự
  by adding spacing in my v stack right so 🍀 bằng cách thêm khoảng cách vào ngăn xếp v của tôi
  let's say i had a hundred 🍀 giả sử tôi có một trăm
  you can see that they're pushed apart i 🍀 bạn có thể thấy rằng họ bị đẩy ra xa tôi
  can add 🍀 có thể thêm
  more 300 but this is a fixed value 🍀 hơn 300 nhưng đây là giá trị cố định
  and as you know there are a ton of 🍀 và như bạn biết có rất nhiều
  different screen sizes and resolutions 🍀 kích thước và độ phân giải màn hình khác nhau
  so this isn't a good way of approaching 🍀 vì vậy đây không phải là một cách tốt để tiếp cận
  it let me get rid of this 🍀 nó để tôi thoát khỏi điều này
  spacing value instead 🍀 giá trị khoảng cách thay thế
  what we can use is an element called a 🍀 những gì chúng ta có thể sử dụng là một yếu tố được gọi là
  spacer 🍀 miếng đệm
  so let me show you how that works in 🍀 vì vậy hãy để tôi chỉ cho bạn cách nó hoạt động trong
  between the image element 🍀 giữa các yếu tố hình ảnh
  and the h stack containing the two text 🍀 và ngăn xếp h chứa hai văn bản
  elements 🍀 yếu tố
  i am going to insert a spacer element 🍀 tôi sẽ chèn một phần tử đệm
  and the name of this element is spacer 🍀 và tên của phần tử này là miếng đệm
  followed by 🍀 theo dõi bởi
  two rounded brackets what this spacer 🍀 hai dấu ngoặc tròn cái gì miếng đệm này
  element does is 🍀 phần tử không là
  take up all the available space it just 🍀 chiếm tất cả không gian có sẵn, nó chỉ
  expands and pushes everything 🍀 mở rộng và đẩy mọi thứ
  away so you can see i've got the image 🍀 đi để bạn có thể thấy tôi đã có hình ảnh
  here i've got the spacer taking up as 🍀 ở đây tôi đã có miếng đệm chiếm
  much space as i can 🍀 nhiều không gian như tôi có thể
  and then my h stack containing the two 🍀 và sau đó ngăn xếp h của tôi chứa hai
  elements there 🍀 các yếu tố ở đó
  the cool thing about the spacer element 🍀 điều thú vị về phần tử miếng đệm
  however is that it plays nice with 🍀 tuy nhiên là nó chơi tốt với
  other spacer elements in the same stack 🍀 các phần tử đệm khác trong cùng một ngăn xếp
  so if i go up here above the logo and i 🍀 vì vậy nếu tôi đi lên đây phía trên logo và tôi
  add another spacer element 🍀 thêm một phần tử đệm khác
  what ends up happening is that the two 🍀 điều cuối cùng xảy ra là cả hai
  spacer elements 🍀 phần tử đệm
  both take up an equal amount of space 🍀 cả hai đều chiếm một lượng không gian bằng nhau
  you can see 🍀 bạn có thể thấy
  above and below the war logo there 🍀 trên và dưới logo chiến tranh ở đó
  is an equal amount of space if i add a 🍀 là một lượng không gian bằng nhau nếu tôi thêm một
  third spacer element 🍀 phần tử đệm thứ ba
  beneath my h stack what do you think is 🍀 bên dưới ngăn xếp h của tôi bạn nghĩ gì
  going to happen 🍀 sắp xảy ra
  well all three spacer elements are going 🍀 tốt cả ba yếu tố miếng đệm đang diễn ra
  to share 🍀 chia sẻ
  the available white space so the first 🍀 khoảng trắng có sẵn nên đầu tiên
  space for elements here 🍀 không gian cho các yếu tố ở đây
  second one here and the third one is 🍀 cái thứ hai ở đây và cái thứ ba là
  there and it's all 🍀 ở đó và đó là tất cả
  having an equal amount of space this is 🍀 có một lượng không gian bằng nhau, đây là
  a great way to space things out 🍀 một cách tuyệt vời để giải phóng mọi thứ
  equally now in fact i could do the same 🍀 thực tế bây giờ tôi cũng có thể làm như vậy
  thing with my h stack 🍀 điều với ngăn xếp h của tôi
  instead of specifying spacing here and 🍀 thay vì chỉ định khoảng cách ở đây và
  notice this time 🍀 chú ý thời gian này
  i'm just going to delete that spacing 20 🍀 tôi sẽ xóa khoảng cách 20 đó
  there instead of changing it in the 🍀 ở đó thay vì thay đổi nó trong
  inspector 🍀 thanh tra
  i can add a spacer there i'm going to 🍀 tôi có thể thêm một miếng đệm ở đó tôi sẽ
  copy that 🍀 sao chép cái đó
  you can see here it takes up all the 🍀 bạn có thể thấy ở đây nó chiếm tất cả
  available space pushing my two labels to 🍀 không gian có sẵn đẩy hai nhãn của tôi tới
  the side 🍀 bên
  but if i add one here on the right side 🍀 nhưng nếu tôi thêm một cái ở đây vào bên phải
  it's gonna push it to the middle 🍀 nó sẽ đẩy nó vào giữa
  and then if i add one in the middle then 🍀 và sau đó nếu tôi thêm một cái ở giữa thì
  it's going to 🍀 Nó sẽ
  make it all equidistant 🍀 làm cho tất cả cách đều nhau
  awesome you learned how to use the image 🍀 tuyệt vời bạn đã học cách sử dụng hình ảnh
  and spacer elements in addition to the 🍀 và các yếu tố miếng đệm ngoài
  text element 🍀 yếu tố văn bản
  you also learned how to use the v-stack 🍀 bạn cũng đã học cách sử dụng v-stack
  h-stack and z-stack containers 🍀 thùng chứa h-stack và z-stack
  now it's time for you to practice using 🍀 bây giờ là lúc để bạn thực hành sử dụng
  these views and containers in a few 🍀 các chế độ xem và vùng chứa này trong một vài
  challenges that i have for you in the 🍀 những thách thức mà tôi có cho bạn trong
  next lesson 🍀 bài học tiếp theo
  i highly recommend that you try them out 🍀 tôi thực sự khuyên bạn nên thử chúng
  the next time we sit together we'll be 🍀 lần sau chúng ta ngồi lại với nhau, chúng ta sẽ
  building the warcard game user interface 🍀 xây dựng giao diện người dùng trò chơi warcard
  i look forward to seeing you there and 🍀 tôi mong được gặp bạn ở đó và
  good luck with the challenges 🍀 chúc may mắn với những thử thách
  hello and welcome in this lesson we're 🍀 xin chào và chào mừng đến với bài học này, chúng ta
  going to be building the war card game 🍀 sẽ xây dựng trò chơi bài chiến tranh
  user interface 🍀 giao diện người dùng
  actually on second thought i'm going to 🍀 thực sự trên suy nghĩ thứ hai tôi sẽ
  have you try it first because i think 🍀 bạn có thử nó trước không vì tôi nghĩ
  you can do it 🍀 bạn có thể làm được
  come on you give it an honest try and 🍀 thôi nào, bạn hãy thử một cách trung thực và
  then we'll go through the solution 🍀 sau đó chúng ta sẽ đi qua giải pháp
  together 🍀 cùng nhau
  now before we start i do have one 🍀 bây giờ trước khi chúng tôi bắt đầu tôi có một
  request hit that thumbs up button below 🍀 yêu cầu nhấn nút thích bên dưới
  for some 🍀 cho một số
  extra good luck all right let's get 🍀 thêm may mắn được rồi chúng ta hãy nhận
  started 🍀 đã bắt đầu
  alright so we're going to start with an 🍀 được rồi vì vậy chúng ta sẽ bắt đầu với một
  xcode project 🍀 dự án xcode
  launch xcode and let's create a brand 🍀 khởi chạy xcode và hãy tạo thương hiệu
  new xcode project 🍀 dự án xcode mới
  we're going to choose app under ios and 🍀 chúng tôi sẽ chọn ứng dụng trong ios và
  you can name this anything you want but 🍀 bạn có thể đặt tên cho bất cứ điều gì bạn muốn nhưng
  i am going to call this 🍀 tôi sẽ gọi cái này
  war challenge because that's what it is 🍀 thách thức chiến tranh bởi vì đó là những gì nó là
  and it's a challenge that i'm confident 🍀 và đó là một thử thách mà tôi tự tin
  you can do 🍀 bạn có thể làm
  interfaces swift ui lifecycle is swift 🍀 vòng đời giao diện người dùng nhanh chóng là nhanh chóng
  ui app 🍀 ứng dụng giao diện người dùng
  and language is swift leave the rest 🍀 và ngôn ngữ nhanh chóng rời khỏi phần còn lại
  unchecked 🍀 bỏ chọn
  and let's save it somewhere so i'm going 🍀 và hãy lưu nó ở đâu đó vì vậy tôi sẽ đi
  to just save it on my desktop 🍀 để chỉ lưu nó trên máy tính để bàn của tôi
  all right here's our brand new xcode 🍀 được rồi, đây là xcode hoàn toàn mới của chúng tôi
  project let's go to the asset library 🍀 dự án, hãy vào thư viện nội dung
  first because we're going to add all of 🍀 đầu tiên bởi vì chúng tôi sẽ thêm tất cả
  the image assets 🍀 tài sản hình ảnh
  that we need for this app if you go into 🍀 mà chúng tôi cần cho ứng dụng này nếu bạn đi vào
  the course 🍀 khóa học
  resources folder under this lesson 🍀 thư mục tài nguyên dưới bài học này
  specifically you're going to find a zip 🍀 cụ thể là bạn sẽ tìm thấy một zip
  file with all of the image assets 🍀 tập tin với tất cả các nội dung hình ảnh
  so go ahead and unzip that and then 🍀 vì vậy hãy tiếp tục và giải nén nó và sau đó
  let's 🍀 hãy
  drag all of these assets into the asset 🍀 kéo tất cả các nội dung này vào nội dung
  library 🍀 thư viện
  now you should have the card back the 🍀 bây giờ bạn nên lấy lại thẻ
  background for the entire app 🍀 nền cho toàn bộ ứng dụng
  and then you should have cards 2 to 14 🍀 và sau đó bạn nên có thẻ 2 đến 14
  and 🍀 Và
  no you're not missing card number one 🍀 không, bạn không thiếu thẻ số một
  the ace 🍀 các ACE
  is card 14 and the reason i numbered 🍀 là thẻ 14 và lý do tôi đánh số
  them this way 🍀 họ theo cách này
  is because we're going to use this 🍀 là bởi vì chúng ta sẽ sử dụng cái này
  number at the end of the 🍀 số ở cuối
  card names here to represent the value 🍀 tên thẻ ở đây để đại diện cho giá trị
  and we're going to compare this value to 🍀 và chúng ta sẽ so sánh giá trị này với
  see which card 🍀 xem thẻ nào
  trumps the other and then we're going 🍀 trumps khác và sau đó chúng tôi sẽ đi
  gonna have a deal button image and 🍀 sẽ có một hình ảnh nút giao dịch và
  a logo image now just in case i didn't 🍀 một hình ảnh logo bây giờ chỉ trong trường hợp tôi đã không
  mention it before we have three 🍀 đề cập đến nó trước khi chúng tôi có ba
  different sizes for each 🍀 kích thước khác nhau cho mỗi
  image because there are different screen 🍀 hình ảnh vì có màn hình khác nhau
  resolutions for ios devices 🍀 độ phân giải cho thiết bị ios
  so all of the newer devices have a 🍀 vì vậy tất cả các thiết bị mới hơn đều có
  super retina display and so they're 🍀 màn hình siêu võng mạc và vì vậy chúng
  using the 3x ones and 🍀 sử dụng những cái 3x và
  i don't think they actually make devices 🍀 tôi không nghĩ họ thực sự tạo ra các thiết bị
  that 🍀 cái đó
  use the one x image asset anymore but 🍀 sử dụng nội dung hình ảnh một x nữa nhưng
  this app was from a long time ago and 🍀 ứng dụng này đã có từ rất lâu rồi và
  we've rebuilt it many 🍀 chúng tôi đã xây dựng lại nó nhiều
  different times so we still have all 🍀 thời gian khác nhau vì vậy chúng tôi vẫn có tất cả
  three now let me show you the finished 🍀 ba bây giờ hãy để tôi cho bạn xem kết thúc
  user interface 🍀 giao diện người dùng
  and this is the end result that you're 🍀 và đây là kết quả cuối cùng mà bạn
  going to 🍀 sẽ
  try to achieve yourself so this is what 🍀 cố gắng để đạt được chính mình vì vậy đây là những gì
  it looks like 🍀 nó có vẻ như
  don't pay too much attention to the 🍀 đừng quá chú ý đến
  spacing as long as you've got 🍀 khoảng cách miễn là bạn có
  everything generally in the right place 🍀 mọi thứ nói chung ở đúng nơi
  i think that's great 🍀 tôi nghĩ điều đó thật tuyệt
  another thing to mention is that this is 🍀 một điều khác cần đề cập là đây là
  supposed to be a button but 🍀 được cho là một nút nhưng
  since we haven't gone through buttons 🍀 vì chúng tôi chưa đi qua các nút
  yet feel free to use an 🍀 nhưng hãy thoải mái sử dụng một
  image element for that and that will be 🍀 yếu tố hình ảnh cho điều đó và đó sẽ là
  perfect for when we 🍀 hoàn hảo cho khi chúng ta
  do transition to using buttons and i can 🍀 chuyển sang sử dụng các nút và tôi có thể
  show you how to change that image 🍀 chỉ cho bạn cách thay đổi hình ảnh đó
  element to a button 🍀 phần tử cho một nút
  uh one other thing i have to mention to 🍀 uh một điều khác tôi phải đề cập đến
  you is the concept of the safe area 🍀 bạn là khái niệm về khu vực an toàn
  now the safe area is this region that 🍀 bây giờ khu vực an toàn là khu vực này
  starts about right here 🍀 bắt đầu về ngay tại đây
  under the notch and it ends right here 🍀 dưới notch và nó kết thúc ngay tại đây
  above this little handlebar and in some 🍀 phía trên tay lái nhỏ này và trong một số
  cases 🍀 các trường hợp
  there are actually margins on the left 🍀 thực sự có lề bên trái
  and right side as well 🍀 và bên phải cũng vậy
  and anything within this region is 🍀 và bất cứ điều gì trong khu vực này là
  in the safe area now this area is 🍀 trong khu vực an toàn bây giờ khu vực này là
  guaranteed 🍀 đảm bảo
  not to be obstructed anything outside of 🍀 không bị cản trở bất cứ điều gì bên ngoài
  the safe area 🍀 khu vực an toàn
  so anything in this corner or this 🍀 vì vậy bất cứ thứ gì trong góc này hoặc cái này
  corner could be obstructed as you can 🍀 góc có thể bị cản trở như bạn có thể
  see by icons or by the time 🍀 xem theo biểu tượng hoặc theo thời gian
  and obviously there's this handlebar 🍀 và rõ ràng là có tay lái này
  here that could be blocking things as 🍀 ở đây có thể chặn mọi thứ như
  well 🍀 Tốt
  if you want a full screen background 🍀 nếu bạn muốn có một nền toàn màn hình
  like this green background that we have 🍀 giống như nền xanh này mà chúng ta có
  here 🍀 đây
  you're going to have to ignore the safe 🍀 bạn sẽ phải bỏ qua sự an toàn
  area because by default 🍀 khu vực vì theo mặc định
  when you add elements onto the view it 🍀 khi bạn thêm các phần tử vào chế độ xem, nó
  will try to stay within the safe area 🍀 sẽ cố gắng ở trong khu vực an toàn
  so there is a modifier that i haven't 🍀 vì vậy có một công cụ sửa đổi mà tôi chưa có
  shown you yet 🍀 cho bạn thấy chưa
  it's called ignore safe area that you 🍀 nó được gọi là bỏ qua khu vực an toàn mà bạn
  can apply to an image 🍀 có thể áp dụng cho một hình ảnh
  that will allow it to stretch beyond the 🍀 điều đó sẽ cho phép nó vượt ra ngoài
  safe area so that it reaches the edges 🍀 khu vực an toàn để nó đạt đến các cạnh
  and that's probably the only other piece 🍀 và đó có lẽ là phần duy nhất khác
  of missing information you need 🍀 thiếu thông tin bạn cần
  other than that you've learned about 🍀 khác với những gì bạn đã học về
  stacks you've learned about 🍀 ngăn xếp bạn đã tìm hiểu về
  image and text elements everything you 🍀 các yếu tố hình ảnh và văn bản mọi thứ bạn
  could need 🍀 có thể cần
  to build this user interface so go ahead 🍀 để xây dựng giao diện người dùng này, hãy tiếp tục
  pause this video 🍀 tạm dừng video này
  and give it a try yourself and then 🍀 và hãy tự mình thử và sau đó
  afterwards we will come back together 🍀 sau đó chúng ta sẽ trở lại với nhau
  and i will walk you through 🍀 và tôi sẽ hướng dẫn bạn
  how to build this 🍀 làm thế nào để xây dựng này
  so welcome back how did you do were you 🍀 vì vậy chào mừng bạn trở lại, bạn khỏe không
  able to build this user interface 🍀 có thể xây dựng giao diện người dùng này
  congratulations if you were able to 🍀 xin chúc mừng nếu bạn có thể
  build this or something that resembles 🍀 xây dựng cái này hoặc cái gì đó tương tự
  this 🍀 cái này
  and if you got stuck or you weren't able 🍀 và nếu bạn gặp khó khăn hoặc bạn không thể
  to don't worry because we're gonna go 🍀 đừng lo lắng vì chúng ta sẽ đi
  through it now and oftentimes i find 🍀 thông qua nó bây giờ và đôi khi tôi tìm thấy
  that 🍀 cái đó
  if you try it yourself and get stuck and 🍀 nếu bạn tự mình thử và gặp khó khăn và
  then later on find the solution 🍀 sau đó tìm giải pháp
  those are oftentimes the best learning 🍀 đó thường là cách học tốt nhất
  experiences 🍀 kinh nghiệm
  all right let's go through this together 🍀 được rồi, chúng ta hãy cùng nhau vượt qua điều này
  now now before we dive in 🍀 bây giờ bây giờ trước khi chúng ta đi sâu vào
  and start building this user interface i 🍀 và bắt đầu xây dựng giao diện người dùng này tôi
  want to take a moment to 🍀 muốn dành một chút thời gian để
  sort of break down what elements that i 🍀 phân loại những yếu tố mà tôi
  can see here so first of all i can see 🍀 có thể thấy ở đây vì vậy trước hết tôi có thể thấy
  that we will need a zed stack because 🍀 rằng chúng ta sẽ cần một ngăn xếp zed vì
  we have an image behind all of these 🍀 chúng tôi có một hình ảnh đằng sau tất cả những điều này
  elements 🍀 yếu tố
  and so a z stack is going to allow us to 🍀 và do đó, một ngăn xếp z sẽ cho phép chúng tôi
  position elements on top of each other 🍀 sắp xếp các phần tử chồng lên nhau
  next we have a v stack where elements 🍀 tiếp theo chúng ta có một ngăn xếp v trong đó các phần tử
  are stacked 🍀 được xếp chồng lên nhau
  on top of each other vertically so you 🍀 chồng lên nhau theo chiều dọc để bạn
  can see a v stack 🍀 có thể thấy một ngăn xếp v
  running through this entire user 🍀 chạy qua toàn bộ người dùng này
  interface top to bottom 🍀 giao diện từ trên xuống dưới
  now some of the elements in this v stack 🍀 bây giờ một số phần tử trong ngăn xếp v này
  will actually be contained within an h 🍀 thực sự sẽ được chứa trong một h
  stack 🍀 cây rơm
  like these two cards side by side for 🍀 như hai thẻ này cạnh nhau cho
  instance 🍀 ví dụ
  and this element down here 🍀 và phần tử này ở dưới đây
  is going to be an h stack 🍀 sẽ là một ngăn xếp h
  of two v stacks so this is a v stack 🍀 của hai ngăn xếp v vì vậy đây là ngăn xếp v
  containing the two text elements 🍀 chứa hai thành phần văn bản
  this is a v stack containing the two 🍀 đây là ngăn xếp v chứa hai
  elements and then you encapsulate them 🍀 các phần tử và sau đó bạn đóng gói chúng
  in an h stack so that's the breakdown 🍀 trong ngăn xếp h nên đó là sự cố
  that i see 🍀 mà tôi thấy
  and now we're going to jump into our 🍀 và bây giờ chúng ta sẽ nhảy vào
  contentview.swift and we'll build it out 🍀 contentview.swift và chúng tôi sẽ xây dựng nó
  all right so here i'm looking at the 🍀 được rồi vì vậy ở đây tôi đang nhìn vào
  contentview.swift 🍀 xem nội dung.swift
  the first thing i'm going to do is to 🍀 điều đầu tiên tôi sẽ làm là
  change this 🍀 Thay đổi cai nay đi
  simulator to iphone 11 and let's hit 🍀 giả lập cho iphone 11 và hãy nhấn
  resume 🍀 bản tóm tắt
  and in a few seconds time might be 🍀 và trong vài giây thời gian có thể là
  longer 🍀 lâu hơn
  we'll see a preview here perfect 🍀 chúng ta sẽ thấy một bản xem trước ở đây hoàn hảo
  now let's change this default text 🍀 bây giờ hãy thay đổi văn bản mặc định này
  element 🍀 yếu tố
  get rid of that let's put a 🍀 thoát khỏi điều đó chúng ta hãy đặt một
  z stack there open up a pair of curly 🍀 ngăn xếp z ở đó mở ra một cặp xoăn
  brackets 🍀 dấu ngoặc
  now what's sitting behind all of those 🍀 bây giờ những gì ngồi đằng sau tất cả những
  elements is 🍀 yếu tố là
  an image right and 🍀 một hình ảnh bên phải và
  the image that we have is called 🍀 hình ảnh mà chúng ta có được gọi là
  background 🍀 lý lịch
  notice that it doesn't reach all the way 🍀 lưu ý rằng nó không đạt được tất cả các cách
  to the top 🍀 về đầu trang
  now it does overlap that safe area a bit 🍀 bây giờ nó chồng lên khu vực an toàn đó một chút
  i said the safe area 🍀 tôi đã nói khu vực an toàn
  was under the notch right here so you do 🍀 đã ở dưới notch ngay tại đây vì vậy bạn làm
  see that it overflows but doesn't quite 🍀 thấy rằng nó tràn nhưng không hoàn toàn
  really go all the way there so we can 🍀 thực sự đi tất cả các cách đó để chúng tôi có thể
  add a modifier 🍀 thêm một công cụ sửa đổi
  called ignores safe area when you do 🍀 được gọi bỏ qua khu vực an toàn khi bạn làm
  that 🍀 cái đó
  it's just going to cover everything 🍀 nó sẽ chỉ bao gồm tất cả mọi thứ
  so okay so what's going to be on top of 🍀 được rồi, vậy cái gì sẽ được đặt lên hàng đầu
  this background well 🍀 nền này tốt
  like i said before we're going to have a 🍀 như tôi đã nói trước khi chúng ta sắp có một
  vertical stack containing all of those 🍀 ngăn xếp dọc chứa tất cả những thứ đó
  elements 🍀 yếu tố
  the first one being the logo and then 🍀 cái đầu tiên là logo và sau đó
  we're gonna have it 🍀 chúng ta sẽ có nó
  an h stack with two cards 🍀 một chồng h với hai thẻ
  and then an image element representing 🍀 và sau đó là một yếu tố hình ảnh đại diện
  the deal button 🍀 nút thỏa thuận
  and then after that we're going to have 🍀 và sau đó chúng ta sẽ có
  the score vertical stacks 🍀 điểm số theo chiều dọc
  in a horizontal stack so let me 🍀 trong một ngăn xếp ngang vì vậy hãy để tôi
  let me type this out so it makes a 🍀 hãy để tôi gõ cái này ra để nó tạo ra một
  little more sense let's start with the 🍀 ý nghĩa hơn một chút, hãy bắt đầu với
  logo at the top 🍀 logo ở trên cùng
  we're going to have an image and our 🍀 chúng ta sẽ có một hình ảnh và
  image asset name is logo 🍀 tên nội dung hình ảnh là logo
  so you can see it just um just appears 🍀 vì vậy bạn có thể thấy nó chỉ um chỉ xuất hiện
  at the right size there 🍀 ở kích thước phù hợp ở đó
  and that's because our image asset is 🍀 và đó là vì nội dung hình ảnh của chúng tôi là
  that size 🍀 kích thước đó
  okay now let's put an h stack in here 🍀 được rồi bây giờ hãy đặt một ngăn xếp h ở đây
  and inside here we're going to put two 🍀 và bên trong đây chúng ta sẽ đặt hai
  more image elements we're going to put 🍀 nhiều yếu tố hình ảnh chúng ta sẽ đặt
  the uh let's put card 🍀 uh chúng ta hãy đặt thẻ
  two 🍀 hai
  and then card three so we have two cards 🍀 và sau đó thẻ ba để chúng tôi có hai thẻ
  in an 🍀 trong một
  h stack and then after that we're going 🍀 h ngăn xếp và sau đó chúng ta sẽ đi
  to put another image element 🍀 để đặt một yếu tố hình ảnh khác
  and this is going to be the deal button 🍀 và đây sẽ là nút thỏa thuận
  and now comes the score labels so it's 🍀 và bây giờ đến nhãn điểm nên nó
  going to be an 🍀 sẽ là một
  h stack but inside of the h stack we 🍀 ngăn xếp h nhưng bên trong ngăn xếp h chúng ta
  actually have 🍀 thực sự có
  two v stacks 🍀 hai ngăn xếp v
  right each v stack contains two text 🍀 bên phải mỗi ngăn xếp v chứa hai văn bản
  elements 🍀 yếu tố
  so we're gonna have player 🍀 vì vậy chúng ta sẽ có người chơi
  and we're going to have the actual score 🍀 và chúng ta sẽ có số điểm thực tế
  and then for this one we're going to 🍀 và sau đó cho cái này chúng ta sẽ
  have cpu 🍀 có cpu
  and we're going to have the actual score 🍀 và chúng ta sẽ có số điểm thực tế
  of the cpu 🍀 của cpu
  so we basically have all of our elements 🍀 vì vậy về cơ bản chúng tôi có tất cả các yếu tố của chúng tôi
  laid out 🍀 đặt ra
  now let's add some spacing to them 🍀 bây giờ hãy thêm một số khoảng cách cho chúng
  so to do that we can use spacers so 🍀 vì vậy để làm điều đó chúng ta có thể sử dụng miếng đệm
  let's start 🍀 hãy bắt đầu
  by adding a spacer 🍀 bằng cách thêm một miếng đệm
  uh right above 🍀 uh ngay phía trên
  right above the h stack of the two cards 🍀 ngay trên chồng h của hai thẻ
  below the logo image so i'm going to put 🍀 bên dưới hình ảnh logo vì vậy tôi sẽ đặt
  a spacer element right there 🍀 một phần tử đệm ngay tại đó
  and what you learned about spacer 🍀 và những gì bạn đã học được về miếng đệm
  elements right it takes up 🍀 các yếu tố bên phải nó chiếm
  all of the available space however if 🍀 tất cả các không gian có sẵn tuy nhiên nếu
  you have 🍀 bạn có
  multiple spacer elements in the same 🍀 nhiều phần tử đệm trong cùng một
  container 🍀 thùng đựng hàng
  it's going to evenly divide that space 🍀 nó sẽ chia đều không gian đó
  between the two spacers 🍀 giữa hai miếng đệm
  so i'm going to put another spacer 🍀 vì vậy tôi sẽ đặt một miếng đệm khác
  right below the cards 🍀 ngay bên dưới thẻ
  so now you can see that there are two 🍀 vì vậy bây giờ bạn có thể thấy rằng có hai
  equal 🍀 bình đẳng
  amount of spaces i'm going to put 🍀 số lượng không gian tôi sẽ đặt
  another spacer below the 🍀 một miếng đệm khác bên dưới
  deal button or image 🍀 nút thỏa thuận hoặc hình ảnh
  for now and then i'm going to put 🍀 bây giờ và sau đó tôi sẽ đặt
  a spacer below the score labels so you 🍀 một miếng đệm bên dưới nhãn điểm để bạn
  got to make sure 🍀 phải đảm bảo
  that you don't put it in the wrong place 🍀 rằng bạn không đặt nó ở sai chỗ
  here 🍀 đây
  we want to put it below this h stack and 🍀 chúng tôi muốn đặt nó bên dưới ngăn xếp h này và
  if you click this ending bracket you can 🍀 nếu bạn nhấp vào dấu ngoặc kết thúc này, bạn có thể
  see that 🍀 thấy đó
  xcode briefly lights up the beginning 🍀 xcode sáng lên nhanh chóng khi bắt đầu
  bracket so you can verify 🍀 dấu ngoặc để bạn có thể xác minh
  that that's where you want it 🍀 đó là nơi bạn muốn
  all right and the last thing to do is 🍀 được rồi và điều cuối cùng phải làm là
  put a spacer element above that logo 🍀 đặt một phần tử đệm phía trên logo đó
  so that's right here 🍀 Vì vậy, đó là ngay tại đây
  now from a vertical point of view 🍀 bây giờ từ quan điểm thẳng đứng
  it's all spaced out nicely for this 🍀 tất cả đều được sắp xếp hợp lý cho việc này
  h stack with the two cards why don't we 🍀 h stack với hai thẻ tại sao chúng ta không
  put some spacers in there so let's start 🍀 đặt một số miếng đệm vào đó để chúng ta bắt đầu
  by 🍀 qua
  putting a spacer in between the two 🍀 đặt một miếng đệm ở giữa hai
  cards 🍀 thẻ
  and then a spacer before 🍀 và sau đó là một miếng đệm trước
  all the cards and the spacer after the 🍀 tất cả các thẻ và miếng đệm sau
  cards 🍀 thẻ
  we're going to do the same thing with 🍀 chúng ta sẽ làm điều tương tự với
  the text labels down here 🍀 các nhãn văn bản ở đây
  in this h stack we're going to put a 🍀 trong ngăn xếp h này, chúng ta sẽ đặt một
  spacer in between the two v stacks 🍀 miếng đệm ở giữa hai ngăn xếp v
  and then we're going to put a spacer 🍀 và sau đó chúng ta sẽ đặt một miếng đệm
  before it 🍀 trước nó
  and the spacer after it 🍀 và miếng đệm sau nó
  alright and now the last thing to do is 🍀 được rồi và bây giờ điều cuối cùng cần làm là
  just to change the font colors 🍀 chỉ để thay đổi màu phông chữ
  of these text elements and also to 🍀 của các yếu tố văn bản này và cũng để
  change their font weights and font sizes 🍀 thay đổi trọng lượng phông chữ và kích thước phông chữ của họ
  and maybe add a little bit of space in 🍀 và có thể thêm một chút không gian trong
  between 🍀 giữa
  the the score and the label 🍀 điểm số và nhãn
  okay so let's click on this text element 🍀 được rồi, hãy nhấp vào phần tử văn bản này
  and take a look at what we could do 🍀 và hãy xem những gì chúng ta có thể làm
  so if you look in the inspector panel 🍀 vì vậy nếu bạn nhìn vào bảng điều khiển
  for the font 🍀 cho phông chữ
  you can choose one of these pre-defined 🍀 bạn có thể chọn một trong những
  font sizes for this one let's choose 🍀 kích thước phông chữ cho cái này hãy chọn
  headline and you can see it it gets a 🍀 tiêu đề và bạn có thể thấy nó nhận được một
  little bolder there 🍀 táo bạo hơn một chút ở đó
  let's change this to white 🍀 hãy thay đổi cái này thành màu trắng
  and we're going to do the same thing for 🍀 và chúng ta sẽ làm điều tương tự cho
  the cpu label we're going to change it 🍀 nhãn cpu chúng ta sẽ thay đổi nó
  to headline 🍀 để tiêu đề
  we're going to change the color to white 🍀 chúng ta sẽ thay đổi màu thành màu trắng
  then 🍀 sau đó
  for the actual score we're going to 🍀 cho số điểm thực tế chúng tôi sẽ
  change the font to 🍀 thay đổi phông chữ thành
  let's say sub headline and we're going 🍀 hãy nói tiêu đề phụ và chúng ta sẽ đi
  to change the color to white as well 🍀 để thay đổi màu sắc sang màu trắng là tốt
  and for that score label we're going to 🍀 và đối với nhãn điểm đó, chúng tôi sẽ
  change it to 🍀 thay đổi nó thành
  sub headline and we're going to change 🍀 tiêu đề phụ và chúng tôi sẽ thay đổi
  it 🍀 Nó
  to white as well all right 🍀 để trắng cũng được
  and if we wanted to make it 🍀 và nếu chúng ta muốn làm cho nó
  actually not i think in in the original 🍀 thực sự không phải tôi nghĩ trong bản gốc
  uh user interface i had it as large 🍀 uh giao diện người dùng tôi đã có nó lớn
  title so 🍀 tiêu đề như vậy
  i'm going to change it to that so i'm 🍀 tôi sẽ thay đổi nó thành như vậy vì vậy tôi
  going to change the zero from sub 🍀 sẽ thay đổi số 0 từ phụ
  headline to large title 🍀 tiêu đề thành tiêu đề lớn
  now in order to add some padding in 🍀 bây giờ để thêm một số phần đệm vào
  between 🍀 giữa
  the label and the score here 🍀 nhãn và điểm số ở đây
  what you can do is choose the 🍀 những gì bạn có thể làm là chọn
  label let's start with the player here 🍀 nhãn hãy bắt đầu với trình phát tại đây
  and let's click on just this bottom 🍀 và chúng ta hãy nhấp vào dưới cùng này
  padding 🍀 đệm
  so enable that and then you can change 🍀 vì vậy hãy kích hoạt nó và sau đó bạn có thể thay đổi
  that number to let's say 20. 🍀 con số đó giả sử là 20.
  you're going to see that increase and 🍀 bạn sẽ thấy sự gia tăng đó và
  that looks like a little bit too much so 🍀 có vẻ như một chút quá nhiều vì vậy
  maybe we'll stick with 10. 🍀 có lẽ chúng ta sẽ gắn bó với 10.
  we'll do the same thing with cpu here 🍀 chúng ta sẽ làm điều tương tự với cpu ở đây
  we'll click 🍀 chúng tôi sẽ nhấp
  just the bottom padding and then we'll 🍀 chỉ là phần đệm dưới cùng và sau đó chúng tôi sẽ
  add 10. 🍀 thêm 10.
  you can see the corresponding code here 🍀 bạn có thể xem mã tương ứng tại đây
  it's adding padding but it's specifying 🍀 nó đang thêm phần đệm nhưng nó chỉ định
  only for the bottom 🍀 chỉ cho phía dưới
  edge and at 10 points and this is a good 🍀 cạnh và ở 10 điểm và đây là một điều tốt
  practice 🍀 luyện tập
  anytime you modify something visually 🍀 bất cứ khi nào bạn sửa đổi một cái gì đó trực quan
  adding a modifier or changing something 🍀 thêm một công cụ sửa đổi hoặc thay đổi một cái gì đó
  in the inspector panel here 🍀 trong bảng điều khiển ở đây
  it's a good practice to take a look at 🍀 đó là một thực hành tốt để xem xét
  what has changed 🍀 những gì đã thay đổi
  on the code side just so you can 🍀 về phía mã chỉ để bạn có thể
  remember over time the more you see it 🍀 nhớ theo thời gian bạn càng nhìn thấy nó
  the more you remember that hey if i 🍀 bạn càng nhớ rằng này nếu tôi
  wanted to 🍀 muốn
  change it to a headline style font i 🍀 thay đổi nó thành phông chữ kiểu tiêu đề i
  would just have to add a dot 🍀 sẽ chỉ cần thêm một dấu chấm
  font modifier and pass in a dot headline 🍀 công cụ sửa đổi phông chữ và chuyển vào tiêu đề dấu chấm
  option same thing for the foreground 🍀 tùy chọn điều tương tự cho tiền cảnh
  color for this text element dot 🍀 màu cho dấu chấm phần tử văn bản này
  foreground color color dot white you 🍀 màu nền trước màu chấm trắng bạn
  don't need to try to memorize it 🍀 không cần phải cố gắng ghi nhớ nó
  but just pay attention to it and over 🍀 nhưng chỉ cần chú ý đến nó và hơn
  time you're just going to remember 🍀 thời gian bạn sẽ nhớ
  and typing it out will end up being 🍀 và gõ nó ra sẽ kết thúc là
  faster than having to visually 🍀 nhanh hơn là phải trực quan
  click around and configure things 🍀 nhấp xung quanh và định cấu hình mọi thứ
  through the inspector panel or the 🍀 thông qua hội đồng thanh tra hoặc
  preview canvas 🍀 xem trước canvas
  alright last thing to do make sure you 🍀 được rồi, điều cuối cùng cần làm là đảm bảo rằng bạn
  save the project and you're done 🍀 lưu dự án và bạn đã hoàn tất
  so in this lesson you built the ui for 🍀 vì vậy trong bài học này bạn đã xây dựng giao diện người dùng cho
  the war card game 🍀 trò chơi thẻ chiến tranh
  in order to respond to user interaction 🍀 để đáp ứng tương tác của người dùng
  and to also programmatically change the 🍀 và cũng để lập trình thay đổi
  card images 🍀 hình ảnh thẻ
  we're going to have to learn some swift 🍀 chúng ta sẽ phải học một số nhanh chóng
  programming basics 🍀 cơ bản về lập trình
  so in the next four lessons you're going 🍀 vì vậy trong bốn bài học tiếp theo bạn sẽ
  to be introduced to coding basics with 🍀 được giới thiệu về mã hóa cơ bản với
  swift 🍀 nhanh
  now if this is your first time learning 🍀 bây giờ nếu đây là lần đầu tiên bạn học
  to code take it slowly and don't try to 🍀 để viết mã, hãy từ từ và đừng cố gắng
  memorize any of the keywords 🍀 ghi nhớ bất kỳ từ khóa nào
  instead a better way is just to do all 🍀 thay vào đó, một cách tốt hơn là làm tất cả
  the quizzes and challenges at the end of 🍀 các câu đố và thử thách ở cuối
  each lesson 🍀 mỗi bài học
  and to make sure you have access to 🍀 và để đảm bảo rằng bạn có quyền truy cập vào
  those visit codeworthchris.com 🍀 những người truy cập codeworthchris.com
  create your code with chris account or 🍀 tạo mã của bạn bằng tài khoản chris hoặc
  log into your existing one and then 🍀 đăng nhập vào cái hiện có của bạn và sau đó
  enroll in the 14 day beginner challenge 🍀 đăng ký tham gia thử thách người mới bắt đầu trong 14 ngày
  and there 🍀 với chỗ ấy
  you can access all the of the 🍀 bạn có thể truy cập tất cả các
  supplementary material 🍀 tài liệu bổ sung
  after learning those swift programming 🍀 sau khi học những lập trình nhanh chóng
  basics we're going to come back to this 🍀 những điều cơ bản chúng ta sẽ quay lại vấn đề này
  war card game ui 🍀 trò chơi thẻ chiến tranh ui
  and bring it to life with code alright 🍀 và đưa nó vào cuộc sống với mã ổn
  thanks for watching and i'll see you in 🍀 cảm ơn vì đã xem và tôi sẽ gặp bạn trong
  the next lesson 🍀 bài học tiếp theo
  hello and welcome in this lesson and in 🍀 xin chào và chào mừng đến với bài học này và trong
  the next three you're going to be 🍀 ba người tiếp theo bạn sẽ trở thành
  learning the basics of the swift 🍀 học những điều cơ bản của swift
  programming language now these are the 🍀 ngôn ngữ lập trình bây giờ đây là những
  skills that you're going to have to have 🍀 kỹ năng mà bạn sẽ phải có
  in order to 🍀 để
  complete the war card game as well as to 🍀 hoàn thành trò chơi thẻ bài chiến tranh cũng như
  build the feature apps that we're going 🍀 xây dựng các ứng dụng tính năng mà chúng tôi sẽ thực hiện
  to do together 🍀 làm cùng nhau
  now if you've never coded before i know 🍀 bây giờ nếu bạn chưa bao giờ viết mã trước khi tôi biết
  this might seem a little bit 🍀 điều này có vẻ hơi
  intimidating but i really want you to 🍀 đáng sợ nhưng tôi thực sự muốn bạn
  stick with this 🍀 gắn bó với điều này
  and really pay close attention in fact 🍀 và thực sự chú ý trong thực tế
  open up xcode on your own machine 🍀 mở xcode trên máy của chính bạn
  and type out exactly what i'm showing 🍀 và gõ chính xác những gì tôi đang hiển thị
  you this is really going to help 🍀 bạn điều này thực sự sẽ giúp
  reinforce 🍀 củng cố
  the structure of the language and all of 🍀 cấu trúc của ngôn ngữ và tất cả các
  the keywords there's no need to memorize 🍀 các từ khóa không cần phải ghi nhớ
  anything at all i guarantee that by the 🍀 bất cứ điều gì tôi đảm bảo rằng bởi
  end of this module 🍀 kết thúc mô-đun này
  you'll be writing your own swift code 🍀 bạn sẽ viết mã nhanh của riêng mình
  all right let's dive in 🍀 được rồi, hãy đi sâu vào
  i want to start by looking at the view 🍀 tôi muốn bắt đầu bằng cách nhìn vào khung cảnh
  update lifecycle of a simple app 🍀 cập nhật vòng đời của một ứng dụng đơn giản
  and show you where swift code plays a 🍀 và chỉ cho bạn nơi mã nhanh đóng vai trò
  part in each part of the lifecycle 🍀 một phần trong mỗi phần của vòng đời
  let's start with what you've already 🍀 hãy bắt đầu với những gì bạn đã có
  learned in the previous lessons that the 🍀 đã học ở các bài trước
  ui 🍀 giao diện người dùng
  is generated from swift code we'll call 🍀 được tạo từ mã nhanh chóng, chúng tôi sẽ gọi
  this your view code 🍀 đây là mã xem của bạn
  it generates a ui for your user to see 🍀 nó tạo giao diện người dùng cho người dùng của bạn xem
  now typically with an app we have some 🍀 bây giờ thông thường với một ứng dụng, chúng tôi có một số
  sort of data that we want to retrieve 🍀 loại dữ liệu mà chúng tôi muốn truy xuất
  and display 🍀 và hiển thị
  for example a news app we'd want to get 🍀 ví dụ: một ứng dụng tin tức mà chúng tôi muốn nhận
  that data 🍀 dữ liệu đó
  from a data source and then retrieve it 🍀 từ một nguồn dữ liệu và sau đó truy xuất nó
  into our app and display it in our ui 🍀 vào ứng dụng của chúng tôi và hiển thị nó trong giao diện người dùng của chúng tôi
  you can use swift code for this the 🍀 bạn có thể sử dụng mã nhanh cho việc này
  swift code can go and fetch the data and 🍀 mã nhanh có thể đi và tìm nạp dữ liệu và
  then process it into a format that our 🍀 sau đó xử lý nó thành một định dạng mà chúng tôi
  app can understand 🍀 ứng dụng có thể hiểu
  then using swift code we can also link 🍀 sau đó sử dụng mã nhanh, chúng tôi cũng có thể liên kết
  this data 🍀 dữ liệu này
  to our view code so that when the ui is 🍀 vào mã xem của chúng tôi để khi ui là
  rendered 🍀 kết xuất
  from that view code that data can be 🍀 từ mã xem đó mà dữ liệu có thể được
  displayed to the user 🍀 hiển thị cho người dùng
  and furthermore when the user interacts 🍀 và hơn nữa khi người dùng tương tác
  with the ui suggest tapping a button 🍀 với giao diện người dùng đề nghị nhấn vào một nút
  we can use swift code to capture that 🍀 chúng ta có thể sử dụng mã nhanh để nắm bắt điều đó
  event and respond to it 🍀 sự kiện và trả lời nó
  now based on what the user tapped on we 🍀 bây giờ dựa trên những gì người dùng gõ vào chúng tôi
  might use some swift code to change our 🍀 có thể sử dụng một số mã nhanh chóng để thay đổi của chúng tôi
  data 🍀 dữ liệu
  when this data change happens because 🍀 khi thay đổi dữ liệu này xảy ra bởi vì
  we've linked that data 🍀 chúng tôi đã liên kết dữ liệu đó
  to our view code that data change is 🍀 đối với mã xem của chúng tôi, thay đổi dữ liệu là
  automatically detected 🍀 tự động phát hiện
  and the new ui is re-rendered with the 🍀 và giao diện người dùng mới được kết xuất lại với
  updated data so that the user can see 🍀 cập nhật dữ liệu để người dùng có thể nhìn thấy
  what has changed now this cycle is 🍀 những gì đã thay đổi bây giờ chu kỳ này là
  essentially all the app is doing 🍀 về cơ bản tất cả các ứng dụng đang làm
  over and over and we'll explore this app 🍀 lặp đi lặp lại và chúng ta sẽ khám phá ứng dụng này
  view update lifecycle in more detail in 🍀 xem vòng đời cập nhật chi tiết hơn trong
  future lessons but for now 🍀 bài học trong tương lai nhưng bây giờ
  i just want you to understand that swift 🍀 tôi chỉ muốn bạn hiểu rằng nhanh chóng
  code has a part to play 🍀 mã có một phần để chơi
  in each part of this life cycle 🍀 trong mỗi phần của vòng đời này
  all right from the last few lessons 🍀 tất cả đều ổn từ vài bài học trước
  you've already seen the code 🍀 bạn đã thấy mã
  for building ui so you sort of know what 🍀 để xây dựng giao diện người dùng để bạn biết những gì
  that view code looks like 🍀 mã xem đó trông giống như
  let's shift our focus over to the data 🍀 hãy chuyển trọng tâm sang dữ liệu
  part 🍀 phần
  where we can see what swift code is used 🍀 nơi chúng ta có thể xem mã nhanh nào được sử dụng
  for keeping track of the data and 🍀 để theo dõi dữ liệu và
  furthermore 🍀 hơn nữa
  what does data even look like in our app 🍀 dữ liệu thậm chí trông như thế nào trong ứng dụng của chúng tôi
  in order to try out some of the swift 🍀 để thử một số nhanh chóng
  code and to find the answer to our 🍀 mã và để tìm câu trả lời cho
  question 🍀 câu hỏi
  let's use an xcode playground a 🍀 hãy sử dụng sân chơi xcode a
  playground is a lightweight way to test 🍀 sân chơi là một cách nhẹ để kiểm tra
  some of our code without committing to a 🍀 một số mã của chúng tôi mà không cam kết với một
  full-fledged app 🍀 ứng dụng đầy đủ
  project that we can do here think of an 🍀 dự án mà chúng ta có thể làm ở đây nghĩ về một
  xcode playground like your doodle pad 🍀 sân chơi xcode như bảng vẽ nguệch ngoạc của bạn
  but for code 🍀 nhưng đối với mã
  now to start a new one go to file click 🍀 bây giờ để bắt đầu một cái mới, hãy nhấp vào tệp
  on new and then let's click on 🍀 trên mới và sau đó hãy nhấp vào
  playground 🍀 sân chơi
  we're going to choose a blank playground 🍀 chúng ta sẽ chọn một sân chơi trống
  and let's give it a name 🍀 và hãy đặt cho nó một cái tên
  and let's save it somewhere we're going 🍀 và hãy lưu nó ở đâu đó chúng ta sẽ đến
  to close this navigator tab 🍀 để đóng tab điều hướng này
  by clicking this button because we don't 🍀 bằng cách nhấp vào nút này bởi vì chúng tôi không
  need that now down here in the lower 🍀 cần điều đó ngay bây giờ ở đây trong thấp hơn
  left hand corner you'll notice that we 🍀 góc bên trái bạn sẽ nhận thấy rằng chúng tôi
  have a button 🍀 có một nút
  that called show debug area go ahead and 🍀 cái được gọi là hiển thị khu vực gỡ lỗi, hãy tiếp tục và
  click that to reveal this tray 🍀 nhấp vào đó để hiển thị khay này
  this debug or console area is where 🍀 khu vực gỡ lỗi hoặc bảng điều khiển này là nơi
  we're going to 🍀 sắp tới
  output a lot of data so just turn that 🍀 xuất ra rất nhiều dữ liệu vì vậy chỉ cần biến nó
  on make sure you see this little area 🍀 hãy chắc chắn rằng bạn nhìn thấy khu vực nhỏ này
  down here and then 🍀 xuống đây và sau đó
  this button i want you to click it right 🍀 nút này tôi muốn bạn nhấp vào nó ngay
  now it's going to be 🍀 bây giờ nó sẽ được
  executing the playground it's going to 🍀 thực hiện sân chơi nó sẽ
  run all of the lines of code 🍀 chạy tất cả các dòng mã
  in the editor area up here notice 🍀 trong khu vực soạn thảo lên đây thông báo
  however that you also have this little 🍀 tuy nhiên bạn cũng có chút này
  blue 🍀 màu xanh da trời
  run button along the line numbers 🍀 chạy nút dọc theo số dòng
  and this lets you select which line you 🍀 và điều này cho phép bạn chọn dòng nào bạn
  want to execute the code up to 🍀 muốn thực thi mã lên đến
  so if i hover over at line three and i 🍀 vì vậy nếu tôi di chuột qua dòng ba và tôi
  hit the button right here it's gonna run 🍀 nhấn nút ngay tại đây nó sẽ chạy
  lines one two and three as opposed to 🍀 dòng một hai và ba trái ngược với
  this button here 🍀 nút này ở đây
  which runs everything so the first time 🍀 lần đầu tiên chạy mọi thứ
  you run this playground 🍀 bạn điều hành sân chơi này
  it might take a while might show the 🍀 nó có thể mất một lúc có thể hiển thị
  spinner for up to even a minute 🍀 spinner thậm chí lên đến một phút
  i want you to do that and just let it 🍀 tôi muốn bạn làm điều đó và chỉ để nó
  run until it says ready to continue and 🍀 chạy cho đến khi nó báo sẵn sàng tiếp tục và
  that's going to set us up to run some 🍀 điều đó sẽ thiết lập cho chúng tôi để chạy một số
  code 🍀 mã số
  in the next part for now let's just go 🍀 trong phần tiếp theo bây giờ chúng ta hãy đi
  ahead and delete these 🍀 phía trước và xóa những
  lines of code so we can start fresh 🍀 dòng mã để chúng tôi có thể bắt đầu mới
  all right now that you're set up let's 🍀 bây giờ bạn đã thiết lập được rồi, hãy
  go back to our original question what 🍀 quay trở lại câu hỏi ban đầu của chúng tôi những gì
  does data look like and how do we use 🍀 dữ liệu trông như thế nào và chúng ta sử dụng như thế nào
  swift code to keep track of it 🍀 mã nhanh để theo dõi nó
  let's look at a couple of different 🍀 chúng ta hãy nhìn vào một vài khác nhau
  types of data first 🍀 loại dữ liệu đầu tiên
  now let's start with a common data type 🍀 bây giờ hãy bắt đầu với một kiểu dữ liệu phổ biến
  a piece of text 🍀 một đoạn văn bản
  in swift you surround text with 🍀 trong swift bạn bao quanh văn bản với
  quotation marks like this 🍀 dấu ngoặc kép như thế này
  and this is known as a piece of string 🍀 và đây được gọi là một đoạn dây
  data 🍀 dữ liệu
  let's add a note for ourselves up here 🍀 hãy thêm một ghi chú cho chính chúng ta ở đây
  with two forward slashes 🍀 với hai dấu gạch chéo về phía trước
  when you do that it's called a comment 🍀 khi bạn làm điều đó nó được gọi là một bình luận
  and it's a way for us to leave a note or 🍀 và đó là một cách để chúng tôi để lại ghi chú hoặc
  a little piece of documentation for us 🍀 một mẩu tài liệu nhỏ cho chúng tôi
  to remind ourselves or other people who 🍀 để nhắc nhở bản thân hoặc những người khác
  might be looking at our code 🍀 có thể đang xem mã của chúng tôi
  what that code does and when xcode sees 🍀 mã đó làm gì và khi xcode nhìn thấy
  these two forward slashes 🍀 hai dấu gạch chéo về phía trước này
  it's not going to execute this line 🍀 nó sẽ không thực hiện dòng này
  now let's take a look at another data 🍀 bây giờ chúng ta hãy xem một dữ liệu khác
  type integers 🍀 gõ số nguyên
  so something that looks like this 🍀 vì vậy một cái gì đó trông như thế này
  in swift this is known as int short for 🍀 trong Swift, điều này được gọi là int viết tắt của
  integer 🍀 số nguyên
  and what about decimal numbers well yes 🍀 còn số thập phân thì sao
  that's also a data type that 🍀 đó cũng là một kiểu dữ liệu mà
  swift can recognize and handle each of 🍀 swift có thể nhận ra và xử lý từng
  these 🍀 những cái này
  they're known as a double and swift can 🍀 chúng được biết đến như một cái lon gấp đôi và nhanh nhẹn
  also handle 🍀 cũng xử lý
  boolean values so things like true and 🍀 giá trị boolean để những thứ như đúng và
  false 🍀 SAI
  in swift this is known as bool now 🍀 trong Swift bây giờ cái này được gọi là bool
  string int 🍀 chuỗi int
  double and bool these are all called 🍀 double và bool đều được gọi là
  data types and it's how swift classifies 🍀 các kiểu dữ liệu và đó là cách Swift phân loại
  data now these aren't all the data types 🍀 dữ liệu bây giờ đây không phải là tất cả các loại dữ liệu
  that are available 🍀 có sẵn
  but these are the by far the most common 🍀 nhưng đây là những cách phổ biến nhất
  ones that you'll be using 🍀 những cái bạn sẽ sử dụng
  at least in the beginning and it's a 🍀 ít nhất là trong thời gian đầu và đó là một
  great starting point for us 🍀 điểm khởi đầu tuyệt vời cho chúng tôi
  all right now let's take a look at 🍀 được rồi bây giờ chúng ta hãy xem
  creating and keeping track of data 🍀 tạo và theo dõi dữ liệu
  in swift there are many ways to keep 🍀 nhanh chóng có nhiều cách để giữ
  track of data but two of the most basic 🍀 theo dõi dữ liệu nhưng hai trong số những điều cơ bản nhất
  ways are using variables and constants 🍀 cách đang sử dụng các biến và hằng số
  let's go back to our xcode playground 🍀 hãy quay lại sân chơi xcode của chúng ta
  and take a look at an example 🍀 và hãy xem một ví dụ
  let's start with our hello string data 🍀 hãy bắt đầu với dữ liệu chuỗi xin chào của chúng tôi
  here 🍀 đây
  now this piece of data on its own is 🍀 bây giờ phần dữ liệu này của chính nó là
  going to be useless to us unless we have 🍀 sẽ trở nên vô dụng đối với chúng ta trừ khi chúng ta có
  a way to reference and track it 🍀 một cách để tham khảo và theo dõi nó
  and we can do this with a variable so 🍀 và chúng ta có thể làm điều này với một biến để
  let's see how we can declare a variable 🍀 hãy xem cách chúng ta có thể khai báo một biến
  to keep track of this hello piece of 🍀 để theo dõi phần xin chào này
  data 🍀 dữ liệu
  so we use the var keyword and that's for 🍀 vì vậy chúng tôi sử dụng từ khóa var và đó là cho
  declaring a new variable 🍀 khai báo một biến mới
  and then we type the name of the 🍀 và sau đó chúng tôi gõ tên của
  variable this name 🍀 biến tên này
  is what we're going to use to reference 🍀 là những gì chúng ta sẽ sử dụng để tham khảo
  that piece of data and recall it 🍀 phần dữ liệu đó và nhớ lại nó
  so i'm going to call this myvar 🍀 vì vậy tôi sẽ gọi đây là myvar
  and then we follow it with a colon 🍀 và sau đó chúng tôi theo dõi nó bằng dấu hai chấm
  and then after that we put the data type 🍀 và sau đó chúng tôi đặt kiểu dữ liệu
  that this variable is going to track 🍀 rằng biến này sẽ theo dõi
  since the data that we want to reference 🍀 vì dữ liệu mà chúng tôi muốn tham khảo
  is 🍀 là
  a piece of string data i'm going to put 🍀 một đoạn dữ liệu chuỗi tôi sẽ đặt
  string here 🍀 chuỗi ở đây
  and then next we usually in the same 🍀 và sau đó tiếp theo chúng ta thường ở cùng một
  line that we declare the variable 🍀 dòng mà chúng ta khai báo biến
  we assign the data to the variable to 🍀 chúng tôi gán dữ liệu cho biến để
  keep track of 🍀 theo dõi
  and we can do that using the assignment 🍀 và chúng ta có thể làm điều đó bằng cách sử dụng bài tập
  operator which is just an 🍀 toán tử chỉ là một
  equals symbol and then on the right hand 🍀 biểu tượng bằng và sau đó ở bên tay phải
  side of that 🍀 bên đó
  we put the data that we want to assign 🍀 chúng tôi đặt dữ liệu mà chúng tôi muốn chỉ định
  to this variable 🍀 đến biến này
  i'm going to take that 🍀 tôi sẽ lấy cái đó
  and move that right here so essentially 🍀 và di chuyển nó ngay tại đây về cơ bản
  what this line of code is saying 🍀 dòng mã này nói gì
  we're declaring a new variable called 🍀 chúng tôi đang khai báo một biến mới gọi là
  myvar we are saying that it keeps track 🍀 myvar chúng tôi đang nói rằng nó theo dõi
  of 🍀 của
  string type data and then we are 🍀 dữ liệu kiểu chuỗi và sau đó chúng tôi là
  assigning 🍀 chỉ định
  this hello string data 🍀 dữ liệu chuỗi xin chào này
  to that variable it's kind of like 🍀 đối với biến đó, nó giống như
  we're attaching a label to this piece of 🍀 chúng tôi đang gắn nhãn cho mảnh này
  data called myvar 🍀 dữ liệu được gọi là myvar
  now whenever i want to reference that 🍀 bây giờ bất cứ khi nào tôi muốn tham khảo điều đó
  piece of data 🍀 mẩu dữ liệu
  all i need to do is reference it by the 🍀 tất cả những gì tôi cần làm là tham khảo nó bằng
  variable name so let's give this a try 🍀 tên biến, vì vậy hãy thử cái này
  we can use a special command that will 🍀 chúng ta có thể sử dụng một lệnh đặc biệt sẽ
  output 🍀 đầu ra
  the data to the console area below here 🍀 dữ liệu vào khu vực bảng điều khiển bên dưới đây
  in the playground 🍀 trong sân chơi
  and that command is just print followed 🍀 và lệnh đó chỉ là in theo sau
  by two rounded brackets and 🍀 bởi hai dấu ngoặc tròn và
  in between those brackets you put the 🍀 ở giữa các dấu ngoặc đó, bạn đặt
  variable or whatever 🍀 biến hoặc bất cứ điều gì
  data that you want to output so i'm 🍀 dữ liệu mà bạn muốn xuất ra vì vậy tôi
  going to do that and then down here i'm 🍀 sẽ làm điều đó và sau đó xuống đây tôi
  going to 🍀 sẽ
  stop my playground and execute all the 🍀 dừng sân chơi của tôi và thực hiện tất cả
  code in it again 🍀 mã trong đó một lần nữa
  and then as you can see down there it 🍀 và sau đó như bạn có thể thấy ở dưới đó
  says hello that 🍀 nói xin chào đó
  it's the contents of my var which is 🍀 đó là nội dung của var của tôi đó là
  exactly what we would expect 🍀 chính xác những gì chúng ta mong đợi
  notice that when i reference my variable 🍀 lưu ý rằng khi tôi tham chiếu biến của mình
  i don't need to use the var keyword 🍀 tôi không cần sử dụng từ khóa var
  anymore that was only to declare the 🍀 nữa đó chỉ là để tuyên bố
  variable 🍀 Biến đổi
  and once i've declared my variable i can 🍀 và một khi tôi đã khai báo biến của mình, tôi có thể
  just reference it by its name 🍀 chỉ cần tham khảo nó bằng tên của nó
  and i can also reassign new data to it i 🍀 và tôi cũng có thể gán lại dữ liệu mới cho nó
  can use it over and over again i don't 🍀 có thể sử dụng nó nhiều lần tôi không
  have to redeclare it 🍀 phải khai báo lại
  so for example after i declare it and 🍀 vì vậy, ví dụ sau khi tôi khai báo nó và
  assigned hello to it 🍀 giao lời chào cho nó
  i can turn around and assign something 🍀 tôi có thể quay lại và chỉ định một cái gì đó
  else to it let's assign 🍀 khác với nó, hãy gán
  this piece of string data called world 🍀 đoạn dữ liệu chuỗi này được gọi là thế giới
  to my var and essentially what we've 🍀 với var của tôi và về cơ bản những gì chúng tôi có
  done here 🍀 xong ở đây
  is we've told that variable instead to 🍀 là chúng tôi đã nói với biến đó thay vì
  track this piece of data 🍀 theo dõi phần dữ liệu này
  so what would you expect if i execute 🍀 vậy bạn sẽ mong đợi điều gì nếu tôi thực thi
  the code in the playground now 🍀 mã trong sân chơi bây giờ
  we would only output world because myvar 🍀 chúng tôi sẽ chỉ xuất thế giới vì myvar
  no longer 🍀 không còn
  is tracking that hello piece of data 🍀 đang theo dõi đoạn dữ liệu xin chào đó
  now one thing i want to emphasize is the 🍀 bây giờ một điều tôi muốn nhấn mạnh là
  data type of the variable 🍀 kiểu dữ liệu của biến
  if i specify that my var is a string 🍀 nếu tôi xác định rằng var của tôi là một chuỗi
  type 🍀 kiểu
  i can only track pieces of string data 🍀 tôi chỉ có thể theo dõi các đoạn dữ liệu chuỗi
  so for example if i had an integer like 🍀 vì vậy, ví dụ nếu tôi có một số nguyên như
  100 🍀 100
  and i tried to assign that to my var 🍀 và tôi đã cố gắng gán nó cho var của mình
  well 🍀 Tốt
  i would get an error that's not allowed 🍀 tôi sẽ gặp lỗi không được phép
  what i need to do instead is declare a 🍀 thay vào đó, những gì tôi cần làm là khai báo một
  new variable of 🍀 biến mới của
  the in type to keep track of this piece 🍀 in type để theo dõi tác phẩm này
  of in data so 🍀 của trong dữ liệu như vậy
  let's go ahead and use the var keyword 🍀 hãy tiếp tục và sử dụng từ khóa var
  and name it 🍀 và đặt tên cho nó
  and then colon and then the data type 🍀 và sau đó là dấu hai chấm và sau đó là kiểu dữ liệu
  that i want this to track 🍀 mà tôi muốn điều này để theo dõi
  and now that is completely okay 🍀 và bây giờ điều đó hoàn toàn ổn
  let's try printing that out xcode is 🍀 hãy thử in xcode đó ra
  not going to help you autocorrect any 🍀 sẽ không giúp bạn tự động sửa bất kỳ
  spelling errors 🍀 lỗi chính tả
  all right so we have world and 100. 🍀 được rồi, vậy chúng ta có thế giới và 100.
  now as we're coding more together you'll 🍀 bây giờ khi chúng ta đang viết mã cùng nhau nhiều hơn, bạn sẽ
  start to notice 🍀 bắt đầu chú ý
  different sorts of naming conventions 🍀 các loại quy ước đặt tên khác nhau
  like what you see here where 🍀 như những gì bạn thấy ở đây
  my variable names start with a lowercase 🍀 tên biến của tôi bắt đầu bằng chữ thường
  letter and then every subsequent word 🍀 chữ cái và sau đó mỗi từ tiếp theo
  in my variable name starts with a 🍀 trong tên biến của tôi bắt đầu bằng một
  capital letter 🍀 chữ viết hoa
  so that's sort of just a standard naming 🍀 vì vậy đó chỉ là một cách đặt tên tiêu chuẩn
  convention you really could do anything 🍀 quy ước bạn thực sự có thể làm bất cứ điều gì
  you want 🍀 bạn muốn
  but when you start coding more 🍀 nhưng khi bạn bắt đầu viết mã nhiều hơn
  and working in teams it's important to 🍀 và làm việc theo nhóm, điều quan trọng là
  have 🍀 có
  a standard that everybody uses and this 🍀 một tiêu chuẩn mà mọi người sử dụng và điều này
  is a common one 🍀 là một cái phổ biến
  all right now one more thing i want to 🍀 bây giờ tôi muốn một điều nữa
  talk about before we move on to the next 🍀 nói về trước khi chúng ta chuyển sang phần tiếp theo
  topic 🍀 đề tài
  is the fact that there are shorthands in 🍀 là thực tế là có những cách viết tắt trong
  xcode you don't really have to type in 🍀 xcode bạn không thực sự phải nhập
  all the information for example 🍀 tất cả các thông tin ví dụ
  here we're declaring that this 🍀 ở đây chúng tôi đang tuyên bố rằng điều này
  variable myint is an int type and we're 🍀 biến myint là một kiểu int và chúng tôi
  assigning integer data to it 🍀 gán dữ liệu số nguyên cho nó
  but the thing is we could actually omit 🍀 nhưng vấn đề là chúng ta thực sự có thể bỏ qua
  that data type and simply assign 100 to 🍀 kiểu dữ liệu đó và chỉ cần gán 100 cho
  it 🍀 Nó
  when we do that xcode can see that 🍀 khi chúng tôi làm điều đó xcode có thể thấy điều đó
  this is a piece of in data so it's going 🍀 đây là một phần dữ liệu nên nó sẽ
  to assume that 🍀 giả định rằng
  my int is going to only track in types 🍀 int của tôi sẽ chỉ theo dõi các loại
  now that same rule still applies i mean 🍀 bây giờ quy tắc tương tự vẫn được áp dụng, ý tôi là
  after xcode infers that this variable 🍀 sau khi xcode suy ra rằng biến này
  is in type because you've assigned 100 🍀 thuộc loại vì bạn đã chỉ định 100
  to it i cannot go 🍀 đến đó tôi không thể đi
  and assign you know a string to it 🍀 và chỉ định bạn biết một chuỗi cho nó
  that's not going to be allowed because 🍀 điều đó sẽ không được phép bởi vì
  xcode has already detected that 🍀 xcode đã phát hiện ra rằng
  you know this should be an in type so 🍀 bạn biết đây phải là một loại trong vì vậy
  same thing goes 🍀 điều tương tự cũng diễn ra
  for up here i 🍀 cho lên đây tôi
  don't need to specify the data type if 🍀 không cần chỉ định kiểu dữ liệu nếu
  i'm going to 🍀 tôi sẽ
  assign a piece of string data to it 🍀 gán một đoạn dữ liệu chuỗi cho nó
  right away because that tells xcode 🍀 ngay lập tức vì điều đó nói với xcode
  that this is going to be a string type 🍀 rằng đây sẽ là một kiểu chuỗi
  variable so that's 🍀 biến vì vậy đó là
  just a little shorthand to save you some 🍀 chỉ cần một chút tốc ký để giúp bạn tiết kiệm một số
  typing 🍀 đánh máy
  all right so you learned how to declare 🍀 được rồi vì vậy bạn đã học cách khai báo
  a new variable assign data to it 🍀 một biến mới gán dữ liệu cho nó
  and recall that data by using the 🍀 và nhớ lại dữ liệu đó bằng cách sử dụng
  variable name you also learned how to 🍀 tên biến bạn cũng đã học cách
  assign 🍀 giao phó
  new data to that variable let's talk 🍀 dữ liệu mới cho biến đó hãy nói chuyện
  about the other way to keep track of 🍀 về cách khác để theo dõi
  data 🍀 dữ liệu
  constants so constants are just like 🍀 hằng số nên hằng số cũng giống như
  variables except that you can't reassign 🍀 các biến ngoại trừ việc bạn không thể gán lại
  data to it once you've 🍀 dữ liệu cho nó một khi bạn đã
  assigned the first piece of data to it 🍀 đã gán phần dữ liệu đầu tiên cho nó
  so 🍀 Vì thế
  let's take a look at how to declare a 🍀 chúng ta hãy xem làm thế nào để khai báo một
  constant to keep track of this string 🍀 hằng số để theo dõi chuỗi này
  data instead of the var keyword you use 🍀 dữ liệu thay vì từ khóa var bạn sử dụng
  the let keyword 🍀 từ khóa cho phép
  and then the rest is just the same as a 🍀 và sau đó phần còn lại giống như một
  variable so 🍀 biến như vậy
  we start with a constant name 🍀 chúng tôi bắt đầu với một tên không đổi
  my const colon and then 🍀 const dấu hai chấm của tôi và sau đó
  you guess that the data type followed by 🍀 bạn đoán rằng kiểu dữ liệu theo sau
  the assignment 🍀 nhiệm vụ
  operator and then we're going to move 🍀 toán tử và sau đó chúng ta sẽ di chuyển
  that piece of data to the right-hand 🍀 phần dữ liệu đó ở bên tay phải
  side of that assignment operator like 🍀 bên của toán tử gán đó như
  that 🍀 cái đó
  now let's try referencing this constant 🍀 bây giờ hãy thử tham khảo hằng số này
  let's try printing out the data in my 🍀 hãy thử in ra dữ liệu trong tôi
  const 🍀 hằng số
  as you can see it works as expected now 🍀 như bạn có thể thấy nó hoạt động như mong đợi
  let's try to do the thing that's not 🍀 chúng ta hãy cố gắng làm điều đó không phải là
  allowed 🍀 cho phép
  let's try to assign 🍀 chúng ta hãy thử gán
  something else to it 🍀 một cái gì đó khác với nó
  and as expected we cannot reassign data 🍀 và như mong đợi, chúng tôi không thể chỉ định lại dữ liệu
  to it because it is a constant 🍀 với nó bởi vì nó là một hằng số
  now constants are useful it's an 🍀 bây giờ các hằng số rất hữu ích, đó là một
  additional tool that we can use if we 🍀 công cụ bổ sung mà chúng tôi có thể sử dụng nếu chúng tôi
  don't 🍀 đừng
  expect that piece of data to change and 🍀 mong đợi phần dữ liệu đó thay đổi và
  so we don't need to make any changes to 🍀 vì vậy chúng tôi không cần thực hiện bất kỳ thay đổi nào đối với
  it ever 🍀 nó bao giờ
  so when would you use a constant over a 🍀 vậy khi nào bạn sẽ sử dụng một hằng số trên một
  variable 🍀 Biến đổi
  well it really depends what you're 🍀 tốt nó thực sự phụ thuộc vào những gì bạn đang
  trying to do you'll probably find 🍀 cố gắng làm bạn có thể sẽ tìm thấy
  yourself using variables most of the 🍀 bản thân bạn sử dụng các biến hầu hết
  time 🍀 thời gian
  because of their versatility and because 🍀 vì tính linh hoạt của chúng và vì
  data changes 🍀 thay đổi dữ liệu
  however the best practice is to prefer 🍀 tuy nhiên cách tốt nhất là ưu tiên
  constants over variables 🍀 hằng trên biến
  where it makes sense in fact xcode is 🍀 nơi nó có ý nghĩa trong thực tế xcode là
  smart enough to know 🍀 đủ thông minh để biết
  if you use a variable and you never end 🍀 nếu bạn sử dụng một biến và bạn không bao giờ kết thúc
  up changing that variable 🍀 thay đổi biến đó
  it will suggest that you change that var 🍀 nó sẽ đề nghị bạn thay đổi var đó
  keyword to a let keyword and use a 🍀 từ khóa thành từ khóa let và sử dụng
  constant instead 🍀 hằng số thay thế
  all right let's do a quick recap before 🍀 được rồi, hãy tóm tắt nhanh trước khi
  we wrap up the lesson 🍀 chúng tôi kết thúc bài học
  you learned about the view update 🍀 bạn đã tìm hiểu về cập nhật chế độ xem
  lifecycle and how swift code 🍀 vòng đời và mã nhanh như thế nào
  plays a part in it you learned about 🍀 đóng một phần trong đó bạn đã học về
  data types such as string 🍀 các kiểu dữ liệu như chuỗi
  int bool and double you learned about 🍀 int bool và double bạn đã học về
  how to use variables and constants 🍀 cách sử dụng biến và hằng
  to reference data now i highly recommend 🍀 để tham khảo dữ liệu bây giờ tôi rất khuyến khích
  that you go through the quiz and 🍀 rằng bạn vượt qua bài kiểm tra và
  challenges 🍀 thử thách
  for this lesson to practice what you've 🍀 cho bài học này để thực hành những gì bạn đã
  learned today there's actually some new 🍀 học được ngày hôm nay thực sự có một số mới
  training in those challenges 🍀 rèn luyện trong những thử thách đó
  such as how to perform math operations 🍀 chẳng hạn như cách thực hiện các phép toán
  with variables 🍀 với các biến
  also don't forget that you can print out 🍀 cũng đừng quên rằng bạn có thể in ra
  the swift cheat sheet from the resources 🍀 bảng gian lận nhanh chóng từ các tài nguyên
  link 🍀 liên kết
  in the top navbar and keep it handy 🍀 trong thanh điều hướng trên cùng và luôn tiện dụng
  there's no need to memorize 🍀 không cần phải ghi nhớ
  anything you're making great progress so 🍀 bất cứ điều gì bạn đang đạt được tiến bộ lớn vì vậy
  far and in the next lesson i'll teach 🍀 xa và trong bài học tiếp theo tôi sẽ dạy
  you how to organize your code statements 🍀 bạn làm thế nào để tổ chức báo cáo mã của bạn
  into functions 🍀 thành các chức năng
  alright i'll see you there 🍀 được rồi tôi sẽ gặp bạn ở đó
  hello and welcome in the previous lesson 🍀 xin chào và chào mừng trong bài học trước
  you learned about swift 🍀 bạn đã học về swift
  variables and constants you learn how to 🍀 biến và hằng bạn học cách
  create some data 🍀 tạo một số dữ liệu
  and declare a variable or constant to 🍀 và khai báo một biến hoặc hằng để
  keep track of it 🍀 theo dõi nó
  and if you did the challenge you also 🍀 và nếu bạn đã thực hiện thử thách, bạn cũng vậy
  learned about math operations using 🍀 đã học về các phép toán bằng cách sử dụng
  variables 🍀 biến
  well in this lesson you're going to 🍀 tốt trong bài học này bạn sẽ
  learn how to organize and group together 🍀 học cách tổ chức và nhóm lại với nhau
  your code statements 🍀 báo cáo mã của bạn
  so that number one all of the code 🍀 vì vậy số một trong tất cả các mã
  statements that you've grouped together 🍀 báo cáo mà bạn đã nhóm lại với nhau
  can work together for a common task and 🍀 có thể làm việc cùng nhau vì một nhiệm vụ chung và
  number two 🍀 số hai
  once your code is organized into groups 🍀 khi mã của bạn được tổ chức thành các nhóm
  you can choose which group of code 🍀 bạn có thể chọn nhóm mã nào
  statements to run depending on what task 🍀 câu lệnh để chạy tùy thuộc vào nhiệm vụ nào
  you need to be done 🍀 bạn cần phải hoàn thành
  these groups of code statements are 🍀 các nhóm câu lệnh mã này là
  known as functions in swift 🍀 được gọi là chức năng trong Swift
  all right now let's take a look at the 🍀 được rồi bây giờ chúng ta hãy xem
  view update lifecycle diagram 🍀 xem sơ đồ vòng đời cập nhật
  from the previous lesson and see where 🍀 từ bài học trước và xem ở đâu
  functions might play a part 🍀 chức năng có thể đóng một phần
  in this life cycle remember that when 🍀 trong vòng đời này hãy nhớ rằng khi
  the user interacts with the ui 🍀 người dùng tương tác với ui
  swift code captures that event and 🍀 mã nhanh chóng nắm bắt sự kiện đó và
  reacts to it 🍀 phản ứng với nó
  well here we might have a couple of 🍀 ở đây chúng ta có thể có một vài
  different functions depending on how the 🍀 các chức năng khác nhau tùy thuộc vào cách
  user interacts with our ui 🍀 người dùng tương tác với giao diện người dùng của chúng tôi
  for example the user tapping a button 🍀 ví dụ: người dùng nhấn vào một nút
  might trigger 🍀 có thể kích hoạt
  the app to switch screens in that case 🍀 ứng dụng để chuyển đổi màn hình trong trường hợp đó
  maybe we'll run function a 🍀 có lẽ chúng ta sẽ chạy chức năng a
  to perform that task or on the other 🍀 để thực hiện nhiệm vụ đó hoặc mặt khác
  hand what if the user taps on an item to 🍀 điều gì sẽ xảy ra nếu người dùng chạm vào một mục để
  see more detail 🍀 xem thêm chi tiết
  then in that case we'll run function b 🍀 thì trong trường hợp đó chúng ta sẽ chạy hàm b
  to bring up the details screen 🍀 để hiển thị màn hình chi tiết
  now let's go over the code that performs 🍀 bây giờ hãy xem đoạn mã thực hiện
  the data retrieval 🍀 truy xuất dữ liệu
  for example we might have a function c 🍀 ví dụ chúng ta có thể có một chức năng c
  that does the actual retrieval of the 🍀 điều đó thực hiện việc truy xuất thực tế của
  data maybe the networking code 🍀 dữ liệu có thể là mã mạng
  and it grabs the data and then gives it 🍀 và nó lấy dữ liệu rồi đưa ra
  to function 🍀 hoạt động
  d as input and the responsibility of 🍀 d là đầu vào và trách nhiệm của
  this function might be to process that 🍀 chức năng này có thể là để xử lý
  data and turn it into a format 🍀 dữ liệu và biến nó thành một định dạng
  that our app can understand so function 🍀 ứng dụng của chúng tôi có thể hiểu chức năng này
  d 🍀 đ
  takes that data as input and it outputs 🍀 lấy dữ liệu đó làm đầu vào và nó xuất ra
  the formatted data for our app 🍀 dữ liệu được định dạng cho ứng dụng của chúng tôi
  now i could go on but as you can see 🍀 bây giờ tôi có thể tiếp tục nhưng như bạn có thể thấy
  functions are 🍀 chức năng là
  a basic component of swift programming 🍀 một thành phần cơ bản của lập trình swift
  it's everywhere 🍀 nó ở mọi nơi
  so now let's go and see how we can 🍀 vì vậy bây giờ chúng ta hãy đi và xem làm thế nào chúng ta có thể
  create our own functions 🍀 tạo chức năng riêng của chúng tôi
  alright so here i have a brand new xcode 🍀 được rồi vì vậy ở đây tôi có một xcode hoàn toàn mới
  playground and we're going to take a 🍀 sân chơi và chúng ta sẽ có một
  look at the function syntax 🍀 nhìn vào cú pháp chức năng
  and just in case i haven't explained it 🍀 và chỉ trong trường hợp tôi đã không giải thích nó
  yet the word syntax is simply a word 🍀 nhưng cú pháp từ chỉ đơn giản là một từ
  describing the structure or the grammar 🍀 mô tả cấu trúc hoặc ngữ pháp
  of the language 🍀 của ngôn ngữ
  so function syntax to declare a new 🍀 cú pháp hàm so để khai báo một cái mới
  function you start with the 🍀 chức năng bạn bắt đầu với
  func keyword f u and c so it's a funky 🍀 từ khóa func f u và c vì vậy nó thật thú vị
  function 🍀 chức năng
  and then you follow it by the name of 🍀 và sau đó bạn theo dõi nó bằng tên của
  the function 🍀 chức năng
  and then a set of parentheses or rounded 🍀 và sau đó là một tập hợp các dấu ngoặc đơn hoặc làm tròn
  brackets 🍀 dấu ngoặc
  and then a set of curly brackets inside 🍀 và sau đó là một tập hợp các dấu ngoặc nhọn bên trong
  the set of curly brackets you put your 🍀 tập hợp các dấu ngoặc nhọn bạn đặt
  code statements anything you want to 🍀 báo cáo mã bất cứ điều gì bạn muốn
  execute or run whenever we call this 🍀 thực thi hoặc chạy bất cứ khi nào chúng ta gọi đây là
  function 🍀 chức năng
  so let me just put some statements here 🍀 vì vậy hãy để tôi đặt một số tuyên bố ở đây
  let's say 🍀 hãy cùng nói nào
  declare two constants like this and then 🍀 khai báo hai hằng số như thế này và sau đó
  let's 🍀 hãy
  print you know a plus b 🍀 in bạn biết a plus b
  so if i run this right now 🍀 vì vậy nếu tôi chạy cái này ngay bây giờ
  and execute all these lines of code 🍀 và thực thi tất cả các dòng mã này
  nothing is going to happen you don't see 🍀 không có gì sẽ xảy ra bạn không thấy
  any output and that's because we haven't 🍀 bất kỳ đầu ra nào và đó là vì chúng tôi chưa
  actually called this function 🍀 thực sự được gọi là chức năng này
  in order to call and to execute this 🍀 để gọi và thực hiện điều này
  function 🍀 chức năng
  we just have to reference it by the 🍀 chúng ta chỉ cần tham chiếu nó bằng
  function name so that's 🍀 tên chức năng vì vậy đó là
  my f u n c followed by 🍀 f u n c của tôi theo sau là
  the pair parentheses and that is how you 🍀 cặp dấu ngoặc đơn và đó là cách bạn
  execute 🍀 hành hình
  all of the code in between here 🍀 tất cả các mã ở giữa đây
  so let's try this out i'm going to stop 🍀 vì vậy hãy thử điều này tôi sẽ dừng lại
  executing and then 🍀 thực hiện và sau đó
  run my playground again and we get 30 as 🍀 chạy sân chơi của tôi một lần nữa và chúng tôi nhận được 30 như
  we expect 🍀 chúng ta mong đợi
  if i wanted to run those set of 🍀 nếu tôi muốn chạy bộ đó
  instructions again then i can just 🍀 hướng dẫn lại sau đó tôi có thể chỉ
  simply call it again and if i print it 🍀 chỉ cần gọi lại và nếu tôi in nó
  out 🍀 ngoài
  now it executes that code twice now i 🍀 bây giờ nó thực thi mã đó hai lần bây giờ tôi
  want to go back to that view 🍀 muốn quay lại chế độ xem đó
  update life cycle diagram for just a 🍀 cập nhật sơ đồ vòng đời cho chỉ một
  second because if you 🍀 thứ hai bởi vì nếu bạn
  notice back in that data retrieval area 🍀 thông báo lại trong khu vực truy xuất dữ liệu đó
  i said that we might have two functions 🍀 tôi đã nói rằng chúng tôi có thể có hai chức năng
  c and functions d 🍀 c và chức năng d
  where c would fetch the data and pass it 🍀 nơi c sẽ lấy dữ liệu và chuyển nó
  into d as input parameters so that 🍀 thành d làm tham số đầu vào sao cho
  function d 🍀 chức năng d
  can work with that data and format it 🍀 có thể làm việc với dữ liệu đó và định dạng nó
  how we need 🍀 chúng ta cần như thế nào
  so a function being able to accept data 🍀 vì vậy một chức năng có thể chấp nhận dữ liệu
  into 🍀 vào trong
  it to work with it is a very powerful 🍀 nó để làm việc với nó là một rất mạnh mẽ
  feature let's take a look at how we 🍀 tính năng chúng ta hãy xem làm thế nào chúng ta
  would declare a function 🍀 sẽ khai báo một chức năng
  that would accept some sort of input 🍀 điều đó sẽ chấp nhận một số loại đầu vào
  data all right so i'm going to 🍀 dữ liệu được rồi vì vậy tôi sẽ
  erase these two lines and i'm going to 🍀 xóa hai dòng này và tôi sẽ
  modify my function here 🍀 sửa đổi chức năng của tôi ở đây
  instead of declaring two constants a and 🍀 thay vì khai báo hai hằng số a và
  b 🍀 b
  i am going to specify that 🍀 tôi sẽ xác định điều đó
  a and b have to be passed into the 🍀 a và b phải được chuyển vào
  function so the way we do that 🍀 hoạt động theo cách chúng ta làm điều đó
  is through the use of function 🍀 là thông qua việc sử dụng chức năng
  parameters 🍀 thông số
  in between the two rounded brackets that 🍀 ở giữa hai dấu ngoặc tròn
  is where we would specify 🍀 là nơi chúng tôi sẽ chỉ định
  all of the parameters we want to be 🍀 tất cả các tham số chúng tôi muốn trở thành
  passed into this function 🍀 chuyển vào chức năng này
  you can pass in multiple parameters but 🍀 bạn có thể truyền vào nhiều tham số nhưng
  actually let's just start with one let's 🍀 thực sự chúng ta hãy bắt đầu với một
  just start with 🍀 chỉ cần bắt đầu với
  a so first i would put the name of the 🍀 vì vậy trước tiên tôi sẽ đặt tên của
  parameter 🍀 tham số
  so i would want that to be a and then i 🍀 vì vậy tôi muốn đó là một và sau đó tôi
  would put colon 🍀 sẽ đặt dấu hai chấm
  specified by the data type that this 🍀 được chỉ định bởi kiểu dữ liệu mà điều này
  parameter is 🍀 tham số là
  since i expect it to be int i'm going to 🍀 vì tôi mong đợi nó là int tôi sẽ
  declare this parameter 🍀 khai báo tham số này
  as a followed by the data type int 🍀 theo sau là kiểu dữ liệu int
  and then i can erase this constant from 🍀 và sau đó tôi có thể xóa hằng số này khỏi
  here as you can see this is almost like 🍀 ở đây như bạn có thể thấy điều này gần giống như
  a variable declaration 🍀 khai báo biến
  or a constant declaration except without 🍀 hoặc khai báo hằng ngoại trừ không có
  the var 🍀 các var
  and without the let here we're 🍀 và không có let ở đây chúng ta
  specifying that 🍀 xác định rằng
  whenever this function is called one 🍀 bất cứ khi nào chức năng này được gọi là một
  int parameter needs to be passed in 🍀 tham số int cần được truyền vào
  along with it 🍀 cùng với nó
  and it's going to be referenced by this 🍀 và nó sẽ được tham chiếu bởi cái này
  parameter name 🍀 tên tham số
  a inside this function so now 🍀 một bên trong chức năng này vì vậy bây giờ
  you can see that nowhere did i declare a 🍀 bạn có thể thấy rằng tôi đã khai báo ở đâu đó
  variable a 🍀 biến một
  or constant a but i can still 🍀 hoặc hằng a nhưng tôi vẫn có thể
  put a as part of my equation a plus b 🍀 đặt a như một phần của phương trình a cộng b
  because a is being passed in as a 🍀 bởi vì a đang được chuyển vào dưới dạng a
  parameter 🍀 tham số
  so let's take a look at what calling 🍀 vì vậy chúng ta hãy xem những gì gọi
  this function would look like now 🍀 chức năng này sẽ giống như bây giờ
  i'm going to rely on autocomplete so i'm 🍀 tôi sẽ dựa vào tính năng tự động hoàn thành nên tôi
  going to type in 🍀 sắp gõ
  m y f u n and you can see as soon as i 🍀 tôi y f u n và bạn có thể thấy ngay khi tôi
  do that 🍀 làm việc đó đi
  it detects my function here so i'm going 🍀 nó phát hiện chức năng của tôi ở đây vì vậy tôi sẽ
  to go ahead and click that and you can 🍀 để tiếp tục và nhấp vào đó và bạn có thể
  see that now 🍀 thấy điều đó bây giờ
  in the process of calling this function 🍀 trong quá trình gọi hàm này
  i also have to pass in 🍀 tôi cũng phải vượt qua trong
  an integer piece of data so i'm going to 🍀 một phần dữ liệu số nguyên nên tôi sẽ
  go ahead and pass 🍀 đi trước và vượt qua
  in let's pass in something different 🍀 trong chúng ta hãy vượt qua trong một cái gì đó khác nhau
  let's pass in five 🍀 chúng ta hãy vượt qua trong năm
  you can see here there indicates this is 🍀 bạn có thể thấy ở đây chỉ ra đây là
  the parameter 🍀 thông số
  that i'm passing in let's go ahead stop 🍀 rằng tôi đang đi vào, hãy tiếp tục dừng lại
  and 🍀 Và
  execute run my lines of code again and 🍀 thực hiện chạy lại các dòng mã của tôi và
  this time the output is 25 because 🍀 lần này đầu ra là 25 vì
  5 was being passed into the function 🍀 5 đã được chuyển vào chức năng
  plus 20 is 25. 🍀 cộng 20 là 25.
  now going back to the view update 🍀 bây giờ quay lại cập nhật chế độ xem
  lifecycle diagram again 🍀 sơ đồ vòng đời một lần nữa
  function d accepts input as a parameter 🍀 chức năng d chấp nhận đầu vào như một tham số
  but it also 🍀 nhưng nó cũng
  returns output so that is another very 🍀 trả về đầu ra vì vậy đó là một thứ rất khác
  powerful feature of functions being able 🍀 tính năng mạnh mẽ của các chức năng có thể
  to take in some input 🍀 tiếp nhận một số đầu vào
  work with that data and provide some 🍀 làm việc với dữ liệu đó và cung cấp một số
  output back to 🍀 đầu ra trở lại
  the caller of the function so let's take 🍀 người gọi hàm vì vậy hãy lấy
  a look at our playground and see how we 🍀 nhìn vào sân chơi của chúng tôi và xem cách chúng tôi
  can specify that a function 🍀 có thể chỉ định rằng một chức năng
  should return some data so to modify 🍀 nên trả lại một số dữ liệu để sửa đổi
  this function to indicate that it 🍀 chức năng này để chỉ ra rằng nó
  will return some data we go up here 🍀 sẽ trả lại một số dữ liệu chúng tôi đi lên đây
  right after the rounded bracket 🍀 ngay sau dấu ngoặc tròn
  for the parameter and just before the 🍀 cho tham số và ngay trước
  start 🍀 bắt đầu
  of the curly brackets in here we write a 🍀 trong số các dấu ngoặc nhọn ở đây, chúng tôi viết một
  dash 🍀 dấu gạch ngang
  followed by a greater than symbol which 🍀 theo sau là một ký hiệu lớn hơn
  makes sort of like an 🍀 làm cho giống như một
  arrow like output and then we specify 🍀 mũi tên như đầu ra và sau đó chúng tôi chỉ định
  the data type 🍀 kiểu dữ liệu
  of the output so what i'm going to do is 🍀 của đầu ra vì vậy những gì tôi sẽ làm là
  i'm going to output the sum 🍀 tôi sẽ xuất tổng
  of a and b instead of printing it out to 🍀 của a và b thay vì in nó ra
  the console 🍀 Bàn điều khiển
  so i'm going to erase this line 🍀 vì vậy tôi sẽ xóa dòng này
  and then i'm going to output an int so 🍀 và sau đó tôi sẽ xuất một int
  that's where i specify that 🍀 đó là nơi tôi chỉ định rằng
  right after that dash greater than 🍀 ngay sau dấu gạch ngang đó lớn hơn
  symbol 🍀 biểu tượng
  now you can see that xcode throws some 🍀 bây giờ bạn có thể thấy rằng xcode ném một số
  errors now because 🍀 lỗi bây giờ vì
  in addition to specifying that your 🍀 ngoài việc xác định rằng bạn
  function returns an in 🍀 hàm trả về một trong
  you actually have to return an int 🍀 bạn thực sự phải trả lại một int
  inside of the code statements 🍀 bên trong các báo cáo mã
  so as the last line of our code we can 🍀 để dòng cuối cùng của mã của chúng tôi, chúng tôi có thể
  use the return 🍀 sử dụng trở lại
  keyword meaning that this is the data 🍀 từ khóa có nghĩa là đây là dữ liệu
  we're going to return from the function 🍀 chúng ta sẽ trở về từ chức năng
  and then we specify the in data that we 🍀 và sau đó chúng tôi chỉ định trong dữ liệu mà chúng tôi
  want to return 🍀 muốn trở lại
  so i'm going to return a plus b 🍀 vì vậy tôi sẽ trả lại một điểm cộng b
  and all is well now keep in mind that 🍀 và bây giờ tất cả đều ổn, hãy nhớ rằng
  whatever the data type you specify up 🍀 bất kể loại dữ liệu nào bạn chỉ định
  here 🍀 đây
  in the function declaration that is the 🍀 trong phần khai báo hàm đó là
  data type that you have to return if 🍀 kiểu dữ liệu mà bạn phải trả về nếu
  there's a mismatch 🍀 có một sự không phù hợp
  for example if i specified that this 🍀 ví dụ nếu tôi chỉ định rằng điều này
  function returns an int 🍀 hàm trả về một int
  but i go ahead and return a string 🍀 nhưng tôi tiếp tục và trả về một chuỗi
  like a piece of text you're going to see 🍀 giống như một đoạn văn bản bạn sẽ thấy
  xcode 🍀 xcode
  complain about that as well because that 🍀 cũng phàn nàn về điều đó bởi vì điều đó
  is that is incorrect 🍀 điều đó có sai không
  so we're going to return a plus b and 🍀 vì vậy chúng ta sẽ trả về a plus b và
  we're going to turn 🍀 chúng ta sẽ biến
  in so why don't we run our function now 🍀 vậy tại sao chúng ta không chạy chức năng của mình ngay bây giờ
  and see what happens nothing happens 🍀 và xem những gì xảy ra không có gì xảy ra
  well 🍀 Tốt
  what's going on i'm returning a plus b 🍀 chuyện gì đang xảy ra tôi sẽ trả lại một điểm cộng b
  so here's what's happening 🍀 vì vậy đây là những gì đang xảy ra
  calling this function is returning that 🍀 gọi chức năng này đang trả về điều đó
  data 🍀 dữ liệu
  but i need to somehow reference and 🍀 nhưng tôi cần bằng cách nào đó tham khảo và
  track that data 🍀 theo dõi dữ liệu đó
  right and that's what a variable is for 🍀 đúng và đó là những gì một biến dành cho
  so i am going to 🍀 vì vậy tôi sẽ
  declare a variable up here var 🍀 khai báo một biến ở đây var
  let's declare constant actually since 🍀 hãy khai báo hằng số thực sự kể từ
  i'm not going to change this let 🍀 tôi sẽ không thay đổi điều này
  my sum equals 🍀 tổng của tôi bằng
  the result of that function so 🍀 kết quả của chức năng đó như vậy
  you can understand this code statement 🍀 bạn có thể hiểu câu lệnh mã này
  right we're declaring a constant called 🍀 đúng, chúng tôi đang khai báo một hằng số được gọi là
  mysum 🍀 mysum
  and then we are calling this function on 🍀 và sau đó chúng tôi đang gọi chức năng này trên
  the same line that returns 🍀 cùng một dòng trả về
  uh 25 and we're assigning 25 to my sum 🍀 uh 25 và chúng tôi đang gán 25 cho tổng của tôi
  so now 🍀 vậy bây giờ
  i can print my sum 🍀 tôi có thể in tổng của tôi
  and let's double check that we get the 🍀 và hãy kiểm tra lại xem chúng tôi có nhận được
  output 🍀 đầu ra
  there we go now before we move on there 🍀 bây giờ chúng ta đi trước khi chúng ta tiếp tục ở đó
  are two very important things that i 🍀 là hai điều rất quan trọng mà tôi
  want to mention 🍀 muốn đề cập đến
  so this return statement actually 🍀 vì vậy câu trả lời này thực sự
  ends the execution of that function so 🍀 kết thúc việc thực hiện chức năng đó để
  once this return 🍀 một lần trở lại này
  statement is run execution returns out 🍀 câu lệnh được chạy thực thi trả về
  of that function 🍀 của chức năng đó
  so any code statements that you put down 🍀 vì vậy bất kỳ câu lệnh mã nào bạn đặt xuống
  here like let's say i had 🍀 ở đây như giả sử tôi đã có
  return a b right there and i printed 🍀 trả lại a b ngay tại đó và tôi đã in
  a plus b right here that print statement 🍀 a cộng b ngay tại đây câu lệnh in đó
  is not going to be run 🍀 sẽ không được chạy
  see code after return will never be 🍀 xem mã sau khi trả lại sẽ không bao giờ được
  executed so that's just 🍀 thực hiện vì vậy đó chỉ là
  important to keep in mind that when you 🍀 điều quan trọng cần ghi nhớ là khi bạn
  write return and it executes that line 🍀 viết return và nó thực thi dòng đó
  of code 🍀 mã
  the execution stops and gets out of that 🍀 việc thực hiện dừng lại và thoát khỏi đó
  function 🍀 chức năng
  another thing that i wanted to mention 🍀 một điều khác mà tôi muốn đề cập đến
  is this return type 🍀 đây có phải là kiểu trả về không
  so earlier when i told you that 🍀 vì vậy sớm hơn khi tôi nói với bạn rằng
  declaring a function didn't have a 🍀 khai báo một hàm không có
  return type like that 🍀 kiểu trả về như vậy
  well it actually did it was just that 🍀 tốt nó thực sự đã làm nó chỉ là
  the return type was void 🍀 loại trả về là void
  and void means nothing so let me 🍀 và khoảng trống có nghĩa là không có gì vì vậy hãy để tôi
  let me do a basic demonstration actually 🍀 hãy để tôi làm một cuộc biểu tình cơ bản thực sự
  let me just declare another function 🍀 hãy để tôi khai báo một chức năng khác
  down here 🍀 Xuống đây
  i'll just call this myfunc2 🍀 tôi sẽ chỉ gọi đây là myfunc2
  see back then i told you this was a 🍀 xem lại sau đó tôi đã nói với bạn đây là một
  basic declaration 🍀 khai báo cơ bản
  of a function but actually that was a 🍀 của một chức năng nhưng thực sự đó là một
  shorthand 🍀 tốc ký
  the full declaration actually has a 🍀 tuyên bố đầy đủ thực sự có một
  return type 🍀 kiểu trả về
  of void like that if you're not going to 🍀 khoảng trống như thế nếu bạn không định
  return anything 🍀 trả lại bất cứ thứ gì
  but it's just that when you don't return 🍀 nhưng chỉ là khi bạn không trở lại
  anything 🍀 bất cứ điều gì
  then you don't actually have to specify 🍀 sau đó bạn không thực sự phải xác định
  the return type of void so 🍀 kiểu trả về của void vì vậy
  so i just thought i'd mention that so 🍀 vì vậy tôi chỉ nghĩ rằng tôi muốn đề cập đến điều đó
  you know what that 🍀 bạn biết cái gì mà
  void keyword means so if you see some 🍀 từ khóa void có nghĩa là như vậy nếu bạn thấy một số
  function 🍀 chức năng
  that has a return type of void you know 🍀 có kiểu trả về là khoảng trống mà bạn biết
  that that basically means that it's not 🍀 điều đó về cơ bản có nghĩa là nó không phải
  returning anything 🍀 trả lại bất cứ thứ gì
  all right so now let's reset a little 🍀 được rồi, bây giờ chúng ta hãy thiết lập lại một chút
  bit it's starting to get a little messy 🍀 một chút nó bắt đầu có một chút lộn xộn
  so let's erase 🍀 vì vậy hãy xóa
  everything except that except our 🍀 tất cả mọi thứ ngoại trừ điều đó ngoại trừ của chúng tôi
  function right here 🍀 chức năng ngay tại đây
  now i want to show you how we can pass 🍀 bây giờ tôi muốn cho bạn thấy làm thế nào chúng ta có thể vượt qua
  in multiple parameters 🍀 trong nhiều tham số
  so instead of specifying b here let's 🍀 vì vậy thay vì chỉ định b ở đây, hãy
  put b into the parameter listing here 🍀 đặt b vào danh sách tham số ở đây
  and have it be passed in instead 🍀 và để nó được chuyển vào thay thế
  okay so let me erase this line of code 🍀 được rồi để tôi xóa dòng mã này
  so that we get b from up here 🍀 để chúng tôi có được b từ đây
  well how do we add another parameter to 🍀 làm cách nào để chúng ta thêm một tham số khác vào
  this one 🍀 cái này
  what you do is simply put comma and then 🍀 những gì bạn làm chỉ đơn giản là đặt dấu phẩy và sau đó
  declare another parameter for your 🍀 khai báo một tham số khác cho bạn
  function easy right 🍀 chức năng dễ dàng ngay
  we're going to name this one b followed 🍀 chúng ta sẽ đặt tên cho cái này b theo sau
  by colon and then the data type of b 🍀 bằng dấu hai chấm và sau đó là kiểu dữ liệu của b
  that's going to be another integer all 🍀 đó sẽ là một số nguyên khác tất cả
  right so now 🍀 ngay bây giờ
  let's take a look at how we call this 🍀 chúng ta hãy xem cách chúng ta gọi nó
  function with two parameters 🍀 hàm hai tham số
  my func you can see that here 🍀 func của tôi bạn có thể thấy điều đó ở đây
  now you just specify 🍀 bây giờ bạn chỉ cần xác định
  oh one quick thing is when you're 🍀 ồ một điều nhanh chóng là khi bạn
  calling functions 🍀 chức năng gọi
  an easy way to just fill in the 🍀 một cách dễ dàng để chỉ cần điền vào
  parameters in the list 🍀 tham số trong danh sách
  is by pressing tab that just brings you 🍀 là bằng cách nhấn tab vừa mang đến cho bạn
  over to the next 🍀 đến cái tiếp theo
  parameter that you have to fill so i'll 🍀 tham số mà bạn phải điền vì vậy tôi sẽ
  put two and three 🍀 đặt hai và ba
  let's execute all of this code and we 🍀 hãy thực thi tất cả mã này và chúng tôi
  get a result 🍀 nhận được một kết quả
  we get no result remember i erased my 🍀 chúng tôi không nhận được kết quả nhớ tôi đã xóa
  line of code 🍀 dòng mã
  so why don't we just print out the 🍀 vậy tại sao chúng ta không in ra
  result instead of assigning it to a 🍀 kết quả thay vì gán nó cho một
  variable this time 🍀 biến lần này
  so i'm going to go ahead and directly 🍀 vì vậy tôi sẽ tiếp tục và trực tiếp
  pass that function call 🍀 vượt qua cuộc gọi chức năng đó
  into my print statement that's going to 🍀 vào tuyên bố in của tôi sẽ
  print out the output 🍀 in ra đầu ra
  of my function 🍀 chức năng của tôi
  let's go ahead and run that code and we 🍀 hãy tiếp tục và chạy mã đó và chúng tôi
  get five 🍀 nhận được năm
  now obviously you can have more than two 🍀 bây giờ rõ ràng là bạn có thể có nhiều hơn hai
  parameters just put a comma 🍀 tham số chỉ cần đặt một dấu phẩy
  in between each parameter in your 🍀 ở giữa mỗi tham số trong của bạn
  function 🍀 chức năng
  and another thing i want to mention 🍀 và một điều nữa tôi muốn đề cập
  that's pretty cool with parameters is 🍀 điều đó khá tuyệt với các thông số là
  that you can specify a default value for 🍀 mà bạn có thể chỉ định một giá trị mặc định cho
  a parameter so for example for parameter 🍀 một tham số để ví dụ cho tham số
  b 🍀 b
  i could make this an optional input data 🍀 tôi có thể biến đây thành dữ liệu đầu vào tùy chọn
  by specifying a default value for this 🍀 bằng cách chỉ định một giá trị mặc định cho điều này
  parameter 🍀 tham số
  if i do that that means that when this 🍀 nếu tôi làm điều đó có nghĩa là khi điều này
  function is called 🍀 chức năng được gọi là
  passing in data for parameter b is going 🍀 chuyển dữ liệu cho tham số b sẽ diễn ra
  to be optional 🍀 là tùy chọn
  let's take a look at how this works so 🍀 chúng ta hãy xem làm thế nào điều này hoạt động như vậy
  after i specify the data type 🍀 sau khi tôi chỉ định kiểu dữ liệu
  for my b parameter i can put an equal 🍀 đối với tham số b của tôi, tôi có thể đặt một giá trị bằng
  sign 🍀 dấu hiệu
  and then i can give it a value let's say 🍀 và sau đó tôi có thể cho nó một giá trị, giả sử
  zero is the default value 🍀 số không là giá trị mặc định
  if b is not passed in then b is just 🍀 nếu b không được truyền vào thì b chỉ là
  going to be zero 🍀 sẽ là số không
  now let's erase 🍀 bây giờ chúng ta hãy xóa
  my function call and let's try calling 🍀 cuộc gọi chức năng của tôi và hãy thử gọi
  it again 🍀 nó một lần nữa
  and take a look at what the autocomplete 🍀 và hãy xem những gì tự động hoàn thành
  menu shows us 🍀 trình đơn cho chúng tôi thấy
  here you can see that there are two 🍀 ở đây bạn có thể thấy rằng có hai
  different forms of my function call now 🍀 các hình thức khác nhau của cuộc gọi chức năng của tôi bây giờ
  one is with parameters a and b so i pass 🍀 một là với các tham số a và b vì vậy tôi vượt qua
  in both pieces of data 🍀 trong cả hai phần dữ liệu
  and one is just simply passing in 🍀 và một người chỉ đơn giản là đi vào
  parameter a 🍀 tham số a
  if i do that b is just going to be zero 🍀 nếu tôi làm điều đó thì b sẽ bằng không
  but if i pass in both of them let's say 🍀 nhưng nếu tôi vượt qua cả hai, hãy nói
  i pass in 🍀 tôi vượt qua
  2 and 3 again then b 🍀 2 và 3 lại rồi b
  is going to be 3 instead of 0. so that's 🍀 sẽ là 3 thay vì 0. vậy đó là
  one way 🍀 một chiều
  to make your parameters optional now i 🍀 để làm cho các thông số của bạn tùy chọn bây giờ tôi
  want to talk about 🍀 muốn nói về
  argument labels as you can imagine the 🍀 nhãn đối số như bạn có thể tưởng tượng
  more parameters we have the more 🍀 càng nhiều tham số chúng ta càng có nhiều
  confusing things are going to be in 🍀 những điều khó hiểu sẽ xảy ra
  terms of these function calls 🍀 điều khoản của các cuộc gọi chức năng này
  especially when it comes to parameter 🍀 đặc biệt là khi nói đến tham số
  names like a and b 🍀 tên như a và b
  well sometimes a and b makes sense in 🍀 đôi khi a và b có ý nghĩa trong
  the context of the code inside of the 🍀 bối cảnh của mã bên trong của
  function 🍀 chức năng
  but to the caller of the function a and 🍀 nhưng với người gọi hàm a và
  b 🍀 b
  they don't mean anything so there's a 🍀 họ không có ý nghĩa gì vì vậy có một
  special feature called 🍀 tính năng đặc biệt được gọi là
  argument labels and let me show you what 🍀 nhãn đối số và để tôi chỉ cho bạn những gì
  that looks like 🍀 trông giống như
  so i'm going to declare a new function 🍀 vì vậy tôi sẽ khai báo một chức năng mới
  right here i'm gonna call it myfunk 🍀 ngay tại đây tôi sẽ gọi nó là myfunk
  as well and i am going to 🍀 cũng như tôi sẽ
  actually you know what i'm going to just 🍀 thực sự bạn biết những gì tôi sẽ chỉ
  copy this function and make a copy of it 🍀 sao chép chức năng này và tạo một bản sao của nó
  and show you how 🍀 và chỉ cho bạn cách
  how argument labels change it so an 🍀 làm thế nào các nhãn đối số thay đổi nó để một
  argument label goes 🍀 nhãn đối số đi
  in front of each parameter so each 🍀 ở phía trước của mỗi tham số để mỗi
  parameter 🍀 tham số
  can have its own argument label and 🍀 có thể có nhãn đối số riêng của mình và
  you're essentially just putting 🍀 về cơ bản bạn chỉ cần đặt
  a name in front of that parameter i'm 🍀 một cái tên phía trước tham số đó, tôi là
  going to call 🍀 sẽ gọi
  this first parameter i'm going to give 🍀 tham số đầu tiên này tôi sẽ đưa ra
  it a 🍀 đó là một
  an argument label called first number 🍀 một nhãn đối số được gọi là số đầu tiên
  and 🍀 Và
  for my for the second parameter i'm 🍀 đối với tham số thứ hai của tôi, tôi là
  going to give it an argument labeled 🍀 sẽ cung cấp cho nó một đối số được dán nhãn
  called 🍀 gọi điện
  second number so that's literally all it 🍀 số thứ hai vì vậy nghĩa đen là tất cả
  is 🍀 là
  an argument label is a name in front of 🍀 một nhãn đối số là một tên ở phía trước của
  the parameter name 🍀 tên tham số
  separated by a space let's take a look 🍀 cách nhau bởi một khoảng trắng chúng ta hãy xem
  at how this affects the function call 🍀 điều này ảnh hưởng đến lệnh gọi hàm như thế nào
  if i type in my func you can see here i 🍀 nếu tôi nhập chức năng của mình, bạn có thể thấy ở đây tôi
  still have 🍀 vẫn còn có
  the these first two ones a and b and 🍀 hai cái đầu tiên a và b và
  that's from the first function up here 🍀 đó là từ chức năng đầu tiên ở đây
  um but look down here i have first 🍀 ừm nhưng nhìn xuống đây tôi có trước
  number 🍀 con số
  and first number and second number and 🍀 và số thứ nhất và số thứ hai và
  this corresponds to my second function 🍀 điều này tương ứng với chức năng thứ hai của tôi
  right here 🍀 ngay chỗ này
  because uh the second number is still 🍀 bởi vì uh số thứ hai vẫn là
  optional right because i have this 🍀 tùy chọn đúng bởi vì tôi có cái này
  default value there so 🍀 giá trị mặc định ở đó
  if i call that one 🍀 nếu tôi gọi cái đó
  my function call becomes this my func 🍀 cuộc gọi chức năng của tôi trở thành chức năng này của tôi
  first number 🍀 số đầu tiên
  one and second number three however 🍀 một và hai số ba tuy nhiên
  internally inside of that function 🍀 bên trong chức năng đó
  i'm still referencing those parameters 🍀 tôi vẫn đang tham khảo các thông số đó
  using a and b 🍀 sử dụng a và b
  so argument labels they're they're a way 🍀 vì vậy nhãn đối số chúng là một cách
  for you to 🍀 để bạn
  distinguish the naming for a function 🍀 phân biệt cách đặt tên cho một chức năng
  call 🍀 gọi
  um versus how it's referenced inside the 🍀 um so với cách nó được tham chiếu bên trong
  code 🍀 mã số
  whereas if you omit the argument labels 🍀 trong khi nếu bạn bỏ qua các nhãn đối số
  like we've done 🍀 như chúng ta đã làm
  up here then the parameter names are 🍀 lên đây thì các tên tham số là
  used for both 🍀 được sử dụng cho cả hai
  the function call and also the 🍀 cuộc gọi chức năng và cũng là
  referencing 🍀 tài liệu tham khảo
  of those parameters inside of the 🍀 của các tham số bên trong của
  function 🍀 chức năng
  so hopefully you notice the difference 🍀 vì vậy hy vọng bạn nhận thấy sự khác biệt
  here one cool trick you can do with 🍀 đây là một mẹo hay mà bạn có thể làm với
  argument labels is 🍀 nhãn đối số là
  if you don't want to show any text in 🍀 nếu bạn không muốn hiển thị bất kỳ văn bản nào trong
  your function call at all 🍀 chức năng của bạn gọi tất cả
  you can use an underscore as your 🍀 bạn có thể sử dụng dấu gạch dưới làm
  argument label so if you do this 🍀 nhãn đối số vì vậy nếu bạn làm điều này
  let's see what happens to your function 🍀 hãy xem điều gì xảy ra với chức năng của bạn
  call 🍀 gọi
  so my funk you can see here 🍀 vì vậy niềm vui của tôi bạn có thể thấy ở đây
  these two correspond to 🍀 hai cái này tương ứng với
  what i've done right here using 🍀 những gì tôi đã làm ngay tại đây bằng cách sử dụng
  underscores for the argument labels 🍀 dấu gạch dưới cho nhãn đối số
  so if you use an underscore for argument 🍀 vì vậy nếu bạn sử dụng dấu gạch dưới cho đối số
  label 🍀 nhãn
  the function calls just become my func 🍀 chức năng gọi chỉ trở thành func của tôi
  and then 🍀 và sau đó
  the first piece of data comma second 🍀 phần dữ liệu đầu tiên, dấu phẩy thứ hai
  piece of data there's no parameter names 🍀 phần dữ liệu không có tên tham số
  there's no argument labels in your 🍀 không có nhãn đối số trong của bạn
  function call 🍀 gọi hàm
  at all so this makes things really 🍀 ở tất cả vì vậy điều này làm cho mọi thứ thực sự
  succinct 🍀 cô đọng
  and really neat and tidy but it also 🍀 và thực sự gọn gàng và ngăn nắp nhưng nó cũng
  makes things 🍀 làm cho mọi thứ
  more confusing if it's not clear what 🍀 khó hiểu hơn nếu nó không rõ ràng những gì
  those parameters 🍀 những thông số đó
  are supposed to be for so there's a lot 🍀 được cho là dành cho vì vậy có rất nhiều
  of versatility here 🍀 linh hoạt ở đây
  my personal preference is simply to do 🍀 sở thích cá nhân của tôi chỉ đơn giản là làm
  it this first way 🍀 nó theo cách đầu tiên
  and i don't usually specify any argument 🍀 và tôi thường không chỉ định bất kỳ đối số nào
  labels at all 🍀 nhãn ở tất cả
  and i simply use the parameter names 🍀 và tôi chỉ cần sử dụng tên tham số
  okay last thing 🍀 được rồi điều cuối cùng
  i promise before we end off with 🍀 tôi hứa trước khi chúng tôi kết thúc với
  functions is 🍀 chức năng là
  i don't know if you've noticed but we've 🍀 tôi không biết nếu bạn đã nhận thấy nhưng chúng tôi đã
  declared two different functions here 🍀 khai báo hai chức năng khác nhau ở đây
  both with the same function name we 🍀 cả hai đều có cùng tên hàm, chúng tôi
  can't do that with 🍀 không thể làm điều đó với
  variables right if you try to declare 🍀 các biến đúng nếu bạn cố gắng khai báo
  variable a 🍀 biến một
  and then variable a again then you're 🍀 và sau đó biến a một lần nữa thì bạn
  going to get an error on the second one 🍀 sẽ gặp lỗi ở cái thứ hai
  the next code is going to complain you 🍀 mã tiếp theo sẽ khiếu nại bạn
  cannot redeclare 🍀 không thể tuyên bố lại
  variable a for functions things are a 🍀 biến a cho hàm mọi thứ là a
  little bit different 🍀 một chút khác biệt
  functions have what's called a function 🍀 chức năng có những gì được gọi là một chức năng
  signature and 🍀 chữ ký và
  that is comprised of the function name 🍀 bao gồm tên hàm
  the 🍀 các
  parameter listing and then followed by 🍀 liệt kê tham số và sau đó theo sau bởi
  the return type 🍀 kiểu trả về
  so let's type myfunc and take a look at 🍀 vì vậy hãy nhập myfunc và xem qua
  what the autocomplete menu gives us 🍀 những gì menu tự động hoàn thành cung cấp cho chúng tôi
  as you can see all four of these 🍀 như bạn có thể thấy tất cả bốn trong số này
  variations 🍀 các biến thể
  have the same function name called 🍀 có cùng tên hàm gọi là
  myfunc but 🍀 myfunc nhưng
  because the parameter values the 🍀 bởi vì các giá trị tham số
  argument labels 🍀 nhãn đối số
  they're different xcode is able to 🍀 chúng khác nhau xcode có thể
  discern and to know which function we're 🍀 phân biệt và để biết chức năng nào chúng ta
  trying to call 🍀 cố gọi
  right so if i call this one and i don't 🍀 đúng vậy nếu tôi gọi cái này và tôi không
  specify 🍀 chỉ định
  any parameter names or any argument 🍀 bất kỳ tên tham số hoặc bất kỳ đối số nào
  labels it knows that i'm trying to call 🍀 dán nhãn nó biết rằng tôi đang cố gọi
  this second one right here because 🍀 cái thứ hai này ngay tại đây bởi vì
  you know this method call this function 🍀 bạn biết phương pháp này gọi chức năng này
  call i mean it doesn't match this first 🍀 gọi tôi có nghĩa là nó không phù hợp với điều này đầu tiên
  one 🍀 một
  whereas if i do my func and i specify 🍀 trong khi nếu tôi thực hiện chức năng của mình và tôi chỉ định
  parameter labels a 🍀 nhãn tham số a
  and b then it definitely knows that i'm 🍀 và b thì nó chắc chắn biết rằng tôi
  trying to call the first one 🍀 cố gắng gọi người đầu tiên
  because this call this parameter listing 🍀 bởi vì điều này gọi danh sách tham số này
  here matches 🍀 trận đấu ở đây
  up here okay so i promise you 🍀 lên đây được rồi vì vậy tôi hứa với bạn
  that we went a little deeper than you 🍀 rằng chúng tôi đã đi sâu hơn bạn một chút
  probably need to know right now 🍀 có lẽ cần phải biết ngay bây giờ
  by showing you all of these um options 🍀 bằng cách hiển thị cho bạn tất cả các tùy chọn này
  and 🍀 Và
  and ways that functions can be flexible 🍀 và cách mà các chức năng có thể linh hoạt
  as we code together more 🍀 khi chúng ta viết mã cùng nhau nhiều hơn
  you'll see me just using more basic 🍀 bạn sẽ thấy tôi chỉ sử dụng cơ bản hơn
  forms of functions but at least hey 🍀 các dạng hàm nhưng ít nhất hey
  now you know a lot more and i'm sure you 🍀 bây giờ bạn biết nhiều hơn và tôi chắc chắn rằng bạn
  can appreciate how powerful these 🍀 có thể đánh giá cao sức mạnh của những thứ này
  functions are 🍀 chức năng là
  all right this lesson was pretty 🍀 được rồi, bài học này khá hay
  action-packed let's do a recap before we 🍀 đầy hành động, hãy tóm tắt lại trước khi chúng ta
  wrap up the lesson 🍀 kết thúc bài học
  first of all you learned how to declare 🍀 trước hết bạn đã học cách khai báo
  basic functions and then you learned how 🍀 các chức năng cơ bản và sau đó bạn đã học cách
  to declare functions which 🍀 để khai báo các chức năng mà
  accept input data as parameters 🍀 chấp nhận dữ liệu đầu vào làm tham số
  furthermore you learn how to declare a 🍀 hơn nữa bạn học cách khai báo một
  function with 🍀 chức năng với
  multiple parameters and again functions 🍀 nhiều tham số và chức năng một lần nữa
  wouldn't nearly be as useful if it 🍀 sẽ gần như không hữu ích nếu nó
  couldn't output data right 🍀 không thể xuất dữ liệu đúng
  you learned how to do that using return 🍀 bạn đã học cách làm điều đó bằng cách sử dụng return
  types and the return 🍀 các loại và sự trở lại
  keyword you also learned about argument 🍀 từ khóa bạn cũng đã học về lập luận
  labels 🍀 nhãn
  and finally you learned about function 🍀 và cuối cùng bạn đã học về chức năng
  signatures 🍀 chữ ký
  now to really get the hang of functions 🍀 bây giờ để thực sự hiểu rõ về các chức năng
  and to reinforce your learning make sure 🍀 và để củng cố việc học của bạn, hãy đảm bảo
  you do the quiz and challenge for this 🍀 bạn làm bài kiểm tra và thử thách cho điều này
  lesson 🍀 bài học
  and don't forget you have a swift cheat 🍀 và đừng quên bạn có một mánh gian lận nhanh chóng
  sheet that you can get from the nav link 🍀 trang tính mà bạn có thể nhận được từ liên kết điều hướng
  at the top 🍀 ở trên cùng
  of your student dashboard and print it 🍀 của bảng điều khiển sinh viên của bạn và in nó
  out and keep it handy 🍀 ra và giữ nó tiện dụng
  you don't need to memorize anything 🍀 bạn không cần phải ghi nhớ bất cứ điều gì
  you're making great progress 🍀 bạn đang tiến bộ rất nhiều
  and in the next lesson i'll show you how 🍀 và trong bài học tiếp theo tôi sẽ chỉ cho bạn cách
  to organize your functions into 🍀 để tổ chức các chức năng của bạn thành
  structures so i'll see you there 🍀 cấu trúc vì vậy tôi sẽ gặp bạn ở đó
  hello and welcome so far you've learned 🍀 xin chào và chào mừng cho đến nay bạn đã học được
  about variables and constants and how 🍀 về biến và hằng và cách
  they're used to keep track of data 🍀 chúng được sử dụng để theo dõi dữ liệu
  you've also learned about functions for 🍀 bạn cũng đã học về các chức năng cho
  organizing and grouping together your 🍀 tổ chức và nhóm lại với nhau
  code statements 🍀 báo cáo mã
  well in this lesson you're going to 🍀 tốt trong bài học này bạn sẽ
  learn about structures or structs 🍀 tìm hiểu về cấu trúc hoặc cấu trúc
  for short and these are the basic 🍀 ngắn gọn và đây là những điều cơ bản
  building blocks 🍀 khu nhà
  to represent your data or to represent 🍀 để đại diện cho dữ liệu của bạn hoặc để đại diện
  something in your app 🍀 một cái gì đó trong ứng dụng của bạn
  structures bring together the functions 🍀 cấu trúc tập hợp các chức năng
  the variables and constants 🍀 các biến và hằng số
  everything you've learned so far in the 🍀 tất cả mọi thứ bạn đã học được cho đến nay trong
  last two lessons all into a neat little 🍀 hai bài học cuối tất cả thành một chút gọn gàng
  package all right let's dive in and see 🍀 gói được rồi, hãy đi sâu vào và xem
  what it's all about 🍀 nó là tất cả những gì
  now let's do a quick recap first you had 🍀 bây giờ hãy tóm tắt nhanh trước tiên bạn đã có
  code statements like these 🍀 báo cáo mã như thế này
  and then i showed you how to use 🍀 và sau đó tôi chỉ cho bạn cách sử dụng
  functions to organize 🍀 chức năng tổ chức
  and group them together now with 🍀 và nhóm chúng lại với nhau ngay bây giờ với
  structures 🍀 cấu trúc
  you can group together your functions 🍀 bạn có thể nhóm các chức năng của mình lại với nhau
  you can also have 🍀 bạn cũng có thể có
  variables and constants keep track of 🍀 biến và hằng số theo dõi
  data inside your structure 🍀 dữ liệu bên trong cấu trúc của bạn
  but outside of any function and we're 🍀 nhưng bên ngoài bất kỳ chức năng nào và chúng tôi
  going to talk about these a little later 🍀 sẽ nói về những điều này một lát sau
  in this lesson 🍀 trong bài học này
  now let's take a look at our view update 🍀 bây giờ chúng ta hãy xem bản cập nhật chế độ xem của chúng tôi
  lifecycle diagram again 🍀 sơ đồ vòng đời một lần nữa
  for the view code that represents your 🍀 cho mã xem đại diện cho bạn
  ui you might create a structure 🍀 ui bạn có thể tạo một cấu trúc
  to represent your home screen and all of 🍀 để đại diện cho màn hình chính của bạn và tất cả
  the view code for your home screen would 🍀 mã xem cho màn hình chính của bạn sẽ
  go into that structure 🍀 đi vào cấu trúc đó
  if you had a second screen in your app 🍀 nếu bạn có màn hình thứ hai trong ứng dụng của mình
  you might create another structure for 🍀 bạn có thể tạo một cấu trúc khác cho
  that second screen 🍀 màn hình thứ hai đó
  and all of the view code for that second 🍀 và tất cả mã xem cho giây đó
  screen would go into that structure 🍀 màn hình sẽ đi vào cấu trúc đó
  in this case each structure represents a 🍀 trong trường hợp này mỗi cấu trúc đại diện cho một
  different screen 🍀 màn hình khác nhau
  in your app now let's move over to the 🍀 trong ứng dụng của bạn bây giờ hãy chuyển sang
  data retrieval 🍀 phục hồi dữ liệu
  part of this diagram you might create a 🍀 một phần của sơ đồ này, bạn có thể tạo một
  structure and call it a data manager 🍀 cấu trúc và gọi nó là trình quản lý dữ liệu
  and you're going to put all of the code 🍀 và bạn sẽ đặt tất cả mã
  and functions related to retrieving and 🍀 và các chức năng liên quan đến truy xuất và
  processing the data 🍀 xử lý dữ liệu
  inside of that data manager structure in 🍀 bên trong cấu trúc trình quản lý dữ liệu đó trong
  this case the structure doesn't 🍀 trường hợp này cấu trúc không
  represent a screen in your app 🍀 đại diện cho một màn hình trong ứng dụng của bạn
  instead it represents a crucial 🍀 thay vào đó nó đại diện cho một quan trọng
  component of your app 🍀 thành phần của ứng dụng của bạn
  so as you can see structures are very 🍀 vì vậy như bạn có thể thấy các cấu trúc rất
  flexible and lightweight and they're 🍀 linh hoạt và nhẹ và chúng
  used 🍀 đã sử dụng
  all over your app now let's go into an 🍀 tất cả trên ứng dụng của bạn bây giờ hãy đi vào một
  xcode playground 🍀 sân chơi xcode
  and take a look at how we can declare 🍀 và hãy xem làm thế nào chúng ta có thể khai báo
  our own structure 🍀 cấu trúc của chúng ta
  all right so here i've got a brand new 🍀 được rồi vì vậy ở đây tôi đã có một thương hiệu mới
  empty playground let's take a look at 🍀 sân chơi trống chúng ta hãy xem
  how we can define our own structures 🍀 làm thế nào chúng ta có thể xác định cấu trúc của riêng mình
  first you start with the struct keyword 🍀 đầu tiên bạn bắt đầu với từ khóa struct
  followed by a space and then the name of 🍀 theo sau là một khoảng trắng và sau đó là tên của
  your structure so i'm going to call this 🍀 cấu trúc của bạn vì vậy tôi sẽ gọi đây là
  one 🍀 một
  my struct and then you put a space and 🍀 cấu trúc của tôi và sau đó bạn đặt một khoảng trắng và
  you open up 🍀 bạn mở ra
  a set of curly brackets inside the curly 🍀 một bộ dấu ngoặc nhọn bên trong dấu ngoặc nhọn
  brackets you would put all of the code 🍀 dấu ngoặc bạn sẽ đặt tất cả các mã
  in your structure and that's it we've 🍀 trong cấu trúc của bạn và đó là chúng tôi đã
  declared our own structure 🍀 tuyên bố cấu trúc riêng của chúng tôi
  now before we move on and take a look at 🍀 bây giờ trước khi chúng ta tiếp tục và xem qua
  what's inside the structure 🍀 những gì bên trong cấu trúc
  i want to point out the naming 🍀 tôi muốn chỉ ra việc đặt tên
  convention of the structure 🍀 quy ước của cấu trúc
  notice that i've started it off with a 🍀 lưu ý rằng tôi đã bắt đầu nó với một
  capital letter 🍀 chữ viết hoa
  this is the standard convention this is 🍀 đây là quy ước tiêu chuẩn đây là
  different from 🍀 khác với
  the camel casing that we used for the 🍀 vỏ lạc đà mà chúng tôi sử dụng cho
  variables and constants 🍀 biến và hằng
  and the function names those started 🍀 và tên hàm đã bắt đầu
  with a lowercase letter 🍀 với một chữ thường
  and it had each subsequent word starting 🍀 và nó có mỗi từ tiếp theo bắt đầu
  with a capital letter 🍀 với một chữ in hoa
  whereas for structures it starts off 🍀 trong khi đối với các cấu trúc, nó bắt đầu
  with a capital letter and then each 🍀 bằng một chữ in hoa và sau đó mỗi
  subsequent word 🍀 từ tiếp theo
  has a capital letter all right now that 🍀 có một chữ in hoa tất cả ngay bây giờ
  you know about naming structures 🍀 bạn biết về cấu trúc đặt tên
  let's go inside and take a look at how 🍀 chúng ta hãy đi vào bên trong và có một cái nhìn như thế nào
  we organize the things 🍀 chúng tôi sắp xếp mọi thứ
  inside of the structure so usually at 🍀 bên trong cấu trúc nên thường ở
  the top of the 🍀 đỉnh của
  structure inside the curly brackets we 🍀 cấu trúc bên trong dấu ngoặc nhọn, chúng tôi
  would declare here 🍀 sẽ tuyên bố ở đây
  all of our variables and constants used 🍀 tất cả các biến và hằng số của chúng tôi được sử dụng
  to track data that 🍀 để theo dõi dữ liệu mà
  is related to this structure now 🍀 có liên quan đến cấu trúc này bây giờ
  these have a special name as i mentioned 🍀 những cái này có một cái tên đặc biệt như tôi đã đề cập
  earlier and we will get to that 🍀 sớm hơn và chúng ta sẽ đạt được điều đó
  later on in this lesson so up here after 🍀 sau này trong bài học này vì vậy lên đây sau
  you declare all of the variables and 🍀 bạn khai báo tất cả các biến và
  constants 🍀 hằng số
  tracking data for the structure the next 🍀 theo dõi dữ liệu cho cấu trúc tiếp theo
  section you have 🍀 phần bạn có
  are all of the functions related to the 🍀 là tất cả các chức năng liên quan đến
  structure 🍀 kết cấu
  now there are no clearly defined 🍀 bây giờ không có định nghĩa rõ ràng
  sections in a structure 🍀 các phần trong một cấu trúc
  you know all of the code really just 🍀 bạn biết tất cả các mã thực sự chỉ
  goes in between the curly brackets 🍀 đi vào giữa các dấu ngoặc nhọn
  but usually this is how you would 🍀 nhưng thông thường đây là cách bạn sẽ
  organize all of the different 🍀 tổ chức tất cả các khác nhau
  pieces of code inside of your structure 🍀 các đoạn mã bên trong cấu trúc của bạn
  so at the top 🍀 vì vậy ở trên cùng
  variables and constants and then at the 🍀 biến và hằng số và sau đó tại
  bottom 🍀 đáy
  all of the functions so as you can see 🍀 tất cả các chức năng như bạn có thể thấy
  structures are great for grouping 🍀 cấu trúc là tuyệt vời để nhóm
  together functions 🍀 chức năng cùng nhau
  variables and constants all related for 🍀 các biến và hằng đều liên quan đến
  one thing 🍀 một điều
  but structures are usually meant to 🍀 nhưng các cấu trúc thường có nghĩa là để
  represent something 🍀 đại diện cho một cái gì đó
  in your app in the view update lifecycle 🍀 trong ứng dụng của bạn trong vòng đời cập nhật chế độ xem
  diagram that you saw earlier 🍀 sơ đồ mà bạn đã thấy trước đó
  we saw examples of a structure being 🍀 chúng tôi đã thấy các ví dụ về một cấu trúc được
  used to represent 🍀 dùng để đại diện
  a screen of your app as well as to 🍀 một màn hình của ứng dụng của bạn cũng như để
  represent a crucial component of your 🍀 đại diện cho một thành phần quan trọng của bạn
  app 🍀 ứng dụng
  like that network manager so why don't 🍀 như quản lý mạng vậy tại sao không
  we do another example 🍀 chúng tôi làm một ví dụ khác
  and i'll show you a structure that 🍀 và tôi sẽ chỉ cho bạn một cấu trúc mà
  is a little bit more concrete let's 🍀 là một chút cụ thể hơn chúng ta hãy
  model it after something 🍀 mô hình hóa nó sau một cái gì đó
  so earlier in the view update lifecycle 🍀 sớm hơn trong vòng đời cập nhật chế độ xem
  diagram you saw that we could use 🍀 sơ đồ bạn thấy rằng chúng ta có thể sử dụng
  structures to represent a view in our 🍀 cấu trúc để đại diện cho một quan điểm trong của chúng tôi
  app 🍀 ứng dụng
  so let's go with that let's have a 🍀 vì vậy chúng ta hãy đi với điều đó chúng ta hãy có một
  hypothetical chat app 🍀 ứng dụng trò chuyện giả định
  and let's say that this structure 🍀 và hãy nói rằng cấu trúc này
  represents my chat view 🍀 đại diện cho chế độ xem trò chuyện của tôi
  so i'm going to change the name of my 🍀 vì vậy tôi sẽ thay đổi tên của tôi
  structure to chat view 🍀 cấu trúc để xem trò chuyện
  now under variables and constants i 🍀 bây giờ dưới biến và hằng i
  might have 🍀 có thể có
  a variable to keep track of the 🍀 một biến để theo dõi
  message like the chat message that i'm 🍀 tin nhắn như tin nhắn trò chuyện mà tôi
  typing into the chat box 🍀 nhập vào hộp trò chuyện
  so i'm going to call this message and 🍀 vì vậy tôi sẽ gọi tin nhắn này và
  the type of data this would be 🍀 loại dữ liệu này sẽ là
  would probably be a string and i'm going 🍀 có lẽ sẽ là một chuỗi và tôi sẽ
  to assign it 🍀 để gán nó
  an empty string nothing in between just 🍀 một chuỗi rỗng không có gì ở giữa chỉ
  two quotes 🍀 hai trích dẫn
  so that's what's known as an empty 🍀 vì vậy đó là những gì được gọi là một sản phẩm nào
  string now under functions 🍀 chuỗi bây giờ dưới chức năng
  i could have groups of code that would 🍀 tôi có thể có các nhóm mã sẽ
  perform 🍀 trình diễn
  different tasks on this screen for 🍀 nhiệm vụ khác nhau trên màn hình này cho
  example 🍀 ví dụ
  maybe when the user taps on the send 🍀 có thể khi người dùng nhấn vào gửi
  chat button 🍀 nút trò chuyện
  it would execute some code to send the 🍀 nó sẽ thực thi một số mã để gửi
  chat message to the server 🍀 tin nhắn trò chuyện đến máy chủ
  so i would declare a function so that's 🍀 vì vậy tôi sẽ khai báo một chức năng để đó là
  funk followed by let's call this send 🍀 funk theo sau hãy gọi đây là gửi
  chat and two rounded parentheses 🍀 trò chuyện và hai dấu ngoặc tròn
  and i'm going to open up a pair of curly 🍀 và tôi sẽ mở ra một cặp xoăn
  brackets and inside here 🍀 dấu ngoặc và bên trong ở đây
  i would put the code to 🍀 tôi sẽ đặt mã để
  send the chat message and then in 🍀 gửi tin nhắn trò chuyện rồi vào
  between 🍀 giữa
  the variables and constants and the 🍀 các biến và hằng số và
  functions i would have 🍀 chức năng tôi sẽ có
  the view code for this screen 🍀 mã xem cho màn hình này
  that's all of the code for the ui 🍀 đó là tất cả các mã cho ui
  so now in this chat view structure we 🍀 vì vậy bây giờ trong cấu trúc xem trò chuyện này, chúng tôi
  have a neat little package 🍀 có một gói nhỏ gọn gàng
  containing all of the code for that one 🍀 chứa tất cả các mã cho cái đó
  screen 🍀 màn hình
  now earlier i mentioned that the 🍀 bây giờ trước đó tôi đã đề cập rằng
  variables and constants 🍀 biến và hằng
  that you declare up at the top of the 🍀 mà bạn khai báo ở trên cùng của
  structure they have a different name 🍀 cấu trúc họ có một tên khác
  so now i want to tell you what that is 🍀 vì vậy bây giờ tôi muốn cho bạn biết đó là gì
  this variable declaration that i have up 🍀 khai báo biến này mà tôi đã lên
  here message 🍀 tin nhắn đây
  this is known as a property of the chat 🍀 đây được gọi là một tài sản của cuộc trò chuyện
  view structure 🍀 xem cấu trúc
  if i had additional variable or constant 🍀 nếu tôi có thêm biến hoặc hằng số
  declarations those would be known as 🍀 tuyên bố những người sẽ được gọi là
  properties of the chat view structure as 🍀 các thuộc tính của cấu trúc xem trò chuyện như
  well 🍀 Tốt
  and down here functions actually also 🍀 và ở đây thực sự cũng có chức năng
  have 🍀 có
  a different name a function inside of a 🍀 một tên khác một hàm bên trong một
  structure 🍀 kết cấu
  is known as a method of that structure 🍀 được gọi là một phương thức của cấu trúc đó
  so this send chat function is actually a 🍀 vì vậy chức năng gửi trò chuyện này thực sự là một
  method of the chat view 🍀 phương pháp xem trò chuyện
  so now let's just update our comments 🍀 vì vậy bây giờ chúng ta hãy cập nhật ý kiến ​​​​của chúng tôi
  here 🍀 đây
  so that we use the proper terminology 🍀 để chúng tôi sử dụng thuật ngữ thích hợp
  instead of variables and constants up 🍀 thay vì biến và hằng lên
  here 🍀 đây
  i'm going to rename this well not rename 🍀 tôi sẽ đổi tên cái này cũng không đổi tên
  but just retype my comment 🍀 nhưng chỉ cần gõ lại bình luận của tôi
  and call those properties and instead of 🍀 và gọi những thuộc tính đó và thay vì
  functions 🍀 chức năng
  these are going to be called methods 🍀 chúng sẽ được gọi là các phương thức
  just so we're clear 🍀 chỉ để chúng tôi rõ ràng
  now inside of a structure properties and 🍀 bây giờ bên trong một thuộc tính cấu trúc và
  methods can actually work together 🍀 phương pháp thực sự có thể làm việc cùng nhau
  to fulfill the duties of the chat view 🍀 để hoàn thành nhiệm vụ của chế độ xem trò chuyện
  let's take a look at some of the special 🍀 chúng ta hãy xem xét một số điều đặc biệt
  ways in which they can work together 🍀 những cách mà họ có thể làm việc cùng nhau
  now let's take a look at this send chat 🍀 bây giờ chúng ta hãy xem cuộc trò chuyện gửi này
  method for instance 🍀 phương pháp chẳng hạn
  if we were to write the code here to 🍀 nếu chúng ta viết mã ở đây để
  send the chat message 🍀 gửi tin nhắn trò chuyện
  it sure would be handy if we could 🍀 nó chắc chắn sẽ có ích nếu chúng ta có thể
  access the actual message 🍀 truy cập tin nhắn thực tế
  in this message property right well we 🍀 trong tài sản tin nhắn này, chúng tôi cũng vậy
  actually can 🍀 thực sự có thể
  so if i wrote something like this 🍀 vì vậy nếu tôi đã viết một cái gì đó như thế này
  print and then inside the parentheses i 🍀 in và sau đó bên trong dấu ngoặc đơn i
  put the name of the property in fact i 🍀 đặt tên của tài sản trong thực tế tôi
  can access that data 🍀 có thể truy cập dữ liệu đó
  and the reason for this is because this 🍀 và lý do cho điều này là bởi vì điều này
  property 🍀 tài sản
  is declared in the scope of this 🍀 được khai báo trong phạm vi này
  structure 🍀 kết cấu
  so the scope of this structure is 🍀 vì vậy phạm vi của cấu trúc này là
  anything in between 🍀 bất cứ điều gì ở giữa
  these two curly brackets essentially the 🍀 hai dấu ngoặc nhọn này về cơ bản là
  opening 🍀 khai mạc
  and closing curly brackets of the 🍀 và đóng ngoặc nhọn của
  structure so any of the methods that i 🍀 cấu trúc nên bất kỳ phương pháp nào mà tôi
  declare in here 🍀 khai báo ở đây
  for instance if i declare another one 🍀 ví dụ nếu tôi khai báo một cái khác
  let's call this one delete chat 🍀 hãy gọi đây là cuộc trò chuyện xóa
  because these two methods are also in 🍀 bởi vì hai phương pháp này cũng có trong
  the same scope 🍀 cùng phạm vi
  you know it's inside of the scope of the 🍀 bạn biết nó nằm trong phạm vi của
  chat view 🍀 xem trò chuyện
  i am able to access the property 🍀 tôi có thể truy cập tài sản
  the properties that you declare up here 🍀 các thuộc tính mà bạn khai báo ở đây
  are accessible to everything within the 🍀 có thể truy cập vào mọi thứ trong
  same scope 🍀 cùng phạm vi
  so that includes all the methods that 🍀 để bao gồm tất cả các phương pháp mà
  are declared down here 🍀 được khai báo ở đây
  now i have to say that each method has 🍀 bây giờ tôi phải nói rằng mỗi phương pháp có
  its own 🍀 của riêng nó
  local scope so this send chat method 🍀 phạm vi địa phương để gửi phương thức trò chuyện này
  has a scope inside here and this delete 🍀 có một phạm vi bên trong đây và điều này xóa
  chat method has its own scope in between 🍀 phương thức trò chuyện có phạm vi riêng ở giữa
  these curly brackets 🍀 những dấu ngoặc nhọn này
  so if i declare a variable inside my 🍀 vì vậy nếu tôi khai báo một biến bên trong
  send 🍀 gửi
  chat method let's say var prefix 🍀 phương thức trò chuyện giả sử tiền tố var
  equals chris says 🍀 bằng chris nói
  and then let's say i use this prefix and 🍀 và sau đó giả sử tôi sử dụng tiền tố này và
  i prepend it to my 🍀 tôi chuẩn bị nó cho tôi
  chat message so the entire chat message 🍀 tin nhắn trò chuyện để toàn bộ tin nhắn trò chuyện
  would be chris says 🍀 sẽ là chris nói
  and then something so maybe i'll print 🍀 và sau đó một cái gì đó để có thể tôi sẽ in
  prefix 🍀 tiếp đầu ngữ
  plus message to get that sort of effect 🍀 cộng với thông báo để có được loại hiệu ứng đó
  and i wanted to do the same thing inside 🍀 và tôi muốn làm điều tương tự bên trong
  delete chat 🍀 xóa trò chuyện
  if i try to access the prefix variable 🍀 nếu tôi cố gắng truy cập vào biến tiền tố
  and type print prefix plus message down 🍀 và nhập tiền tố in cộng với thông báo xuống
  here 🍀 đây
  inside the delete chat method you'll see 🍀 bên trong phương thức trò chuyện xóa, bạn sẽ thấy
  that it 🍀 rằng nó
  xcode complains and it says it cannot 🍀 xcode phàn nàn và nó nói rằng nó không thể
  find prefix in the scope 🍀 tìm tiền tố trong phạm vi
  because this variable is not declared in 🍀 bởi vì biến này không được khai báo trong
  the same scope 🍀 cùng phạm vi
  it's declared inside the scope of send 🍀 nó được khai báo bên trong phạm vi gửi
  chat 🍀 trò chuyện
  so how would we fix this well one of the 🍀 vậy làm thế nào chúng ta sẽ khắc phục điều này tốt một trong những
  ways we could do that 🍀 cách chúng ta có thể làm điều đó
  is to turn this prefix variable into 🍀 là biến biến tiền tố này thành
  a property that we declare at the top of 🍀 một thuộc tính mà chúng tôi khai báo ở đầu
  our structure 🍀 cấu trúc của chúng tôi
  you know move it outside of the scope 🍀 bạn biết di chuyển nó ra ngoài phạm vi
  of sendchat and put it up here into the 🍀 của sendchat và đưa nó lên đây vào
  scope 🍀 phạm vi
  of the chat view instead so now that i'm 🍀 của chế độ xem trò chuyện thay vì vậy bây giờ tôi
  declaring 🍀 tuyên bố
  my prefix as a property of the chat view 🍀 tiền tố của tôi là thuộc tính của chế độ xem trò chuyện
  you can see that the errors go away and 🍀 bạn có thể thấy rằng các lỗi biến mất và
  i can access this prefix property 🍀 tôi có thể truy cập thuộc tính tiền tố này
  inside both send chat and delete chat 🍀 bên trong cả gửi trò chuyện và xóa trò chuyện
  methods 🍀 phương pháp
  now i want to talk about another type of 🍀 bây giờ tôi muốn nói về một loại khác
  property first let's 🍀 tài sản đầu tiên chúng ta hãy
  define what these properties up here are 🍀 xác định những thuộc tính này ở đây là gì
  these are called stored properties 🍀 chúng được gọi là thuộc tính được lưu trữ
  and the reason is because when you 🍀 và lý do là bởi vì khi bạn
  access these properties and you 🍀 truy cập các thuộc tính này và bạn
  reference them by their property name 🍀 tham khảo chúng bằng tên tài sản của họ
  it just returns to you the value it's 🍀 nó chỉ trả lại cho bạn giá trị của nó
  stored there's another type of property 🍀 được lưu trữ có một loại tài sản khác
  where when you access it it needs to 🍀 nơi khi bạn truy cập nó cần phải
  compute or 🍀 tính toán hoặc
  calculate the value before it returns it 🍀 tính toán giá trị trước khi nó trả về nó
  to you 🍀 cho bạn
  so let's take a look at what this second 🍀 vì vậy chúng ta hãy xem thứ hai này là gì
  new type of property looks like 🍀 loại tài sản mới trông giống như
  so let me start by erasing this prefix 🍀 vì vậy hãy để tôi bắt đầu bằng cách xóa tiền tố này
  property up here 🍀 tài sản ở đây
  and deleting that and then i'm going to 🍀 và xóa nó và sau đó tôi sẽ
  declare this new type of property 🍀 khai báo loại thuộc tính mới này
  it starts off just like a normal one 🍀 nó bắt đầu giống như một cái bình thường
  you use var space and then the name of 🍀 bạn sử dụng không gian var và sau đó là tên của
  the computed property 🍀 thuộc tính được tính toán
  i'm going to call it message with prefix 🍀 tôi sẽ gọi nó là tin nhắn có tiền tố
  followed by the name instead of 🍀 theo sau là tên thay vì
  assigning it some data 🍀 gán cho nó một số dữ liệu
  you open up a set of curly brackets and 🍀 bạn mở một tập hợp các dấu ngoặc nhọn và
  here 🍀 đây
  you can put the computational code to 🍀 bạn có thể đặt mã tính toán để
  compute the value 🍀 tính giá trị
  that you will return when this property 🍀 rằng bạn sẽ trở lại khi tài sản này
  is called 🍀 được gọi là
  one thing though because the value is 🍀 một điều mặc dù vì giá trị là
  not immediately known 🍀 không biết ngay
  xcode can't infer what the data type is 🍀 xcode không thể suy ra loại dữ liệu là gì
  so you actually have to specify the data 🍀 vì vậy bạn thực sự phải chỉ định dữ liệu
  type 🍀 kiểu
  after the computed property name 🍀 sau tên thuộc tính được tính toán
  so after message with prefix i'm going 🍀 vì vậy sau tin nhắn có tiền tố tôi sẽ đi
  to put colon 🍀 đặt dấu hai chấm
  and i'm going to put string because that 🍀 và tôi sẽ đặt chuỗi vì điều đó
  is the type of value 🍀 là loại giá trị
  that this property is going to return 🍀 rằng tài sản này sẽ trở lại
  this is different from 🍀 điều này khác với
  this stored property up here message 🍀 tài sản được lưu trữ này lên tin nhắn ở đây
  where i can actually use the shorthand 🍀 nơi tôi thực sự có thể sử dụng tốc ký
  and erase 🍀 và xóa
  the data type so it's just var message 🍀 kiểu dữ liệu nên nó chỉ là thông báo var
  equals string 🍀 bằng chuỗi
  and i can do this because i am 🍀 và tôi có thể làm điều này bởi vì tôi là
  immediately assigning a value to that 🍀 ngay lập tức gán một giá trị cho điều đó
  property so xcode can 🍀 thuộc tính để xcode có thể
  look at that value and it can determine 🍀 nhìn vào giá trị đó và nó có thể xác định
  and infer what the data type for that 🍀 và suy ra kiểu dữ liệu cho điều đó
  property should be 🍀 tài sản nên được
  with a computed property i have to 🍀 với một thuộc tính được tính toán, tôi phải
  explicitly 🍀 rõ ràng
  specify the data type all right so 🍀 chỉ định loại dữ liệu được rồi
  for my computed property message with 🍀 cho tin nhắn thuộc tính được tính toán của tôi với
  prefix let's take a look at the code 🍀 tiền tố chúng ta hãy xem mã
  inside of the curly brackets 🍀 bên trong dấu ngoặc nhọn
  here i am going to use the return 🍀 ở đây tôi sẽ sử dụng sự trở lại
  keyword 🍀 từ khóa
  just like with functions right i'm going 🍀 giống như với các chức năng, tôi sẽ đi
  to return 🍀 trở về
  chris says so this is a string 🍀 chris nói vậy đây là một chuỗi
  plus message 🍀 tin nhắn cộng
  so now in my send chat method 🍀 vì vậy bây giờ trong phương thức trò chuyện gửi của tôi
  instead of printing prefix plus message 🍀 thay vì in tiền tố cộng với tin nhắn
  i can just 🍀 tôi chỉ có thể
  return message with prefix 🍀 trả lại tin nhắn với tiền tố
  same thing for delete chat instead of 🍀 điều tương tự để xóa trò chuyện thay vì
  prefix plus 🍀 tiền tố cộng
  message i'm going to return message 🍀 tin nhắn tôi sẽ trả lời tin nhắn
  with prefix so every time this property 🍀 với tiền tố để mỗi khi tài sản này
  is accessed 🍀 được truy cập
  it is going to run the code inside these 🍀 nó sẽ chạy mã bên trong
  curly brackets 🍀 dấu ngoặc nhọn
  and return that as the value for that 🍀 và trả về giá trị đó
  property it needs to compute it that's 🍀 tài sản nó cần để tính toán nó đó là
  why it's called a computed property 🍀 tại sao nó được gọi là tài sản được tính toán
  now with computed properties there's 🍀 bây giờ với các thuộc tính được tính toán có
  also a shortcut if 🍀 cũng là một phím tắt nếu
  there's only one line of code in here 🍀 chỉ có một dòng mã ở đây
  then i don't need 🍀 sau đó tôi không cần
  the return keyword because xcode can 🍀 từ khóa trả về vì xcode có thể
  assume 🍀 cho rằng
  that this single line of code will 🍀 rằng dòng mã này sẽ
  output 🍀 đầu ra
  the data that i want to return for my 🍀 dữ liệu mà tôi muốn trả lại cho tôi
  computer property 🍀 tài sản máy tính
  so i can actually just delete the return 🍀 vì vậy tôi thực sự có thể xóa trả lại
  keyword 🍀 từ khóa
  however if i have multiple lines of code 🍀 tuy nhiên nếu tôi có nhiều dòng mã
  then i would definitely need that return 🍀 thì tôi chắc chắn sẽ cần sự trở lại đó
  keyword because xcode doesn't know which 🍀 từ khóa vì xcode không biết cái nào
  line of code 🍀 dòng mã
  is meant to be the value that gets 🍀 có nghĩa là giá trị nhận được
  returned so for example 🍀 trả lại như vậy chẳng hạn
  inside my computed property if i say let 🍀 bên trong tài sản được tính toán của tôi nếu tôi nói hãy để
  prefix 🍀 tiếp đầu ngữ
  equals chris says 🍀 bằng chris nói
  and then down here i have 🍀 và sau đó xuống đây tôi có
  prefix plus message 🍀 tiền tố cộng với tin nhắn
  it's not going to know uh which code 🍀 nó sẽ không biết mã nào
  statement 🍀 tuyên bố
  returns the value so i actually have to 🍀 trả về giá trị vì vậy tôi thực sự phải
  use the return keyword like that 🍀 sử dụng từ khóa trả lại như thế
  and that's going to be fine now as far 🍀 và điều đó sẽ ổn ngay bây giờ
  as computed properties go 🍀 khi các thuộc tính được tính toán đi
  there's definitely more we can talk 🍀 chắc chắn còn nhiều điều chúng ta có thể nói
  about but this will suffice for now 🍀 về nhưng điều này sẽ đủ cho bây giờ
  in later chapters in this course we'll 🍀 trong các chương sau của khóa học này, chúng ta sẽ
  definitely go over computer properties 🍀 chắc chắn đi qua các thuộc tính máy tính
  again 🍀 lại
  all right let's do a quick recap before 🍀 được rồi, hãy tóm tắt nhanh trước khi
  we wrap up this lesson 🍀 chúng tôi kết thúc bài học này
  you learned how to declare a basic 🍀 bạn đã học cách khai báo cơ bản
  structure you learned about properties 🍀 cấu trúc bạn đã học về thuộc tính
  and methods in a structure 🍀 và các phương thức trong một cấu trúc
  you learned about scope and you learned 🍀 bạn đã học về phạm vi và bạn đã học
  about computed properties as well 🍀 về các thuộc tính được tính toán
  now i know that the hard part is 🍀 bây giờ tôi biết rằng phần khó khăn là
  wrapping your head around these concepts 🍀 xoay quanh những khái niệm này
  as we code further together you're going 🍀 khi chúng ta viết mã xa hơn cùng nhau, bạn sẽ đi
  to see these concepts put into practice 🍀 để xem những khái niệm này được đưa vào thực tế
  to help you remember what you learned 🍀 để giúp bạn nhớ những gì bạn đã học
  today i highly recommend that you take 🍀 hôm nay tôi thực sự khuyên bạn nên dùng
  the quiz 🍀 các bài kiểm tra
  and the challenge for this lesson and 🍀 và thách thức cho bài học này và
  don't forget you have the swift cheat 🍀 đừng quên bạn có gian lận nhanh chóng
  sheet as well 🍀 tấm cũng vậy
  i just want to say one thing before we 🍀 tôi chỉ muốn nói một điều trước khi chúng ta
  end you did it if you're brand new to 🍀 kết thúc bạn đã làm điều đó nếu bạn là thương hiệu mới
  coding these three lessons were the 🍀 mã hóa ba bài học này là
  mind-bending ones 🍀 những người uốn cong tâm trí
  in the next lesson i'm going to show you 🍀 trong bài học tiếp theo tôi sẽ chỉ cho bạn
  how these concepts relate to your actual 🍀 làm thế nào những khái niệm này liên quan đến thực tế của bạn
  xcode project 🍀 dự án xcode
  alright i'll see you there 🍀 được rồi tôi sẽ gặp bạn ở đó
  hello and welcome so you've learned a 🍀 xin chào và chào mừng vì vậy bạn đã học được một
  lot of swift in the last few lessons 🍀 rất nhanh trong vài bài học cuối cùng
  you started with variables and constants 🍀 bạn đã bắt đầu với các biến và hằng số
  and data types 🍀 và kiểu dữ liệu
  then you learned about functions and 🍀 sau đó bạn đã học về chức năng và
  then you learned about structures 🍀 sau đó bạn đã học về cấu trúc
  that you can group all of those things 🍀 rằng bạn có thể nhóm tất cả những thứ đó
  together to represent or model something 🍀 cùng nhau để đại diện hoặc mô hình một cái gì đó
  in your app 🍀 trong ứng dụng của bạn
  now this lesson is going to be the final 🍀 bây giờ bài học này sẽ là bài học cuối cùng
  piece of the puzzle 🍀 mảnh ghép
  not saying you're going to be a swift 🍀 không nói rằng bạn sẽ nhanh chóng
  master or anything but by the end of 🍀 chủ hoặc bất cứ điều gì nhưng vào cuối
  this lesson you'll see 🍀 bài học này bạn sẽ thấy
  how all of the concepts and code fits 🍀 làm thế nào tất cả các khái niệm và mã phù hợp
  together and works together 🍀 cùng nhau và làm việc cùng nhau
  inside of a swift ui app all right with 🍀 bên trong một ứng dụng ui nhanh chóng ổn với
  that said let's dive right in 🍀 điều đó nói rằng chúng ta hãy đi sâu vào
  all right so let's start with an empty 🍀 được rồi, vậy hãy bắt đầu với một cái trống
  playground do you remember back then 🍀 sân chơi bạn có nhớ hồi đó không
  when you learned about functions 🍀 khi bạn học về chức năng
  and i taught you how to declare a 🍀 và tôi đã dạy bạn cách khai báo một
  function by using the func keyword 🍀 chức năng bằng cách sử dụng từ khóa func
  followed by 🍀 theo dõi bởi
  the function name let's say my function 🍀 tên chức năng giả sử chức năng của tôi
  followed by a set of parentheses and 🍀 theo sau là một tập hợp các dấu ngoặc đơn và
  then 🍀 sau đó
  a set of curly brackets and inside of 🍀 một tập hợp các dấu ngoặc nhọn và bên trong
  the curly brackets 🍀 dấu ngoặc nhọn
  we would have the code for the function 🍀 chúng tôi sẽ có mã cho chức năng
  but this is just 🍀 nhưng đây chỉ là
  a function declaration the no code is 🍀 một khai báo chức năng không có mã là
  run 🍀 chạy
  nothing happens it's not until we call 🍀 không có gì xảy ra cho đến khi chúng tôi gọi
  the function 🍀 chức năng
  that the code inside of that function 🍀 rằng mã bên trong chức năng đó
  gets executed right 🍀 được thực hiện ngay
  so i would call the function saying my 🍀 vì vậy tôi sẽ gọi chức năng nói của tôi
  function 🍀 chức năng
  and then parentheses if i run my 🍀 và sau đó dấu ngoặc đơn nếu tôi chạy
  playground right now you can see that it 🍀 sân chơi ngay bây giờ bạn có thể thấy rằng nó
  outputs hello into the console 🍀 đầu ra xin chào vào bảng điều khiển
  so structures are like that as well when 🍀 vì vậy các cấu trúc cũng như vậy khi
  we declare a structure 🍀 chúng tôi tuyên bố một cấu trúc
  using the struct keyword followed by 🍀 sử dụng từ khóa struct theo sau là
  the structure name so let's say my 🍀 tên cấu trúc vì vậy hãy nói của tôi
  structure 🍀 kết cấu
  followed by a set of curly brackets and 🍀 theo sau là một tập hợp các dấu ngoặc nhọn và
  then we put the code inside of 🍀 sau đó chúng tôi đặt mã bên trong
  the structure let me move my function in 🍀 cấu trúc cho phép tôi di chuyển chức năng của mình trong
  here 🍀 đây
  let's declare a property up here var 🍀 hãy khai báo một thuộc tính ở đây var
  message equals hello and then let's 🍀 tin nhắn bằng xin chào và sau đó chúng ta hãy
  print out 🍀 in ra
  my property message inside of 🍀 tin nhắn thuộc tính của tôi bên trong
  my function this is just a declaration 🍀 chức năng của tôi đây chỉ là một tuyên bố
  of a structure it doesn't actually do 🍀 của một cấu trúc nó không thực sự làm
  anything 🍀 bất cứ điều gì
  think of it like a blueprint for a 🍀 nghĩ về nó giống như một kế hoạch chi tiết cho một
  building 🍀 xây dựng
  in order for us to use this structure we 🍀 để chúng tôi sử dụng cấu trúc này, chúng tôi
  need to bring it to life we need to 🍀 cần phải đưa nó vào cuộc sống, chúng ta cần phải
  create what's called an 🍀 tạo ra cái được gọi là
  instance of the structure you can think 🍀 ví dụ về cấu trúc bạn có thể nghĩ
  of it 🍀 của nó
  like turning this blueprint for a 🍀 như chuyển bản thiết kế này cho một
  building into 🍀 xây dựng thành
  an actual building so how do we go about 🍀 một tòa nhà thực sự vậy làm thế nào để chúng ta đi về
  creating an instance of this structure 🍀 tạo một thể hiện của cấu trúc này
  well that's easy 🍀 thật dễ dàng
  you just write the structure name 🍀 bạn chỉ cần viết tên cấu trúc
  followed by 🍀 theo dõi bởi
  a pair of parentheses like that now just 🍀 một cặp dấu ngoặc đơn như thế bây giờ chỉ
  in case you're still fuzzy about the 🍀 trong trường hợp bạn vẫn còn mơ hồ về
  concept of creating an 🍀 khái niệm tạo ra một
  instance of a structure let me give you 🍀 ví dụ về cấu trúc để tôi đưa cho bạn
  a couple of different analogies 🍀 một vài phép loại suy khác nhau
  to help you try to understand this 🍀 để giúp bạn cố gắng hiểu điều này
  concept some people find it easier 🍀 khái niệm một số người thấy nó dễ dàng hơn
  when i say that declaring a structure 🍀 khi tôi nói rằng khai báo một cấu trúc
  or the declaration of this structure is 🍀 hoặc tuyên bố của cấu trúc này là
  kind of like a blueprint for 🍀 giống như một kế hoạch chi tiết cho
  a car or an architecture plan 🍀 một chiếc xe hơi hoặc một kế hoạch kiến ​​trúc
  for a house using that blueprint or 🍀 cho một ngôi nhà sử dụng bản thiết kế đó hoặc
  using that 🍀 sử dụng cái đó
  architecture plan i can create cars and 🍀 kế hoạch kiến ​​trúc tôi có thể tạo ra ô tô và
  i can create 🍀 tôi có thể tạo
  houses and those are the actual objects 🍀 những ngôi nhà và đó là những đối tượng thực tế
  whereas the blueprint or the 🍀 trong khi bản thiết kế hoặc
  architecture plan is more of like a 🍀 kế hoạch kiến ​​trúc giống như một
  template 🍀 bản mẫu
  it simply describes how that thing is 🍀 nó chỉ đơn giản là mô tả thứ đó như thế nào
  going to work 🍀 đi làm
  once you bring it to life so that's 🍀 một khi bạn đưa nó vào cuộc sống thì đó là
  what's happening right here this is a 🍀 những gì đang xảy ra ngay tại đây đây là một
  declaration 🍀 tuyên ngôn
  of a structure it describes all of its 🍀 của một cấu trúc nó mô tả tất cả các chức năng của nó
  properties and functions you know the 🍀 thuộc tính và chức năng mà bạn biết
  things that it can do 🍀 những thứ mà nó có thể làm
  and then it's only until we bring it to 🍀 và sau đó chỉ cho đến khi chúng tôi mang nó đến
  life by creating an instance of it 🍀 cuộc sống bằng cách tạo ra một thể hiện của nó
  that we can actually use it so now that 🍀 rằng chúng ta thực sự có thể sử dụng nó để bây giờ
  we have created 🍀 Chúng tôi đã tạo
  an instance of it let's explore what we 🍀 một ví dụ về nó, hãy khám phá những gì chúng ta
  can do with it 🍀 có thể làm với nó
  now first of all we need to keep track 🍀 bây giờ trước hết chúng ta cần theo dõi
  of this instance because it's considered 🍀 của trường hợp này bởi vì nó được coi là
  a piece of data 🍀 một mẩu dữ liệu
  we need to keep track of it and have a 🍀 chúng ta cần theo dõi nó và có một
  way to reference it 🍀 cách để tham khảo nó
  so let's create a variable called 🍀 vì vậy hãy tạo một biến gọi là
  i'm just going to call it a for 🍀 tôi sẽ chỉ gọi nó là một cho
  simplicity's sake and i'm going to 🍀 đơn giản là vì lợi ích và tôi sẽ
  assign that new instance to my variable 🍀 gán thể hiện mới đó cho biến của tôi
  a 🍀 Một
  hey wait a minute if this 🍀 này đợi một chút nếu điều này
  instance is a piece of data then 🍀 ví dụ là một phần dữ liệu sau đó
  what's the data type of this piece of 🍀 kiểu dữ liệu của phần này là gì
  data 🍀 dữ liệu
  and what data type is this variable 🍀 và biến này thuộc kiểu dữ liệu nào
  holding 🍀 giữ
  well the data type is the name of your 🍀 tốt, kiểu dữ liệu là tên của bạn
  structure 🍀 kết cấu
  that's right so i can actually 🍀 đúng vậy nên tôi thực sự có thể
  change my variable declaration from var 🍀 thay đổi khai báo biến của tôi từ var
  a 🍀 Một
  to var a colon my structure yes your 🍀 để var một dấu hai chấm cấu trúc của tôi có của bạn
  structure 🍀 kết cấu
  is its own data type so this instance 🍀 là kiểu dữ liệu riêng của nó nên trường hợp này
  that you've created 🍀 mà bạn đã tạo
  the data type of that is my structure 🍀 kiểu dữ liệu đó là cấu trúc của tôi
  now this little instance 🍀 bây giờ ví dụ nhỏ này
  has superpowers because we've designed 🍀 có siêu năng lực bởi vì chúng tôi đã thiết kế
  it that way it can hold data 🍀 theo cách đó nó có thể chứa dữ liệu
  in its message property and it can 🍀 trong thuộc tính tin nhắn của nó và nó có thể
  output that message using the my 🍀 xuất thông báo đó bằng cách sử dụng my
  function method 🍀 phương pháp chức năng
  so how can we go about accessing those 🍀 vậy làm thế nào chúng ta có thể tiếp cận những
  things of this instance 🍀 những thứ của trường hợp này
  well that's where dot notation comes in 🍀 vâng, đó là nơi ký hiệu dấu chấm xuất hiện
  let's take a look at what dot notation 🍀 chúng ta hãy xem ký hiệu dấu chấm là gì
  is 🍀 là
  so let's reference the variable a 🍀 vì vậy hãy tham khảo biến a
  followed by a dot or a period and as you 🍀 theo sau là dấu chấm hoặc dấu chấm và khi bạn
  can see from the autocomplete menu 🍀 có thể nhìn thấy từ menu tự động hoàn thành
  you can choose message which is 🍀 bạn có thể chọn tin nhắn đó là
  accessing the property 🍀 truy cập tài sản
  or you can select my function which is 🍀 hoặc bạn có thể chọn chức năng của tôi đó là
  going to execute the code in that method 🍀 sẽ thực thi mã trong phương thức đó
  so using dot notation you can access the 🍀 vì vậy, sử dụng ký hiệu dấu chấm, bạn có thể truy cập
  properties 🍀 của cải
  and the methods of that instance let's 🍀 và các phương thức của ví dụ đó hãy
  try this out 🍀 thử thứ này đi
  so first of all i am going to assign 🍀 vì vậy trước hết tôi sẽ chỉ định
  something to the property 🍀 một cái gì đó cho tài sản
  of this instance i am going to 🍀 của trường hợp này tôi sẽ
  assign let's say hi 🍀 chỉ định hãy nói xin chào
  and then i'm going to print out a dot 🍀 và sau đó tôi sẽ in ra một dấu chấm
  message 🍀 tin nhắn
  just to show you that i can indeed 🍀 chỉ để cho bạn thấy rằng tôi thực sự có thể
  access 🍀 truy cập
  this property and i can print it out 🍀 tài sản này và tôi có thể in nó ra
  next 🍀 Kế tiếp
  instead of using this print name in here 🍀 thay vì sử dụng tên in này ở đây
  i'm simply going to call 🍀 tôi chỉ đơn giản là sẽ gọi
  the method of that instance i'm going to 🍀 phương pháp của trường hợp đó tôi sẽ
  call my function 🍀 gọi chức năng của tôi
  and i'm going to run this code again 🍀 và tôi sẽ chạy lại mã này
  and we still get hi because 🍀 và chúng tôi vẫn nhận được lời chào vì
  the code inside of this method actually 🍀 mã bên trong phương pháp này thực sự
  just prints out the property 🍀 chỉ cần in ra tài sản
  now this little instance is quite the 🍀 bây giờ ví dụ nhỏ này là khá
  action hero isn't it it can do all of 🍀 anh hùng hành động không phải là nó có thể làm tất cả
  the things that we designed it to do 🍀 những thứ mà chúng tôi thiết kế nó để làm
  now because this structure declaration 🍀 bây giờ vì khai báo cấu trúc này
  is like a blueprint or an architecture 🍀 giống như một bản thiết kế hoặc một kiến ​​trúc
  plan 🍀 kế hoạch
  that means that we can create as many 🍀 điều đó có nghĩa là chúng ta có thể tạo ra bao nhiêu
  instances of it as we want 🍀 trường hợp của nó như chúng ta muốn
  so let's go ahead and create a second 🍀 vì vậy hãy tiếp tục và tạo một giây
  instance this time i'm going to declare 🍀 ví dụ lần này tôi sẽ tuyên bố
  another variable 🍀 một biến khác
  var b to store another 🍀 var b để lưu trữ cái khác
  instance of my structure now the 🍀 ví dụ về cấu trúc của tôi bây giờ
  important thing to note is that these 🍀 điều quan trọng cần lưu ý là những
  are completely 🍀 hoàn toàn
  independent instances going back to the 🍀 trường hợp độc lập quay trở lại
  car blueprint analogy it's like the car 🍀 tương tự bản thiết kế ô tô nó giống như ô tô
  factory made 🍀 Sản xuất tại nhà máy
  two cars from the same blueprint those 🍀 hai chiếc xe từ cùng một bản thiết kế
  two cars are treated as 🍀 hai ô tô được coi như
  two different cars same thing here i've 🍀 hai chiếc xe khác nhau giống nhau ở đây tôi đã
  just created two instances 🍀 vừa tạo hai trường hợp
  of my structure for example if i assign 🍀 cấu trúc của tôi chẳng hạn nếu tôi chỉ định
  a dot message to be hi and then i print 🍀 một tin nhắn dấu chấm là chào và sau đó tôi in
  out 🍀 ngoài
  b dot message or let me assign 🍀 b chấm nhắn hoặc để mình gán
  something else to b dot message 🍀 một cái gì đó khác để b chấm tin nhắn
  and i print that out you'll see that 🍀 và tôi in nó ra bạn sẽ thấy
  for a dot my function calling that 🍀 cho một dấu chấm, chức năng của tôi gọi đó là
  method 🍀 phương pháp
  it prints out hi and when i print out b 🍀 nó in ra hi và khi tôi in ra b
  dot message 🍀 tin nhắn dấu chấm
  it outputs world to the console 🍀 nó xuất thế giới ra bàn điều khiển
  so you can see that each instance keeps 🍀 vì vậy bạn có thể thấy rằng mỗi trường hợp giữ
  track of its 🍀 theo dõi của nó
  own values inside the message property 🍀 các giá trị riêng bên trong thuộc tính thông báo
  now you know that you need to create an 🍀 bây giờ bạn biết rằng bạn cần tạo một
  instance of a structure in order to use 🍀 thể hiện của một cấu trúc để sử dụng
  it 🍀 Nó
  let's take a look at how instances of 🍀 chúng ta hãy xem các trường hợp của
  structures can work together 🍀 cấu trúc có thể làm việc cùng nhau
  now to use an earlier example from the 🍀 bây giờ để sử dụng một ví dụ trước đó từ
  previous lesson 🍀 bài học trước
  suppose i have a chat view in my app so 🍀 giả sử tôi có chế độ xem trò chuyện trong ứng dụng của mình nên
  i've declared a structure to represent 🍀 tôi đã tuyên bố một cấu trúc để đại diện
  this view 🍀 quan điểm này
  it groups together all of the properties 🍀 nó nhóm tất cả các thuộc tính lại với nhau
  the view code and the methods 🍀 mã xem và các phương pháp
  related to my chat view and suppose that 🍀 liên quan đến chế độ xem trò chuyện của tôi và giả sử rằng
  i had 🍀 tôi đã có
  another structure to group together all 🍀 một cấu trúc khác để nhóm tất cả lại với nhau
  of the 🍀 sau đó
  networking code or the database code to 🍀 mã mạng hoặc mã cơ sở dữ liệu để
  save 🍀 cứu
  the data let's declare something like 🍀 dữ liệu hãy khai báo một cái gì đó như
  that here 🍀 đó ở đây
  so struct let's call this the network 🍀 Vì vậy, cấu trúc hãy gọi đây là mạng
  or let's call it the 🍀 hoặc hãy gọi nó là
  database manager okay and 🍀 quản lý cơ sở dữ liệu ổn và
  suppose that i had a method in here so 🍀 giả sử rằng tôi đã có một phương pháp ở đây để
  func let's call this save data 🍀 func hãy gọi đây là dữ liệu lưu
  and the input parameter for this is the 🍀 và tham số đầu vào cho điều này là
  data that we want to save so let's say 🍀 dữ liệu mà chúng tôi muốn lưu, vì vậy hãy nói
  let's declare a single parameter called 🍀 hãy khai báo một tham số duy nhất được gọi là
  data and make it a string type 🍀 data và biến nó thành kiểu chuỗi
  and it returns a value it's going to 🍀 và nó trả về một giá trị mà nó sẽ
  return a boolean value 🍀 trả về một giá trị boolean
  true or false indicating whether the 🍀 đúng hay sai cho biết liệu
  save 🍀 cứu
  was successful or not true for 🍀 đã thành công hay không đúng với
  successful false for 🍀 thành công sai cho
  unsuccessful and in real life 🍀 không thành công và trong cuộc sống thực
  it wouldn't be feasible to really return 🍀 nó sẽ không khả thi để thực sự trở lại
  a result instantly like this because 🍀 một kết quả ngay lập tức như thế này bởi vì
  depending on network conditions and 🍀 tùy thuộc vào điều kiện mạng và
  other factors you don't want to wait 🍀 các yếu tố khác mà bạn không muốn chờ đợi
  around for the data to save 🍀 xung quanh để lưu dữ liệu
  so you don't want execution to stop but 🍀 vì vậy bạn không muốn quá trình thực thi dừng lại nhưng
  for the sake of simplicity let's just 🍀 vì mục đích đơn giản, hãy chỉ
  say that 🍀 nói rằng
  we can return a result right away so in 🍀 chúng tôi có thể trả về kết quả ngay lập tức vì vậy trong
  here 🍀 đây
  this this code 🍀 mã này
  saves the data and returns 🍀 lưu dữ liệu và trả về
  a boolean result so 🍀 một kết quả boolean như vậy
  in this example i'm just going to return 🍀 trong ví dụ này tôi sẽ trở lại
  true so i'm just going to return a 🍀 đúng vì vậy tôi sẽ trở lại một
  hard-coded value because 🍀 giá trị mã hóa cứng bởi vì
  i'm not going to implement this method 🍀 tôi sẽ không thực hiện phương pháp này
  the main thing i want to show you 🍀 điều chính tôi muốn cho bạn thấy
  is how the chat view is going to use the 🍀 là cách chế độ xem trò chuyện sẽ sử dụng
  database manager 🍀 quản lý cơ sở dữ liệu
  to save the message so back in the chat 🍀 để lưu tin nhắn để quay lại cuộc trò chuyện
  view in this 🍀 xem trong này
  send chat method for example i could 🍀 gửi phương thức trò chuyện chẳng hạn tôi có thể
  create an instance of the database 🍀 tạo một thể hiện của cơ sở dữ liệu
  manager 🍀 giám đốc
  so let's say var 🍀 vì vậy hãy nói var
  db equals 🍀 db bằng
  database manager followed by a set of 🍀 trình quản lý cơ sở dữ liệu theo sau là một bộ
  parentheses 🍀 dấu ngoặc đơn
  and just like that i've created a new 🍀 và cứ như thế tôi đã tạo ra một cái mới
  instance of that database manager 🍀 ví dụ về trình quản lý cơ sở dữ liệu đó
  and now if i wanted to save my message i 🍀 và bây giờ nếu tôi muốn lưu tin nhắn của mình, tôi
  would call 🍀 sẽ gọi
  its save data method so db dot 🍀 phương pháp lưu dữ liệu của nó để db dot
  save data and i would pass in my message 🍀 lưu dữ liệu và tôi sẽ chuyển tin nhắn của mình
  property as the 🍀 tài sản như
  input data i'm going to go ahead and 🍀 dữ liệu đầu vào tôi sẽ tiếp tục và
  pass in message 🍀 gửi tin nhắn
  but remember when i call this save data 🍀 nhưng hãy nhớ khi tôi gọi đây là lưu dữ liệu
  method it 🍀 phương pháp nó
  returns a boolean value for me to 🍀 trả về một giá trị boolean cho tôi
  indicate whether that save was 🍀 cho biết liệu tiết kiệm đó đã được
  successful or not so i can assign 🍀 thành công hay không để tôi có thể chỉ định
  the output of that method to a constant 🍀 đầu ra của phương thức đó thành một hằng số
  i'm going to call this was success 🍀 tôi sẽ gọi đây là thành công
  right so i'm going to assign that 🍀 đúng vậy tôi sẽ chỉ định nó
  boolean output 🍀 đầu ra boolean
  into a new constant called was success 🍀 thành một hằng số mới được gọi là thành công
  or maybe i'll just call it successful 🍀 hoặc có lẽ tôi sẽ chỉ gọi nó là thành công
  and then down here 🍀 rồi xuống đây
  i can write some code check the 🍀 tôi có thể viết một số mã kiểm tra
  successful boolean value 🍀 giá trị boolean thành công
  if unsuccessful 🍀 nếu không thành công
  show alert to user now in future lessons 🍀 hiển thị cảnh báo cho người dùng ngay bây giờ trong các bài học trong tương lai
  you're going to learn how to 🍀 bạn sẽ học cách
  write these statements based on 🍀 viết những tuyên bố này dựa trên
  conditions but for now 🍀 điều kiện nhưng bây giờ
  this comment will have to do the main 🍀 bình luận này sẽ phải làm chính
  takeaway 🍀 mua mang về
  for this example that i'm showing you is 🍀 đối với ví dụ này mà tôi đang chỉ cho bạn là
  the fact that 🍀 thực tế là
  within the send chat method of the chat 🍀 trong phương thức gửi trò chuyện của cuộc trò chuyện
  view structure 🍀 xem cấu trúc
  it is using another structures methods 🍀 nó đang sử dụng các phương pháp cấu trúc khác
  by creating an instance of it so that's 🍀 bằng cách tạo một phiên bản của nó để đó là
  how instances 🍀 trường hợp như thế nào
  of structures can work together to make 🍀 các cấu trúc có thể làm việc cùng nhau để tạo ra
  your app function 🍀 chức năng ứng dụng của bạn
  and this is essentially all your app is 🍀 và đây thực chất là tất cả ứng dụng của bạn
  it's different instances 🍀 đó là những trường hợp khác nhau
  of structures working together to 🍀 của các cấu trúc làm việc cùng nhau để
  produce the views to handle the user 🍀 tạo các khung nhìn để xử lý người dùng
  input and to run the logic 🍀 đầu vào và để chạy logic
  now i want to talk about access levels 🍀 bây giờ tôi muốn nói về cấp truy cập
  for a second 🍀 trong một giây
  suppose for example in my database 🍀 giả sử ví dụ trong cơ sở dữ liệu của tôi
  manager 🍀 giám đốc
  i had some sort of information that i 🍀 tôi đã có một số loại thông tin mà tôi
  was tracking as a property 🍀 đã được theo dõi như một tài sản
  that only the database manager 🍀 rằng chỉ người quản lý cơ sở dữ liệu
  needed it wouldn't be relevant to any 🍀 cần nó sẽ không liên quan đến bất kỳ
  other structure maybe it is 🍀 cấu trúc khác có thể nó là
  a server name or something like that so 🍀 một tên máy chủ hoặc một cái gì đó như thế
  let me just write a new property in my 🍀 hãy để tôi viết một thuộc tính mới trong
  database manager called server name 🍀 quản lý cơ sở dữ liệu được gọi là tên máy chủ
  and i will assign to it a string called 🍀 và tôi sẽ gán cho nó một chuỗi gọi là
  server one now this property wouldn't be 🍀 máy chủ bây giờ thuộc tính này sẽ không
  interesting to any other structure but 🍀 thú vị với bất kỳ cấu trúc nào khác nhưng
  as you can see in the send chat method 🍀 như bạn có thể thấy trong phương thức gửi trò chuyện
  i've declared this instance of the 🍀 tôi đã tuyên bố trường hợp này của
  database manager if i write db 🍀 quản lý cơ sở dữ liệu nếu tôi viết db
  dot using dot notation i can access 🍀 dấu chấm sử dụng ký hiệu dấu chấm tôi có thể truy cập
  that server name property and sometimes 🍀 thuộc tính tên máy chủ đó và đôi khi
  you might not want to expose these 🍀 bạn có thể không muốn phơi bày những
  things 🍀 đồ đạc
  so what you can do is you can specify 🍀 vì vậy những gì bạn có thể làm là bạn có thể chỉ định
  an access level in front of that 🍀 một cấp độ truy cập trước đó
  property 🍀 tài sản
  so in front of var server name that 🍀 vì vậy trước tên máy chủ var
  property 🍀 tài sản
  i can put the keyword private so now it 🍀 tôi có thể đặt từ khóa riêng tư để bây giờ nó
  becomes 🍀 trở thành
  private var server name and by doing 🍀 tên máy chủ var riêng và bằng cách thực hiện
  this 🍀 cái này
  it keeps that property accessible only 🍀 nó giữ tài sản đó chỉ có thể truy cập
  within the scope of the database manager 🍀 trong phạm vi quản lý cơ sở dữ liệu
  so 🍀 Vì thế
  as you can see i can still access 🍀 như bạn có thể thấy tôi vẫn có thể truy cập
  server name inside of the save data 🍀 tên máy chủ bên trong lưu dữ liệu
  method right it's in the same scope 🍀 đúng phương pháp nó ở trong cùng một phạm vi
  but in the send chat method of the chat 🍀 nhưng trong phương thức gửi trò chuyện của trò chuyện
  view down here 🍀 xem dưới đây
  if i use dot notation again for my 🍀 nếu tôi sử dụng lại ký hiệu dấu chấm cho
  instance you can see that 🍀 ví dụ bạn có thể thấy rằng
  i cannot access that property anymore i 🍀 tôi không thể truy cập tài sản đó nữa tôi
  can't see it 🍀 không thể nhìn thấy nó
  and furthermore you can actually do the 🍀 và hơn nữa bạn thực sự có thể làm
  same thing with functions 🍀 điều tương tự với các chức năng
  so i can put private in front of the 🍀 vì vậy tôi có thể đặt riêng tư trước
  funk 🍀 vui nhộn
  keyword and now you can see that 🍀 từ khóa và bây giờ bạn có thể thấy rằng
  xcode complains i cannot run this method 🍀 xcode phàn nàn tôi không thể chạy phương thức này
  from 🍀 từ
  the sendchat method of the chat view now 🍀 phương thức sendchat của chế độ xem trò chuyện ngay bây giờ
  it's a good practice to be aware of 🍀 đó là một thực hành tốt để nhận thức được
  which properties and methods 🍀 thuộc tính và phương thức nào
  need to be accessible to other instances 🍀 cần phải được truy cập vào các trường hợp khác
  and other structures 🍀 và các cấu trúc khác
  and mark everything else as private 🍀 và đánh dấu mọi thứ khác là riêng tư
  doing this is a proactive way 🍀 làm điều này là một cách chủ động
  to prevent unexpected behavior and bugs 🍀 để ngăn chặn các hành vi và lỗi không mong muốn
  from cropping up 🍀 từ cắt lên
  alright and now for the final piece of 🍀 được rồi và bây giờ là phần cuối cùng của
  the lesson i want to relate everything 🍀 bài học tôi muốn liên hệ mọi thứ
  that you've learned so far 🍀 mà bạn đã học được cho đến nay
  back to a swift ui app inside xcode so 🍀 quay lại ứng dụng ui nhanh bên trong xcode để
  let's go ahead and do that 🍀 hãy tiếp tục và làm điều đó
  alright so now let's go ahead and start 🍀 được rồi, bây giờ chúng ta hãy tiếp tục và bắt đầu
  a brand new ios app project 🍀 một dự án ứng dụng ios hoàn toàn mới
  i'm just going to name this test project 🍀 tôi sẽ đặt tên cho dự án thử nghiệm này
  and make sure that interface is swift ui 🍀 và đảm bảo rằng giao diện nhanh chóng ui
  and lifecycle is swift ui app language 🍀 và vòng đời là ngôn ngữ ứng dụng Swift ui
  is swift 🍀 là nhanh chóng
  and we're good to go so i'm just going 🍀 và chúng tôi rất tốt để đi vì vậy tôi chỉ đi
  to save this on the desktop 🍀 để lưu cái này trên máy tính để bàn
  and we're going to first jump into 🍀 và trước tiên chúng ta sẽ nhảy vào
  contentview.swift 🍀 xem nội dung.swift
  now i'm just going to change this to 🍀 bây giờ tôi sẽ thay đổi cái này thành
  iphone 12 and i'm going to hit resume 🍀 iphone 12 và tôi sẽ nhấn tiếp tục
  but the important part is the main thing 🍀 nhưng phần quan trọng là điều chính
  i wanted to show you really 🍀 tôi muốn cho bạn thấy thực sự
  is the code right take a look at this 🍀 là mã đúng, hãy xem cái này
  struct you know that that means that 🍀 struct bạn biết điều đó có nghĩa là
  content view is a structure 🍀 xem nội dung là một cấu trúc
  there are some keywords and bits of code 🍀 có một số từ khóa và bit mã
  that we're going to gloss over for now 🍀 mà chúng ta sẽ lướt qua bây giờ
  because we haven't 🍀 bởi vì chúng ta chưa
  learned that yet and now is not the 🍀 đã học được điều đó và bây giờ không phải là
  right time to go over it 🍀 thời điểm thích hợp để vượt qua nó
  so i will gloss over a couple of things 🍀 vì vậy tôi sẽ lướt qua một vài điều
  but i really want to point out 🍀 nhưng tôi thực sự muốn chỉ ra
  the concepts that you have learned so 🍀 các khái niệm mà bạn đã học được như vậy
  far and show you where they fit in 🍀 xa và cho bạn thấy nơi họ phù hợp
  so this is a structured declaration let 🍀 vì vậy đây là một khai báo có cấu trúc let
  me just 🍀 tôi chỉ
  collapse this code for a second 🍀 thu gọn mã này trong một giây
  there you go so you can see that this is 🍀 ở đó bạn đi để bạn có thể thấy rằng đây là
  a struct 🍀 một cấu trúc
  the content view is the structure name 🍀 chế độ xem nội dung là tên cấu trúc
  followed by colon view and we're going 🍀 tiếp theo là xem dấu hai chấm và chúng ta sẽ đi
  to get to this in just a second 🍀 để đạt được điều này chỉ trong một giây
  and then you can see the curly brackets 🍀 và sau đó bạn có thể thấy dấu ngoặc nhọn
  containing 🍀 có chứa
  all of the code for that structure all 🍀 tất cả các mã cho cấu trúc đó tất cả
  right so let's 🍀 đúng vậy chúng ta hãy
  expand it again and let's take a look at 🍀 mở rộng nó một lần nữa và chúng ta hãy xem
  what else we've got 🍀 chúng ta còn gì nữa
  okay down here we've got the var keyword 🍀 được rồi ở đây chúng ta có từ khóa var
  so 🍀 Vì thế
  that's the start of a property the name 🍀 đó là sự khởi đầu của một tài sản tên
  of this property is body 🍀 của tài sản này là cơ thể
  okay so after that we've got colon and 🍀 được rồi, sau đó chúng ta có dấu hai chấm và
  then we've got some view 🍀 sau đó chúng tôi đã có một số quan điểm
  now we're going to get to this again in 🍀 bây giờ chúng ta sẽ quay trở lại vấn đề này trong
  just a second but 🍀 chỉ một giây nhưng
  you can see that there is a set of curly 🍀 bạn có thể thấy rằng có một bộ xoăn
  brackets in here 🍀 dấu ngoặc ở đây
  so that tells you that this is a 🍀 để cho bạn biết rằng đây là một
  computed property so let me collapse the 🍀 tài sản được tính toán vì vậy hãy để tôi thu gọn
  code again 🍀 mã lại
  and you can see that indeed this looks 🍀 và bạn có thể thấy rằng thực sự điều này trông
  like a computed property 🍀 giống như một tài sản được tính toán
  var body data type and then a set of 🍀 kiểu dữ liệu cơ thể var và sau đó là một bộ
  curly brackets 🍀 dấu ngoặc nhọn
  inside is the code that gets computed or 🍀 bên trong là mã được tính toán hoặc
  calculated 🍀 tính toán
  to return the value when this property 🍀 để trả về giá trị khi thuộc tính này
  is accessed 🍀 được truy cập
  so can you see all of these concepts 🍀 vậy bạn có thể thấy tất cả các khái niệm này
  that we learned in the last four lessons 🍀 mà chúng ta đã học trong bốn bài trước
  are they coming back 🍀 họ có quay lại không
  now i want to talk about this view and 🍀 bây giờ tôi muốn nói về quan điểm này và
  some view 🍀 một số xem
  so let's talk about this colon view 🍀 vì vậy chúng ta hãy nói về quan điểm dấu hai chấm này
  in the declaration of the structure 🍀 trong phần khai báo cấu trúc
  first 🍀 Đầu tiên
  judging by how you've used the colon 🍀 đánh giá bằng cách bạn đã sử dụng dấu hai chấm
  before you might think that 🍀 trước khi bạn có thể nghĩ rằng
  this is the data type for the structure 🍀 đây là kiểu dữ liệu cho cấu trúc
  but not quite that doesn't really make 🍀 nhưng không hoàn toàn không thực sự làm cho
  sense does it because 🍀 ý nghĩa làm điều đó bởi vì
  remember the name of the structure 🍀 nhớ tên của cấu trúc
  itself is the data type 🍀 chính nó là kiểu dữ liệu
  for instances of that structure so 🍀 đối với các trường hợp của cấu trúc đó vì vậy
  what is this colon view after the 🍀 dấu hai chấm này là gì sau dấu hai chấm
  structure name 🍀 tên cấu trúc
  well when you're declaring a structure 🍀 tốt khi bạn khai báo một cấu trúc
  the colon after the structure name 🍀 dấu hai chấm sau tên cấu trúc
  indicates that this structure follows a 🍀 chỉ ra rằng cấu trúc này tuân theo một
  protocol 🍀 giao thức
  in this case it follows the view 🍀 trong trường hợp này nó tuân theo quan điểm
  protocol 🍀 giao thức
  so what do you think about when you hear 🍀 vậy bạn nghĩ gì khi nghe
  the word protocol 🍀 giao thức từ
  well for me i think about it as a set of 🍀 đối với tôi, tôi nghĩ về nó như một tập hợp
  rules 🍀 quy tắc
  or a set of actions for example 🍀 hoặc một tập hợp các hành động chẳng hạn
  kind of like the fire emergency protocol 🍀 giống như giao thức khẩn cấp hỏa hoạn
  that a building might have 🍀 rằng một tòa nhà có thể có
  for what to do when a fire occurs or 🍀 để làm gì khi xảy ra hỏa hoạn hoặc
  like the building code that a house 🍀 giống như mã xây dựng mà một ngôi nhà
  developer 🍀 nhà phát triển
  has to follow to build a house that is 🍀 phải tuân theo để xây dựng một ngôi nhà
  safe 🍀 an toàn
  similarly in swift a protocol is a 🍀 tương tự trong Swift, một giao thức là một
  specification or a set of rules that a 🍀 đặc điểm kỹ thuật hoặc một tập hợp các quy tắc mà một
  structure 🍀 kết cấu
  has to follow this colon view part 🍀 phải theo dõi phần xem dấu hai chấm này
  indicates that this content view follows 🍀 chỉ ra rằng chế độ xem nội dung này tuân theo
  the view protocol 🍀 giao thức xem
  in formal swift terminology content view 🍀 trong chế độ xem nội dung thuật ngữ Swift chính thức
  conforms to the view protocol 🍀 phù hợp với giao thức xem
  now one important thing i have to 🍀 bây giờ một điều quan trọng tôi phải
  mention is that writing 🍀 đề cập đến là viết
  colon followed by the protocol is 🍀 dấu hai chấm theo sau là giao thức là
  saying and declaring that you conform to 🍀 nói và tuyên bố rằng bạn tuân theo
  the protocol 🍀 giao thức
  but do you actually it's kind of like 🍀 nhưng bạn có thực sự nó giống như
  raising your 🍀 nâng cao của bạn
  hand in and declaring something but do 🍀 bàn giao và tuyên bố một cái gì đó nhưng làm
  you 🍀 Bạn
  actually follow the rules of that 🍀 thực sự tuân theo các quy tắc của điều đó
  protocol 🍀 giao thức
  and so the code inside of this structure 🍀 và vì vậy mã bên trong cấu trúc này
  actually has to satisfy 🍀 thực sự phải đáp ứng
  the specifications for that protocol in 🍀 các thông số kỹ thuật cho giao thức đó trong
  this case for the view protocol 🍀 trường hợp này cho giao thức xem
  to conform to it we have to have a body 🍀 để phù hợp với nó chúng ta phải có một cơ thể
  property 🍀 tài sản
  that returns some view as you can see 🍀 trả về một số chế độ xem như bạn có thể thấy
  here 🍀 đây
  our content view structure does indeed 🍀 cấu trúc xem nội dung của chúng tôi thực sự
  satisfy 🍀 thỏa mãn
  that rule so that's why it conforms to 🍀 quy tắc đó vì vậy đó là lý do tại sao nó phù hợp với
  the view protocol 🍀 giao thức xem
  so now that you understand what 🍀 vì vậy bây giờ bạn đã hiểu những gì
  protocols are you can see that the data 🍀 giao thức là bạn có thể thấy rằng dữ liệu
  type for this body property 🍀 loại cho thuộc tính cơ thể này
  is actually any value that conforms 🍀 thực sự là bất kỳ giá trị nào phù hợp
  to the view protocol yes in this case 🍀 đối với giao thức xem có trong trường hợp này
  the data type for this property isn't 🍀 loại dữ liệu cho thuộc tính này không phải là
  actually a data type 🍀 thực sự là một kiểu dữ liệu
  but it's actually any data type that 🍀 nhưng nó thực sự là bất kỳ loại dữ liệu nào
  conforms to 🍀 phù hợp với
  a certain protocol in this case the view 🍀 một giao thức nhất định trong trường hợp này là chế độ xem
  protocol 🍀 giao thức
  so inside of this code for this computed 🍀 vì vậy bên trong mã này cho tính toán này
  property it needs to return some 🍀 tài sản nó cần phải trả lại một số
  instance that conforms to the view 🍀 trường hợp phù hợp với quan điểm
  protocol let's open up this code and see 🍀 giao thức hãy mở mã này và xem
  what we have 🍀 những gì chúng ta có
  so what do we have here well we have a 🍀 vậy chúng ta có gì ở đây, chúng ta có một
  single code statement 🍀 tuyên bố mã đơn
  and remember what i said about computed 🍀 và nhớ những gì tôi đã nói về tính toán
  properties if it's 🍀 thuộc tính nếu nó là
  only a single code statement then you 🍀 chỉ một câu lệnh mã duy nhất sau đó bạn
  can omit the return keyword but 🍀 có thể bỏ qua từ khóa return nhưng
  you know i'm going to explicitly specify 🍀 bạn biết tôi sẽ xác định rõ ràng
  it so that it's clear for you 🍀 nó để nó rõ ràng cho bạn
  so what's happening here it looks like 🍀 vì vậy những gì đang xảy ra ở đây có vẻ như
  we are 🍀 chúng tôi là
  creating an instance of a text 🍀 tạo một thể hiện của một văn bản
  structure now one way to figure that out 🍀 cấu trúc bây giờ một cách để tìm ra điều đó
  is if you 🍀 là nếu bạn
  go into the utilities pane or the 🍀 đi vào ngăn tiện ích hoặc
  inspector pane 🍀 ngăn thanh tra
  and you go into the quick help tab right 🍀 và bạn vào tab trợ giúp nhanh ngay
  here 🍀 đây
  and you just put your cursor over the 🍀 và bạn chỉ cần đặt con trỏ chuột lên
  thing you want to look at so i'm going 🍀 thứ bạn muốn xem vì vậy tôi sẽ đi
  to click into this text 🍀 để bấm vào văn bản này
  so as you can see here indeed 🍀 như bạn có thể thấy ở đây thực sự
  text is a structure so we are creating 🍀 văn bản là một cấu trúc vì vậy chúng tôi đang tạo
  an 🍀 MỘT
  instance of the text structure however 🍀 ví dụ về cấu trúc văn bản tuy nhiên
  you'll notice that creating this 🍀 bạn sẽ nhận thấy rằng việc tạo này
  instance is different from 🍀 ví dụ khác với
  how we did it before because we used a 🍀 cách chúng tôi đã làm trước đây bởi vì chúng tôi đã sử dụng một
  empty set of parentheses here 🍀 tập hợp dấu ngoặc đơn trống ở đây
  when we're creating an instance of this 🍀 khi chúng tôi đang tạo một ví dụ về điều này
  text structure we're passing in some 🍀 cấu trúc văn bản chúng tôi đang chuyển qua một số
  input data 🍀 dữ liệu đầu vào
  so yes you can actually pass in input 🍀 vì vậy, vâng, bạn thực sự có thể chuyển đầu vào
  data 🍀 dữ liệu
  as a parameter into the creation of an 🍀 như một tham số trong việc tạo ra một
  instance of a structure these are called 🍀 thể hiện của một cấu trúc chúng được gọi là
  initializers 🍀 trình khởi tạo
  now we haven't talked about that yet and 🍀 bây giờ chúng ta chưa nói về điều đó và
  we will in upcoming lessons but for now 🍀 chúng ta sẽ học trong những bài học sắp tới nhưng bây giờ
  just understand that 🍀 chỉ cần hiểu rằng
  there is a way for you to pass in input 🍀 có một cách để bạn chuyển vào đầu vào
  data into the creation 🍀 dữ liệu vào việc tạo
  of an instance of a structure so that's 🍀 của một thể hiện của một cấu trúc vì vậy đó là
  exactly what's happening right here now 🍀 chính xác những gì đang xảy ra ngay bây giờ
  you might be wondering 🍀 bạn có thể tự hỏi
  does this text structure conform to the 🍀 cấu trúc văn bản này có phù hợp với
  view protocol 🍀 xem giao thức
  well it must right because according to 🍀 tốt nó phải đúng bởi vì theo
  this body 🍀 cơ thể này
  property whatever is returned for this 🍀 tài sản bất cứ điều gì được trả lại cho điều này
  computed property has to conform to this 🍀 thuộc tính được tính toán phải phù hợp với điều này
  so again let's dive into the quick help 🍀 Vì vậy, một lần nữa chúng ta hãy đi sâu vào trợ giúp nhanh chóng
  so i'm going to hover over text i'm 🍀 vì vậy tôi sẽ di chuột qua văn bản tôi
  going to 🍀 sẽ
  go down and in fact i'm going to open up 🍀 đi xuống và trên thực tế tôi sẽ mở ra
  the developer documentation 🍀 tài liệu dành cho nhà phát triển
  now if you're using i think xcode 1 12.1 🍀 bây giờ nếu bạn đang sử dụng tôi nghĩ xcode 1 12.1
  there was a bug that crashed when you 🍀 có một lỗi đã xảy ra khi bạn
  tried to open this window 🍀 đã cố mở cửa sổ này
  so you just have to update xcode if this 🍀 vì vậy bạn chỉ cần cập nhật xcode nếu điều này
  crashes for you 🍀 tai nạn cho bạn
  okay so this is the documentation for 🍀 được rồi vì vậy đây là tài liệu cho
  text you can see that it is a structure 🍀 văn bản bạn có thể thấy rằng nó là một cấu trúc
  and if you scroll all the way down i'm 🍀 và nếu bạn cuộn xuống hết cỡ thì tôi
  going to skip all this stuff because i 🍀 sẽ bỏ qua tất cả những thứ này bởi vì tôi
  want to just show you 🍀 muốn chỉ cho bạn thấy
  that it conforms to two protocols 🍀 rằng nó phù hợp với hai giao thức
  actually but what we're interested in 🍀 thực sự nhưng những gì chúng tôi quan tâm
  is it does conform to the view protocol 🍀 nó có phù hợp với giao thức xem không
  all right and another thing i want to 🍀 được rồi và một điều nữa tôi muốn
  point out is that 🍀 chỉ ra rằng
  this remember this from early on this 🍀 điều này hãy nhớ điều này từ sớm
  is a modifier and now to you it must 🍀 là một công cụ sửa đổi và bây giờ với bạn nó phải
  look pretty familiar 🍀 nhìn khá quen
  right because it looks like we're 🍀 đúng bởi vì có vẻ như chúng ta
  calling a method this is dot notation 🍀 gọi một phương thức đây là ký hiệu dấu chấm
  right here 🍀 ngay chỗ này
  we are creating an instance of the text 🍀 chúng tôi đang tạo một thể hiện của văn bản
  structure 🍀 kết cấu
  and then we're calling the padding 🍀 và sau đó chúng tôi gọi phần đệm
  method on that instance 🍀 phương pháp trong trường hợp đó
  see if i put it on the same line it 🍀 xem nếu tôi đặt nó trên cùng một dòng nó
  might look 🍀 có thể nhìn
  a little more familiar for you 🍀 một chút quen thuộc hơn cho bạn
  right so i hope the dots are starting to 🍀 đúng vậy tôi hy vọng các dấu chấm đang bắt đầu
  connect no pun 🍀 kết nối không chơi chữ
  intended okay so to relate this back to 🍀 dự định ổn vì vậy hãy liên hệ lại điều này với
  the previous 🍀 trước đó
  structures lesson where i showed you um 🍀 bài học về cấu trúc mà tôi đã chỉ cho bạn um
  how to declare a structure we had a 🍀 làm thế nào để khai báo một cấu trúc chúng tôi đã có một
  couple of different 🍀 vài khác nhau
  sections right so at the top here we 🍀 các phần bên phải nên ở trên cùng ở đây chúng tôi
  would declare 🍀 sẽ tuyên bố
  our properties and in fact this body 🍀 tài sản của chúng tôi và trên thực tế cơ thể này
  property is considered a property right 🍀 tài sản được coi là quyền tài sản
  but it also contains our view code 🍀 nhưng nó cũng chứa mã xem của chúng tôi
  so this would be where our view code 🍀 vì vậy đây sẽ là nơi mã xem của chúng tôi
  goes 🍀 đi
  and then down here we would declare the 🍀 và sau đó xuống đây chúng tôi sẽ tuyên bố
  methods 🍀 phương pháp
  for this structure okay so i think you 🍀 cho cấu trúc này được rồi vì vậy tôi nghĩ rằng bạn
  understand 🍀 hiểu
  that this structure called content view 🍀 rằng cấu trúc này được gọi là chế độ xem nội dung
  represents the main 🍀 đại diện cho chính
  view or the main screen of this app but 🍀 xem hoặc màn hình chính của ứng dụng này nhưng
  then we say that structures by 🍀 sau đó chúng tôi nói rằng cấu trúc bởi
  themselves don't really do anything you 🍀 bản thân họ không thực sự làm bất cứ điều gì bạn
  need to create an instance of it 🍀 cần tạo một thể hiện của nó
  for it to work well where 🍀 để nó hoạt động tốt ở đâu
  are we creating an instance of content 🍀 chúng ta đang tạo một thể hiện của nội dung
  view well for that 🍀 xem tốt cho điều đó
  we need to drill back up to the entry 🍀 chúng ta cần quay trở lại mục nhập
  point 🍀 điểm
  of the app which is this right here so 🍀 của ứng dụng này ở ngay đây
  you can see 🍀 bạn có thể thấy
  this by itself is also a structure and 🍀 bản thân nó cũng là một cấu trúc và
  the name of this structure is the name 🍀 tên của cấu trúc này là tên
  of your project 🍀 của dự án của bạn
  and it conforms to a protocol called app 🍀 và nó tuân theo một giao thức gọi là ứng dụng
  so let's look at the quick help and see 🍀 vì vậy hãy xem sự trợ giúp nhanh chóng và xem
  what this app protocol is all about 🍀 giao thức ứng dụng này là gì
  create an app by declaring a structure 🍀 tạo một ứng dụng bằng cách khai báo một cấu trúc
  that conforms to the app protocol 🍀 phù hợp với giao thức ứng dụng
  implement the required body computed 🍀 thực hiện phần thân được yêu cầu
  property to define the app's content 🍀 thuộc tính để xác định nội dung của ứng dụng
  now we have another body computed 🍀 bây giờ chúng ta có một cơ thể khác được tính toán
  property 🍀 tài sản
  i'm going to skip over some of this 🍀 tôi sẽ bỏ qua một số điều này
  scene and window group stuff 🍀 công cụ nhóm cảnh và cửa sổ
  i want to point out that this is where 🍀 tôi muốn chỉ ra rằng đây là nơi
  we are creating an 🍀 chúng tôi đang tạo ra một
  instance of that content view structure 🍀 ví dụ về cấu trúc chế độ xem nội dung đó
  so do you see how everything fits 🍀 vậy bạn có thấy mọi thứ phù hợp như thế nào không
  together furthermore 🍀 cùng nhau hơn nữa
  let's go back to content view and let me 🍀 hãy quay lại chế độ xem nội dung và để tôi
  show you something else 🍀 cho bạn thấy một cái gì đó khác
  so for this i'm going to open up the 🍀 vì vậy đối với điều này tôi sẽ mở ra
  canvas again 🍀 vải một lần nữa
  and i'm going to resume the preview 🍀 và tôi sẽ tiếp tục xem trước
  look at this structure down here this is 🍀 nhìn vào cấu trúc này dưới đây đây là
  what is powering the preview that you 🍀 điều gì đang thúc đẩy bản xem trước mà bạn
  see here this structure isn't really 🍀 xem ở đây cấu trúc này không thực sự
  used 🍀 đã sử dụng
  as part of your app it's only for 🍀 là một phần của ứng dụng của bạn, nó chỉ dành cho
  previewing in the canvas right here 🍀 xem trước trong canvas ngay tại đây
  so it conforms to the preview provider 🍀 vì vậy nó phù hợp với nhà cung cấp xem trước
  protocol 🍀 giao thức
  and it's got a property called previews 🍀 và nó có một thuộc tính gọi là xem trước
  static keyword ignore for now we'll 🍀 bỏ qua từ khóa tĩnh bây giờ chúng ta sẽ
  explain that in a future lesson 🍀 giải thích rằng trong một bài học trong tương lai
  and down here you can see that an 🍀 và dưới đây bạn có thể thấy rằng một
  instance of your content 🍀 ví dụ về nội dung của bạn
  view structure is being created and 🍀 cấu trúc khung nhìn đang được tạo và
  that's actually what's being shown here 🍀 đó thực sự là những gì đang được hiển thị ở đây
  in fact i can apply modifiers to this 🍀 trên thực tế, tôi có thể áp dụng các công cụ sửa đổi cho điều này
  instance 🍀 ví dụ
  and it's going to change what we have 🍀 và nó sẽ thay đổi những gì chúng ta có
  here so i can use dot notation 🍀 ở đây để tôi có thể sử dụng ký hiệu dấu chấm
  to call modifiers which now you know are 🍀 để gọi công cụ sửa đổi mà bây giờ bạn biết là
  just methods 🍀 chỉ là phương pháp
  right of that view or of that instance 🍀 quyền của chế độ xem đó hoặc của trường hợp đó
  actually instead of doing that why don't 🍀 thực sự thay vì làm điều đó tại sao không
  we 🍀 chúng tôi
  use the visual way and see how it 🍀 sử dụng cách trực quan và xem nó như thế nào
  changes the code 🍀 thay đổi mã
  so why don't i preview this i change 🍀 vậy tại sao tôi không xem trước cái này tôi thay đổi
  actually i'm going to change the scheme 🍀 thực sự tôi sẽ thay đổi kế hoạch
  to dark mode so you can see it adds a 🍀 sang chế độ tối để bạn có thể thấy nó thêm một
  modifier 🍀 bổ nghĩa
  to that instance let's also 🍀 trong trường hợp đó chúng ta hãy cũng
  change the device to ipod touch 🍀 đổi máy thành ipod touch
  you can see it adds another modifier 🍀 bạn có thể thấy nó thêm một công cụ sửa đổi khác
  called preview device 🍀 được gọi là thiết bị xem trước
  now what happens if i create another 🍀 bây giờ điều gì xảy ra nếu tôi tạo một cái khác
  preview because you can click on this 🍀 xem trước vì bạn có thể nhấp vào đây
  button right here 🍀 nút ngay tại đây
  and it's going to create another preview 🍀 và nó sẽ tạo một bản xem trước khác
  down here 🍀 Xuống đây
  you can see what happens to the code 🍀 bạn có thể thấy những gì xảy ra với mã
  well it created 🍀 tốt nó được tạo ra
  another instance of content view and 🍀 một ví dụ khác về chế độ xem nội dung và
  it's got its own modifiers now this is 🍀 bây giờ nó có công cụ sửa đổi riêng
  grouped together 🍀 nhóm lại với nhau
  by a container a view container called 🍀 bởi một vùng chứa, một vùng chứa chế độ xem được gọi là
  group which we haven't really covered 🍀 nhóm mà chúng tôi chưa thực sự đề cập
  yet 🍀 chưa
  but we will in the future just know that 🍀 nhưng chúng ta sẽ biết rằng trong tương lai
  it groups together views 🍀 nó nhóm các lượt xem lại với nhau
  so this instance of content view is for 🍀 vì vậy phiên bản xem nội dung này là dành cho
  this one up here and this instance is 🍀 cái này ở đây và ví dụ này là
  this one down here 🍀 cái này dưới đây
  see i can change this scheme to light 🍀 xem tôi có thể thay đổi sơ đồ này thành ánh sáng
  and you can see it changes that here and 🍀 và bạn có thể thấy nó thay đổi ở đây và
  i can change this device to iphone 12 🍀 tôi có thể đổi thiết bị này thành iphone 12
  and it changes that modifier there so 🍀 và nó thay đổi công cụ sửa đổi đó ở đó
  they're independent instances 🍀 chúng là những trường hợp độc lập
  phew that was a lot to take in and 🍀 phew đó là rất nhiều để đưa vào và
  that's why i never recommend for you to 🍀 đó là lý do tại sao tôi không bao giờ khuyên bạn nên
  memorize anything 🍀 ghi nhớ bất cứ điều gì
  the more practice you get the sooner 🍀 bạn càng thực hành nhiều càng sớm
  it's going to become second nature to 🍀 nó sẽ trở thành bản chất thứ hai để
  you 🍀 Bạn
  let's do a quick recap shall we you 🍀 chúng ta hãy tóm tắt nhanh nhé
  learned how to create 🍀 đã học cách tạo
  instances of your structure you learn 🍀 các ví dụ về cấu trúc của bạn mà bạn học
  how to use dot notation to access the 🍀 cách sử dụng ký hiệu dấu chấm để truy cập
  methods and the properties of your 🍀 phương pháp và các thuộc tính của bạn
  instances 🍀 trường hợp
  and you also learn about access levels 🍀 và bạn cũng tìm hiểu về các cấp truy cập
  so you can control which properties and 🍀 để bạn có thể kiểm soát thuộc tính nào và
  which methods can be accessed with 🍀 phương pháp nào có thể được truy cập với
  dot notation finally 🍀 ký hiệu dấu chấm cuối cùng
  you saw how all of these concepts relate 🍀 bạn đã thấy tất cả những khái niệm này liên quan như thế nào
  back to a swift ui 🍀 trở lại giao diện người dùng nhanh
  app in xcode now you know what i'm going 🍀 app trong xcode bây giờ bạn biết tôi sẽ làm gì
  to say next 🍀 để nói tiếp theo
  reinforce your learnings with the quiz 🍀 củng cố việc học của bạn với bài kiểm tra
  and get hands-on practice with the 🍀 và được thực hành trực tiếp với
  challenge 🍀 thử thách
  and hey if you don't feel like you need 🍀 và này nếu bạn không cảm thấy mình cần
  the challenge do it anyways 🍀 thách thức làm điều đó anyways
  just to prove me wrong now in the 🍀 chỉ để chứng minh tôi sai bây giờ trong
  following lessons we're going to go back 🍀 bài học sau chúng ta sẽ quay trở lại
  to our war card game 🍀 đến trò chơi bài chiến tranh của chúng tôi
  and take all of this newfound swift 🍀 và lấy tất cả Swift mới phát hiện này
  knowledge and bring that war card game 🍀 kiến thức và mang trò chơi bài chiến tranh đó
  to life 🍀 với cuộc sống
  in the next lesson i'll show you how to 🍀 trong bài học tiếp theo tôi sẽ chỉ cho bạn cách
  use the button element to handle user 🍀 sử dụng phần tử nút để xử lý người dùng
  interaction 🍀 sự tương tác
  alright i'll see you there 🍀 được rồi tôi sẽ gặp bạn ở đó
  hello and welcome in the previous few 🍀 xin chào và chào mừng trong vài lần trước
  lessons you learned the basics of swift 🍀 bài học bạn đã học những điều cơ bản về swift
  programming and i showed you how those 🍀 lập trình và tôi đã chỉ cho bạn cách chúng
  concepts apply to your xcode project 🍀 các khái niệm áp dụng cho dự án xcode của bạn
  now let's get back to swift ui and views 🍀 bây giờ hãy quay lại giao diện người dùng nhanh và chế độ xem
  specifically today i want to talk about 🍀 đặc biệt hôm nay tôi muốn nói về
  the button view 🍀 chế độ xem nút
  let's dive right in all right so i've 🍀 chúng ta hãy đi sâu vào tất cả các quyền vì vậy tôi đã
  got a brand new swift ui project here i 🍀 có một dự án Swift ui hoàn toàn mới ở đây tôi
  thought we would 🍀 nghĩ rằng chúng tôi sẽ
  take a look at creating some button 🍀 hãy xem việc tạo một số nút
  instances in a fresh project together 🍀 các trường hợp trong một dự án mới cùng nhau
  before we go back to the war card game 🍀 trước khi chúng ta quay lại trò chơi bài chiến tranh
  to use the button instance there so 🍀 để sử dụng phiên bản nút ở đó
  let's go ahead and delete this 🍀 hãy tiếp tục và xóa cái này
  text view right here and create some 🍀 xem văn bản ngay tại đây và tạo một số
  button 🍀 cái nút
  instances a button is a structure just 🍀 trường hợp một nút là một cấu trúc chỉ
  like that text 🍀 như văn bản đó
  was and we need to create a button 🍀 đã và chúng ta cần tạo một nút
  instance 🍀 ví dụ
  in other words we need to instantiate a 🍀 nói cách khác, chúng ta cần khởi tạo một
  button 🍀 cái nút
  that's just another way of saying it so 🍀 đó chỉ là một cách khác để nói như vậy
  let's go ahead and type button 🍀 hãy tiếp tục và gõ nút
  followed by opening a left rounded 🍀 tiếp theo là mở một vòng trái
  bracket 🍀 dấu ngoặc
  and that's going to bring up our 🍀 và điều đó sẽ mang lại cho chúng ta
  autocomplete menu there are a couple of 🍀 menu tự động hoàn thành có một vài
  different 🍀 khác biệt
  initializer methods we can use to create 🍀 các phương thức khởi tạo mà chúng ta có thể sử dụng để tạo
  a button instance 🍀 một phiên bản nút
  and these initializer methods remember 🍀 và các phương thức khởi tạo này ghi nhớ
  are just 🍀 chỉ là
  different ways of creating an instance 🍀 các cách khác nhau để tạo một thể hiện
  while passing in some data 🍀 trong khi truyền vào một số dữ liệu
  two of the most common ones that you're 🍀 hai trong số những cái phổ biến nhất mà bạn
  going to be using is this one right here 🍀 sẽ được sử dụng là cái này ngay tại đây
  where you pass in a string and 🍀 nơi bạn chuyển vào một chuỗi và
  this data type string protocol just 🍀 giao thức chuỗi kiểu dữ liệu này chỉ
  means anything that conforms to that 🍀 có nghĩa là bất cứ điều gì phù hợp với điều đó
  string protocol and a piece of text does 🍀 giao thức chuỗi và một đoạn văn bản không
  this one will allow you to just pass in 🍀 cái này sẽ cho phép bạn vượt qua
  a piece of text to use as the button 🍀 một đoạn văn bản để sử dụng làm nút
  label 🍀 nhãn
  and it will also allow you to pass in a 🍀 và nó cũng sẽ cho phép bạn vượt qua một
  block of code 🍀 khối mã
  to run when that button is tapped on so 🍀 để chạy khi nút đó được gõ vào
  let's take a look at these parameters in 🍀 chúng ta hãy xem các tham số này trong
  more detail so this first parameter for 🍀 chi tiết hơn vì vậy tham số đầu tiên này cho
  the label of the button is pretty 🍀 nhãn của nút là đẹp
  straightforward here you just pass in a 🍀 đơn giản ở đây bạn chỉ cần vượt qua trong một
  piece of text 🍀 đoạn văn bản
  i am going to call this button click me 🍀 tôi sẽ gọi nút này bấm vào tôi
  and if we update actually our preview 🍀 và nếu chúng tôi thực sự cập nhật bản xem trước của chúng tôi
  won't 🍀 sẽ không
  do anything yet before we specify the 🍀 làm bất cứ điều gì trước khi chúng tôi chỉ định
  second parameter the data type for this 🍀 tham số thứ hai loại dữ liệu cho điều này
  action parameter 🍀 tham số hành động
  is something that you haven't seen yet 🍀 là một cái gì đó mà bạn chưa nhìn thấy
  but it kind of looks like 🍀 nhưng nó trông giống như
  a function signature without the 🍀 một chữ ký chức năng mà không có
  function name right 🍀 đúng tên hàm
  this is called a closure and simply put 🍀 đây được gọi là đóng cửa và chỉ cần đặt
  you can think of it as a block of code 🍀 bạn có thể coi nó như một khối mã
  or 🍀 hoặc
  like a function without the function 🍀 giống như một chức năng mà không có chức năng
  name you pass in a block of code 🍀 tên bạn chuyển vào một khối mã
  as a parameter and when the button is 🍀 như một tham số và khi nút là
  tapped on 🍀 gõ vào
  it's going to run that block of code 🍀 nó sẽ chạy khối mã đó
  again this is called a closure so let's 🍀 một lần nữa, đây được gọi là đóng cửa, vì vậy hãy
  take a look at how we can specify 🍀 hãy xem làm thế nào chúng ta có thể chỉ định
  the closure as a parameter now one of 🍀 việc đóng cửa như một tham số bây giờ là một trong những
  the easiest things you can do 🍀 những điều dễ dàng nhất bạn có thể làm
  is you can highlight this parameter and 🍀 là bạn có thể đánh dấu tham số này và
  just hit enter 🍀 chỉ cần nhấn nhập
  and xcode is going to automatically open 🍀 và xcode sẽ tự động mở
  up a closure for you 🍀 lên một đóng cửa cho bạn
  to type your block of code in but i'm 🍀 để nhập khối mã của bạn vào nhưng tôi
  not going to do that right now because i 🍀 sẽ không làm điều đó ngay bây giờ bởi vì tôi
  want to go through 🍀 muốn đi qua
  the steps and really break it down to 🍀 các bước và thực sự chia nhỏ nó thành
  you and show you what 🍀 bạn và cho bạn thấy những gì
  exactly you're specifying and then at 🍀 chính xác bạn đang chỉ định và sau đó tại
  the end i'll show you what happens when 🍀 phần cuối tôi sẽ cho bạn thấy điều gì xảy ra khi
  you do hit enter and just let xcode open 🍀 bạn nhấn enter và để xcode mở
  the closure for you 🍀 đóng cửa cho bạn
  let's specify that closure manually for 🍀 hãy chỉ định cách đóng đó theo cách thủ công cho
  now all right 🍀 bây giờ ổn rồi
  so the type of closure that this expects 🍀 vì vậy loại đóng cửa mà điều này mong đợi
  is the simplest type that you can see 🍀 là loại đơn giản nhất mà bạn có thể thấy
  it accepts no parameters these two 🍀 nó không chấp nhận tham số nào trong hai
  brackets right here these two rounded 🍀 dấu ngoặc ngay tại đây hai cái này được làm tròn
  brackets 🍀 dấu ngoặc
  that is a parameter list just like you 🍀 đó là một danh sách tham số giống như bạn
  would have 🍀 sẽ có
  when you're declaring a function but 🍀 khi bạn đang khai báo một hàm nhưng
  it's empty so there are no parameters 🍀 nó trống nên không có tham số
  and then next you see a dash followed by 🍀 và sau đó tiếp theo bạn thấy một dấu gạch ngang theo sau bởi
  a greater than symbol 🍀 lớn hơn ký hiệu
  and you know that that means return type 🍀 và bạn biết điều đó có nghĩa là kiểu trả về
  right and it returns 🍀 đúng và nó trở lại
  void void means nothing so 🍀 void void có nghĩa là không có gì như vậy
  it doesn't return anything and it 🍀 nó không trả lại bất cứ thứ gì và nó
  doesn't accept anything it's very simply 🍀 không chấp nhận bất cứ điều gì nó rất đơn giản
  a block of code 🍀 một khối mã
  all right so now that you know the type 🍀 được rồi vì vậy bây giờ bạn đã biết loại
  of function that it's expecting 🍀 của chức năng mà nó mong đợi
  let's go ahead and specify it so i'm 🍀 hãy tiếp tục và chỉ định nó vì vậy tôi
  going to delete that 🍀 sẽ xóa cái đó
  and i'm going to open up a pair of curly 🍀 và tôi sẽ mở ra một cặp xoăn
  brackets 🍀 dấu ngoặc
  now i don't need to return anything i 🍀 bây giờ tôi không cần phải trả lại bất cứ điều gì tôi
  don't need to specify any parameters 🍀 không cần chỉ định bất kỳ tham số nào
  it's very simply 🍀 nó rất đơn giản
  just a block of code so you can specify 🍀 chỉ là một khối mã để bạn có thể chỉ định
  that with just 🍀 điều đó chỉ với
  a set of curly brackets and in between 🍀 một tập hợp các dấu ngoặc nhọn và ở giữa
  those curly brackets 🍀 những dấu ngoặc nhọn
  you put any code statements you want so 🍀 bạn đặt bất kỳ câu lệnh mã nào bạn muốn
  i'm going to just print out 🍀 tôi sẽ chỉ in ra
  hello world and that 🍀 xin chào thế giới và đó
  is your completed button let's run this 🍀 nút của bạn đã hoàn thành chưa, hãy chạy nút này
  project 🍀 dự án
  and see what happens 🍀 và hãy xem chuyện gì xảy ra
  okay so we have a button in the middle 🍀 được rồi vì vậy chúng tôi có một nút ở giữa
  that says click me when i tap on it 🍀 nói nhấp vào tôi khi tôi nhấn vào nó
  it runs the closure it runs the code in 🍀 nó chạy phần đóng nó chạy mã trong
  the closure 🍀 đóng cửa
  and you can see that in down there in 🍀 và bạn có thể thấy điều đó ở dưới đó trong
  the console 🍀 Bàn điều khiển
  it does print out hello world every time 🍀 nó luôn in ra hello world
  i click this button 🍀 tôi bấm vào nút này
  all right now let's go back to our xcode 🍀 được rồi bây giờ hãy quay lại xcode của chúng ta
  project because that's only 🍀 dự án bởi vì đó chỉ là
  one way to instantiate a button i'm 🍀 một cách để khởi tạo một nút tôi
  going to add a comment here 🍀 sẽ thêm một bình luận ở đây
  and call this button instance 🍀 và gọi ví dụ nút này
  with closure okay and then i'm also 🍀 với đóng cửa được rồi và sau đó tôi cũng
  going to 🍀 sẽ
  put this inside of a v stack actually 🍀 thực sự đặt cái này bên trong ngăn xếp v
  i'm going to show you a shorthand 🍀 tôi sẽ chỉ cho bạn một tốc ký
  a cool way to do it i'm going to put in 🍀 một cách tuyệt vời để làm điều đó tôi sẽ đưa vào
  inside of v stack because i want to show 🍀 bên trong ngăn xếp v vì tôi muốn hiển thị
  you a couple of 🍀 bạn một vài
  other ways to create buttons so we're 🍀 các cách khác để tạo nút nên chúng tôi
  going to create a couple of buttons 🍀 sẽ tạo ra một vài nút
  together 🍀 cùng nhau
  go ahead and command click on this 🍀 hãy tiếp tục và nhấp vào lệnh này
  button and you can 🍀 nút và bạn có thể
  just simply choose embed in v stack when 🍀 chỉ cần chọn nhúng vào ngăn xếp v khi
  you do that 🍀 bạn làm điều đó
  it puts the element into a v stack for 🍀 nó đặt phần tử vào ngăn xếp v cho
  you although it 🍀 bạn mặc dù nó
  it failed to move my comment there so 🍀 nó không thể di chuyển bình luận của tôi ở đó vì vậy
  let's 🍀 hãy
  put that right there all right so we've 🍀 đặt ngay đó được rồi, vì vậy chúng tôi đã
  got one button 🍀 có một nút
  and i want to show you the same button 🍀 và tôi muốn cho bạn thấy cùng một nút
  but with the shorthand 🍀 nhưng với tốc ký
  there's something called the trailing 🍀 có một thứ gọi là dấu vết
  closure let me show you what that means 🍀 hãy để tôi chỉ cho bạn điều đó có nghĩa là gì
  so button instance with trailing 🍀 ví dụ về nút so với dấu
  closure i am going to copy and paste 🍀 kết thúc tôi sẽ sao chép và dán
  the button we just declared and 🍀 nút chúng tôi vừa khai báo và
  create another copy of it so if in a 🍀 tạo một bản sao khác của nó để nếu trong một
  parameter list 🍀 danh sách tham số
  the last parameter expects a closure 🍀 tham số cuối cùng mong đợi một sự đóng cửa
  there is a shorthand and how it works 🍀 có một cách viết tắt và nó hoạt động như thế nào
  is you take that last parameter out of 🍀 là bạn lấy thông số cuối cùng đó ra khỏi
  the parameter list 🍀 danh sách tham số
  and you simply put the closure after the 🍀 và bạn chỉ cần đặt lệnh đóng cửa sau
  method call 🍀 gọi phương thức
  let me show you what i mean so 🍀 hãy để tôi chỉ cho bạn ý của tôi là gì
  in this parameter list the closure 🍀 trong danh sách tham số này, việc đóng cửa
  is that last parameter right so this is 🍀 là tham số cuối cùng đúng vậy đây là
  a prime candidate for 🍀 một ứng cử viên hàng đầu cho
  a trailing closure shortcut 🍀 một phím tắt đóng dấu
  i take the closure itself so i'm going 🍀 tôi tự đóng cửa vì vậy tôi sẽ đi
  to 🍀 ĐẾN
  cut this out of the parameter list and i 🍀 cắt cái này ra khỏi danh sách tham số và tôi
  am 🍀 là
  simply going to add a space after the 🍀 chỉ cần thêm một khoảng trắng sau
  ending rounded bracket and then just 🍀 kết thúc dấu ngoặc tròn và sau đó chỉ
  paste the closure like that and then i 🍀 dán đóng cửa như thế và sau đó tôi
  can go ahead 🍀 có thể đi trước
  and remove the parameter label or the 🍀 và loại bỏ nhãn thông số hoặc
  argument label 🍀 nhãn đối số
  out of that parameter list like that and 🍀 ra khỏi danh sách tham số đó như thế và
  these two button declarations are 🍀 hai khai báo nút này là
  exactly the same thing it's just that 🍀 chính xác điều tương tự nó chỉ là
  they are written differently one 🍀 chúng được viết khác nhau
  is specifying the closure inside the 🍀 đang chỉ định việc đóng cửa bên trong
  parameter list 🍀 danh sách tham số
  and the other one is specifying it using 🍀 và một cái khác đang chỉ định nó bằng cách sử dụng
  a trailing closure 🍀 một đóng cửa kéo dài
  and this is why i wanted to show you 🍀 và đây là lý do tại sao tôi muốn cho bạn thấy
  this 🍀 cái này
  manually instead of just letting xcode 🍀 thủ công thay vì chỉ để xcode
  open a closure for you 🍀 mở một đóng cửa cho bạn
  because when you let xcode do it it's 🍀 bởi vì khi bạn để xcode làm điều đó
  going to recognize that that closure 🍀 sẽ nhận ra rằng sự đóng cửa đó
  parameter is the last one 🍀 tham số là cái cuối cùng
  and it's going to turn it into a 🍀 và nó sẽ biến nó thành một
  trailing closure for you 🍀 đóng cửa sau cho bạn
  automatically so let me show you that if 🍀 tự động vì vậy hãy để tôi chỉ cho bạn rằng nếu
  i declare another button 🍀 tôi khai báo một nút khác
  let's use the same one click me and then 🍀 hãy sử dụng cùng một cú nhấp chuột vào tôi và sau đó
  i 🍀 Tôi
  tap on that action parameter and i 🍀 nhấn vào tham số hành động đó và tôi
  either double click it or i hit 🍀 nhấp đúp vào nó hoặc tôi nhấn
  enter and let xcode open up the closure 🍀 nhập và để xcode mở phần đóng
  it automatically changes it into a 🍀 nó tự động thay đổi nó thành một
  trailing closure so i thought that 🍀 đóng cửa sau vì vậy tôi nghĩ rằng
  would be really confusing for you if 🍀 sẽ thực sự khó hiểu cho bạn nếu
  you'd never seen that before 🍀 bạn chưa bao giờ thấy điều đó trước đây
  and so at least now you know uh what a 🍀 và vì vậy ít nhất bây giờ bạn biết uh những gì một
  trailing closure is and why 🍀 đóng cửa sau là gì và tại sao
  you know xcode does this for you okay so 🍀 bạn biết xcode làm điều này cho bạn được không
  that 🍀 cái đó
  is just creating one type of button both 🍀 chỉ là tạo một loại nút cả hai
  of these ways 🍀 những cách này
  are to create buttons where you just 🍀 là tạo các nút mà bạn chỉ cần
  have a piece of text 🍀 có một đoạn văn bản
  as the label but what if you wanted your 🍀 làm nhãn nhưng nếu bạn muốn
  button to be an 🍀 nút để trở thành một
  image or you know an icon or something 🍀 hình ảnh hoặc bạn biết một biểu tượng hoặc một cái gì đó
  like that 🍀 như thế
  not just a simple piece of text well 🍀 không chỉ là một đoạn văn bản đơn giản
  there is another initializer method for 🍀 có một phương pháp khởi tạo khác cho
  the button that we can use for that 🍀 nút mà chúng ta có thể sử dụng cho điều đó
  so let's take a look at that button 🍀 vì vậy chúng ta hãy nhìn vào nút đó
  instance 🍀 ví dụ
  with um with label view so let's go 🍀 với um với chế độ xem nhãn, vậy chúng ta hãy đi
  ahead type button 🍀 nút loại phía trước
  open up a bracket and now let's take a 🍀 mở một khung và bây giờ chúng ta hãy lấy một
  look at this 🍀 nhìn cái này
  other initializer method with an action 🍀 phương thức khởi tạo khác với một hành động
  and label parameter 🍀 và tham số nhãn
  creates a button that displays a custom 🍀 tạo một nút hiển thị tùy chỉnh
  label 🍀 nhãn
  and you can see from the parameter list 🍀 và bạn có thể thấy từ danh sách tham số
  that 🍀 cái đó
  the first oh let me let me go back to 🍀 lần đầu tiên oh hãy để tôi để tôi quay trở lại
  that 🍀 cái đó
  autocomplete menu taking a look at this 🍀 menu tự động hoàn thành hãy xem cái này
  parameter list now you can see that this 🍀 danh sách tham số bây giờ bạn có thể thấy rằng điều này
  action closure parameter is the first 🍀 tham số đóng hành động là tham số đầu tiên
  parameter 🍀 tham số
  and then the second parameter is a label 🍀 và sau đó tham số thứ hai là một nhãn
  now for this label parameter you can 🍀 bây giờ đối với tham số nhãn này, bạn có thể
  return 🍀 trở lại
  any view that you want to represent your 🍀 bất kỳ chế độ xem nào bạn muốn đại diện cho
  button 🍀 cái nút
  so let's go ahead and choose this 🍀 vì vậy hãy tiếp tục và chọn cái này
  initializer method 🍀 phương thức khởi tạo
  you can see for the action closure right 🍀 bạn có thể thấy hành động đóng cửa ngay
  here if i double click it it's not going 🍀 ở đây nếu tôi nhấp đúp vào nó thì nó không hoạt động
  to change into a trail enclosure 🍀 để thay đổi thành một bao vây đường mòn
  and the reason for that is because it's 🍀 và lý do cho điều đó là bởi vì nó
  not the last parameter 🍀 không phải là tham số cuối cùng
  in the parameter list so that doesn't 🍀 trong danh sách tham số để không
  qualify to be turned into a trail 🍀 đủ điều kiện để được biến thành một con đường mòn
  enclosure 🍀 bao vây
  okay so when this button is tapped again 🍀 được rồi, khi nút này được nhấn lại
  i am just going to 🍀 tôi chỉ đi đến
  print out hello world into the console 🍀 in ra hello world vào bảng điều khiển
  but for the label you'll notice that 🍀 nhưng đối với nhãn bạn sẽ nhận thấy rằng
  i have some freedom to specify 🍀 tôi có một số quyền tự do để chỉ định
  what sort of view i want to return so 🍀 tôi muốn quay lại kiểu xem nào
  here it's just returning 🍀 ở đây nó vừa trở lại
  a text view with a simple piece of text 🍀 chế độ xem văn bản với một đoạn văn bản đơn giản
  here called button 🍀 ở đây được gọi là nút
  but i can i can return an image view for 🍀 nhưng tôi có thể trả lại chế độ xem hình ảnh cho
  example 🍀 ví dụ
  i could return a stack of different 🍀 tôi có thể trả lại một chồng khác nhau
  views 🍀 lượt xem
  you can return anything you want let me 🍀 bạn có thể trả lại bất cứ thứ gì bạn muốn hãy để tôi
  just resume the preview here so you can 🍀 chỉ cần tiếp tục xem trước ở đây để bạn có thể
  see 🍀 nhìn thấy
  the different buttons we've declared 🍀 các nút khác nhau mà chúng tôi đã khai báo
  okay 🍀 được rồi
  so what i'm going to return here 🍀 vì vậy những gì tôi sẽ trở lại đây
  is maybe let's return an 🍀 có lẽ chúng ta hãy trả lại một
  h stack 🍀 ngăn xếp h
  and i'm going to return a text 🍀 và tôi sẽ trả lại một văn bản
  that says edit and i'm also going to 🍀 nói rằng chỉnh sửa và tôi cũng sẽ
  return 🍀 trở lại
  an image in front of that and 🍀 một hình ảnh ở phía trước của nó và
  for this image i'm going to specify i 🍀 đối với hình ảnh này tôi sẽ chỉ định tôi
  haven't added any images to our asset 🍀 chưa thêm bất kỳ hình ảnh nào vào tài sản của chúng tôi
  library 🍀 thư viện
  but i'm going to use something called an 🍀 nhưng tôi sẽ sử dụng một thứ gọi là
  sf symbol now we haven't gone through sf 🍀 biểu tượng sf bây giờ chúng ta chưa đi qua sf
  symbols yet 🍀 biểu tượng chưa
  we will do so in a future lesson however 🍀 chúng tôi sẽ làm như vậy trong một bài học trong tương lai tuy nhiên
  sf symbols are great 🍀 biểu tượng sf thật tuyệt
  because they're basically an icon set 🍀 bởi vì về cơ bản chúng là một bộ biểu tượng
  that comes with 🍀 đi kèm với
  xcode that you can just use in your apps 🍀 xcode mà bạn chỉ có thể sử dụng trong ứng dụng của mình
  and these 🍀 và những thứ này
  there are very special features of these 🍀 có những tính năng rất đặc biệt của những
  sf symbols that we will go through in a 🍀 sf mà chúng ta sẽ đi qua trong một
  future lesson in this course 🍀 bài học tương lai trong khóa học này
  there is a free mac app called sf 🍀 có một ứng dụng mac miễn phí tên là sf
  symbols that you can download 🍀 các biểu tượng mà bạn có thể tải xuống
  where you can browse all of the 🍀 nơi bạn có thể duyệt tất cả các
  different symbols uh that are available 🍀 các biểu tượng khác nhau uh có sẵn
  to you for free 🍀 cho bạn miễn phí
  so for example i'm just going to use 🍀 vì vậy, ví dụ tôi sẽ sử dụng
  this pencil one 🍀 cái bút chì này
  each of these has a name which you can 🍀 mỗi trong số này có một tên mà bạn có thể
  simply specify 🍀 chỉ cần chỉ định
  and you'll be able to use it so for the 🍀 và bạn sẽ có thể sử dụng nó cho
  image 🍀 hình ảnh
  the initializer to use if you want to 🍀 trình khởi tạo để sử dụng nếu bạn muốn
  use sf symbols 🍀 sử dụng ký hiệu sf
  is called system name and then you 🍀 được gọi là tên hệ thống và sau đó bạn
  specify 🍀 chỉ định
  the name which you saw underneath the 🍀 tên mà bạn nhìn thấy bên dưới
  icon 🍀 biểu tượng
  the pencil i'm just going to put pencil 🍀 cây bút chì tôi sẽ đặt bút chì
  right there and you can see that that 🍀 ngay tại đó và bạn có thể thấy rằng
  icon appears 🍀 biểu tượng xuất hiện
  all right so now let's run this app in 🍀 được rồi, bây giờ hãy chạy ứng dụng này trong
  the simulator and take a look at what 🍀 trình giả lập và hãy xem những gì
  happens 🍀 xảy ra
  okay so i can tap this one it says hello 🍀 được rồi để tôi có thể nhấn vào cái này, nó nói xin chào
  world tap that one it says hello world 🍀 thế giới nhấn vào cái đó nó nói xin chào thế giới
  tap this one also says hello world those 🍀 nhấn vào cái này cũng nói xin chào thế giới
  are the 🍀 là
  the closures that i specified for all of 🍀 các lần đóng cửa mà tôi đã chỉ định cho tất cả
  the buttons all right now you know how 🍀 các nút tất cả ngay bây giờ bạn biết làm thế nào
  to specify 🍀 để cụ thể hóa
  a simple button with just the text for 🍀 một nút đơn giản chỉ với văn bản cho
  its label you know how to specify a 🍀 nhãn của nó, bạn biết cách chỉ định một
  button 🍀 cái nút
  which you can use any view as the button 🍀 mà bạn có thể sử dụng bất kỳ chế độ xem nào làm nút
  we're going to go back to our war card 🍀 chúng ta sẽ quay trở lại thẻ chiến tranh của chúng tôi
  game now and turn that deal button 🍀 trò chơi ngay bây giờ và bật nút giao dịch đó
  image into an actual button 🍀 hình ảnh vào một nút thực tế
  alright so now i have the war card game 🍀 được rồi vì vậy bây giờ tôi có trò chơi bài chiến tranh
  that we were working on 🍀 mà chúng tôi đang làm việc trên
  all the way back in was it lesson four 🍀 tất cả các cách trở lại là nó bài học bốn
  or five 🍀 hoặc năm
  but this is where we got to and if you 🍀 nhưng đây là nơi chúng tôi đã đến và nếu bạn
  remember 🍀 nhớ
  we had used an image for the steel 🍀 chúng tôi đã sử dụng một hình ảnh cho thép
  button 🍀 cái nút
  and this is the view code for that you 🍀 và đây là mã xem cho bạn
  can see that 🍀 có thể thấy rằng
  it's just an image now you know how to 🍀 nó chỉ là một hình ảnh bây giờ bạn biết làm thế nào để
  turn this into a button 🍀 biến cái này thành một cái nút
  so i want you to just pause the video 🍀 vì vậy tôi muốn bạn tạm dừng video
  right now and try it on your own 🍀 ngay bây giờ và thử nó một mình
  in your own project just as a little 🍀 trong dự án của riêng bạn chỉ là một chút
  exercise 🍀 bài tập
  after you've tried it out for yourself 🍀 sau khi bạn đã thử nó cho chính mình
  or if you just got stuck 🍀 hoặc nếu bạn vừa bị mắc kẹt
  continue playing this video and we'll do 🍀 tiếp tục phát video này và chúng tôi sẽ làm
  it together 🍀 nó cùng nhau
  okay let's try it out together so i am 🍀 được rồi chúng ta hãy thử nó cùng nhau vì vậy tôi
  going to just create a little bit of 🍀 sẽ chỉ tạo ra một chút
  space 🍀 không gian
  here and we are going to declare a 🍀 ở đây và chúng tôi sẽ tuyên bố một
  button 🍀 cái nút
  using a button let's open up brackets 🍀 sử dụng một nút hãy mở dấu ngoặc
  and let's choose this action label 🍀 và hãy chọn nhãn hành động này
  initializer method 🍀 phương thức khởi tạo
  now inside the action we're just going 🍀 bây giờ bên trong hành động chúng ta sẽ đi
  to open up that block of code but we're 🍀 để mở khối mã đó nhưng chúng tôi
  not really going to do anything 🍀 không thực sự sẽ làm bất cứ điều gì
  yet we will do that in the next lesson 🍀 nhưng chúng ta sẽ làm điều đó trong bài học tiếp theo
  but for the label 🍀 nhưng đối với nhãn
  instead of a text button label 🍀 thay vì nhãn nút văn bản
  and delete that view and i'm simply 🍀 và xóa chế độ xem đó và tôi chỉ đơn giản là
  going to move our image with the deal 🍀 sẽ di chuyển hình ảnh của chúng tôi với thỏa thuận
  button 🍀 cái nút
  into the label for our button 🍀 vào nhãn cho nút của chúng tôi
  and just like that you you can't really 🍀 và cứ như thế bạn không thể thực sự
  see any visual 🍀 xem bất kỳ hình ảnh nào
  change but however if you run this in 🍀 thay đổi nhưng tuy nhiên nếu bạn chạy cái này trong
  the simulator 🍀 trình mô phỏng
  then you will notice that 🍀 sau đó bạn sẽ nhận thấy rằng
  you can tap it it's an actual button 🍀 bạn có thể nhấn vào nó, đó là một nút thực tế
  another way if you don't want to launch 🍀 một cách khác nếu bạn không muốn khởi chạy
  your simulator is you can hit this 🍀 trình giả lập của bạn là bạn có thể nhấn cái này
  button right here for the live preview 🍀 nút ngay tại đây để xem trước trực tiếp
  and 🍀 Và
  after it gets started yeah then you can 🍀 sau khi nó bắt đầu, vâng thì bạn có thể
  go ahead and 🍀 đi trước và
  i have to hit resume on that 🍀 tôi phải nhấn tiếp tục về điều đó
  okay you can see now in the canvas 🍀 được rồi, bây giờ bạn có thể thấy trong canvas
  because i have live preview turned on i 🍀 bởi vì tôi đã bật chế độ xem trước trực tiếp
  can test out the button 🍀 có thể kiểm tra nút
  that was your first introduction to 🍀 đó là lời giới thiệu đầu tiên của bạn về
  handling user interaction in a swift ui 🍀 xử lý tương tác người dùng trong giao diện người dùng nhanh chóng
  app the pieces are really coming 🍀 ứng dụng các mảnh đang thực sự đến
  together let's do a quick recap 🍀 chúng ta hãy cùng nhau tóm tắt nhanh
  you learned how to instantiate buttons 🍀 bạn đã học cách khởi tạo các nút
  and that's just a fancy way of saying 🍀 và đó chỉ là một cách nói hoa mỹ
  creating button instances you learned 🍀 tạo các trường hợp nút bạn đã học
  about closures and how they're just 🍀 về việc đóng cửa và cách chúng hoạt động
  blocks of code 🍀 khối mã
  like functions without a function name 🍀 thích các chức năng không có tên chức năng
  and then you learned about trailing 🍀 và sau đó bạn đã học về dấu vết
  closures which are just a shorthand 🍀 đóng cửa chỉ là một cách viết tắt
  and just to remind you a trail enclosure 🍀 và chỉ để nhắc nhở bạn về một đường mòn bao quanh
  is when you have a closure 🍀 là khi bạn có một đóng cửa
  as a parameter in a method call and then 🍀 như một tham số trong một cuộc gọi phương thức và sau đó
  it gets taken 🍀 nó được thực hiện
  out of that parameter list and instead 🍀 ra khỏi danh sách tham số đó và thay vào đó
  is put at the end of that method call 🍀 được đặt ở cuối cuộc gọi phương thức đó
  now to make sure you really understand 🍀 bây giờ để chắc chắn rằng bạn thực sự hiểu
  all of these things make sure you do the 🍀 tất cả những điều này đảm bảo bạn làm
  quiz and attempt the challenge 🍀 đố vui và thử thách
  in the next lesson i'm going to show you 🍀 trong bài học tiếp theo tôi sẽ chỉ cho bạn
  a key swift ui concept 🍀 một khái niệm quan trọng Swift ui
  that is going to allow you to change 🍀 điều đó sẽ cho phép bạn thay đổi
  data and have the ui 🍀 dữ liệu và có giao diện người dùng
  automatically detect the change and then 🍀 tự động phát hiện sự thay đổi và sau đó
  update the ui by itself 🍀 tự cập nhật ui
  all right i'll see you in the next 🍀 được rồi tôi sẽ gặp bạn trong lần tới
  lesson 🍀 bài học
  hello and welcome in the last lesson you 🍀 xin chào và chào mừng trong bài học cuối cùng bạn
  learned about the swift ui button 🍀 tìm hiểu về nút swift ui
  and how to handle user interaction well 🍀 và cách xử lý tương tác người dùng tốt
  in order to 🍀 để
  change the data and then reflect that 🍀 thay đổi dữ liệu và sau đó phản ánh rằng
  change in the ui 🍀 thay đổi giao diện người dùng
  we have to learn about state properties 🍀 chúng ta phải tìm hiểu về các thuộc tính của trạng thái
  and that's what this lesson is 🍀 và đó là những gì bài học này là
  all about let's dive right in 🍀 tất cả về chúng ta hãy đi sâu vào
  all right so i want to revisit that view 🍀 được rồi vì vậy tôi muốn xem lại chế độ xem đó
  update life cycle diagram for just a 🍀 cập nhật sơ đồ vòng đời cho chỉ một
  second 🍀 thứ hai
  do you remember when we showed a link 🍀 bạn có nhớ khi chúng tôi hiển thị một liên kết
  from the data 🍀 từ dữ liệu
  to the view code well let's go ahead and 🍀 để xem mã tốt, hãy tiếp tục và
  do that with our war card game project 🍀 làm điều đó với dự án trò chơi bài chiến tranh của chúng tôi
  so what sort of data do we have in this 🍀 vậy loại dữ liệu nào chúng ta có trong này
  project well 🍀 dự án tốt
  if you take a look at the user interface 🍀 nếu bạn nhìn vào giao diện người dùng
  here you can see that 🍀 ở đây bạn có thể thấy rằng
  we need to keep track of which card 🍀 chúng ta cần theo dõi thẻ nào
  the player has which card the cpu has 🍀 người chơi có thẻ nào mà cpu có
  and then also the scores of the player 🍀 và sau đó là điểm số của người chơi
  and the cpu 🍀 và cpu
  so that's four pieces of data let's 🍀 vậy đó là bốn mẩu dữ liệu
  create four properties 🍀 tạo bốn thuộc tính
  in our content view structure to 🍀 trong cấu trúc xem nội dung của chúng tôi để
  represent 🍀 đại diện
  those four pieces of data so 🍀 bốn phần dữ liệu đó
  right underneath the opening curly 🍀 ngay bên dưới phần mở đầu
  bracket of content view 🍀 khung xem nội dung
  i'm going to go ahead and declare var 🍀 tôi sẽ tiếp tục và khai báo var
  uh cpu let's do player first player card 🍀 uh cpu hãy làm thẻ người chơi đầu tiên
  equals and um 🍀 bằng và ừm
  i'll just mimic the cards that we have 🍀 tôi sẽ chỉ bắt chước các thẻ mà chúng tôi có
  there so 🍀 Bởi vậy
  we're gonna have card two and 🍀 chúng ta sẽ có thẻ hai và
  well actually let me just i'll change it 🍀 thực sự hãy để tôi chỉ tôi sẽ thay đổi nó
  we can put something else 🍀 chúng ta có thể đặt một cái gì đó khác
  to start and then cpu card 🍀 để bắt đầu và sau đó là thẻ cpu
  equals let's say card 🍀 bằng hãy nói thẻ
  nine and then let's 🍀 chín và sau đó chúng ta hãy
  represent the player score and this is 🍀 đại diện cho số điểm của người chơi và đây là
  going to be an 🍀 sẽ là một
  integer let's start with zero 🍀 số nguyên hãy bắt đầu bằng số không
  as well cpu 🍀 cũng như cpu
  score equals zero all right 🍀 điểm bằng 0 được rồi
  so now we have these four properties 🍀 vì vậy bây giờ chúng ta có bốn thuộc tính này
  representing the state of the game these 🍀 đại diện cho trạng thái của trò chơi này
  four properties 🍀 bốn thuộc tính
  are our source of truth because it 🍀 là nguồn sự thật của chúng tôi bởi vì nó
  represents 🍀 đại diện
  how the ui should look now how do we 🍀 bây giờ giao diện người dùng sẽ trông như thế nào, làm thế nào để chúng ta
  reflect 🍀 phản ánh
  these pieces of data in our user 🍀 những mẩu dữ liệu này trong người dùng của chúng tôi
  interface 🍀 giao diện
  well we need to reference these 🍀 tốt chúng ta cần tham khảo những
  properties inside our view code 🍀 thuộc tính bên trong mã xem của chúng tôi
  remember that these properties being 🍀 hãy nhớ rằng những thuộc tính này là
  declared in the scope of this structure 🍀 khai báo trong phạm vi của cấu trúc này
  means that it's 🍀 có nghĩa là nó
  available to be referenced in any of the 🍀 có sẵn để được tham khảo trong bất kỳ
  methods in the same structure 🍀 các phương thức trong cùng một cấu trúc
  as well as in this block of code for our 🍀 cũng như trong khối mã này cho chúng tôi
  computed body property 🍀 tài sản cơ thể được tính toán
  so if we look down here for this first 🍀 vì vậy nếu chúng ta nhìn xuống đây cho điều này đầu tiên
  card 🍀 Thẻ
  that is right here and we have 🍀 đó là ngay tại đây và chúng tôi có
  hard-coded 🍀 mã hóa cứng
  a string in there saying card two 🍀 một chuỗi trong đó nói thẻ hai
  instead of 🍀 thay vì
  hard-coding a string there let's put a 🍀 mã hóa cứng một chuỗi ở đó, hãy đặt một
  dynamic value 🍀 giá trị động
  by specifying our playercard property 🍀 bằng cách chỉ định thuộc tính playercard của chúng tôi
  so let's update our automatic preview 🍀 vì vậy hãy cập nhật bản xem trước tự động của chúng tôi
  just to make sure that that runs and 🍀 chỉ để đảm bảo rằng nó chạy và
  everything's good and you can see that 🍀 mọi thứ đều tốt và bạn có thể thấy điều đó
  that card 🍀 thẻ đó
  changes to card 5 because that is what 🍀 thay đổi sang thẻ 5 vì đó là những gì
  the value 🍀 giá trị
  of player card property is let's do the 🍀 của tài sản thẻ người chơi là hãy làm
  same thing for the cpu card instead of 🍀 điều tương tự cho thẻ cpu thay vì
  hard coding card three here 🍀 thẻ mã hóa cứng ba ở đây
  let's put the cpu card property 🍀 hãy đặt thuộc tính thẻ cpu
  can you see that change and down here 🍀 bạn có thể thấy sự thay đổi đó và ở dưới đây
  for the score 🍀 cho điểm số
  instead of a string 🍀 thay vì một chuỗi
  of zero let's put our 🍀 của số không chúng ta hãy đặt của chúng tôi
  player score property now you're going 🍀 thuộc tính điểm số của người chơi bây giờ bạn sẽ đi
  to notice an 🍀 để ý một
  error here it says no exact matches in 🍀 lỗi ở đây nó nói không có kết quả khớp chính xác nào trong
  call 🍀 gọi
  to initializer and that's because for 🍀 để khởi tạo và đó là bởi vì cho
  initializing 🍀 khởi tạo
  a text instance we need to pass 🍀 một ví dụ văn bản chúng ta cần phải vượt qua
  in a piece of string data but player 🍀 trong một đoạn dữ liệu chuỗi nhưng người chơi
  score 🍀 điểm
  remember this is an int 🍀 hãy nhớ rằng đây là một int
  property so it contains int data but how 🍀 property để nó chứa dữ liệu int nhưng làm thế nào
  we can get around this 🍀 chúng ta có thể vượt qua điều này
  is we can turn our int into a string 🍀 là chúng ta có thể biến int của mình thành một chuỗi
  well at least the string representation 🍀 ít nhất là biểu diễn chuỗi
  of a number 🍀 của một số
  so the way we can do that is we can 🍀 vì vậy cách chúng ta có thể làm điều đó là chúng ta có thể
  create a new string instance and just 🍀 tạo một thể hiện chuỗi mới và chỉ
  pass in the 🍀 vượt qua trong
  we can pass in the integer so this one 🍀 chúng ta có thể chuyển vào số nguyên để cái này
  would be player 🍀 sẽ là người chơi
  score and we're going to do the same 🍀 điểm số và chúng tôi sẽ làm như vậy
  thing for a cpu score 🍀 điều cho một số điểm cpu
  we're going to create a new string and 🍀 chúng ta sẽ tạo một chuỗi mới và
  we're going to pass 🍀 chúng ta sẽ vượt qua
  in the cpu score 🍀 trong điểm số cpu
  and just like that we have our four 🍀 và cứ như thế chúng ta có bốn
  pieces of data being represented in the 🍀 các phần dữ liệu được biểu diễn trong
  view code 🍀 xem mã
  and in turn in the ui now all we have to 🍀 và lần lượt trong ui bây giờ tất cả chúng ta phải
  do 🍀 LÀM
  is when the user taps on the button we 🍀 là khi người dùng chạm vào nút chúng tôi
  can update this data 🍀 có thể cập nhật dữ liệu này
  in the properties and have the ui 🍀 trong các thuộc tính và có ui
  automatically change right 🍀 tự động chuyển sang phải
  well not so fast why don't we go ahead 🍀 cũng không quá nhanh tại sao chúng ta không tiếp tục
  and try and do that 🍀 và thử và làm điều đó
  and let's take a look at what happens so 🍀 và chúng ta hãy xem những gì xảy ra như vậy
  in the last lesson we had changed 🍀 trong bài học cuối cùng chúng tôi đã thay đổi
  this deal image into an actual button 🍀 hình ảnh thỏa thuận này thành một nút thực tế
  right now that action closure is empty 🍀 ngay bây giờ hành động đóng đó trống
  let's put some code inside this action 🍀 hãy đặt một số mã bên trong hành động này
  closure for our button 🍀 đóng cửa cho nút của chúng tôi
  here we are going to update the 🍀 ở đây chúng tôi sẽ cập nhật
  cards and we're also going to update the 🍀 thẻ và chúng tôi cũng sẽ cập nhật
  score 🍀 điểm
  now if you try to update the property 🍀 bây giờ nếu bạn cố gắng cập nhật thuộc tính
  like 🍀 giống
  here let's try to update playercard 🍀 ở đây hãy thử cập nhật playercard
  equals card 11 🍀 bằng thẻ 11
  you'll see that you can't xcode will 🍀 bạn sẽ thấy rằng bạn không thể xcode sẽ
  complain 🍀 phàn nàn
  and say cannot assign to property self 🍀 và nói không thể tự gán cho tài sản
  is 🍀 là
  immutable now self refers to the 🍀 bất biến bây giờ tự đề cập đến
  instance 🍀 ví dụ
  of a content view and immutable 🍀 của một chế độ xem nội dung và không thay đổi
  means that it can't be changed you see 🍀 có nghĩa là nó không thể thay đổi bạn thấy
  instances 🍀 trường hợp
  are value types and because of the way 🍀 là các loại giá trị và vì cách
  that they are allocated in memory 🍀 rằng chúng được phân bổ trong bộ nhớ
  they can't be changed now i know that 🍀 họ không thể thay đổi bây giờ tôi biết rằng
  makes absolutely no sense to you right 🍀 hoàn toàn vô nghĩa với bạn phải không
  now 🍀 Hiện nay
  but i promise you in a future lesson we 🍀 nhưng tôi hứa với bạn trong một bài học trong tương lai chúng tôi
  will talk about that 🍀 sẽ nói về điều đó
  and then it will make complete sense for 🍀 và sau đó nó sẽ có ý nghĩa hoàn toàn cho
  now just understand that we 🍀 bây giờ chỉ cần hiểu rằng chúng tôi
  can't change the value of our property 🍀 không thể thay đổi giá trị tài sản của chúng tôi
  unless we use 🍀 trừ khi chúng ta sử dụng
  a property wrapper a property wrapper is 🍀 một trình bao bọc thuộc tính một trình bao bọc thuộc tính là
  a keyword 🍀 một từ khóa
  in front of our property declaration 🍀 trước tuyên bố tài sản của chúng tôi
  that changes its behavior 🍀 thay đổi hành vi của nó
  now specifically i'm talking about the 🍀 bây giờ cụ thể tôi đang nói về
  state property wrapper 🍀 trình bao bọc tài sản nhà nước
  so let's go ahead back up to our 🍀 vì vậy hãy tiếp tục quay trở lại với chúng tôi
  property declarations and see how we can 🍀 khai báo thuộc tính và xem làm thế nào chúng ta có thể
  use 🍀 sử dụng
  this state property wrapper to change 🍀 trình bao bọc thuộc tính trạng thái này để thay đổi
  the behaviors 🍀 các hành vi
  of these properties so that we can 🍀 của những thuộc tính này để chúng ta có thể
  change the values 🍀 thay đổi các giá trị
  all we have to do is in front of the var 🍀 tất cả những gì chúng ta phải làm là ở phía trước của var
  keyword 🍀 từ khóa
  of our property declaration we are going 🍀 tuyên bố tài sản của chúng tôi, chúng tôi sẽ
  to write 🍀 viết
  at state and 🍀 ở trạng thái và
  by adding that keyword at state 🍀 bằng cách thêm từ khóa đó vào trạng thái
  that is going to indicate that that 🍀 điều đó sẽ chỉ ra rằng
  player card property is actually a state 🍀 tài sản thẻ người chơi thực sự là một trạng thái
  property 🍀 tài sản
  and it's going to allow us to update the 🍀 và nó sẽ cho phép chúng tôi cập nhật
  value in it 🍀 giá trị trong đó
  so let's go ahead and put this 🍀 vì vậy hãy tiếp tục và đặt cái này
  property wrapper in front of all four of 🍀 trình bao bọc tài sản trước cả bốn
  our properties so that they are all 🍀 tài sản của chúng tôi để họ là tất cả
  state properties 🍀 thuộc tính trạng thái
  state properties have two special 🍀 thuộc tính trạng thái có hai đặc biệt
  characteristics number one 🍀 đặc điểm số một
  is that you can change the data in them 🍀 là bạn có thể thay đổi dữ liệu trong đó
  we've already talked about that 🍀 chúng ta đã nói về điều đó
  but number two is that inside the view 🍀 nhưng điều thứ hai là bên trong khung cảnh
  code 🍀 mã số
  any references to state properties they 🍀 bất kỳ tham chiếu nào đến các thuộc tính trạng thái mà chúng
  will get notified 🍀 sẽ nhận được thông báo
  of the data changes and then your ui 🍀 của dữ liệu thay đổi và sau đó là giao diện người dùng của bạn
  will update 🍀 sẽ nâng cấp
  automatically based on that new data 🍀 tự động dựa trên dữ liệu mới đó
  so let's go ahead go down to the action 🍀 vì vậy hãy tiếp tục đi xuống hành động
  closure of our button 🍀 đóng nút của chúng tôi
  and try to update some of these state 🍀 và cố gắng cập nhật một số trạng thái này
  properties and let's watch the ui change 🍀 thuộc tính và hãy xem sự thay đổi của giao diện người dùng
  okay so here we are and 🍀 được rồi chúng ta ở đây và
  as you can see now the error is gone and 🍀 như bạn có thể thấy bây giờ lỗi đã biến mất và
  i can put cpu 🍀 tôi có thể đặt cpu
  card equals card 12 🍀 thẻ bằng thẻ 12
  and let's go ahead and update the score 🍀 và hãy tiếp tục và cập nhật điểm số
  as well might as well just do that so 🍀 cũng có thể chỉ cần làm như vậy
  i'm going to say player score plus 🍀 tôi sẽ nói điểm người chơi cộng
  equals one that means 🍀 bằng một nghĩa là
  to increment it by one 🍀 để tăng nó lên một
  cpu score plus equals one as well 🍀 điểm cpu cộng cũng bằng một
  and we'll save this and then let's go 🍀 và chúng tôi sẽ lưu cái này và sau đó đi
  ahead and 🍀 phía trước và
  do a live preview see if we can do that 🍀 xem trước trực tiếp xem chúng tôi có thể làm điều đó không
  alright so this is a live preview when i 🍀 được rồi, đây là bản xem trước trực tiếp khi tôi
  tap on this button 🍀 nhấn vào nút này
  it's going to run the closure here 🍀 nó sẽ chạy lệnh đóng cửa ở đây
  wasn't that cool so when i tapped on 🍀 không tuyệt lắm nên khi tôi gõ vào
  that button 🍀 nút đó
  we updated the data in the state 🍀 chúng tôi đã cập nhật dữ liệu ở trạng thái
  properties 🍀 của cải
  right and because in our view code 🍀 đúng và bởi vì trong mã xem của chúng tôi
  it references those state properties 🍀 nó tham chiếu các thuộc tính trạng thái đó
  they got notified and the ui was 🍀 họ đã được thông báo và ui là
  re-rendered to 🍀 kết xuất lại thành
  show the new data now the problem is 🍀 hiển thị dữ liệu mới bây giờ vấn đề là
  that every time we tap on the button 🍀 rằng mỗi khi chúng ta nhấn vào nút
  i mean it's incrementing the score which 🍀 ý tôi là nó đang tăng điểm mà
  is cool 🍀 mát mẻ
  but the player cards aren't being 🍀 nhưng thẻ người chơi không được
  randomized 🍀 ngẫu nhiên
  so what we can do is we can use the 🍀 vì vậy những gì chúng ta có thể làm là chúng ta có thể sử dụng
  random method of the instructor generate 🍀 phương pháp ngẫu nhiên của người hướng dẫn tạo ra
  a random number 🍀 một số ngẫu nhiên
  and then we are going to append that 🍀 và sau đó chúng ta sẽ nối nó
  random 🍀 ngẫu nhiên
  number to the back of the card string 🍀 số ở mặt sau của chuỗi thẻ
  to generate a new card so let's take a 🍀 để tạo một thẻ mới, vì vậy hãy thực hiện
  look at how that would work 🍀 xem nó sẽ hoạt động như thế nào
  generate a random number 🍀 tạo một số ngẫu nhiên
  between 2 and 13 🍀 giữa 2 và 13
  because if you look at the asset library 🍀 bởi vì nếu bạn nhìn vào thư viện nội dung
  we have card 2 all the way to card 14 🍀 chúng tôi có thẻ 2 cho đến thẻ 14
  actually so i would probably want to 🍀 thực sự vì vậy tôi có thể muốn
  generate 🍀 phát ra
  from 2 to 14. so i'm going to say 🍀 từ 2 đến 14. vì vậy tôi sẽ nói
  let player 🍀 để người chơi
  rand equals int 🍀 rand bằng int
  dot random and this method 🍀 chấm ngẫu nhiên và phương pháp này
  allows us to specify a range you can 🍀 cho phép chúng tôi chỉ định một phạm vi mà bạn có thể
  specify a range with 🍀 chỉ định một phạm vi với
  the lower end of the range dot dot dot 🍀 đầu dưới của phạm vi dot dot dot
  and then 🍀 và sau đó
  the upper end and it should be inclusive 🍀 đầu trên và nó phải được bao gồm
  if i remember correctly 🍀 nếu tôi nhớ chính xác
  and we'll see in a second and let's 🍀 và chúng ta sẽ xem trong giây lát và hãy
  declare another one cpu rand equals 🍀 khai báo một cpu rand khác bằng
  int dot random in two dot dot dot 🍀 int dot ngẫu nhiên trong hai dot dot dot
  14 and then what we're going to do is 🍀 14 và sau đó những gì chúng ta sẽ làm là
  instead of specifying the number inside 🍀 thay vì chỉ định số bên trong
  the hard-coded string 🍀 chuỗi mã hóa cứng
  i'm just going to specify card and then 🍀 tôi sẽ chỉ định thẻ và sau đó
  i'm going to 🍀 tôi sẽ
  add player rand right and 🍀 thêm người chơi rand phải và
  add cpu rand 🍀 thêm cpu rand
  now we might not be able to do this 🍀 bây giờ chúng ta có thể không làm được điều này
  and as expected we can't because as you 🍀 và như mong đợi, chúng tôi không thể bởi vì như bạn
  know from 🍀 biết từ
  earlier in this lesson what we're trying 🍀 trước đó trong bài học này những gì chúng tôi đang cố gắng
  to do here is we're trying to 🍀 để làm ở đây là chúng tôi đang cố gắng
  append a integer to a string 🍀 nối một số nguyên vào một chuỗi
  and what we have to do instead is 🍀 và những gì chúng ta phải làm thay vào đó là
  convert 🍀 chuyển thành
  that integer to a string first get the 🍀 số nguyên đó thành một chuỗi trước tiên hãy lấy
  string representation 🍀 biểu diễn chuỗi
  of that integer and there this should be 🍀 của số nguyên đó và đây phải là
  dynamic now so let's take a look 🍀 năng động bây giờ vì vậy chúng ta hãy xem
  at this and see if it's what we expect 🍀 tại đây và xem nếu đó là những gì chúng tôi mong đợi
  this is perfect 🍀 đây là hoàn hảo
  the cards are randomizing what's not 🍀 các thẻ đang ngẫu nhiên những gì không
  perfect is the score down here 🍀 hoàn hảo là điểm số ở đây
  we still need to determine which side 🍀 chúng ta vẫn cần xác định bên nào
  wins and then 🍀 chiến thắng và sau đó
  increment the appropriate score so i am 🍀 tăng số điểm thích hợp vì vậy tôi
  going to comment out these two pieces of 🍀 sẽ bình luận về hai mảnh này
  code 🍀 mã số
  because we don't want to just be 🍀 bởi vì chúng tôi không muốn chỉ là
  incrementing it by one each time 🍀 tăng nó lên một lần mỗi lần
  now before we end off this lesson i 🍀 bây giờ trước khi chúng ta kết thúc bài học này tôi
  really want to point out 🍀 thực sự muốn chỉ ra
  and stress how powerful this framework 🍀 và nhấn mạnh rằng khuôn khổ này mạnh mẽ như thế nào
  is what we're doing here 🍀 là những gì chúng ta đang làm ở đây
  is tapping a button it's running this 🍀 đang nhấn vào một nút, nó đang chạy cái này
  closure 🍀 Khép kín
  and we are changing the value in this 🍀 và chúng tôi đang thay đổi giá trị trong này
  state property 🍀 tài sản nhà nước
  and because the state property is being 🍀 và bởi vì tài sản nhà nước đang được
  referenced 🍀 tham khảo
  inside of our view code here it is 🍀 bên trong mã xem của chúng tôi ở đây
  detecting that data change 🍀 phát hiện sự thay đổi dữ liệu đó
  and then re-rendering what we see in the 🍀 và sau đó hiển thị lại những gì chúng ta thấy trong
  ui 🍀 giao diện người dùng
  and that happens automatically all we 🍀 và điều đó xảy ra tự động tất cả chúng ta
  are doing 🍀 đang làm
  is changing the data in the past with ui 🍀 đang thay đổi dữ liệu trong quá khứ với ui
  kit 🍀 bộ dụng cụ
  this system didn't exist what we would 🍀 hệ thống này không tồn tại những gì chúng tôi sẽ
  have to do instead 🍀 phải làm thay
  is update the data just like we're doing 🍀 là cập nhật dữ liệu giống như chúng ta đang làm
  here but we would also 🍀 ở đây nhưng chúng tôi cũng sẽ
  have to update each view element 🍀 phải cập nhật từng phần tử chế độ xem
  manually 🍀 thủ công
  and tell it what to display so what we'd 🍀 và cho nó biết những gì sẽ hiển thị để những gì chúng tôi muốn
  have to do 🍀 phải làm
  is get a reference to this image and 🍀 là lấy một tham chiếu đến hình ảnh này và
  then 🍀 sau đó
  generate an image from this asset name 🍀 tạo một hình ảnh từ tên nội dung này
  from the asset library 🍀 từ thư viện nội dung
  and then set that image asset to this 🍀 và sau đó đặt nội dung hình ảnh đó thành
  image view 🍀 xem hình ảnh
  and we would have to do that for this 🍀 và chúng ta sẽ phải làm điều đó cho điều này
  one as well 🍀 một là tốt
  and then we'd have to do it for the text 🍀 và sau đó chúng ta phải làm điều đó cho văn bản
  here 🍀 đây
  and the labels so everything we had to 🍀 và các nhãn để mọi thứ chúng tôi phải
  do manually 🍀 làm thủ công
  now all we have to do is update the data 🍀 bây giờ tất cả những gì chúng ta phải làm là cập nhật dữ liệu
  and any pieces of ui tied to those state 🍀 và bất kỳ mảnh giao diện người dùng nào gắn với trạng thái đó
  properties 🍀 của cải
  will detect the change and update 🍀 sẽ phát hiện sự thay đổi và cập nhật
  automatically 🍀 tự động
  now by definition a state property is a 🍀 bây giờ theo định nghĩa, một tài sản nhà nước là một
  piece of data 🍀 mẩu dữ liệu
  that this content view depends on 🍀 rằng chế độ xem nội dung này phụ thuộc vào
  it's not something that other views 🍀 nó không phải là một cái gì đó mà quan điểm khác
  would care about or depend on 🍀 sẽ quan tâm hoặc phụ thuộc vào
  and so by that nature we can add the 🍀 và do đó, theo bản chất đó, chúng ta có thể thêm
  keyword 🍀 từ khóa
  private and just control the access 🍀 riêng tư và chỉ kiểm soát quyền truy cập
  level 🍀 mức độ
  to these pieces of data so that they are 🍀 với những phần dữ liệu này để chúng
  only accessible within the context or 🍀 chỉ có thể truy cập trong bối cảnh hoặc
  the 🍀 các
  scope of this content view structure 🍀 phạm vi của cấu trúc chế độ xem nội dung này
  since 🍀 từ
  it's only this content view that depends 🍀 chỉ có chế độ xem nội dung này mới phụ thuộc
  on these state properties 🍀 trên các thuộc tính trạng thái này
  all right we're almost at the finishing 🍀 được rồi, chúng ta sắp hoàn thành
  line we just have to compare the card 🍀 dòng chúng ta chỉ cần so sánh thẻ
  values 🍀 giá trị
  and then update the score state 🍀 và sau đó cập nhật trạng thái điểm số
  properties appropriately 🍀 tài sản một cách thích hợp
  let's do a quick recap now you learned 🍀 hãy tóm tắt nhanh bây giờ bạn đã học
  how to reference properties in your view 🍀 cách tham chiếu các thuộc tính trong chế độ xem của bạn
  code 🍀 mã số
  you learned about the state property 🍀 bạn đã học về tài sản nhà nước
  wrapper we also learned about some 🍀 trình bao bọc, chúng tôi cũng đã tìm hiểu về một số
  new terminology including hard-coded 🍀 thuật ngữ mới bao gồm mã hóa cứng
  values 🍀 giá trị
  dynamic values and immutable meaning 🍀 giá trị động và ý nghĩa bất biến
  that 🍀 cái đó
  it can't be changed now remember you can 🍀 nó không thể thay đổi bây giờ hãy nhớ rằng bạn có thể
  get access to all these quizzes and 🍀 có quyền truy cập vào tất cả các câu đố này và
  challenges 🍀 thử thách
  in the next lesson we're going to go 🍀 trong bài học tiếp theo chúng ta sẽ đi
  over conditionals and how to compare 🍀 câu điều kiện và cách so sánh
  values 🍀 giá trị
  using if statements alright i'll see you 🍀 sử dụng câu lệnh if okay, tôi sẽ gặp bạn
  there 🍀 ở đó
  hello and welcome in this lesson we're 🍀 xin chào và chào mừng đến với bài học này, chúng ta
  going to talk about a swift construct 🍀 sẽ nói về một cấu trúc nhanh chóng
  that is going to allow you to write 🍀 điều đó sẽ cho phép bạn viết
  code that says if this then that now 🍀 mã cho biết nếu cái này thì cái đó bây giờ
  this easy to use but 🍀 cái này dễ sử dụng nhưng
  powerful syntax is going to allow you to 🍀 cú pháp mạnh mẽ sẽ cho phép bạn
  express logic at a whole new level 🍀 thể hiện logic ở một cấp độ hoàn toàn mới
  all right with that said let's dive 🍀 được rồi với điều đó đã nói, hãy lặn xuống
  right in 🍀 ngay
  all right so i've got a brand new 🍀 được rồi vì vậy tôi đã có một thương hiệu mới
  playground here i want to show you how 🍀 sân chơi ở đây tôi muốn chỉ cho bạn cách
  if statements work before we apply it to 🍀 nếu các câu lệnh hoạt động trước khi chúng tôi áp dụng nó cho
  our war card game project 🍀 dự án trò chơi bài chiến tranh của chúng tôi
  all i have here are a couple of 🍀 tất cả những gì tôi có ở đây là một vài
  constants actually 🍀 hằng số thực sự
  more than a couple i have a bunch of 🍀 nhiều hơn một cặp vợ chồng tôi có một loạt
  constants with different 🍀 hằng số với khác nhau
  simple values some integers strings and 🍀 giá trị đơn giản một số chuỗi số nguyên và
  boolean values 🍀 giá trị boolean
  and i want to use these constants to 🍀 và tôi muốn sử dụng các hằng số này để
  demonstrate how if statements work 🍀 chứng minh làm thế nào nếu câu lệnh làm việc
  now again the if statement is very 🍀 bây giờ một lần nữa câu lệnh if rất
  powerful because it allows you to run 🍀 mạnh mẽ vì nó cho phép bạn chạy
  code based on some conditions so i'm 🍀 mã dựa trên một số điều kiện vì vậy tôi
  going to use these constants 🍀 sẽ sử dụng các hằng số này
  as my conditions let's first take a look 🍀 như điều kiện của tôi trước tiên chúng ta hãy xem
  at a basic if statement declaration 🍀 ở phần khai báo câu lệnh if cơ bản
  i'm going to type it out first and i'll 🍀 tôi sẽ gõ nó ra trước và tôi sẽ
  explain each of the parts so you start 🍀 giải thích từng phần để bạn bắt đầu
  with the if keyword and then you put 🍀 với từ khóa if và sau đó bạn đặt
  some sort of 🍀 một số loại
  value or condition that evaluates to a 🍀 giá trị hoặc điều kiện đánh giá một
  boolean 🍀 boolean
  result so i'm just going to put e 🍀 kết quả vì vậy tôi sẽ chỉ đặt e
  and i'm going to open up a pair of curly 🍀 và tôi sẽ mở ra một cặp xoăn
  brackets and inside here 🍀 dấu ngoặc và bên trong ở đây
  i will just print hello world 🍀 tôi sẽ chỉ in xin chào thế giới
  all right and that by itself is the most 🍀 được rồi và điều đó tự nó là tốt nhất
  simple 🍀 đơn giản
  if statement as you can see starts with 🍀 câu lệnh if như bạn có thể thấy bắt đầu bằng
  the if keyword 🍀 từ khóa nếu
  and then followed by either a boolean 🍀 và sau đó theo sau là một boolean
  
