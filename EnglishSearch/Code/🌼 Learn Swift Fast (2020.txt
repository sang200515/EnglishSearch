  https://www.youtube.com/watch?v=FcsY1YPBwzQ
  
  hello and welcome to my Swift tutorial 🍀 xin chào và chào mừng đến với hướng dẫn Swift của tôi
  for beginners if you want to learn Swift 🍀 cho người mới bắt đầu nếu bạn muốn học Swift
  programming even if you've never coded 🍀 lập trình ngay cả khi bạn chưa bao giờ viết mã
  before then you're in the right place 🍀 trước đó bạn đang ở đúng nơi
  I'll take it step by step and by the end 🍀 Tôi sẽ thực hiện từng bước và đến cuối cùng
  of this video series you're going to 🍀 của loạt video này bạn sẽ
  have a solid foundation in Swift 🍀 có nền tảng vững chắc về Swift
  programming all right stay tuned my name 🍀 lập trình được rồi hãy theo dõi tên tôi
  is Chris and I'll be your guide and 🍀 là Chris và tôi sẽ là người hướng dẫn của bạn và
  teacher on your swift journey now before 🍀 giáo viên trên hành trình nhanh chóng của bạn bây giờ trước
  we dive in I need to tell you about two 🍀 chúng tôi đi sâu vào tôi cần nói với bạn về hai
  things that are going to be critical for 🍀 những thứ sẽ rất quan trọng đối với
  your success number one you have to keep 🍀 thành công của bạn là số một bạn phải giữ
  in mind that this is a journey and I'll 🍀 hãy nhớ rằng đây là một cuộc hành trình và tôi sẽ
  elaborate on this in a second number two 🍀 giải thích về điều này trong một số thứ hai
  is that you're going to have to get your 🍀 là bạn sẽ phải có được của bạn
  hands dirty now these two lessons I've 🍀 tay bẩn bây giờ hai bài học tôi đã
  had to learn the hard way through my own 🍀 đã phải học một cách khó khăn thông qua chính tôi
  failures when I first started learning 🍀 thất bại khi tôi bắt đầu học
  Swift programming I failed and that was 🍀 Lập trình Swift tôi đã thất bại và đó là
  because I just kept learning and 🍀 bởi vì tôi chỉ tiếp tục học hỏi và
  learning and as I was learning 🍀 học tập và như tôi đã học
  everything made sense in my head but 🍀 mọi thứ đều có ý nghĩa trong đầu tôi nhưng
  when I finally got to coding I realized 🍀 khi cuối cùng tôi đã viết mã, tôi nhận ra
  that I didn't retain a lot of what I've 🍀 rằng tôi đã không giữ lại nhiều những gì tôi đã
  learned and I don't want that to happen 🍀 đã học và tôi không muốn điều đó xảy ra
  to you so it's really critical that you 🍀 đối với bạn vì vậy điều thực sự quan trọng là bạn
  practice and I'll help you along with 🍀 thực hành và tôi sẽ giúp bạn cùng với
  that and the second thing is that as 🍀 điều đó và điều thứ hai là như
  with any journey worth completing there 🍀 với bất kỳ cuộc hành trình đáng hoàn thành ở đó
  will be ups and downs you probably will 🍀 bạn có thể sẽ thăng trầm
  be pretty confused in the beginning but 🍀 ban đầu khá bối rối nhưng
  I guarantee you stick with it and you'll 🍀 Tôi đảm bảo bạn gắn bó với nó và bạn sẽ
  come out the other side a swift 🍀 đi ra phía bên kia một cách nhanh chóng
  developer all right now I know you're 🍀 nhà phát triển tất cả ngay bây giờ tôi biết bạn là
  itching to get started but just one last 🍀 ngứa để bắt đầu nhưng chỉ là một cuối cùng
  thing for your success if you ever get 🍀 điều cho sự thành công của bạn nếu bạn từng nhận được
  confused or get stuck you could simply 🍀 bối rối hoặc gặp khó khăn, bạn có thể chỉ cần
  leave a comment below and we're going to 🍀 để lại một bình luận dưới đây và chúng tôi sẽ
  jump in and help you out or you can join 🍀 nhảy vào và giúp bạn hoặc bạn có thể tham gia
  our free code with Chris Facebook 🍀 mã miễn phí của chúng tôi với Chris Facebook
  community where the team and I hang out 🍀 cộng đồng nơi nhóm và tôi đi chơi
  as well as other iOS learners all right 🍀 cũng như những người học iOS khác đều được
  now that you have the right frame of 🍀 bây giờ bạn có khung bên phải của
  mind let's take a look at what your 🍀 tâm trí chúng ta hãy xem những gì bạn
  swift journey is going to look like in 🍀 hành trình nhanh chóng sẽ giống như trong
  this lesson we're going to get you set 🍀 bài học này chúng tôi sẽ giúp bạn thiết lập
  up and oriented with the tools and we're 🍀 lên và định hướng với các công cụ và chúng tôi
  going to dive into our first Swift topic 🍀 sẽ đi sâu vào chủ đề Swift đầu tiên của chúng tôi
  which are variables in the next five or 🍀 đó là các biến trong năm hoặc tiếp theo
  six lessons after that you'll learn more 🍀 sáu bài học sau đó bạn sẽ học được nhiều hơn
  Swift you'll do more hands-on coding and 🍀 Swift, bạn sẽ viết mã thực hành nhiều hơn và
  with each lesson you progress through 🍀 với mỗi bài học bạn tiến bộ thông qua
  you'll be layering and building up your 🍀 bạn sẽ xếp lớp và xây dựng
  skills becoming a stronger and Swift 🍀 kỹ năng trở nên mạnh mẽ và nhanh nhẹn
  e're programmer then from lesson seven 🍀 e là lập trình viên rồi từ bài 7
  to eleven you'll be learning more about 🍀 đến mười một bạn sẽ học thêm về
  how swift code is structured and 🍀 mã Swift được cấu trúc như thế nào và
  organized and how it's actually used now 🍀 tổ chức và làm thế nào nó thực sự được sử dụng bây giờ
  even if you just get up to this point 🍀 ngay cả khi bạn chỉ nhận được đến thời điểm này
  you'll have a pretty solid foundation 🍀 bạn sẽ có một nền tảng khá vững chắc
  understanding of how the Swift 🍀 hiểu biết về cách Swift
  programming language works and how to 🍀 ngôn ngữ lập trình hoạt động và làm thế nào để
  use it but we're going to take it even 🍀 sử dụng nó nhưng chúng tôi sẽ lấy nó thậm chí
  further from that point on you're going 🍀 xa hơn nữa từ thời điểm đó bạn sẽ đi
  to continue learning new Swift concepts 🍀 để tiếp tục học các khái niệm Swift mới
  and goodies that will enable you to do 🍀 và quà tặng sẽ cho phép bạn làm
  more and more with this wonderful 🍀 nhiều hơn và nhiều hơn nữa với điều tuyệt vời này
  programming language oh and I forgot to 🍀 ngôn ngữ lập trình oh và tôi quên mất
  mention in between these lessons I'll 🍀 đề cập đến giữa những bài học này tôi sẽ
  sprinkle some challenges and exercises 🍀 rắc một số thử thách và bài tập
  that I highly recommend you do because 🍀 mà tôi thực sự khuyên bạn nên làm bởi vì
  it's gonna help you discover your hidden 🍀 nó sẽ giúp bạn khám phá tiềm ẩn của bạn
  knowledge gaps okay so with that said 🍀 lỗ hổng kiến ​​​​thức được rồi vì vậy với điều đó đã nói
  let's jump right in 🍀 hãy nhảy ngay vào
  alright so first things first where do 🍀 được rồi, vậy điều đầu tiên trước tiên làm ở đâu
  you write your Swift code 🍀 bạn viết mã Swift của bạn
  well ideally you want to be using a 🍀 lý tưởng nhất là bạn muốn sử dụng một
  swift code editor because that way you 🍀 trình chỉnh sửa mã nhanh vì theo cách đó bạn
  can compile your Swift code execute it 🍀 có thể biên dịch mã Swift của bạn để thực thi nó
  and take a look at the results well 🍀 và hãy nhìn vào kết quả tốt
  Apple has released a tool called Xcode 🍀 Apple đã phát hành một công cụ gọi là Xcode
  just for this purpose now using this 🍀 chỉ cho mục đích này bây giờ sử dụng này
  tool you can write your Swift code build 🍀 công cụ bạn có thể viết bản dựng mã Swift của mình
  your user interfaces and build apps 🍀 giao diện người dùng của bạn và xây dựng ứng dụng
  across all of those different platforms 🍀 trên tất cả các nền tảng khác nhau đó
  and what's more this app is completely 🍀 và hơn thế nữa, ứng dụng này hoàn toàn
  free the only drawback is that it's made 🍀 miễn phí, nhược điểm duy nhất là nó được tạo ra
  from Mac computers and there is no PC or 🍀 từ máy tính Mac và không có PC hoặc
  Windows alternative but if you're on a 🍀 Windows thay thế nhưng nếu bạn đang sử dụng
  PC it's not the end of the road for you 🍀 PC nó không phải là cuối con đường cho bạn
  because there are other alternatives 🍀 bởi vì có những lựa chọn thay thế khác
  such as browser-based solutions you can 🍀 chẳng hạn như các giải pháp dựa trên trình duyệt, bạn có thể
  type your Swift code directly into the 🍀 nhập mã Swift của bạn trực tiếp vào
  browser and execute it and then take a 🍀 trình duyệt và thực hiện nó và sau đó lấy một
  look at the results you're not going to 🍀 nhìn vào kết quả bạn sẽ không
  be able to build out this way but you're 🍀 có thể xây dựng theo cách này nhưng bạn
  still going to be able to use it as a 🍀 vẫn sẽ có thể sử dụng nó như một
  learning tool to learn Swift programming 🍀 công cụ học tập để học lập trình Swift
  language I wrote an article explaining 🍀 tôi đã viết một bài báo giải thích
  all of the different options that code 🍀 tất cả các tùy chọn khác nhau mà mã
  with Chris calm slash Xcode for Windows 🍀 với Chris bình tĩnh chém Xcode cho Windows
  now if you are on a Mac all you have to 🍀 bây giờ nếu bạn đang sử dụng máy Mac, tất cả những gì bạn phải làm
  do in order to get xcode is go to the 🍀 làm để có được xcode là vào
  mac app store and then search for xcode 🍀 cửa hàng ứng dụng mac và sau đó tìm kiếm xcode
  here you're gonna see this listing here 🍀 ở đây bạn sẽ thấy danh sách này ở đây
  now don't be fooled by the low ratings 🍀 bây giờ đừng để bị đánh lừa bởi xếp hạng thấp
  this is the tool that all of the 🍀 đây là công cụ mà tất cả các
  professionals use to build apps on all 🍀 các chuyên gia sử dụng để xây dựng ứng dụng trên tất cả
  of the Apple platforms it can be a 🍀 trong số các nền tảng của Apple, nó có thể là một
  little bit confusing at first when you 🍀 ban đầu hơi khó hiểu khi bạn
  launch it and from time to time it is 🍀 khởi chạy nó và thỉnh thoảng nó là
  buggy however it is the official Apple 🍀 lỗi tuy nhiên nó là chính thức của Apple
  tool so it works and placed nicely with 🍀 công cụ để nó hoạt động và được đặt độc đáo với
  the rest of the Apple ecosystem 🍀 phần còn lại của hệ sinh thái Apple
  including submitting apps into the App 🍀 bao gồm cả việc gửi ứng dụng vào Ứng dụng
  Store's so what you're going to want to 🍀 Cửa hàng là những gì bạn sẽ muốn
  do is download and install Xcode and you 🍀 làm là tải xuống và cài đặt Xcode và bạn
  have to also make sure that you're 🍀 cũng phải chắc chắn rằng bạn đang
  running the latest version of Mac OS 🍀 chạy phiên bản Mac OS mới nhất
  because if you scroll all the way down 🍀 bởi vì nếu bạn cuộn hết cỡ xuống
  here take a look at this compatibility 🍀 ở đây hãy xem khả năng tương thích này
  section if 🍀 phần nếu
  this doesn't say it works on this Mac 🍀 điều này không có nghĩa là nó hoạt động trên máy Mac này
  you can you can actually click it and 🍀 bạn có thể bạn thực sự có thể nhấp vào nó và
  they'll tell you which version of Mac OS 🍀 họ sẽ cho bạn biết phiên bản Mac OS nào
  it requires you want to go up here and 🍀 nó yêu cầu bạn muốn đi lên đây và
  check your version of Mac OS on your 🍀 kiểm tra phiên bản Mac OS của bạn trên
  machine and if you have a lower version 🍀 máy và nếu bạn có phiên bản thấp hơn
  you can just search for Mac OS in the 🍀 bạn chỉ có thể tìm kiếm Mac OS trong
  App Store right here and it's gonna be a 🍀 App Store ngay tại đây và nó sẽ là một
  free upgrade for you the only question 🍀 nâng cấp miễn phí cho bạn câu hỏi duy nhất
  is does your machine support this latest 🍀 máy của bạn có hỗ trợ bản mới nhất này không
  version of Mac OS even if it doesn't and 🍀 phiên bản Mac OS ngay cả khi không có và
  you can't get the latest version of 🍀 bạn không thể tải phiên bản mới nhất của
  Xcode I wouldn't let that stop you use 🍀 Xcode tôi sẽ không để điều đó ngăn bạn sử dụng
  one of the browser-based solutions 🍀 một trong những giải pháp dựa trên trình duyệt
  because you're still going to be able to 🍀 bởi vì bạn vẫn sẽ có thể
  learn Swift and practice with even 🍀 học Swift và thực hành với thậm chí
  without Xcode alright so after you've 🍀 không có Xcode, vì vậy sau khi bạn
  installed Xcode go ahead and click on 🍀 đã cài đặt Xcode, hãy tiếp tục và nhấp vào
  open 🍀 mở
  and that's going to launch Xcode for you 🍀 và điều đó sẽ khởi chạy Xcode cho bạn
  now you're going to get this sort of 🍀 bây giờ bạn sẽ nhận được loại này
  welcome dialog and we're not going to 🍀 hộp thoại chào mừng và chúng tôi sẽ không
  create a brand new Xcode project instead 🍀 thay vào đó hãy tạo một dự án Xcode hoàn toàn mới
  we are going to get started with a 🍀 chúng ta sẽ bắt đầu với một
  playground and that's just a lightweight 🍀 sân chơi và đó chỉ là một trọng lượng nhẹ
  little window where we can type in our 🍀 cửa sổ nhỏ nơi chúng ta có thể gõ vào
  Swift code and execute it to take a look 🍀 Mã Swift và thực thi nó để xem
  at the results it's perfect for learning 🍀 kết quả là nó hoàn hảo cho việc học
  Swift if you don't get this 🍀 Swift nếu bạn không nhận được điều này
  welcome dialog you can always go up to 🍀 hộp thoại chào mừng bạn luôn có thể truy cập
  the file menu go under new and then 🍀 menu tệp chuyển sang phần mới và sau đó
  choose playground so if you have this 🍀 chọn sân chơi vì vậy nếu bạn có cái này
  welcome dialog just click on get started 🍀 hộp thoại chào mừng chỉ cần nhấp vào bắt đầu
  with the playground we're always gonna 🍀 với sân chơi chúng ta sẽ luôn
  end up in this place where we're gonna 🍀 kết thúc ở nơi này, nơi chúng ta sẽ
  choose what type of playground we want 🍀 chọn loại sân chơi chúng tôi muốn
  to create so under iOS choose blank 🍀 để tạo như vậy trong iOS chọn trống
  playground and you can save it anywhere 🍀 sân chơi và bạn có thể lưu nó ở bất cứ đâu
  you want 🍀 bạn muốn
  make sure you remember where you save it 🍀 đảm bảo bạn nhớ nơi bạn lưu nó
  so you can access it I'm just going to 🍀 để bạn có thể truy cập nó, tôi sẽ chỉ
  save it on the desktop right here now 🍀 lưu nó trên máy tính để bàn ngay tại đây
  before we dive in here let's do a quick 🍀 trước khi chúng tôi đi sâu vào đây, hãy làm nhanh
  tour and let me show you all of the 🍀 tham quan và để tôi chỉ cho bạn tất cả
  different elements of the playground 🍀 các yếu tố khác nhau của sân chơi
  so obviously this big main section here 🍀 vì vậy rõ ràng phần chính lớn này ở đây
  is the code editor this is where you 🍀 là trình chỉnh sửa mã, đây là nơi bạn
  would be typing in your Swift code and 🍀 sẽ nhập mã Swift của bạn và
  there is some sample Swift code here 🍀 có một số mã Swift mẫu ở đây
  we're not gonna worry about that just 🍀 chúng ta sẽ không lo lắng về điều đó chỉ
  yet I also have some line numbers which 🍀 nhưng tôi cũng có một số số dòng
  makes it very easy for me to refer to 🍀 làm cho nó rất dễ dàng cho tôi để tham khảo
  the different lines of code if you don't 🍀 các dòng mã khác nhau nếu bạn không
  have line numbers and you want to enable 🍀 có số dòng và bạn muốn kích hoạt
  them just go to Xcode preferences under 🍀 họ chỉ cần chuyển đến tùy chọn Xcode bên dưới
  text editing and you can turn those line 🍀 chỉnh sửa văn bản và bạn có thể biến những dòng đó
  numbers on or off now you'll also notice 🍀 số bật hoặc tắt bây giờ bạn cũng sẽ nhận thấy
  that you 🍀 rằng bạn
  when you hover your mouse under the 🍀 khi bạn di chuột dưới
  different lines the sort of blue play 🍀 các dòng khác nhau của loại chơi màu xanh
  icon follows you and when you drag it 🍀 biểu tượng đi theo bạn và khi bạn kéo nó
  down and highlights all of those line 🍀 xuống và đánh dấu tất cả những dòng đó
  numbers in blue well when you click this 🍀 các số màu xanh lam khi bạn nhấp vào đây
  run icon it basically just runs the code 🍀 chạy biểu tượng về cơ bản nó chỉ chạy mã
  up to that point so if I drag it to line 🍀 đến thời điểm đó vì vậy nếu tôi kéo nó vào dòng
  number two and I click this blue button 🍀 số hai và tôi nhấp vào nút màu xanh lam này
  it's just going to run that first line 🍀 nó sẽ chạy dòng đầu tiên đó
  but if I drag it all the way to the 🍀 nhưng nếu tôi kéo nó đến tận cùng
  bottom here at line four and I run this 🍀 dưới đây ở dòng bốn và tôi chạy cái này
  it's going to run all the code of that 🍀 nó sẽ chạy tất cả mã đó
  point out to line four and you can see 🍀 chỉ ra dòng bốn và bạn có thể thấy
  here at the top there's a status bar 🍀 ở đây trên cùng có một thanh trạng thái
  which tells you the current status of 🍀 cho bạn biết tình trạng hiện tại của
  the playground it should say ready for 🍀 sân chơi nó nên nói sẵn sàng cho
  you and that means it's going to be 🍀 bạn và điều đó có nghĩa là nó sẽ được
  ready to accept your code and run it 🍀 sẵn sàng chấp nhận mã của bạn và chạy nó
  there are some options up here for some 🍀 có một số tùy chọn ở đây cho một số
  different views the one I want you to 🍀 quan điểm khác nhau mà tôi muốn bạn
  click right now is this debug area hide 🍀 nhấp ngay bây giờ là khu vực gỡ lỗi này ẩn
  or show the debug area and this is also 🍀 hoặc hiển thị khu vực gỡ lỗi và đây cũng là
  referred to as the console area when 🍀 được gọi là khu vực bảng điều khiển khi
  we're going to be testing our Swift code 🍀 chúng tôi sẽ kiểm tra mã Swift của mình
  we're going to be outputting information 🍀 chúng ta sẽ xuất thông tin
  into this debug or console area so I 🍀 vào khu vực gỡ lỗi hoặc bảng điều khiển này vì vậy tôi
  want you to make sure that you have this 🍀 muốn bạn chắc chắn rằng bạn có cái này
  tray enabled and that you can see the 🍀 khay được bật và bạn có thể thấy
  output that's going to be shown there 🍀 đầu ra sẽ được hiển thị ở đó
  this right-hand side here is the preview 🍀 phía bên tay phải này là bản xem trước
  of your lines of code I wouldn't pay too 🍀 trong số các dòng mã của bạn, tôi cũng sẽ không trả tiền
  much attention to this because from 🍀 nhiều sự chú ý đến điều này bởi vì từ
  version to version of Xcode it may look 🍀 phiên bản này sang phiên bản Xcode khác, nó có thể trông như thế nào
  a little bit different where I want you 🍀 một chút khác biệt nơi tôi muốn bạn
  to focus is in this debug area down here 🍀 để tập trung vào khu vực gỡ lỗi này ở đây
  because that should be consistent with 🍀 bởi vì điều đó phải phù hợp với
  what you're seeing in the video now 🍀 những gì bạn đang thấy trong video bây giờ
  there's one more thing I want to draw 🍀 còn một thứ nữa tôi muốn vẽ
  your attention to and it's this button 🍀 sự chú ý của bạn và đó là nút này
  down here now this will stop executing 🍀 xuống đây bây giờ điều này sẽ ngừng thực hiện
  the playground so if I hit stop you can 🍀 sân chơi vì vậy nếu tôi nhấn dừng bạn có thể
  see that it enables this guy again 🍀 thấy rằng nó cho phép anh chàng này một lần nữa
  and you can also click this button it's 🍀 và bạn cũng có thể nhấp vào nút này
  turned into a play button when you click 🍀 biến thành nút phát khi bạn nhấp vào
  on this icon it's going to execute your 🍀 trên biểu tượng này, nó sẽ thực thi
  entire playground if you hover your 🍀 toàn bộ sân chơi nếu bạn di chuột
  mouse here and you choose you know a 🍀 chuột ở đây và bạn chọn bạn biết một
  certain line of code to run the code up 🍀 dòng mã nhất định để chạy mã lên
  till that just gives you greater control 🍀 cho đến khi điều đó chỉ mang lại cho bạn quyền kiểm soát tốt hơn
  if you want to run like a segment of 🍀 nếu bạn muốn chạy như một đoạn của
  your playground rather than the entire 🍀 sân chơi của bạn hơn là toàn bộ
  playground which is what you would click 🍀 sân chơi đó là những gì bạn sẽ nhấp vào
  here now another thing is that if you 🍀 ở đây bây giờ một điều nữa là nếu bạn
  click and hold this play button you can 🍀 nhấp và giữ nút phát này, bạn có thể
  see that there are two options it's set 🍀 thấy rằng có hai tùy chọn được đặt
  to manually run which means that every 🍀 để chạy thủ công, điều đó có nghĩa là mọi
  time you want to run your playground 🍀 thời gian bạn muốn chạy sân chơi của bạn
  you're going to have to either click on 🍀 bạn sẽ phải nhấp vào
  this play icon or choose a line and hit 🍀 biểu tượng phát này hoặc chọn một dòng và nhấn
  this blue play icon but if you click and 🍀 biểu tượng phát màu xanh này nhưng nếu bạn nhấp và
  hold it and change it to automatically 🍀 giữ nó và thay đổi nó thành tự động
  run every time you edit the code it's 🍀 chạy mỗi khi bạn chỉnh sửa mã
  just going to automatically execute your 🍀 chỉ cần tự động thực hiện của bạn
  playground and update the results now 🍀 sân chơi và cập nhật kết quả ngay bây giờ
  sometimes this can be a little buggy and 🍀 đôi khi điều này có thể là một lỗi nhỏ và
  as you can see here it's running my 🍀 như bạn có thể thấy ở đây nó đang chạy
  playground sometimes this takes a long 🍀 sân chơi đôi khi điều này mất nhiều thời gian
  long time for it to be ready again and 🍀 thời gian dài để nó sẵn sàng trở lại và
  sometimes you know when it's constantly 🍀 đôi khi bạn biết khi nó liên tục
  running your playground like this you're 🍀 điều hành sân chơi của bạn như thế này bạn
  not going to see the updated results it 🍀 sẽ không thấy kết quả cập nhật nó
  doesn't work as perfectly as we would 🍀 không hoạt động hoàn hảo như chúng ta
  want so if you're having some trouble 🍀 muốn như vậy nếu bạn đang gặp một số rắc rối
  with you know you not seeing output on 🍀 với bạn biết bạn không nhìn thấy đầu ra trên
  your playground and seeing that this is 🍀 sân chơi của bạn và thấy rằng đây là
  continually running then what you might 🍀 liên tục chạy sau đó những gì bạn có thể
  want to do is just click stop and click 🍀 muốn làm chỉ cần bấm dừng và bấm
  and hold it and change it to manually 🍀 và giữ nó và thay đổi nó thành thủ công
  run and when it says ready you're going 🍀 chạy và khi nó nói sẵn sàng, bạn sẽ đi
  to be able to click and run your code 🍀 để có thể nhấp và chạy mã của bạn
  all right so now that you're a little 🍀 được rồi vì vậy bây giờ bạn là một chút
  more familiar with the playground and 🍀 quen thuộc hơn với sân chơi và
  all of its controls and different 🍀 tất cả các điều khiển của nó và khác nhau
  windows now we can actually dive into 🍀 cửa sổ bây giờ chúng ta thực sự có thể đi sâu vào
  Swift code so when you're coding you 🍀 Mã Swift để khi bạn viết mã, bạn
  want to have the mindset that you are 🍀 muốn có suy nghĩ rằng bạn là
  giving the computer instructions on how 🍀 đưa ra hướng dẫn máy tính về cách
  to process data now take for instance a 🍀 để xử lý dữ liệu bây giờ lấy ví dụ một
  stock portfolio app if you are building 🍀 ứng dụng danh mục đầu tư chứng khoán nếu bạn đang xây dựng
  an app like that you'd have to write 🍀 một ứng dụng như thế bạn phải viết
  code to tell the computer where to grab 🍀 mã để nói với máy tính nơi để lấy
  the stock prices and then tell the 🍀 giá cổ phiếu và sau đó nói với
  computer how to manipulate that it maybe 🍀 máy tính làm thế nào để thao tác mà nó có thể
  come up with the percentage lost or 🍀 đưa ra tỷ lệ phần trăm bị mất hoặc
  percentage gained and then you're gonna 🍀 phần trăm đạt được và sau đó bạn sẽ
  have to write code to tell the computer 🍀 phải viết mã để nói với máy tính
  instructions on how to display that to 🍀 hướng dẫn về cách hiển thị nó
  the user in a table format another 🍀 người dùng ở định dạng bảng khác
  example take for instance a photo app 🍀 ví dụ lấy ví dụ một ứng dụng ảnh
  kind of like Instagram you're gonna have 🍀 giống như Instagram bạn sẽ có
  to write code to tell the computer where 🍀 viết mã để báo cho máy tính biết vị trí
  to grab the images right and how to 🍀 để lấy đúng hình ảnh và làm thế nào để
  display them to user and if the user is 🍀 hiển thị chúng cho người dùng và nếu người dùng là
  taking a photo and trying to upload it 🍀 chụp ảnh và cố gắng tải nó lên
  to their account you're gonna have to 🍀 vào tài khoản của họ, bạn sẽ phải
  make sure that you have code containing 🍀 đảm bảo rằng bạn có mã chứa
  instructions on how to take that image 🍀 hướng dẫn cách chụp ảnh đó
  data from the user's phone and then 🍀 dữ liệu từ điện thoại của người dùng và sau đó
  where to 🍀 đi đâu
  upload it to some sort of file server 🍀 tải nó lên một số loại máy chủ tập tin
  and make an entry in a database so when 🍀 và tạo một mục trong cơ sở dữ liệu để khi
  you're coding you're always writing 🍀 bạn đang mã hóa bạn luôn viết
  instructions for the computer on how to 🍀 hướng dẫn cho máy tính về cách
  process different types of data and in 🍀 xử lý các loại dữ liệu khác nhau và trong
  the next lesson we're going to talk more 🍀 bài học tiếp theo chúng ta sẽ nói nhiều hơn
  about different data types but in this 🍀 về các loại dữ liệu khác nhau nhưng trong này
  lesson we are going to I'm going to 🍀 bài học chúng ta sẽ học tôi sẽ học
  demonstrate some simple pieces of data 🍀 chứng minh một số mẩu dữ liệu đơn giản
  for you so let's take a look at the 🍀 cho bạn vì vậy chúng ta hãy xem
  playground right now and we're going to 🍀 sân chơi ngay bây giờ và chúng ta sẽ
  ignore what's on the screen right right 🍀 bỏ qua những gì trên màn hình
  up here these couple lines and I'm just 🍀 lên đây vài dòng này và tôi chỉ
  gonna show you some data so here some 🍀 sẽ cho bạn thấy một số dữ liệu vì vậy ở đây một số
  number data right that's 123 or we could 🍀 dữ liệu số đúng đó là 123 hoặc chúng ta có thể
  have like a decimal number that's 🍀 giống như một số thập phân đó là
  another piece of data at zero point 🍀 một phần dữ liệu khác tại điểm không
  seven or we're gonna have some piece of 🍀 bảy hoặc chúng ta sẽ có một số mảnh
  text and text this surrounded by two 🍀 văn bản và văn bản này được bao quanh bởi hai
  quotes like that and that's a piece of 🍀 trích dẫn như thế và đó là một phần của
  text that's another type of data now the 🍀 văn bản bây giờ là một loại dữ liệu khác
  data is stored in the computer's memory 🍀 dữ liệu được lưu trữ trong bộ nhớ của máy tính
  which is how the computer keeps track of 🍀 đó là cách máy tính theo dõi
  where the data is and what it is in 🍀 dữ liệu ở đâu và nó ở trong cái gì
  order for us to work with it we're going 🍀 để chúng tôi làm việc với nó, chúng tôi sẽ đi
  to need a way to reference that specific 🍀 cần một cách để tham khảo cụ thể đó
  piece of data and that brings us to our 🍀 mảnh dữ liệu và điều đó đưa chúng ta đến
  topic for today's lesson which are 🍀 chủ đề của bài học hôm nay đó là
  variables and variables are a way for us 🍀 biến và biến là một cách để chúng ta
  to keep track of a certain piece of data 🍀 để theo dõi một phần dữ liệu nhất định
  so now let me show you how to write 🍀 vì vậy bây giờ hãy để tôi chỉ cho bạn cách viết
  swift code 🍀 mã nhanh
  to create a new variable in order to 🍀 để tạo một biến mới để
  keep track of a piece of data in memory 🍀 theo dõi một phần dữ liệu trong bộ nhớ
  so in order to create a new variable you 🍀 vì vậy để tạo một biến mới, bạn
  type in the keyword var or var followed 🍀 gõ từ khóa var hoặc var theo sau
  by a space and then you can type in a 🍀 bằng một khoảng trắng và sau đó bạn có thể nhập một
  variable name now you can name your 🍀 tên biến bây giờ bạn có thể đặt tên của bạn
  variable anything you want but it should 🍀 biến bất cứ điều gì bạn muốn nhưng nó nên
  be descriptive for the data that that 🍀 được mô tả cho các dữ liệu mà
  variable is going to keep track of so 🍀 biến sẽ theo dõi như vậy
  for example if I had a piece of data 🍀 ví dụ nếu tôi có một phần dữ liệu
  that was someone's first name I might 🍀 đó là tên của ai đó tôi có thể
  name my variable first name and nearing 🍀 đặt tên cho biến của tôi tên và gần
  the end of the lesson I'll tell you some 🍀 phần cuối của bài học tôi sẽ nói với bạn một số
  more best practices about naming 🍀 các phương pháp hay nhất khác về cách đặt tên
  variables for now let's write first name 🍀 các biến bây giờ hãy viết tên
  and that's going to be our variable name 🍀 và đó sẽ là tên biến của chúng ta
  so just like that we've declared a new 🍀 vì vậy giống như chúng tôi đã tuyên bố một cái mới
  variable called first name now at the 🍀 biến được gọi là tên bây giờ tại
  same time you can also give a piece of 🍀 đồng thời bạn cũng có thể cho một mảnh
  data for this variable to keep track of 🍀 dữ liệu cho biến này để theo dõi
  and we do that using the equals sign so 🍀 và chúng tôi làm điều đó bằng cách sử dụng dấu bằng
  you're going to write a space and then 🍀 bạn sẽ viết một khoảng trắng và sau đó
  an equal sign and then you're going to 🍀 một dấu bằng và sau đó bạn sẽ
  write another space 🍀 viết một không gian khác
  followed by the data that you want this 🍀 theo sau là dữ liệu mà bạn muốn
  variable to keep track of so since we 🍀 biến để theo dõi như vậy vì chúng tôi
  named this variable first name why don't 🍀 đặt tên biến này là tên tại sao không
  we give it a piece of text containing 🍀 chúng tôi cung cấp cho nó một đoạn văn bản có chứa
  the word Tom so let's recap what this 🍀 từ Tom vì vậy hãy tóm tắt lại từ này
  line of code does so we've got a piece 🍀 dòng mã làm như vậy chúng tôi đã có một phần
  of text data Tom and we need a variable 🍀 của dữ liệu văn bản Tom và chúng ta cần một biến
  to keep track of it 🍀 để theo dõi nó
  so we're declaring a new variable using 🍀 vì vậy chúng tôi đang khai báo một biến mới bằng cách sử dụng
  the VAR keyword and we're calling this 🍀 từ khóa VAR và chúng tôi gọi đây là
  variable first name and then we're using 🍀 tên biến và sau đó chúng tôi đang sử dụng
  the equal sign to assign that piece of 🍀 dấu bằng để gán mảnh đó
  text data to this first name variable 🍀 dữ liệu văn bản vào biến tên đầu tiên này
  now let's jump back into the playground 🍀 bây giờ chúng ta hãy quay trở lại sân chơi
  and let's try this out so I'm going to 🍀 và hãy thử điều này vì vậy tôi sẽ
  erase this sample pieces of data that we 🍀 xóa mẫu dữ liệu này mà chúng tôi
  had here and you can see this line of 🍀 đã có ở đây và bạn có thể thấy dòng này
  code actually this line of code which 🍀 mã thực sự dòng mã này
  came with our playground is exactly what 🍀 đến với sân chơi của chúng tôi chính xác là những gì
  we just showed in our slides except that 🍀 chúng tôi chỉ hiển thị trong các trang trình bày của mình ngoại trừ điều đó
  this time the piece of data is hello 🍀 lần này phần dữ liệu là xin chào
  playground and the variable name is STR 🍀 sân chơi và tên biến là STR
  so here we're going to write in the line 🍀 vì vậy ở đây chúng ta sẽ viết trong dòng
  of code that I just showed you so you 🍀 mã mà tôi vừa chỉ cho bạn để bạn
  want to write var space and our variable 🍀 muốn viết không gian var và biến của chúng tôi
  name is first name followed by space and 🍀 tên là tên theo sau là khoảng trắng và
  then the equal sign and then space 🍀 sau đó là dấu bằng và sau đó là dấu cách
  followed by our piece of text data which 🍀 theo sau là đoạn dữ liệu văn bản của chúng tôi
  is Tom now what we've accomplished here 🍀 bây giờ là Tom những gì chúng tôi đã hoàn thành ở đây
  is that we've declared a new variable 🍀 là chúng ta đã khai báo một biến mới
  called first name and we've assigned the 🍀 được gọi là tên và chúng tôi đã chỉ định
  piece of data tom to it now whenever we 🍀 mảnh dữ liệu tom đến nó bây giờ bất cứ khi nào chúng tôi
  want to work with that piece of data Tom 🍀 muốn làm việc với phần dữ liệu đó Tom
  we can just refer to our variable first 🍀 chúng ta chỉ có thể tham khảo biến của mình trước
  name so now let's try working with our 🍀 tên vì vậy bây giờ hãy thử làm việc với chúng tôi
  variable what we're going to try to do 🍀 biến những gì chúng ta sẽ cố gắng làm
  is output Tom down here in the console 🍀 là đầu ra Tom ở đây trong bảng điều khiển
  area and there's a command called print 🍀 khu vực và có một lệnh gọi là in
  followed by two parentheses like this 🍀 theo sau là hai dấu ngoặc đơn như thế này
  and in the middle you can give that 🍀 và ở giữa bạn có thể cho rằng
  command something to output into the 🍀 lệnh một cái gì đó để xuất vào
  console area below so why don't we try 🍀 khu vực bảng điều khiển bên dưới vậy tại sao chúng ta không thử
  typing in first name in there and what 🍀 nhập tên vào đó và những gì
  we're going to do is you can either hit 🍀 chúng tôi sẽ làm là bạn có thể đánh
  the execute button here or you can hit 🍀 nút thực thi ở đây hoặc bạn có thể nhấn
  this blue button right there so let's go 🍀 nút màu xanh này ở ngay đó, hãy bắt đầu
  ahead and hit execute and you can see 🍀 phía trước và nhấn thực hiện và bạn có thể thấy
  here that we've successfully output that 🍀 ở đây chúng tôi đã xuất thành công
  piece of data tom so isn't that pretty 🍀 mảnh dữ liệu tom vậy không đẹp sao
  cool your print command is saying that 🍀 thật tuyệt, lệnh in của bạn đang nói rằng
  you want to print the data that is 🍀 bạn muốn in dữ liệu đó là
  referenced by the variable first name 🍀 được tham chiếu bởi tên biến
  now let's try working with another piece 🍀 bây giờ hãy thử làm việc với một mảnh khác
  of data let's say var stock price equals 🍀 của dữ liệu giả sử giá cổ phiếu var bằng
  100 🍀 100
  hey and now why don't we try printing 🍀 này và bây giờ tại sao chúng ta không thử in
  stock price and let's go ahead and click 🍀 giá cổ phiếu và hãy tiếp tục và nhấp vào
  that line and we output a hundred down 🍀 dòng đó và chúng tôi xuất ra một trăm
  there now just as an aside if you're 🍀 bây giờ chỉ là một bên nếu bạn
  taking a look at the preview here and 🍀 xem bản xem trước ở đây và
  you might notice this slash end now this 🍀 bạn có thể nhận thấy dấu gạch chéo này kết thúc ngay bây giờ
  backslash n is just a line break or a 🍀 dấu gạch chéo ngược n chỉ là một dấu ngắt dòng hoặc một
  carriage return that's what puts that 🍀 vận chuyển trở lại đó là những gì đặt đó
  output in a separate line down here in 🍀 đầu ra trong một dòng riêng biệt ở đây trong
  the console now what I want to show you 🍀 bảng điều khiển bây giờ những gì tôi muốn cho bạn thấy
  is that you can actually reuse your 🍀 là bạn thực sự có thể sử dụng lại
  variable so you don't have to declare it 🍀 biến để bạn không phải khai báo nó
  again and you can just write stock price 🍀 một lần nữa và bạn chỉ có thể viết giá cổ phiếu
  you can change the stock price let's say 🍀 bạn có thể thay đổi giá cổ phiếu, giả sử
  50 right you don't have to read eclair 🍀 50 đúng bạn không cần phải đọc eclair
  it because you've already created that 🍀 nó bởi vì bạn đã tạo ra nó
  variable or declared it so now down here 🍀 biến hoặc khai báo nó để bây giờ xuống đây
  if I print out stock price and I hit the 🍀 nếu tôi in ra giá cổ phiếu và tôi nhấn
  run icon you can see that it's 50 well 🍀 biểu tượng chạy bạn có thể thấy rằng nó tốt 50
  where that the 100 go well it's 🍀 nơi mà 100 đi tốt nó
  basically you've lost track of it 🍀 về cơ bản bạn đã mất dấu vết của nó
  because this line of code you're saying 🍀 bởi vì dòng mã này bạn đang nói
  that now the variable stock price should 🍀 rằng bây giờ giá cổ phiếu biến đổi nên
  keep track of the piece of data 50 so go 🍀 theo dõi đoạn dữ liệu 50 nên đi
  ahead and give this a try if you're 🍀 trước và thử cái này nếu bạn
  playing around you might notice 🍀 chơi xung quanh bạn có thể nhận thấy
  something like you cannot assign a piece 🍀 một cái gì đó giống như bạn không thể chỉ định một mảnh
  of text data to stock price let's say 🍀 dữ liệu văn bản đến giá cổ phiếu, giả sử
  I'll just use Tom again you can assign 🍀 Tôi sẽ chỉ sử dụng lại Tom, bạn có thể chỉ định
  Tom to the variable stock price and this 🍀 Tom đến giá cổ phiếu biến đổi và điều này
  is because the variable stock price is 🍀 là bởi vì giá cổ phiếu biến đổi là
  expecting number data only in the next 🍀 chỉ mong đợi dữ liệu số trong phần tiếp theo
  lesson when we talk about data types I'm 🍀 bài học khi chúng ta nói về các loại dữ liệu tôi
  going to explain to you a little bit 🍀 sẽ giải thích cho bạn một chút
  more about why this is but for now just 🍀 thêm về lý do tại sao điều này nhưng bây giờ chỉ
  know that when you declare a new 🍀 biết rằng khi bạn khai báo một cái mới
  variable as in line 5 or line 8 here 🍀 biến như trong dòng 5 hoặc dòng 8 tại đây
  using the VAR keyword and you assign a 🍀 sử dụng từ khóa VAR và bạn chỉ định một
  piece of data to it from that point on 🍀 mảnh dữ liệu cho nó từ thời điểm đó trở đi
  when you try to reassign data 🍀 khi bạn cố gán lại dữ liệu
  to that variable it can only be of the 🍀 đối với biến đó, nó chỉ có thể là của
  same type so numbers or text so stock 🍀 cùng loại nên số hoặc văn bản như vậy
  price can only accept number data and 🍀 giá chỉ có thể chấp nhận dữ liệu số và
  first name can only accept text data so 🍀 tên chỉ có thể chấp nhận dữ liệu văn bản vì vậy
  let's go ahead and erase this line here 🍀 hãy tiếp tục và xóa dòng này ở đây
  so now you know how to declare new 🍀 vậy bây giờ bạn đã biết cách khai báo new
  variables and how to assign pieces of 🍀 biến và cách gán các phần của
  data to the variable now there's 🍀 dữ liệu vào biến bây giờ có
  something else you can use to keep track 🍀 một cái gì đó khác mà bạn có thể sử dụng để theo dõi
  of data and they're kind of like 🍀 dữ liệu và chúng giống như
  variables these are called constants now 🍀 các biến bây giờ được gọi là hằng số
  the only difference is that when you 🍀 sự khác biệt duy nhất là khi bạn
  declare a constant instead of using the 🍀 khai báo một hằng số thay vì sử dụng
  VAR keyword you use the let keyword so 🍀 Từ khóa VAR bạn dùng từ khóa let vậy
  let's try to clearing a constant here 🍀 hãy thử xóa một hằng số ở đây
  instead of using var I use let followed 🍀 thay vì sử dụng var tôi sử dụng let theo sau
  by space and then I write my constant 🍀 bằng khoảng trắng và sau đó tôi viết hằng số của mình
  name so this time let's say it's the 🍀 tên vì vậy lần này hãy nói nó là
  last name and then I'm going to use the 🍀 họ và sau đó tôi sẽ sử dụng
  equal sign and I'm going to assign a 🍀 dấu bằng và tôi sẽ gán một
  piece of data to my constant and I'm 🍀 phần dữ liệu cho hằng số của tôi và tôi
  just going to write Smith now what's the 🍀 chỉ cần viết Smith bây giờ là gì
  difference between a constant and a 🍀 sự khác biệt giữa một hằng số và một
  variable well as you saw up here with a 🍀 biến tốt như bạn đã thấy ở đây với một
  variable you declare it once like in 🍀 biến bạn khai báo nó một lần như trong
  line 8 here and then later on you can 🍀 dòng 8 ở đây và sau đó bạn có thể
  reassign a different piece of data to 🍀 gán lại một phần dữ liệu khác cho
  that same variable with a constant you 🍀 cùng một biến đó với một hằng số bạn
  can't do that once you've assigned data 🍀 không thể làm điều đó khi bạn đã chỉ định dữ liệu
  to a constant you can't assign anything 🍀 cho một hằng số bạn không thể gán bất cứ thứ gì
  else to it in fact if you try it's going 🍀 khác với nó trong thực tế nếu bạn cố gắng nó sẽ đi
  to give you an error so let me 🍀 để cung cấp cho bạn một lỗi vì vậy hãy để tôi
  demonstrate if I did something like that 🍀 chứng minh nếu tôi đã làm một cái gì đó như thế
  Xcode would immediately tell you that 🍀 Xcode sẽ ngay lập tức cho bạn biết rằng
  you can't assign something else to the 🍀 bạn không thể gán thứ gì khác cho
  constant last name 🍀 họ không thay đổi
  because that's how constants work so at 🍀 bởi vì đó là cách các hằng số hoạt động như vậy tại
  this point it might seem that variables 🍀 điểm này có vẻ như các biến
  are more flexible because you can do 🍀 linh hoạt hơn vì bạn có thể làm
  more with them and constants seemed a 🍀 nhiều hơn với họ và hằng số dường như là một
  little more restrictive and that's true 🍀 hạn chế hơn một chút và đó là sự thật
  but there are instances where you would 🍀 nhưng có những trường hợp bạn sẽ
  want to use constants instead of 🍀 muốn sử dụng hằng số thay vì
  variables in fact if you want to keep 🍀 các biến trong thực tế nếu bạn muốn giữ
  track of a piece of data and you don't 🍀 theo dõi một phần dữ liệu và bạn không
  intend to change that piece of data then 🍀 có ý định thay đổi phần dữ liệu đó sau đó
  using a constant would be preferable I 🍀 sử dụng một hằng số sẽ tốt hơn tôi
  wouldn't worry about it too much for now 🍀 bây giờ sẽ không lo lắng về nó quá nhiều
  as you get farther into your Swift 🍀 khi bạn tiến xa hơn vào Swift của mình
  journey you're going to understand when 🍀 cuộc hành trình bạn sẽ hiểu khi
  to use variables versus constants and 🍀 để sử dụng các biến so với hằng số và
  furthermore when you're coding an app 🍀 hơn nữa khi bạn đang mã hóa một ứng dụng
  and Xcode has detected that you haven't 🍀 và Xcode đã phát hiện ra rằng bạn chưa
  changed 🍀 thay đổi
  the data in your variable it would 🍀 dữ liệu trong biến của bạn nó sẽ
  suggest for you to change that variable 🍀 đề nghị bạn thay đổi biến đó
  into a constant and then at that point 🍀 thành một hằng số và sau đó tại điểm đó
  is just a matter of changing the VAR 🍀 chỉ là vấn đề thay đổi VAR
  keyword to the let keyword but for now I 🍀 từ khóa cho từ khóa let nhưng bây giờ tôi
  just want you to know that there are 🍀 chỉ muốn bạn biết rằng có
  something called constants which work 🍀 một cái gì đó gọi là hằng số hoạt động
  like variables all right and the last 🍀 giống như các biến được rồi và cuối cùng
  thing I want to talk to you about is 🍀 điều tôi muốn nói với bạn là
  best practices for naming variables and 🍀 thực tiễn tốt nhất để đặt tên biến và
  constants now I mentioned before that 🍀 hằng số bây giờ tôi đã đề cập trước đó
  you do want to be descriptive with your 🍀 bạn muốn được mô tả với của bạn
  variable and constant names so that you 🍀 tên biến và hằng để bạn
  know what kind of data they hold but 🍀 biết loại dữ liệu họ nắm giữ nhưng
  there's a balance that because you don't 🍀 có một sự cân bằng bởi vì bạn không
  want your variable and constant names to 🍀 muốn tên biến và tên hằng của bạn
  be too long because then it can also be 🍀 quá dài vì sau đó nó cũng có thể được
  really hard to read and you don't want 🍀 thực sự khó đọc và bạn không muốn
  them to be so short 🍀 chúng quá ngắn
  like STR or even maybe just s because 🍀 thích STR hoặc thậm chí có thể chỉ vì
  then you don't know what kind of data it 🍀 sau đó bạn không biết nó là loại dữ liệu gì
  holds right so I would say one to four 🍀 đúng nên tôi sẽ nói từ một đến bốn
  words is ideal and furthermore if you 🍀 từ là lý tưởng và hơn nữa nếu bạn
  had something like three words like very 🍀 có một cái gì đó giống như ba từ như rất
  first name or something like that it can 🍀 tên hoặc một cái gì đó như thế nó có thể
  still be hard to read so a best practice 🍀 vẫn khó đọc vì vậy một cách thực hành tốt nhất
  is to use camel casing and camel casing 🍀 là sử dụng vỏ lạc đà và vỏ lạc đà
  is just where you have the first word 🍀 chỉ là nơi bạn có từ đầu tiên
  having a lowercase letter and then every 🍀 có một chữ thường và sau đó mỗi
  subsequent word starting with a capital 🍀 từ tiếp theo bắt đầu bằng chữ hoa
  letter and you can see now that it is a 🍀 bức thư và bây giờ bạn có thể thấy rằng đó là một
  lot more easy to read verses all lower 🍀 nhiều câu thơ dễ đọc hơn tất cả thấp hơn
  caps okay so before moving on to the 🍀 mũ được rồi vì vậy trước khi chuyển sang
  next lesson let's do a quick recap you 🍀 bài học tiếp theo chúng ta hãy tóm tắt nhanh bạn nhé
  learned that variables are used to keep 🍀 đã học được rằng các biến được sử dụng để giữ
  track of information you learned how to 🍀 theo dõi thông tin bạn đã học cách
  declare a new variable you learned how 🍀 khai báo một biến mới mà bạn đã học
  to assign data to a variable you learned 🍀 để gán dữ liệu cho một biến bạn đã học
  about naming variables and camel casing 🍀 về đặt tên biến và vỏ lạc đà
  finally you learned about constants and 🍀 cuối cùng bạn đã học về hằng số và
  how they're like variables except that 🍀 cách chúng giống như các biến ngoại trừ điều đó
  you can't reassign data to them after 🍀 bạn không thể gán lại dữ liệu cho chúng sau khi
  the first assignment now I know that's a 🍀 nhiệm vụ đầu tiên bây giờ tôi biết đó là một
  lot to absorb but that's why I have a 🍀 rất nhiều để hấp thụ nhưng đó là lý do tại sao tôi có một
  practice video for you where we're going 🍀 thực hành video cho bạn nơi chúng tôi đang đi
  to go through a couple of exercises for 🍀 để trải qua một vài bài tập cho
  you to get hands-on and dirty with I 🍀 bạn để có được tay trên và bẩn với tôi
  also have a set of recap notes that you 🍀 cũng có một tập hợp các ghi chú tóm tắt mà bạn
  can download now the links to both of 🍀 bây giờ có thể tải xuống các liên kết đến cả hai
  these resources are down below in the 🍀 những tài nguyên này ở bên dưới trong
  description below the video 🍀 mô tả bên dưới video
  all right great job with less than 1 🍀 được rồi, công việc tuyệt vời với ít hơn 1
  I'll see you in lesson 2 🍀 Tôi sẽ gặp bạn trong bài học 2
  [Music] 🍀 [Âm nhạc]
  hello and welcome back to my Swift 🍀 xin chào và chào mừng trở lại với Swift của tôi
  tutorial for beginners this is lesson 2 🍀 hướng dẫn cho người mới bắt đầu đây là bài 2
  if you missed lesson one that I highly 🍀 nếu bạn bỏ lỡ bài học mà tôi đánh giá cao
  recommend that you start there first now 🍀 khuyên bạn nên bắt đầu từ đó trước
  back in Lesson one you learned all about 🍀 trở lại trong Bài học một bạn đã học tất cả về
  variables and constants and how they're 🍀 các biến và hằng số và cách chúng
  used to keep track of the data in your 🍀 được sử dụng để theo dõi dữ liệu trong
  app now the data in your app can be as 🍀 app bây giờ dữ liệu trong ứng dụng của bạn có thể là
  simple as text or numbers but it can 🍀 đơn giản như văn bản hoặc số nhưng nó có thể
  also be complex such as photo data or 🍀 cũng phức tạp như dữ liệu ảnh hoặc
  maybe employee records in a company 🍀 có thể hồ sơ nhân viên trong một công ty
  database in Swift there are different 🍀 cơ sở dữ liệu trong Swift có khác nhau
  data types to categorize these different 🍀 các kiểu dữ liệu để phân loại các
  kinds of data and that is today's topic 🍀 các loại dữ liệu và đó là chủ đề của ngày hôm nay
  so let's dive in so I've got a brand new 🍀 vì vậy hãy đi sâu vào để tôi có một thương hiệu mới
  playground here and I want to show you 🍀 sân chơi ở đây và tôi muốn cho bạn thấy
  something that I did a little preview 🍀 một cái gì đó mà tôi đã làm một bản xem trước nhỏ
  for you in the last lesson so here we 🍀 cho bạn trong bài học cuối cùng vì vậy ở đây chúng tôi
  have a variable called STR and we've 🍀 có một biến gọi là STR và chúng tôi đã
  assigned a piece of string data or text 🍀 được chỉ định một đoạn dữ liệu chuỗi hoặc văn bản
  data into that variable and I showed you 🍀 dữ liệu vào biến đó và tôi đã chỉ cho bạn
  last time that you're not able to do 🍀 lần cuối cùng mà bạn không thể làm
  something like this when you reassign 🍀 một cái gì đó như thế này khi bạn chỉ định lại
  data to a variable you can't change the 🍀 dữ liệu thành một biến bạn không thể thay đổi
  data type 🍀 loại dữ liệu
  now data types were something that we 🍀 bây giờ các kiểu dữ liệu là thứ mà chúng tôi
  glossed over in the previous lesson but 🍀 lướt qua trong bài học trước nhưng
  that's what we're going to talk about 🍀 đó là những gì chúng ta sẽ nói về
  here today so in Swift there are 🍀 ở đây ngày hôm nay vì vậy trong Swift có
  different types of data so far you've 🍀 các loại dữ liệu khác nhau cho đến nay bạn đã
  been introduced to strings which is 🍀 đã được giới thiệu với các chuỗi đó là
  essentially just text data and I know 🍀 về cơ bản chỉ là dữ liệu văn bản và tôi biết
  that's a little bit of a weird name for 🍀 đó là một cái tên hơi kỳ lạ đối với
  text data but you can think of it as a 🍀 dữ liệu văn bản nhưng bạn có thể coi nó như một
  string of characters at least that's how 🍀 chuỗi ký tự ít nhất là như vậy
  I thought of it when I first started and 🍀 Tôi nghĩ về nó khi tôi lần đầu tiên bắt đầu và
  then in is for integers these represent 🍀 thì in dành cho các số nguyên, chúng đại diện cho
  whole numbers positive and negative and 🍀 số nguyên dương và âm và
  then you have your decimal numbers and 🍀 sau đó bạn có số thập phân của bạn và
  you actually have two data types to 🍀 bạn thực sự có hai loại dữ liệu để
  represent your decimal numbers where you 🍀 đại diện cho số thập phân của bạn nơi bạn
  have float and you have double the only 🍀 có float và bạn chỉ có gấp đôi
  difference is that double is more 🍀 sự khác biệt là gấp đôi nhiều hơn
  precise so we can actually store a 🍀 chính xác để chúng tôi thực sự có thể lưu trữ một
  longer decimal numbers and then lastly 🍀 số thập phân dài hơn và sau đó cuối cùng
  for this slide at least we have boolean 🍀 cho slide này ít nhất chúng ta có boolean
  or just bool and this represents true or 🍀 hoặc chỉ bool và điều này đại diện cho true hoặc
  false data it's perfect for data where 🍀 dữ liệu sai nó hoàn hảo cho dữ liệu ở đâu
  there is only one of two options so 🍀 chỉ có một trong hai lựa chọn vì vậy
  those aren't the only data types in 🍀 đó không phải là kiểu dữ liệu duy nhất trong
  Swift however they're probably the most 🍀 Swift tuy nhiên họ có lẽ là nhất
  common that you'll work with for a while 🍀 phổ biến mà bạn sẽ làm việc trong một thời gian
  and also when you get a little more 🍀 và cả khi bạn nhận được nhiều hơn một chút
  advanced you're going to be able to 🍀 nâng cao bạn sẽ có thể
  create your own data types that are more 🍀 tạo các kiểu dữ liệu của riêng bạn nhiều hơn
  complex than the ones that I just showed 🍀 phức tạp hơn những cái mà tôi vừa chỉ ra
  you just as a quick example you might 🍀 bạn chỉ là một ví dụ nhanh mà bạn có thể
  create a data type 🍀 tạo kiểu dữ liệu
  called person which includes a lot of 🍀 người được gọi bao gồm rất nhiều
  information like your age your hair 🍀 thông tin như tuổi của bạn tóc của bạn
  color your eye color your ethnicity your 🍀 màu mắt của bạn màu sắc của bạn dân tộc của bạn
  likes and dislikes and all that sort of 🍀 thích và không thích và tất cả những thứ đó
  stuff that's a lot of data but it's all 🍀 thứ có rất nhiều dữ liệu nhưng đó là tất cả
  related to one type which is a person so 🍀 liên quan đến một loại đó là một người
  a quick example quick preview but for 🍀 một ví dụ nhanh xem trước nhanh nhưng đối với
  now let's just focus on these common 🍀 bây giờ chúng ta hãy tập trung vào những điểm chung này
  simple data types now what I want to do 🍀 các kiểu dữ liệu đơn giản bây giờ tôi muốn làm gì
  is I want to focus on the practical side 🍀 là tôi muốn tập trung vào khía cạnh thực tế
  of data types so I'm going to show you 🍀 của các loại dữ liệu vì vậy tôi sẽ chỉ cho bạn
  in terms of declaring variables and 🍀 về khai báo biến và
  constants how you would specify the data 🍀 hằng số cách bạn chỉ định dữ liệu
  type for your variable or constant so in 🍀 nhập cho biến hoặc hằng số của bạn để trong
  the last lesson you learned that in 🍀 bài học cuối cùng bạn đã học được rằng trong
  order to declare a variable you would 🍀 để khai báo một biến bạn sẽ
  use the VAR keyword followed by the 🍀 sử dụng từ khóa VAR theo sau là
  variable name and for constants you 🍀 tên biến và cho hằng số bạn
  would just use the let keyword and then 🍀 sẽ chỉ sử dụng từ khóa let và sau đó
  you would use the assignment operator in 🍀 bạn sẽ sử dụng toán tử gán trong
  other words the equal sign to assign 🍀 nói cách khác, dấu bằng để gán
  some sort of data into that variable or 🍀 một số loại dữ liệu vào biến đó hoặc
  constant well one thing that I did leave 🍀 liên tục tốt một điều mà tôi đã để lại
  out was an optional part of this 🍀 out là một phần tùy chọn của điều này
  variable or constant declaration and 🍀 khai báo biến hoặc hằng và
  that is that after your variable or 🍀 đó là sau biến của bạn hoặc
  constant name you can put : followed by 🍀 tên hằng bạn có thể đặt: theo sau là
  the data type that you expect this 🍀 loại dữ liệu mà bạn mong đợi
  variable or constant to keep track of so 🍀 biến hoặc hằng số để theo dõi như vậy
  in this example we are assigning some 🍀 trong ví dụ này, chúng tôi đang chỉ định một số
  string data to our variable if I were to 🍀 dữ liệu chuỗi vào biến của chúng tôi nếu tôi định
  explicitly declare that my variable can 🍀 tuyên bố rõ ràng rằng biến của tôi có thể
  only hold string data I will put colon 🍀 chỉ giữ dữ liệu chuỗi tôi sẽ đặt dấu hai chấm
  followed by string which is the data 🍀 theo sau là chuỗi đó là dữ liệu
  type name so now let's take a look at 🍀 gõ tên vì vậy bây giờ chúng ta hãy xem
  our playground again Y up here in this 🍀 sân chơi của chúng tôi một lần nữa Y ở đây trong này
  variable declaration was there no 🍀 khai báo biến không có
  datatype specified 🍀 kiểu dữ liệu được chỉ định
  well that's because you don't really 🍀 tốt đó là bởi vì bạn không thực sự
  have to do it if you don't specify the 🍀 phải làm điều đó nếu bạn không chỉ định
  datatype what's going to happen is it's 🍀 kiểu dữ liệu điều gì sẽ xảy ra là nó
  going to take on the datatype of the 🍀 sẽ lấy kiểu dữ liệu của
  first piece of data that you assigned to 🍀 phần dữ liệu đầu tiên mà bạn đã gán cho
  it so if my first piece of data was 🍀 nó như vậy nếu phần dữ liệu đầu tiên của tôi là
  actually an integer like 100 then my 🍀 thực sự là một số nguyên như 100 thì của tôi
  variable STR would now be an integer 🍀 biến STR bây giờ sẽ là một số nguyên
  data type of variable so now you can see 🍀 kiểu dữ liệu của biến để bây giờ bạn có thể thấy
  that this line actually doesn't produce 🍀 rằng dòng này thực sự không sản xuất
  an error because I can reassign data to 🍀 lỗi vì tôi có thể gán lại dữ liệu cho
  my variable as long as it's the same 🍀 biến của tôi miễn là nó giống nhau
  data type that it took on in the first 🍀 kiểu dữ liệu mà nó đã thực hiện trong lần đầu tiên
  place now just a quick note why is it 🍀 nơi bây giờ chỉ là một ghi chú nhanh chóng tại sao nó
  that 🍀 cái đó
  if this variable is an INT type of 🍀 nếu biến này là một loại INT của
  variable why is it that I can't assign a 🍀 biến tại sao tôi không thể gán một
  piece of string to it what's happening 🍀 mảnh dây cho nó những gì đang xảy ra
  under the hood well the thing is 🍀 dưới mui xe cũng có điều là
  different types of data are stored 🍀 các loại dữ liệu khác nhau được lưu trữ
  differently in memory and so when you 🍀 khác nhau trong bộ nhớ và vì vậy khi bạn
  declare a variable STR and you say that 🍀 khai báo một biến STR và bạn nói rằng
  it should store integers well to put it 🍀 nó nên lưu trữ số nguyên tốt để đặt nó
  in simple terms it's just going to be 🍀 nói một cách đơn giản, nó sẽ chỉ là
  set up to store integers if you were to 🍀 thiết lập để lưu trữ số nguyên nếu bạn định
  say that that variable would store 🍀 nói rằng biến đó sẽ lưu trữ
  string data it's going to be set up a 🍀 dữ liệu chuỗi nó sẽ được thiết lập một
  different way now there is a data type 🍀 cách khác bây giờ có một kiểu dữ liệu
  which gives you more flexibility in 🍀 giúp bạn linh hoạt hơn trong
  terms of storing different kinds of data 🍀 điều khoản lưu trữ các loại dữ liệu khác nhau
  but that's a topic for another day and 🍀 nhưng đó là một chủ đề cho một ngày khác và
  the second thing is that it actually 🍀 điều thứ hai là nó thực sự
  helps you as a coder because imagine if 🍀 giúp bạn với tư cách là một lập trình viên vì hãy tưởng tượng nếu
  your variable can store any kind of data 🍀 biến của bạn có thể lưu trữ bất kỳ loại dữ liệu nào
  you don't know what to expect but the 🍀 bạn không biết những gì mong đợi nhưng
  fact that you know this variable STR can 🍀 thực tế là bạn biết biến này STR có thể
  only store numerical data or integers to 🍀 chỉ lưu trữ dữ liệu số hoặc số nguyên để
  be specific that sets your own 🍀 được cụ thể mà thiết lập của riêng bạn
  expectation as a coder sometimes having 🍀 kỳ vọng như một lập trình viên đôi khi có
  too much freedom is not a good thing 🍀 quá nhiều tự do không phải là một điều tốt
  because it offers more opportunities for 🍀 bởi vì nó mang lại nhiều cơ hội hơn cho
  errors and when we're programming and 🍀 lỗi và khi chúng tôi đang lập trình và
  when we're coding the greatest enemy is 🍀 khi chúng ta đang mã hóa kẻ thù lớn nhất là
  actually us making mistakes either in 🍀 thực sự chúng tôi phạm sai lầm hoặc trong
  our logic or in the way that we've coded 🍀 logic của chúng tôi hoặc theo cách mà chúng tôi đã mã hóa
  something so that's a little bit about 🍀 một cái gì đó vì vậy đó là một chút về
  why there are data types now let's do 🍀 tại sao có các loại dữ liệu bây giờ chúng ta hãy làm
  some quick examples of some of the data 🍀 một số ví dụ nhanh về một số dữ liệu
  types that we've talked about so we've 🍀 các loại mà chúng tôi đã nói về vì vậy chúng tôi đã
  got STR here so let's leave this as a 🍀 có STR ở đây nên hãy để nó như một
  string all right and let's do let's do 🍀 chuỗi được rồi và chúng ta hãy làm, hãy làm
  another one called a I know I'm not 🍀 một cái khác được gọi là tôi biết tôi không
  following my same rules about having 🍀 tuân theo các quy tắc tương tự của tôi về việc có
  descriptive variables but you know what 🍀 biến mô tả nhưng bạn biết những gì
  we could do that let's call it an 🍀 chúng ta có thể làm điều đó, hãy gọi nó là một
  integer do 100 do a float and this could 🍀 số nguyên do 100 thực hiện float và điều này có thể
  be like a zero point one or two if you 🍀 giống như một điểm không một hoặc hai nếu bạn
  double you know I'm not and you could do 🍀 nhân đôi bạn biết tôi không và bạn có thể làm
  a bar 🍀 một quán bar
  fool this is the datatype for that and 🍀 đánh lừa đây là kiểu dữ liệu cho cái đó và
  then this can be true or false and like 🍀 thì điều này có thể đúng hoặc sai và giống như
  I mentioned before you don't have to 🍀 Tôi đã đề cập trước khi bạn không cần phải
  explicitly specify the data types like 🍀 chỉ định rõ ràng các loại dữ liệu như
  this it's going to take on the datatype 🍀 cái này nó sẽ lấy kiểu dữ liệu
  of the first piece of data that you 🍀 của phần dữ liệu đầu tiên mà bạn
  assign to it 🍀 gán cho nó
  now this part is a little tricky because 🍀 bây giờ phần này là một chút khó khăn bởi vì
  float and double both represent decimal 🍀 float và double đều đại diện cho số thập phân
  numbers it's just that double is more 🍀 những con số chỉ là gấp đôi nhiều hơn
  precise so if you remove that datatype 🍀 chính xác vì vậy nếu bạn xóa kiểu dữ liệu đó
  or what kind of data type is float and 🍀 hoặc kiểu dữ liệu nào là float và
  double or sorry these two variables what 🍀 gấp đôi hoặc xin lỗi hai biến này những gì
  are they well it turns out that double 🍀 họ có khỏe không hóa ra gấp đôi
  is the default decimal datatype for 🍀 là kiểu dữ liệu thập phân mặc định cho
  swift so this one would actually be a 🍀 swift nên cái này thực sự sẽ là một
  double data type that's what the system 🍀 kiểu dữ liệu kép đó là những gì hệ thống
  is going to treat that as and then 🍀 sẽ coi đó là và sau đó
  boolean is just boolean if we remove 🍀 boolean chỉ là boolean nếu chúng ta loại bỏ
  that it's going to see true and it's 🍀 rằng nó sẽ thấy đúng và nó
  going to make this variable a boolean 🍀 sẽ biến biến này thành boolean
  type okay so before moving on to the 🍀 gõ được rồi trước khi chuyển sang
  next lesson let's do a quick recap in 🍀 bài học tiếp theo chúng ta hãy tóm tắt nhanh trong
  this lesson you learned about the most 🍀 bài học này bạn đã học được nhiều nhất
  common data types that you'll be working 🍀 các loại dữ liệu phổ biến mà bạn sẽ làm việc
  with you also learn that you can 🍀 với bạn cũng học được rằng bạn có thể
  explicitly specify the data type when 🍀 chỉ định rõ ràng kiểu dữ liệu khi
  you declare your variable or constant 🍀 bạn khai báo biến hoặc hằng của bạn
  and if you don't do that the variable or 🍀 và nếu bạn không làm điều đó biến hoặc
  constant is going to take on the 🍀 hằng số sẽ đảm nhận
  datatype of the first piece of data that 🍀 kiểu dữ liệu của phần dữ liệu đầu tiên
  you assign to it and then the last 🍀 bạn gán cho nó và sau đó là cái cuối cùng
  lesson I did forget to mention that I 🍀 bài học tôi đã quên đề cập rằng tôi
  have a swift cheat sheet available for 🍀 có một cheat sheet nhanh chóng có sẵn cho
  you to download and reference so you can 🍀 bạn tải về và tham khảo để bạn có thể
  have quick access in case you forget the 🍀 có quyền truy cập nhanh trong trường hợp bạn quên
  syntax or maybe data types or anything 🍀 cú pháp hoặc có thể là kiểu dữ liệu hoặc bất cứ thứ gì
  else and it's very handy to keep beside 🍀 khác và nó rất tiện dụng để giữ bên cạnh
  you as your learning Swift 🍀 bạn là Swift học tập của bạn
  [Music] 🍀 [Âm nhạc]
  hello and welcome to lesson 3 of my 🍀 xin chào và chào mừng đến với bài học thứ 3 của tôi
  Swift tutorial for beginners video 🍀 Video hướng dẫn Swift cho người mới bắt đầu
  series now that you know all about 🍀 loạt bây giờ mà bạn biết tất cả về
  variables constants and data types it's 🍀 hằng số biến và kiểu dữ liệu đó là
  time to start having some fun in this 🍀 thời gian để bắt đầu có một số niềm vui trong này
  lesson we're going to talk about a 🍀 bài học chúng ta sẽ nói về một
  staple construct that exists in all 🍀 cấu trúc chủ yếu tồn tại trong tất cả
  programming languages in some form or 🍀 ngôn ngữ lập trình dưới một số hình thức hoặc
  another and yes I'm talking about the if 🍀 khác và vâng tôi đang nói về nếu
  statement let me show you what they're 🍀 hãy để tôi cho bạn thấy chúng là gì
  all about 🍀 tất cả về
  so the reason I'm so excited to show you 🍀 vì vậy lý do tôi rất vui mừng được cho bạn thấy
  how to use if statements is because 🍀 cách sử dụng câu lệnh if là vì
  starting from now you're going to be 🍀 bắt đầu từ bây giờ bạn sẽ trở thành
  able to write code that can make its own 🍀 có thể viết mã có thể tự tạo
  decisions you're gonna be able to write 🍀 quyết định bạn sẽ có thể viết
  some app logic so why don't we start 🍀 một số logic ứng dụng vậy tại sao chúng ta không bắt đầu
  here with a constant and we're just 🍀 ở đây với một hằng số và chúng tôi chỉ
  gonna use a letter A we'll say a equals 🍀 sẽ sử dụng một chữ cái A, chúng tôi sẽ nói bằng
  10 and I'm going to print a string down 🍀 10 và tôi sẽ in một chuỗi xuống
  here let me just open up the console so 🍀 ở đây hãy để tôi mở giao diện điều khiển
  you can see something and I want to say 🍀 bạn có thể thấy điều gì đó và tôi muốn nói
  let's say a is less than 10 or how about 🍀 giả sử a nhỏ hơn 10 hoặc thế nào
  a is less than yeah other a is less than 🍀 a nhỏ hơn yeah khác a nhỏ hơn
  10 now this is going to print regardless 🍀 10 bây giờ điều này sẽ được in bất kể
  right because well first of all I have 🍀 đúng bởi vì trước hết tôi có
  to run my playground so there we go 🍀 để chạy sân chơi của tôi vì vậy chúng tôi đi
  a is less than 10 well this actually 🍀 a thực sự nhỏ hơn 10
  isn't true right 🍀 không đúng đúng không
  because a is 10 so it's not actually 🍀 bởi vì a là 10 nên nó không thực sự
  less than 10 and in this case I don't 🍀 ít hơn 10 và trong trường hợp này tôi không
  want this to show up well the problem is 🍀 muốn cái này hiển thị tốt, vấn đề là
  that that line of code is there right so 🍀 rằng dòng mã đó ở đó đúng như vậy
  it's gonna be run and it's gonna show up 🍀 nó sẽ được chạy và nó sẽ xuất hiện
  what we can use here is an if statement 🍀 những gì chúng ta có thể sử dụng ở đây là một câu lệnh if
  so we can add and condition and we can 🍀 vì vậy chúng tôi có thể thêm và điều kiện và chúng tôi có thể
  say that we only want to run this print 🍀 nói rằng chúng tôi chỉ muốn chạy bản in này
  statement based on some sort of 🍀 tuyên bố dựa trên một số loại
  condition that we can test so let's see 🍀 điều kiện mà chúng ta có thể kiểm tra vì vậy hãy xem
  how we can do this with an if statement 🍀 làm thế nào chúng ta có thể làm điều này với một câu lệnh if
  so it all starts with the if keyword 🍀 vì vậy tất cả bắt đầu với từ khóa if
  followed by a space and then your 🍀 theo sau là một khoảng trắng và sau đó là của bạn
  condition which are going to test I'll 🍀 điều kiện sẽ kiểm tra tôi sẽ
  show you how to write that condition in 🍀 chỉ cho bạn cách viết điều kiện đó trong
  just a second but for now let's continue 🍀 chỉ một giây nhưng bây giờ chúng ta hãy tiếp tục
  with the rest of the if statement then 🍀 với phần còn lại của câu lệnh if thì
  you're gonna have a space and then 🍀 bạn sẽ có một không gian và sau đó
  you're going to have a set of braces or 🍀 bạn sẽ có một bộ niềng răng hoặc
  some people call it curly brackets 🍀 một số người gọi nó là dấu ngoặc nhọn
  inside those braces you're going to have 🍀 bên trong những niềng răng bạn sẽ có
  the code that is only going to be 🍀 mã đó sẽ chỉ là
  if the condition equates to true if that 🍀 nếu điều kiện bằng đúng nếu điều đó
  condition turns out to be false then the 🍀 điều kiện hóa ra là sai thì
  code inside of your braces will not be 🍀 mã bên trong niềng răng của bạn sẽ không được
  running so now let's jump back to the 🍀 chạy vì vậy bây giờ chúng ta hãy quay trở lại
  playground and see this in action so I'm 🍀 sân chơi và thấy điều này đang hoạt động vì vậy tôi
  going to use the if keyword here 🍀 sẽ sử dụng từ khóa if ở đây
  followed by a space and the condition 🍀 theo sau là một khoảng trắng và điều kiện
  that we want to test is is a less than 🍀 mà chúng tôi muốn kiểm tra là ít hơn
  10 right so we're going to do a and this 🍀 10 đúng vậy chúng ta sẽ làm a và cái này
  is the less than operator it's going to 🍀 là toán tử nhỏ hơn nó sẽ
  check is the left side less than the 🍀 kiểm tra là phía bên trái ít hơn
  right side so on the left side we've got 🍀 bên phải nên ở bên trái chúng ta có
  8 on the right side we're gonna put 10 🍀 8 ở phía bên phải, chúng ta sẽ đặt 10
  right followed by a space and then we're 🍀 ngay sau đó là một khoảng trắng và sau đó chúng tôi
  gonna open up an opening brace and I'm 🍀 sẽ mở ra một cú đúp mở đầu và tôi
  going to go under the print statement 🍀 sẽ đi theo tuyên bố in
  and close that brace and press tab here 🍀 và đóng dấu ngoặc đó và nhấn tab ở đây
  so we've got our line of code inside of 🍀 vì vậy chúng tôi có dòng mã bên trong
  an opening and closing brace and this is 🍀 một dấu ngoặc mở và đóng và đây là
  our condition here so that actually 🍀 điều kiện của chúng tôi ở đây để thực sự
  doesn't matter if you want to put your 🍀 không thành vấn đề nếu bạn muốn đặt
  brace down here or up here to make sure 🍀 cú đúp xuống đây hoặc lên đây để đảm bảo
  there's a space in between your opening 🍀 có một khoảng trống ở giữa phần mở đầu của bạn
  brace and your condition now let's try 🍀 niềng răng và tình trạng của bạn bây giờ hãy thử
  to run our code and press this blue 🍀 để chạy mã của chúng tôi và nhấn màu xanh này
  button here this time and you can see 🍀 nút ở đây lần này và bạn có thể thấy
  that now the console is empty so what 🍀 rằng bây giờ giao diện điều khiển trống, vậy thì sao
  happened here was that it checked the 🍀 xảy ra ở đây là nó đã kiểm tra
  condition a is less than 10 and because 🍀 điều kiện a nhỏ hơn 10 và vì
  a is 10 it's clearly not less than 10 🍀 a là 10 rõ ràng là không nhỏ hơn 10
  the condition equated to false and so it 🍀 điều kiện tương đương với sai và vì vậy nó
  didn't run the code inside here now why 🍀 không chạy mã bên trong bây giờ tại sao
  don't we make that condition true now 🍀 chúng ta không biến điều kiện đó thành sự thật bây giờ
  all I need to do is say is a less than 🍀 tất cả những gì tôi cần làm là nói là ít hơn
  or equal to 10 in that case this 🍀 hoặc bằng 10 trong trường hợp đó
  condition would be true right let's 🍀 điều kiện sẽ là sự thật đúng không chúng ta hãy
  press run and then you can see it 🍀 nhấn chạy và sau đó bạn có thể thấy nó
  printed down here all right so that's 🍀 in xuống đây được rồi nên đó là
  really cool because now you can write 🍀 thực sự tuyệt vời bởi vì bây giờ bạn có thể viết
  code that can be run based on a 🍀 mã có thể được chạy dựa trên một
  condition however oftentimes we've got 🍀 điều kiện tuy nhiên đôi khi chúng tôi đã có
  multiple choices that can be made like 🍀 nhiều lựa chọn có thể được thực hiện như
  for example do you want a Big Mac or do 🍀 ví dụ: bạn muốn có một chiếc Mac lớn hay làm
  you want chicken McNuggets so we're 🍀 bạn muốn gà McNuggets vì vậy chúng tôi
  gonna do this using another feature of 🍀 sẽ làm điều này bằng cách sử dụng một tính năng khác của
  the if statement called an else if 🍀 câu lệnh if được gọi là other if
  Clause let me show you how that works so 🍀 Mệnh đề hãy để tôi chỉ cho bạn cách nó hoạt động
  right underneath the closing brace of 🍀 ngay bên dưới dấu ngoặc nhọn của
  your if statement 🍀 câu lệnh if của bạn
  you can put the keyword else space if 🍀 bạn có thể đặt từ khóa không gian khác nếu
  and then you would have another 🍀 và sau đó bạn sẽ có một cái khác
  condition then followed by another set 🍀 điều kiện sau đó theo sau bởi một tập hợp khác
  of braces now what's going to happen 🍀 niềng răng bây giờ điều gì sẽ xảy ra
  here is that it's going to check your 🍀 đây là nó sẽ kiểm tra của bạn
  first condition in your if branch if 🍀 điều kiện đầu tiên trong nhánh if của bạn nếu
  that happens to be false it's going to 🍀 điều đó xảy ra là sai nó sẽ
  skip right down and it's going to check 🍀 bỏ qua ngay và nó sẽ kiểm tra
  the condition in your else if branch if 🍀 điều kiện trong nhánh other if của bạn nếu
  that also happens to be false then it's 🍀 điều đó cũng xảy ra là sai thì đó là
  just going to skip again and it's not 🍀 chỉ cần bỏ qua một lần nữa và nó không phải là
  going to do anything however if one of 🍀 sẽ làm bất cứ điều gì tuy nhiên nếu một trong những
  those conditions were true then it would 🍀 những điều kiện đó là đúng thì nó sẽ
  run that branch of code and keep in mind 🍀 chạy nhánh mã đó và ghi nhớ
  it's only ever going to run one branch 🍀 nó sẽ chỉ chạy một nhánh
  of code so imagine yourself standing in 🍀 mã vì vậy hãy tưởng tượng bạn đang đứng trong
  the middle of crossroads there's two 🍀 giữa ngã tư đường có hai
  paths one on your left and one on your 🍀 con đường một bên trái của bạn và một bên bạn
  right there's only one path you can go 🍀 đúng là chỉ có một con đường bạn có thể đi
  down right so that's kind of like how 🍀 xuống bên phải để nó giống như thế nào
  the if statement works except that it 🍀 câu lệnh if hoạt động ngoại trừ việc nó
  evaluates the conditions from top to the 🍀 đánh giá các điều kiện từ trên xuống
  bottom so the first condition that is 🍀 đáy nên điều kiện đầu tiên đó là
  true it's going to run that block of 🍀 đúng là nó sẽ chạy khối đó
  code and then it's just going to ignore 🍀 mã và sau đó nó sẽ bỏ qua
  everything under that if statement so 🍀 mọi thứ bên dưới câu lệnh if so
  let's jump back into the playground and 🍀 hãy quay trở lại sân chơi và
  let me show you how this works so we can 🍀 để tôi chỉ cho bạn cách nó hoạt động để chúng ta có thể
  say something like let's make a 20 now 🍀 nói điều gì đó như bây giờ chúng ta hãy kiếm 20
  all right so if we run this code right 🍀 được rồi vì vậy nếu chúng ta chạy mã này đúng
  here that's not going to run because 🍀 ở đây nó sẽ không chạy vì
  it's false now we're going to use else 🍀 nó sai bây giờ chúng ta sẽ sử dụng khác
  space if space and let's say is a 🍀 không gian nếu không gian và giả sử là một
  greater than 15 and then I'm going to 🍀 lớn hơn 15 và sau đó tôi sẽ
  print a is greater than 15 all right so 🍀 in a lớn hơn 15 được rồi
  if you run this if statement what would 🍀 nếu bạn chạy câu lệnh if này thì sao
  you expect to happen it would evaluate 🍀 bạn mong đợi để xảy ra nó sẽ đánh giá
  this right and since that's false it's 🍀 điều này đúng và vì điều đó sai nên nó
  going to skip down and it's going to 🍀 sẽ bỏ qua xuống và nó sẽ
  check this which happens to be true and 🍀 kiểm tra điều này xảy ra là đúng và
  it's going to print that so let's give 🍀 nó sẽ in ra vì vậy hãy đưa ra
  that a run we've got a is greater than 🍀 rằng một lần chạy chúng tôi có lớn hơn
  15 printed down here now let me show you 🍀 15 in xuống đây bây giờ hãy để tôi chỉ cho bạn
  something else what if a was 5 and then 🍀 cái gì khác nếu a là 5 và sau đó
  we changed this condition like that so 🍀 chúng tôi đã thay đổi điều kiện này như vậy
  this condition test is 8 less than or 🍀 kiểm tra điều kiện này là 8 nhỏ hơn hoặc
  equal to 10 and this one is is a less 🍀 bằng 10 và cái này nhỏ hơn
  than 15 they're both true right 🍀 hơn 15 cả hai đều đúng
  I guess I'm gonna have to change this 🍀 Tôi đoán tôi sẽ phải thay đổi điều này
  too or else it doesn't make sense so 🍀 quá hoặc nếu không nó không có ý nghĩa như vậy
  that both of these conditions are true 🍀 rằng cả hai điều kiện này đều đúng
  what would you expect to happen when I 🍀 bạn mong đợi điều gì sẽ xảy ra khi tôi
  run my playground right here well it 🍀 điều hành sân chơi của tôi ngay tại đây
  evaluated this condition which happened 🍀 đánh giá điều kiện này đã xảy ra
  to be true so it jumped into here this 🍀 là sự thật vì vậy nó đã nhảy vào đây
  fork of the road right and it executed 🍀 ngã ba đường bên phải và nó được thực hiện
  that branch of code and it ignores 🍀 nhánh mã đó và nó bỏ qua
  everything else it doesn't check the 🍀 mọi thứ khác nó không kiểm tra
  second condition at all so that's really 🍀 điều kiện thứ hai ở tất cả vì vậy đó thực sự là
  something to keep in mind so another 🍀 một cái gì đó để ghi nhớ như vậy khác
  cool feature of the if statement is that 🍀 tính năng thú vị của câu lệnh if là
  you can stack these elsif clauses if 🍀 bạn có thể xếp các mệnh đề elsif này nếu
  you've got more things to check more 🍀 bạn có nhiều thứ để kiểm tra hơn
  conditions to check you can just add 🍀 điều kiện để kiểm tra bạn chỉ cần thêm
  them to the bottom like that so if a is 🍀 chúng xuống dưới cùng như thế vì vậy nếu a là
  greater than you know 30 I'm just making 🍀 lớn hơn bạn biết 30 tôi chỉ đang làm
  stuff up at this point but you can keep 🍀 công cụ vào thời điểm này nhưng bạn có thể giữ
  going and keep going the only thing is 🍀 đi và tiếp tục đi, điều duy nhất là
  that you don't want to make it too too 🍀 mà bạn không muốn làm cho nó quá
  long there is actually another kind of 🍀 dài thực sự có một loại khác
  decision tree sort of structure that you 🍀 cây quyết định loại cấu trúc mà bạn
  can use it which I'll tell you in the 🍀 có thể sử dụng nó mà tôi sẽ nói với bạn trong
  next lesson 🍀 bài học tiếp theo
  but in this one just keep in mind that 🍀 nhưng trong điều này chỉ cần ghi nhớ rằng
  you can check multiple conditions but 🍀 bạn có thể kiểm tra nhiều điều kiện nhưng
  you don't want to abuse it now I want to 🍀 bạn không muốn lạm dụng nó bây giờ tôi muốn
  tell you about this last feature of the 🍀 cho bạn biết về tính năng cuối cùng này của
  if statement which is the else clause so 🍀 câu lệnh if là mệnh đề khác nên
  the else Clause is kind of like a 🍀 khoản khác là loại giống như một
  catch-all bucket if none of the 🍀 xô bắt tất cả nếu không có
  conditions at the top evaluate to true 🍀 điều kiện ở đầu đánh giá là đúng
  it's going to keep checking from the top 🍀 nó sẽ tiếp tục kiểm tra từ đầu
  down right if none of the conditions 🍀 xuống bên phải nếu không có điều kiện nào
  above the else branch is true then it's 🍀 phía trên nhánh khác là đúng thì đó là
  just gonna end up executing the code 🍀 cuối cùng sẽ thực thi mã
  inside of the else branch so the way you 🍀 bên trong nhánh khác theo cách bạn
  include this else branch in your if 🍀 bao gồm nhánh khác này trong if của bạn
  statement is you use the else keyword 🍀 tuyên bố là bạn sử dụng từ khóa khác
  and then you just open a set of braces 🍀 và sau đó bạn chỉ cần mở một bộ niềng răng
  there's no need to specify a condition 🍀 không cần chỉ định một điều kiện
  because remember the point of the else 🍀 bởi vì hãy nhớ quan điểm của người khác
  branch is to execute some code just in 🍀 nhánh là thực thi một số mã chỉ trong
  case nothing above it got executed so 🍀 trường hợp không có gì ở trên nó đã được thực thi vì vậy
  let's jump back to the playground and 🍀 hãy quay trở lại sân chơi và
  take a look so we've got a is less than 🍀 hãy xem để chúng ta có a nhỏ hơn
  10 a is less than 15 and a is greater 🍀 10 a nhỏ hơn 15 và a lớn hơn
  than 30 well there's a gap right in 🍀 hơn 30 cũng có một khoảng cách ngay trong
  between 15 and 30 so if I said something 🍀 từ 15 đến 30 vì vậy nếu tôi nói điều gì đó
  like you know a is equal to 25 and I ran 🍀 như bạn biết a bằng 25 và tôi đã chạy
  the code right here nothing would 🍀 mã ngay tại đây sẽ không có gì
  execute because none of this is true 🍀 thực hiện bởi vì không có điều này là đúng
  let's just print something here print a 🍀 chúng ta hãy in một cái gì đó ở đây in một
  is greater than 30 all right so nothing 🍀 lớn hơn 30 được rồi nên không có gì
  gets executed right here but if I add an 🍀 được thực hiện ngay tại đây nhưng nếu tôi thêm một
  else branch right open up a set of curly 🍀 nhánh khác bên phải mở ra một tập hợp các đường cong
  brackets or braces here it has something 🍀 dấu ngoặc hoặc dấu ngoặc ở đây nó có một cái gì đó
  else so why don't we give that a run and 🍀 nếu không thì tại sao chúng ta không thử và
  you can see that indeed it falls into 🍀 bạn có thể thấy rằng nó thực sự rơi vào
  this catch-all branch of code so now 🍀 nhánh mã bắt tất cả này vì vậy bây giờ
  I've shown you all the basics of the if 🍀 Tôi đã chỉ cho bạn tất cả những điều cơ bản của if
  statement however it can get a lot more 🍀 tuyên bố tuy nhiên nó có thể nhận được nhiều hơn nữa
  complex because your conditions inside 🍀 phức tạp vì điều kiện của bạn bên trong
  your if and else if branches can get 🍀 if của bạn và other if các chi nhánh có thể nhận được
  really complex let's say we introduce 🍀 thực sự phức tạp, giả sử chúng tôi giới thiệu
  another variable here let B equals 10 🍀 một biến khác ở đây để B bằng 10
  you can start to chain these conditions 🍀 bạn có thể bắt đầu xâu chuỗi những điều kiện này
  together so for example if I wanted to 🍀 cùng nhau vì vậy chẳng hạn nếu tôi muốn
  check that a was less than 10 and also 🍀 kiểm tra xem a có nhỏ hơn 10 không và cũng
  that B is greater than 5 and I want both 🍀 rằng B lớn hơn 5 và tôi muốn cả hai
  of these conditions to be true in order 🍀 các điều kiện này là đúng theo thứ tự
  for that branch to be executed I can use 🍀 để nhánh đó được thực thi, tôi có thể sử dụng
  the double ampersand symbol which 🍀 ký hiệu dấu và kép mà
  represents that I want both of those 🍀 đại diện rằng tôi muốn cả hai
  conditions to be true in order for that 🍀 điều kiện là đúng để cho điều đó
  branch to be executed so let's do B is 🍀 nhánh sẽ được thực thi, vì vậy hãy làm B là
  then I say greater than 5 or less than 5 🍀 sau đó tôi nói lớn hơn 5 hoặc nhỏ hơn 5
  I think less than 5 and this actually 🍀 Tôi nghĩ ít hơn 5 và điều này thực sự
  would not be true right because a is 25 🍀 sẽ không đúng đúng vì a là 25
  and B is 10 so it's gonna skip here so 🍀 và B là 10 nên nó sẽ bỏ qua ở đây
  why don't we modify this a little bit 🍀 tại sao chúng ta không sửa đổi điều này một chút
  why don't we say a is less than 10 and B 🍀 tại sao chúng ta không nói a nhỏ hơn 10 và B
  is greater than 5 so while this part is 🍀 lớn hơn 5 vì vậy trong khi phần này là
  true let me just run this and I'll show 🍀 đúng, hãy để tôi chạy cái này và tôi sẽ chỉ ra
  you what the output is right it still 🍀 bạn biết đầu ra đúng không
  falls into here why well although this 🍀 rơi vào đây tại sao tốt mặc dù điều này
  is true this is not true okay and when 🍀 là đúng điều này không đúng được không và khi nào
  you use this double ampersand sign right 🍀 bạn sử dụng ký hiệu kép này đúng
  here you're basically saying that you 🍀 ở đây về cơ bản bạn đang nói rằng bạn
  need both of those conditions to be true 🍀 cần cả hai điều kiện đó là đúng
  in order for the whole condition to be 🍀 để cho toàn bộ điều kiện được
  evaluated as true however if you don't 🍀 đánh giá là đúng tuy nhiên nếu bạn không
  care and you only want one of those 🍀 quan tâm và bạn chỉ muốn một trong số đó
  conditions to be true you know either 🍀 điều kiện để trở thành sự thật bạn cũng biết
  then you can use the or operator which 🍀 thì bạn có thể sử dụng toán tử hoặc which
  is actually a set of double pipes I 🍀 thực sự là một bộ ống đôi tôi
  don't know if they're called pipes but 🍀 không biết chúng có được gọi là ống không nhưng
  this key is on on my keyboard at least 🍀 phím này được bật trên bàn phím của tôi ít nhất
  is above the return key and you have to 🍀 ở phía trên phím quay lại và bạn phải
  hold shift to get them so double pipes 🍀 giữ phím shift để có được chúng như vậy đôi ống
  will give you the or operator and let me 🍀 sẽ cung cấp cho bạn toán tử hoặc và để tôi
  run this code to show you what that 🍀 chạy mã này để cho bạn thấy điều đó
  looks like so we come into here and 🍀 có vẻ như vậy nên chúng tôi đến đây và
  execute this now this this Thiemann is a 🍀 thực hiện điều này ngay bây giờ, Thiemann này là một
  little bit misleading now so I'm just 🍀 một chút sai lệch bây giờ vì vậy tôi chỉ
  gonna call that branch one branch to 🍀 sẽ gọi chi nhánh đó là một chi nhánh
  branch three and let's say I'm say 🍀 nhánh ba và hãy nói rằng tôi đang nói
  castle all right so I can run that and 🍀 lâu đài được rồi để tôi có thể chạy nó và
  show you that this gets printed because 🍀 cho bạn thấy rằng điều này được in bởi vì
  we're using the or operator either if 🍀 chúng tôi đang sử dụng toán tử hoặc nếu
  either a is less than 10 or B is greater 🍀 a nhỏ hơn 10 hoặc B lớn hơn
  than 5 then we're good we're gonna 🍀 hơn 5 thì chúng ta ổn, chúng ta sẽ
  execute that branch and that's exactly 🍀 thực hiện nhánh đó và đó chính xác là
  what we get here branch 1 now I'm going 🍀 những gì chúng tôi nhận được ở đây chi nhánh 1 bây giờ tôi sẽ đi
  to blow your mind further because we can 🍀 để thổi bay tâm trí của bạn hơn nữa bởi vì chúng ta có thể
  further chain these things so what you 🍀 tiếp tục xâu chuỗi những điều này để những gì bạn
  can do is you can wrap this condition 🍀 có thể làm là bạn có thể bọc điều kiện này
  right in a pair of parentheses like this 🍀 ngay trong một cặp dấu ngoặc đơn như thế này
  and then you can say and let's say we've 🍀 và sau đó bạn có thể nói và hãy nói rằng chúng tôi đã
  got a third one and let's say we want 🍀 có cái thứ ba và giả sử chúng ta muốn
  either B is greater than 5 or a is less 🍀 B lớn hơn 5 hoặc a nhỏ hơn
  than 10 and you know C is equal to 1 🍀 hơn 10 và bạn biết C bằng 1
  right and if we run that it would come 🍀 đúng và nếu chúng ta chạy thì nó sẽ đến
  into here because this part evaluates to 🍀 vào đây vì phần này đánh giá
  true and this also evaluates to true now 🍀 đúng và điều này cũng đánh giá là đúng ngay bây giờ
  we can even go further and we can start 🍀 chúng ta thậm chí có thể tiến xa hơn và chúng ta có thể bắt đầu
  wrapping that in a pair of parentheses 🍀 gói nó trong một cặp dấu ngoặc đơn
  and you can test as many things as you 🍀 và bạn có thể kiểm tra bao nhiêu thứ tùy thích
  want and you can build this massive 🍀 muốn và bạn có thể xây dựng đồ sộ này
  condition but just keep in mind that the 🍀 điều kiện nhưng chỉ cần ghi nhớ rằng
  more things you put in there the more 🍀 càng nhiều thứ bạn đặt vào đó càng nhiều
  complicated it's gonna get and the 🍀 phức tạp nó sẽ nhận được và
  harder it is for anyone to understand 🍀 khó hơn cho bất cứ ai hiểu
  I want to draw your attention to one 🍀 Tôi muốn thu hút sự chú ý của bạn đến một
  thing though and that is this equality 🍀 mặc dù vậy và đó là sự bình đẳng này
  operator here when we're testing 🍀 nhà điều hành ở đây khi chúng tôi đang thử nghiệm
  equality we don't use the single equals 🍀 bình đẳng chúng tôi không sử dụng bằng đơn
  operator here because remember that's 🍀 toán tử ở đây vì hãy nhớ rằng đó là
  for assignment when you do that you're 🍀 cho bài tập khi bạn làm điều đó bạn
  trying to assign one into the constant Z 🍀 cố gắng gán một vào hằng số Z
  when you want to test for equality you 🍀 khi bạn muốn kiểm tra sự bình đẳng, bạn
  use double equal sign and you when you 🍀 sử dụng dấu bằng kép và bạn khi bạn
  want to test for inequality you can use 🍀 muốn kiểm tra sự bất bình đẳng, bạn có thể sử dụng
  exclamation mark equals and that is 🍀 dấu chấm than bằng và đó là
  testing that C is not equal to one so if 🍀 kiểm tra rằng C không bằng một vì vậy nếu
  I run this code right here I would get 🍀 Tôi chạy mã này ngay tại đây tôi sẽ nhận được
  catch-all reason is because although 🍀 lý do tóm tắt là bởi vì mặc dù
  this evaluates to true this does not 🍀 điều này đánh giá đúng điều này không
  evaluate to true and because we're using 🍀 đánh giá là đúng và bởi vì chúng tôi đang sử dụng
  the end operator there we need both 🍀 toán tử kết thúc ở đó chúng ta cần cả hai
  sides of that to be true now if I change 🍀 các mặt của điều đó là đúng bây giờ nếu tôi thay đổi
  this to an or and I ran it we would get 🍀 cái này thành một hoặc và tôi đã chạy nó, chúng tôi sẽ nhận được
  French one because even though this 🍀 một tiếng Pháp bởi vì mặc dù điều này
  isn't true this is true so it's kind of 🍀 không đúng, đây là sự thật vì vậy nó là loại
  a little bit of logic there which is fun 🍀 một chút logic ở đó thật thú vị
  to do and it takes a little bit of 🍀 để làm và phải mất một chút
  practice to wrap your head around now 🍀 thực hành để quấn quanh đầu của bạn bây giờ
  what I wouldn't do highly highly 🍀 những gì tôi sẽ không làm rất cao
  recommend that you do not do this is 🍀 khuyên bạn không nên làm điều này là
  don't memorize these key words don't go 🍀 đừng ghi nhớ những từ khóa này đừng đi
  and try to memorize oh I need the if 🍀 và cố gắng ghi nhớ oh tôi cần nếu
  keyword I need a condition here all the 🍀 từ khóa tôi cần một điều kiện ở đây tất cả
  operators I can use don't do that 🍀 toán tử tôi có thể sử dụng không làm điều đó
  because I'm gonna introduce more 🍀 bởi vì tôi sẽ giới thiệu thêm
  keywords to you and more syntax to you 🍀 từ khóa cho bạn và nhiều cú pháp hơn cho bạn
  and it's not going to be fun for you to 🍀 và nó sẽ không vui cho bạn
  try to memorize it and it's not 🍀 cố gắng ghi nhớ nó và nó không
  practical I've talked all about being 🍀 thực tế tôi đã nói tất cả về việc
  practical and what I want you to do 🍀 thực tế và những gì tôi muốn bạn làm
  instead is spend 30 minutes take a look 🍀 thay vào đó là dành 30 phút để xem
  at the worksheet for this lesson try out 🍀 tại trang tính cho bài học này hãy thử
  the if statement on yourself on a 🍀 câu lệnh if trên chính bạn trên một
  playground and in 30 minutes of learning 🍀 sân chơi và trong 30 phút học tập
  you're going to learn a lot more and 🍀 bạn sẽ học được nhiều hơn nữa và
  it's gonna sink into your head a lot 🍀 nó sẽ ăn sâu vào đầu bạn rất nhiều
  more you're gonna remember it a lot more 🍀 bạn sẽ nhớ nó nhiều hơn nữa
  than it would if you had trying to 🍀 hơn là nếu bạn đã cố gắng
  memorize this so how to recommend that 🍀 ghi nhớ điều này để làm thế nào để giới thiệu rằng
  you do instead of trying to memorize 🍀 bạn làm thay vì cố gắng ghi nhớ
  remember I have a swift cheat sheet and 🍀 hãy nhớ rằng tôi có một bảng gian lận nhanh chóng và
  worksheets for you to practice what 🍀 bảng cho bạn để thực hành những gì
  you've learned in too 🍀 bạn cũng đã học
  today's lesson I highly recommend you go 🍀 bài học hôm nay tôi thực sự khuyên bạn nên đi
  through that because I don't want you to 🍀 thông qua đó bởi vì tôi không muốn bạn
  make the same mistake that I did when I 🍀 phạm sai lầm tương tự mà tôi đã làm khi tôi
  first started now let's do a quick recap 🍀 lần đầu tiên bắt đầu bây giờ chúng ta hãy tóm tắt nhanh
  you learned that you can use the if 🍀 bạn đã học được rằng bạn có thể sử dụng if
  statement in order to execute code based 🍀 câu lệnh để thực thi mã dựa trên
  on a condition you also learn that you 🍀 với điều kiện bạn cũng biết rằng bạn
  can use the else if Clause to specify 🍀 có thể sử dụng mệnh đề other if để chỉ định
  alternative branches of code to run 🍀 các nhánh mã thay thế để chạy
  based on other conditions and finally 🍀 dựa trên các điều kiện khác và cuối cùng
  you have the else Clause to run some 🍀 bạn có khoản khác để chạy một số
  code if all of the conditions above it 🍀 mã nếu tất cả các điều kiện trên nó
  are not met now one key thing to 🍀 không được đáp ứng bây giờ một điều quan trọng để
  remember is that the conditions will be 🍀 hãy nhớ rằng các điều kiện sẽ được
  checked from top down and the first 🍀 kiểm tra từ trên xuống và đầu tiên
  condition that is true that's the branch 🍀 điều kiện đúng đó là chi nhánh
  of code that is going to be executed and 🍀 mã sẽ được thực thi và
  the rest of your if statement is going 🍀 phần còn lại của câu lệnh if của bạn sẽ diễn ra
  to be ignored hello and welcome to 🍀 xin chào và chào mừng đến với
  lesson 4 of my Swift tutorial for 🍀 bài 4 của hướng dẫn Swift của tôi cho
  beginners now in the previous lesson you 🍀 người mới bắt đầu bây giờ trong bài học trước bạn
  learned about how to use the if 🍀 đã học về cách sử dụng if
  statement to run code based on some 🍀 tuyên bố để chạy mã dựa trên một số
  conditions now sometimes when you really 🍀 điều kiện bây giờ đôi khi khi bạn thực sự
  get into coding you might find yourself 🍀 tham gia viết mã, bạn có thể tìm thấy chính mình
  ending up with a giant if statement with 🍀 kết thúc với một câu lệnh if khổng lồ với
  so many branches that it's going to give 🍀 rất nhiều chi nhánh mà nó sẽ cho
  you a headache when you see yourself 🍀 bạn đau đầu khi nhìn thấy chính mình
  going down this path I want you to stop 🍀 đi xuống con đường này tôi muốn bạn dừng lại
  and consider using a switch statement 🍀 và cân nhắc sử dụng câu lệnh switch
  and in this lesson I'm gonna show you 🍀 và trong bài học này tôi sẽ chỉ cho bạn
  exactly how to use that so the first 🍀 chính xác làm thế nào để sử dụng nó vì vậy đầu tiên
  thing I want to mention is that there is 🍀 điều tôi muốn đề cập là có
  a Swift programming language guide and I 🍀 hướng dẫn ngôn ngữ lập trình Swift và tôi
  probably should have mentioned this in 🍀 có lẽ nên đề cập đến điều này trong
  Lesson one but better late than never 🍀 Bài học một nhưng muộn còn hơn không
  I'll add the link to this guy in the 🍀 Tôi sẽ thêm liên kết đến anh chàng này trong
  description below the video now this 🍀 mô tả bên dưới video bây giờ này
  contains kind of a walkthrough of the 🍀 chứa một loại hướng dẫn của
  language it's actually it's more 🍀 ngôn ngữ nó thực sự nó hơn
  in-depth than that it is basically 🍀 chuyên sâu hơn là về cơ bản
  everything you'd want to know about the 🍀 mọi thứ bạn muốn biết về
  Swift programming language however it is 🍀 Ngôn ngữ lập trình Swift tuy nhiên nó là
  quite a lengthy read but if reading is 🍀 đọc khá dài nhưng nếu đọc là
  your thing then I would highly recommend 🍀 điều của bạn sau đó tôi rất muốn giới thiệu
  that you go through it especially if you 🍀 mà bạn trải qua nó đặc biệt là nếu bạn
  come from another programming language 🍀 đến từ một ngôn ngữ lập trình khác
  it's gonna be very useful for you to 🍀 nó sẽ rất hữu ích cho bạn
  skim through it see how the structure of 🍀 đọc lướt qua xem cấu trúc của nó như thế nào
  the language is the syntax but if you 🍀 ngôn ngữ là cú pháp nhưng nếu bạn
  are an absolute beginner to coding if 🍀 là người mới bắt đầu tuyệt đối để viết mã nếu
  you never code it before this is your 🍀 bạn chưa bao giờ mã hóa nó trước khi đây là của bạn
  first exposure to it then you might get 🍀 lần đầu tiên tiếp xúc với nó sau đó bạn có thể nhận được
  a little bit confused however it's still 🍀 một chút bối rối tuy nhiên nó vẫn
  a great reference in complement to what 🍀 một tài liệu tham khảo tuyệt vời để bổ sung cho những gì
  you're learning here in the video 🍀 bạn đang học ở đây trong video
  lessons 🍀 Những bài học
  so definitely check it out so I just 🍀 vì vậy chắc chắn kiểm tra nó ra vì vậy tôi chỉ
  wanted to point out where we are now I'm 🍀 muốn chỉ ra nơi chúng ta đang ở
  not following the exact order that they 🍀 không theo thứ tự chính xác mà họ
  have listed out here because I feel like 🍀 đã liệt kê ra đây bởi vì tôi cảm thấy như
  the way that they have laid it out is a 🍀 cách mà họ đã đặt nó ra là một
  very slow build-up until you can 🍀 xây dựng rất chậm cho đến khi bạn có thể
  actually start using the language of 🍀 thực sự bắt đầu sử dụng ngôn ngữ của
  having fun with it and building things 🍀 vui vẻ với nó và xây dựng mọi thứ
  and so the way that I've laid out this 🍀 và vì vậy cách mà tôi đã trình bày điều này
  lesson plan for you in this video series 🍀 kế hoạch bài học cho bạn trong loạt video này
  you can be vague it's very practical and 🍀 bạn có thể mơ hồ nó rất thực tế và
  you can start coding and start tinkering 🍀 bạn có thể bắt đầu viết mã và bắt đầu mày mò
  and having fun sooner so I just want to 🍀 và có niềm vui sớm hơn vì vậy tôi chỉ muốn
  show you where you would find some of 🍀 chỉ cho bạn nơi bạn sẽ tìm thấy một số
  the lessons that we've gone through so 🍀 những bài học mà chúng ta đã trải qua
  in the previous lesson we talked about 🍀 trong bài học trước chúng ta đã nói về
  if statements that's under control flow 🍀 nếu các câu lệnh nằm trong luồng kiểm soát
  and there's also this little drop down 🍀 và cũng có trình đơn thả xuống nhỏ này
  here so if you pull this guy down you 🍀 ở đây vì vậy nếu bạn kéo anh chàng này xuống bạn
  can jump to different sections so we are 🍀 có thể nhảy đến các phần khác nhau vì vậy chúng tôi
  at conditional statements right here so 🍀 tại các câu lệnh có điều kiện ngay tại đây
  you could see the if statement gives you 🍀 bạn có thể thấy câu lệnh if mang lại cho bạn
  a couple of examples so it's you know 🍀 một vài ví dụ để bạn biết
  it's really good 🍀 nó thật sự tốt
  supplementary material to what we've 🍀 tài liệu bổ sung cho những gì chúng tôi đã
  covered but in today's topic I want to 🍀 được đề cập nhưng trong chủ đề hôm nay tôi muốn
  talk to you about the switch statement 🍀 nói chuyện với bạn về tuyên bố chuyển đổi
  which is right here so I just want for 🍀 cái ở ngay đây nên tôi chỉ muốn
  you to take a look at the syntax here 🍀 bạn hãy xem cú pháp ở đây
  you'll notice that there is the switch 🍀 bạn sẽ nhận thấy rằng có công tắc
  keyword here and then there is some 🍀 từ khóa ở đây và sau đó có một số
  value to consider and then a set of 🍀 giá trị để xem xét và sau đó là một tập hợp các
  braces and inside there's these case and 🍀 niềng răng và bên trong có những trường hợp này và
  these default keywords you know what I'm 🍀 những từ khóa mặc định này bạn biết tôi là gì
  gonna show you how it's used inside of a 🍀 sẽ chỉ cho bạn cách nó được sử dụng bên trong một
  playground and I'm going to use an 🍀 sân chơi và tôi sẽ sử dụng một
  example so you know it's gonna be a lot 🍀 ví dụ để bạn biết nó sẽ rất nhiều
  easier to understand so let's go ahead 🍀 dễ hiểu hơn vì vậy hãy tiếp tục
  and do that so let's pop up an X code 🍀 và làm điều đó để chúng ta hãy bật lên một mã X
  here let's get started with the 🍀 ở đây chúng ta hãy bắt đầu với
  playground and I am just going to switch 🍀 sân chơi và tôi sẽ chuyển đổi
  playground and let's save this on the 🍀 sân chơi và hãy lưu cái này vào
  desktop let's just minimize this guy - 🍀 máy tính để bàn, hãy thu nhỏ anh chàng này -
  what's destruction all right so I can 🍀 sự hủy diệt là gì được rồi để tôi có thể
  declare a new constant here and let's 🍀 khai báo một hằng số mới ở đây và hãy
  say that this is a character so why 🍀 nói rằng đây là một nhân vật vậy tại sao
  don't we call this a and we are going to 🍀 chúng ta không gọi đây là a và chúng ta sẽ
  assign it a little sign an a let's call 🍀 gán cho nó một dấu hiệu nhỏ và hãy gọi
  it character let's call it CHR now if I 🍀 nhân vật đó hãy gọi nó là CHR ngay bây giờ nếu tôi
  wanted to test this constant and see if 🍀 muốn kiểm tra hằng số này và xem nếu
  it was equal to a I could do something 🍀 nó tương đương với một tôi có thể làm một cái gì đó
  like this if CH 🍀 như thế này nếu CH
  is remember we use double equal sign or 🍀 là nhớ rằng chúng ta sử dụng dấu bằng kép hoặc
  equality testing of quality I mean you 🍀 kiểm tra bình đẳng về chất lượng ý tôi là bạn
  know I could print the character is a 🍀 biết tôi có thể in ký tự là một
  and then if I wanted to go through all 🍀 và sau đó nếu tôi muốn đi qua tất cả
  of the letters of the alphabet I could 🍀 trong số các chữ cái của bảng chữ cái tôi có thể
  do else if you know you get the picture 🍀 làm khác nếu bạn biết bạn có được hình ảnh
  right it would be a giant if statement 🍀 đúng nó sẽ là một câu lệnh if khổng lồ
  not recommended but this is where the 🍀 không được đề xuất nhưng đây là nơi
  switch statement would come in handy so 🍀 câu lệnh chuyển đổi sẽ có ích vì vậy
  why don't we just quickly take a look at 🍀 tại sao chúng ta không nhanh chóng xem qua
  the syntax so just like you saw in the 🍀 cú pháp giống như bạn đã thấy trong
  language guide you start with the switch 🍀 hướng dẫn ngôn ngữ bạn bắt đầu với công tắc
  keyword then followed by the thing that 🍀 từ khóa sau đó theo sau bởi điều mà
  you want to check in our example in the 🍀 bạn muốn kiểm tra ví dụ của chúng tôi trong
  playground that was the constant named C 🍀 sân chơi đó là hằng số có tên C
  HR and then you open up a set of braces 🍀 HR và sau đó bạn mở một bộ niềng răng
  and then inside the braces you put all 🍀 và sau đó bên trong niềng răng bạn đặt tất cả
  the things that you want to check for 🍀 những thứ mà bạn muốn kiểm tra
  and each thing that you want to check 🍀 và mỗi điều mà bạn muốn kiểm tra
  for is preceded by the case keyword so 🍀 for đứng trước từ khóa case vì vậy
  it would be case whatever you want to 🍀 nó sẽ là trường hợp bất cứ điều gì bạn muốn
  check for first followed by colon and 🍀 kiểm tra đầu tiên theo sau là dấu hai chấm và
  then the code that you want to execute 🍀 sau đó mã mà bạn muốn thực thi
  if that case is true followed by the 🍀 nếu trường hợp đó là đúng, theo sau là
  next case and so on and so forth and at 🍀 trường hợp tiếp theo và vân vân và vân vân và tại
  the very bottom you have a default case 🍀 dưới cùng bạn có một trường hợp mặc định
  for when none of the cases match it's 🍀 vì khi không có trường hợp nào khớp với nó
  going to hit the default case and run 🍀 sẽ nhấn trường hợp mặc định và chạy
  your code there now let's jump back to 🍀 mã của bạn ở đó bây giờ chúng ta hãy quay lại
  the playground and see this in action so 🍀 sân chơi và xem điều này trong hành động như vậy
  let's erase this if statement and 🍀 hãy xóa câu lệnh if này và
  instead use a switch statement so we're 🍀 thay vào đó hãy sử dụng câu lệnh chuyển đổi để chúng tôi
  gonna say switch and actually you can 🍀 sẽ nói chuyển đổi và thực sự bạn có thể
  use autocomplete and you just press 🍀 sử dụng tự động hoàn thành và bạn chỉ cần nhấn
  ENTER like that and it's gonna come up 🍀 ENTER như vậy và nó sẽ xuất hiện
  with all of the cases for you or you 🍀 với tất cả các trường hợp cho bạn hoặc bạn
  could type it out for practice so you 🍀 có thể gõ nó ra để thực hành vì vậy bạn
  can see immediately it it's come up with 🍀 có thể thấy ngay lập tức nó đến với
  this syntax for me which is really handy 🍀 cú pháp này đối với tôi thực sự tiện dụng
  because I can actually hit tab on my 🍀 bởi vì tôi thực sự có thể nhấn tab trên
  keyboard and jump through the different 🍀 bàn phím và nhảy qua các khác nhau
  things that I have to fill in well I 🍀 những điều mà tôi phải điền vào tốt tôi
  guess it stops right there let's change 🍀 đoán nó dừng ngay tại đó, hãy thay đổi
  the value for CHR and the pattern that I 🍀 giá trị cho CHR và mẫu mà tôi
  want to check for you know the first 🍀 muốn kiểm tra cho bạn biết đầu tiên
  case would be a right and the code that 🍀 trường hợp sẽ là một quyền và mã mà
  I want to put here would be this is an a 🍀 Tôi muốn đặt ở đây sẽ là đây là một
  right and then default might be this is 🍀 đúng và sau đó mặc định có thể là đây là
  all that so let's run this code and see 🍀 tất cả điều đó vì vậy hãy chạy mã này và xem
  what happens 🍀 chuyện gì xảy ra
  so as expected it hits this case and it 🍀 vì vậy, như mong đợi, nó đạt được trường hợp này và nó
  prints 🍀 bản in
  eight now what if we want it to check 🍀 tám bây giờ nếu chúng ta muốn nó kiểm tra thì sao
  for something else let's say be print 🍀 đối với một cái gì đó khác, hãy nói là in
  this is AP and if we just change that to 🍀 đây là AP và nếu chúng ta thay đổi nó thành
  a B and then we run it again you'll see 🍀 một B và sau đó chúng tôi chạy lại bạn sẽ thấy
  that it skips this case and it comes 🍀 rằng nó bỏ qua trường hợp này và nó đến
  down here and prints this instead now 🍀 xuống đây và in cái này thay vì bây giờ
  one additional cool thing I want to show 🍀 một điều thú vị bổ sung mà tôi muốn hiển thị
  you is that you can actually combine 🍀 bạn là bạn thực sự có thể kết hợp
  cases so let's say four cases B and C I 🍀 các trường hợp, giả sử bốn trường hợp B và C I
  want to execute the same block of code 🍀 muốn thực thi cùng một khối mã
  so I want to say this is this is a B or 🍀 vì vậy tôi muốn nói đây là đây là B hoặc
  C so I'm gonna just put a comma here and 🍀 C vì vậy tôi sẽ chỉ đặt dấu phẩy ở đây và
  I can put the other thing that I want to 🍀 Tôi có thể đặt thứ khác mà tôi muốn
  check for it 🍀 kiểm tra nó
  so if CHR is a B or a C then this code 🍀 vì vậy nếu CHR là B hoặc C thì mã này
  is going to be executed and so as 🍀 sẽ được thực hiện và như vậy
  expected it jumps down here so this is 🍀 dự kiến ​​​​nó sẽ nhảy xuống đây nên đây là
  pretty much it for a switch statement 🍀 khá nhiều cho một câu lệnh chuyển đổi
  it's pretty easy to use to be honest and 🍀 thành thật mà nói nó khá dễ sử dụng và
  it's a lot easier to read than a giant 🍀 nó dễ đọc hơn rất nhiều so với một người khổng lồ
  if statement wouldn't you agree 🍀 nếu tuyên bố bạn sẽ không đồng ý
  now to get more practice using switch 🍀 bây giờ để thực hành nhiều hơn bằng cách sử dụng switch
  statements I highly recommend that you 🍀 tuyên bố tôi thực sự khuyên bạn nên
  get the worksheet just hop on over to 🍀 lấy bảng tính chỉ cần nhảy qua
  the resources page for this video series 🍀 trang tài nguyên cho loạt video này
  to download it all right we're starting 🍀 để tải xuống tất cả đều ổn, chúng tôi đang bắt đầu
  to really get into the exciting stuff 🍀 để thực sự nhận được vào những thứ thú vị
  [Music] 🍀 [Âm nhạc]
  hello and welcome to lesson 5 of my 🍀 xin chào và chào mừng đến với bài học thứ 5 của tôi
  Swift tutorial for beginners video 🍀 Video hướng dẫn Swift cho người mới bắt đầu
  series now in the last two lessons you 🍀 loạt bài bây giờ trong hai bài học cuối cùng bạn
  learned how to write code that can be 🍀 đã học cách viết mã có thể
  executed based on some conditions now 🍀 thực hiện dựa trên một số điều kiện bây giờ
  let me introduce you to something called 🍀 để tôi giới thiệu với bạn một thứ gọi là
  loops loops allow you to repeat a block 🍀 vòng lặp vòng lặp cho phép bạn lặp lại một khối
  of code multiple times and while this 🍀 mã nhiều lần và trong khi điều này
  might sound a little bit boring and 🍀 nghe có vẻ hơi nhàm chán và
  repetitive 🍀 lặp đi lặp lại
  it's actually quite useful let me show 🍀 nó thực sự khá hữu ích để tôi chỉ cho
  you how they work so now I'm gonna 🍀 bạn làm thế nào họ làm việc vì vậy bây giờ tôi sẽ
  demonstrate for you the for in loop and 🍀 chứng minh cho bạn vòng lặp for in và
  this is going to allow you to loop a 🍀 điều này sẽ cho phép bạn lặp lại một
  block of code for a set number of times 🍀 khối mã cho một số lần đã đặt
  let's jump into the playground that I 🍀 hãy nhảy vào sân chơi mà tôi
  have prepared well I haven't actually 🍀 đã chuẩn bị tốt tôi chưa thực sự
  prepared anything cuz it's a blank 🍀 chuẩn bị mọi thứ vì nó trống
  playground but let me present to you 🍀 sân chơi nhưng hãy để tôi giới thiệu với bạn
  this dilemma so if we were to print 🍀 tình trạng tiến thoái lưỡng nan này vì vậy nếu chúng ta in
  hello in the console and let's say I 🍀 xin chào trong bảng điều khiển và giả sử tôi
  wanted to print this five times now I 🍀 muốn in cái này năm lần bây giờ tôi
  could just write five lines of code like 🍀 chỉ có thể viết năm dòng mã như
  this you know you get the picture 🍀 điều này bạn biết bạn có được hình ảnh
  but we can use a foreign loop to 🍀 nhưng chúng ta có thể sử dụng một vòng lặp nước ngoài để
  condense this code into just a couple of 🍀 cô đọng mã này thành chỉ một vài
  lines and let's take a look at the 🍀 dòng và chúng ta hãy nhìn vào
  syntax for a foreign loop so true to its 🍀 cú pháp cho một vòng lặp nước ngoài đúng với nó
  name the key words to use are four and 🍀 đặt tên cho các từ khóa để sử dụng là bốn và
  in you start with the keyword four 🍀 trong bạn bắt đầu với từ khóa bốn
  followed by some sort of variable name 🍀 theo sau là một số loại tên biến
  now you don't have to use the VAR 🍀 bây giờ bạn không phải sử dụng VAR
  keyword here you just give it a name and 🍀 từ khóa ở đây bạn chỉ cần đặt tên cho nó và
  then you write in and then you specify a 🍀 sau đó bạn viết vào và sau đó bạn chỉ định một
  range so there's a lower range followed 🍀 phạm vi để có một phạm vi thấp hơn theo sau
  by three dots and then an upper range 🍀 bằng ba dấu chấm và sau đó là một phạm vi trên
  and I just want to mention that it's an 🍀 và tôi chỉ muốn đề cập rằng đó là một
  inclusive range so if your range is one 🍀 phạm vi bao gồm vì vậy nếu phạm vi của bạn là một
  to five it's going to loop from one to 🍀 đến năm nó sẽ lặp từ một đến
  five and that would be a total of five 🍀 năm và đó sẽ là tổng cộng năm
  times and then you follow that by a set 🍀 lần và sau đó bạn làm theo điều đó bằng một tập hợp
  of braces inside the braces is where you 🍀 của niềng răng bên trong niềng răng là nơi bạn
  put your code and that code is going to 🍀 đặt mã của bạn và mã đó sẽ
  be looped for whatever range that you've 🍀 được lặp lại cho bất kỳ phạm vi nào mà bạn đã
  specified so I know that this is yet 🍀 được chỉ định để tôi biết rằng điều này vẫn chưa
  another set of keywords and another sort 🍀 một bộ từ khóa khác và một loại khác
  of syntactical structure that you have 🍀 cấu trúc cú pháp mà bạn có
  to remember but remember what I said 🍀 để nhớ nhưng hãy nhớ những gì tôi đã nói
  don't try to memorize anything as long 🍀 đừng cố gắng ghi nhớ bất cứ điều gì trong thời gian dài
  as you do the exercises and worksheets 🍀 khi bạn làm bài tập và bảng tính
  after each of these lessons and you just 🍀 sau mỗi bài học này và bạn chỉ cần
  spent fifteen minutes even just trying 🍀 đã dành mười lăm phút thậm chí chỉ để cố gắng
  it out and playing around with it you 🍀 nó ra và chơi xung quanh với nó bạn
  will remember the keywords to use and 🍀 sẽ nhớ các từ khóa để sử dụng và
  the structure of a foreign loop you 🍀 cấu trúc của một vòng lặp nước ngoài bạn
  don't have to memorize anything so that 🍀 không cần phải ghi nhớ bất cứ điều gì để
  is really the way to go and don't forget 🍀 thực sự là con đường để đi và đừng quên
  I do have a cheat sheet for you to 🍀 Tôi có một cheat sheet cho bạn
  download on the resources page for this 🍀 tải xuống trên trang tài nguyên cho việc này
  video series which you can find the link 🍀 loạt video mà bạn có thể tìm thấy liên kết
  to in the description below the video so 🍀 trong phần mô tả bên dưới video để
  have that cheat sheet besides you and if 🍀 có bảng cheat đó bên cạnh bạn và nếu
  you ever forget you just refer to it 🍀 bạn bao giờ quên bạn chỉ cần tham khảo nó
  alright now let's jump back to our 🍀 được rồi bây giờ chúng ta hãy quay trở lại với chúng ta
  playground and let's take a look at 🍀 sân chơi và chúng ta hãy nhìn vào
  doing this for in loop so I'm going to 🍀 làm điều này trong vòng lặp vì vậy tôi sẽ
  just create my loop right up here so for 🍀 chỉ cần tạo vòng lặp của tôi ngay tại đây để
  and then I'm going to use the variable 🍀 và sau đó tôi sẽ sử dụng biến
  name counter in right and then I specify 🍀 truy cập tên bên phải và sau đó tôi chỉ định
  a lower to upper range and I'm going to 🍀 một phạm vi thấp hơn đến cao hơn và tôi sẽ
  do one dot dot dot five and I'm going to 🍀 làm một chấm chấm năm và tôi sẽ
  put my braces so inside these braces 🍀 đặt niềng răng của tôi để bên trong những niềng răng này
  we're going to put our print hello so 🍀 chúng tôi sẽ đặt bản in của chúng tôi xin chào vì vậy
  let me erase four of them cut that one 🍀 hãy để tôi xóa bốn trong số chúng cắt cái đó
  and then let's paste it inside there and 🍀 và sau đó hãy dán nó vào trong đó và
  we're gonna run our code boom so now we 🍀 chúng tôi sẽ chạy bùng nổ mã của chúng tôi vì vậy bây giờ chúng tôi
  have hello five times how easy was that 🍀 xin chào năm lần thật dễ dàng làm sao
  sure enough it's run our code from one 🍀 chắc chắn rằng nó chạy mã của chúng tôi từ một
  to five now the question is what is this 🍀 đến năm bây giờ câu hỏi là đây là gì
  counter for what is this variable name 🍀 bộ đếm cho tên biến này là gì
  for well the thing is for each iteration 🍀 tốt cho mọi thứ là cho mỗi lần lặp lại
  of the for in loop the counter refers to 🍀 của vòng lặp for mà bộ đếm đề cập đến
  that number so in the first iteration of 🍀 con số đó vì vậy trong lần lặp đầu tiên của
  the loop counter actually contains 1 in 🍀 bộ đếm vòng lặp thực sự chứa 1 trong
  the second iteration counter contains 2 🍀 bộ đếm lặp thứ hai chứa 2
  and so on and so forth 🍀 Vân vân và vân vân
  so let's say I wanted to print out the 🍀 vì vậy hãy nói rằng tôi muốn in ra
  counter maybe I wanted to print out 🍀 truy cập có lẽ tôi muốn in ra
  numbers 1 2 5 🍀 số 1 ​​2 5
  I could print counter and then I can run 🍀 Tôi có thể in bộ đếm và sau đó tôi có thể chạy
  that and then you're going to see 1 2 3 🍀 cái đó và sau đó bạn sẽ thấy 1 2 3
  4 5 output instead now one cool thing is 🍀 4 5 đầu ra thay vì bây giờ một điều thú vị là
  that you see that there was this yellow 🍀 rằng bạn thấy rằng có màu vàng này
  warning here and that was Xcode just 🍀 cảnh báo ở đây và đó chỉ là Xcode
  telling us that hey if you if you don't 🍀 nói với chúng tôi rằng này nếu bạn nếu bạn không
  need to use that variable then you don't 🍀 cần sử dụng biến đó thì bạn không
  have to specify it but since we started 🍀 phải chỉ định nó nhưng kể từ khi chúng tôi bắt đầu
  using it in this print statement that 🍀 sử dụng nó trong tuyên bố in này
  warnings gone away so let me tell you 🍀 cảnh báo biến mất vì vậy hãy để tôi nói với bạn
  what that warning was all about why 🍀 cảnh báo đó là gì tại sao
  don't we go back to hello and then that 🍀 chúng ta không quay lại chào hỏi và sau đó
  little warning is going to come back and 🍀 cảnh báo nhỏ sẽ quay trở lại và
  it's telling us that this counter was 🍀 nó nói với chúng tôi rằng bộ đếm này là
  never used consider and this is kind of 🍀 không bao giờ được sử dụng xem xét và đây là loại
  cut off 🍀 cắt
  let me see if I can show you consider 🍀 để tôi xem nếu tôi có thể chỉ cho bạn xem xét
  replacing it with an underscore or 🍀 thay thế nó bằng dấu gạch dưới hoặc
  removing it so what what happens is that 🍀 loại bỏ nó để những gì xảy ra là
  if you actually don't need to use that 🍀 nếu bạn thực sự không cần sử dụng nó
  sort of counter you can replace it with 🍀 loại bộ đếm bạn có thể thay thế nó bằng
  an underscore like that and that's gonna 🍀 một dấu gạch dưới như thế và điều đó sẽ
  be fine that's perfectly valid for in 🍀 không sao, điều đó hoàn toàn hợp lệ trong
  lupus index now I want to show you one 🍀 chỉ số lupus bây giờ tôi muốn cho bạn xem một
  more thing that might get you tripped up 🍀 nhiều thứ khác có thể khiến bạn vấp ngã
  when you're working with loops why don't 🍀 khi bạn đang làm việc với các vòng lặp tại sao không
  we add this to counter variable back 🍀 chúng tôi thêm cái này vào biến truy cập trở lại
  because we're going to need it so let's 🍀 bởi vì chúng ta sẽ cần nó nên hãy
  say I want to display all right let's 🍀 nói rằng tôi muốn hiển thị tất cả phải không
  say I want to add up all the numbers 🍀 nói rằng tôi muốn cộng tất cả các số
  from 1 all the way up to 5 and I want to 🍀 từ 1 đến hết 5 và tôi muốn
  get the sum of all of those numbers you 🍀 lấy tổng của tất cả những số đó bạn
  know you might do something like this 🍀 biết bạn có thể làm một cái gì đó như thế này
  you might say you might declare var sum 🍀 bạn có thể nói rằng bạn có thể khai báo var sum
  equals 0 and then remember that this 🍀 bằng 0 và sau đó nhớ rằng điều này
  counter contains these numbers for each 🍀 bộ đếm chứa những con số này cho mỗi
  iteration right so I might want to do 🍀 lặp đi lặp lại vì vậy tôi có thể muốn làm
  something like this plus equals counter 🍀 một cái gì đó như thế này cộng bằng truy cập
  and I think this is the first time 🍀 và tôi nghĩ đây là lần đầu tiên
  you've ever seen the plus equal operator 🍀 bạn đã từng thấy toán tử cộng bằng
  right like this this is just an 🍀 đúng như thế này đây chỉ là một
  increment operator so what we're 🍀 toán tử gia tăng nên chúng ta là gì
  actually saying is basically add 🍀 thực sự nói về cơ bản là thêm
  whatever counter is added to some so if 🍀 bất cứ bộ đếm nào được thêm vào một số vì vậy nếu
  sum is 10 encounter is 5 well 🍀 tổng là 10 gặp là 5 tốt
  sum is now going to be equal to 15 so 🍀 tổng bây giờ sẽ bằng 15 vì vậy
  another way to think about it is that 🍀 một cách khác để nghĩ về nó là
  it's equivalent to writing some equals 🍀 nó tương đương với việc viết một số bằng
  sum plus counter okay just kind of just 🍀 tổng cộng bộ đếm không sao chỉ là loại
  like a shorthand 🍀 giống như một tốc ký
  all right so in every iteration we're 🍀 được rồi, vì vậy trong mỗi lần lặp lại, chúng tôi
  basically adding 1 and then adding 2 and 🍀 về cơ bản thêm 1 và sau đó thêm 2 và
  then adding 3 and we're collecting it 🍀 sau đó thêm 3 và chúng tôi đang thu thập nó
  inside this variable sum so what I want 🍀 bên trong biến này sum vậy những gì tôi muốn
  to do now is just print sum and now let 🍀 việc cần làm bây giờ chỉ là in tổng và bây giờ hãy để
  me run it what would you expect to 🍀 tôi chạy nó những gì bạn mong đợi
  happen let's take a look we get 1 2 3 4 🍀 xảy ra hãy xem chúng tôi nhận được 1 2 3 4
  & 5 well that's not what we expected 🍀 & 5 tốt, đó không phải là điều chúng tôi mong đợi
  right why is that well let's take a look 🍀 đúng tại sao lại tốt như vậy chúng ta hãy xem
  so in iteration number 1 we declare a 🍀 vì vậy trong lần lặp số 1, chúng tôi tuyên bố một
  variable called sum we've set it to 0 🍀 biến được gọi là tổng, chúng tôi đã đặt nó thành 0
  and then we're adding 1 to 0 and then 🍀 và sau đó chúng ta cộng 1 với 0 và sau đó
  we're printing that 🍀 chúng tôi đang in cái đó
  and so we get one well in iteration 🍀 và vì vậy chúng tôi nhận được một giếng trong lần lặp lại
  number two counter is now two and then 🍀 bộ đếm số hai bây giờ là hai và sau đó
  we are declaring some and setting it to 🍀 chúng tôi đang khai báo một số và đặt nó thành
  zero so we're essentially adding two to 🍀 không, vì vậy về cơ bản chúng tôi đang thêm hai vào
  zero was just two and so it prints some 🍀 số không chỉ là hai và vì vậy nó in một số
  and we get a two and so on and so forth 🍀 và chúng tôi nhận được một hai và vân vân và vân vân
  so the problem is that in every 🍀 vì vậy vấn đề là trong mọi
  iteration of the loop we are declaring 🍀 lặp lại vòng lặp mà chúng ta đang khai báo
  some and we're setting it to zero so 🍀 một số và chúng tôi đang đặt nó thành 0 vì vậy
  we're not really getting that addition 🍀 chúng tôi không thực sự nhận được sự bổ sung đó
  of the counter through the iterations 🍀 của bộ đếm thông qua các lần lặp
  like we want and if you notice you might 🍀 như chúng tôi muốn và nếu bạn nhận thấy bạn có thể
  say why am i able to declare some so 🍀 nói tại sao tôi có thể khai báo một số như vậy
  many times right because in the very 🍀 nhiều lần đúng bởi vì trong rất
  first lesson I told you that when you 🍀 bài học đầu tiên tôi đã nói với bạn rằng khi bạn
  declare a variable up here like this and 🍀 khai báo một biến ở đây như thế này và
  like STR you don't need to read Eclair 🍀 như STR bạn không cần đọc Eclair
  it in order to assign it something else 🍀 nó để gán cho nó một cái gì đó khác
  right so I can assign Tom to STR up here 🍀 đúng để tôi có thể chỉ định Tom cho STR ở đây
  and that would be perfectly fine however 🍀 và điều đó sẽ hoàn toàn ổn tuy nhiên
  if I try to declare STR again you know 🍀 nếu tôi cố gắng khai báo lại STR thì bạn biết đấy
  like this I'm gonna get an error invalid 🍀 như thế này tôi sẽ nhận được một lỗi không hợp lệ
  read Declaration of St art where you 🍀 đọc Tuyên ngôn nghệ thuật St nơi bạn
  can't do that so why is it that I can do 🍀 không thể làm điều đó vậy tại sao tôi có thể làm
  that here right in every single 🍀 mà ở đây ngay trong mỗi đơn
  iteration we're declaring a variable 🍀 lặp đi lặp lại, chúng tôi đang khai báo một biến
  called sum and setting it to zero well 🍀 được gọi là tổng và đặt nó thành 0 tốt
  the reason is because every iteration 🍀 lý do là bởi vì mỗi lần lặp lại
  it's almost like a clean slate there's 🍀 nó gần giống như một bảng xếp hạng sạch sẽ có
  no recollection of what happened in the 🍀 không có ký ức về những gì đã xảy ra trong
  previous iteration so that's why that's 🍀 lần lặp lại trước đó vì vậy đó là lý do tại sao
  happening essentially we're resetting 🍀 xảy ra về cơ bản chúng tôi đang thiết lập lại
  some every single iteration what we want 🍀 một số mỗi lần lặp lại những gì chúng ta muốn
  to do instead to get the desired effect 🍀 để làm thay vì để có được hiệu quả mong muốn
  is that we should move this declaration 🍀 là chúng ta nên di chuyển tuyên bố này
  out here and set it to zero and then 🍀 ra đây và đặt nó thành 0 và sau đó
  inside each iteration we are essentially 🍀 bên trong mỗi lần lặp lại, về cơ bản chúng ta
  just adding the counter to sum and we 🍀 chỉ cần thêm bộ đếm vào tổng và chúng tôi
  are going to get the desired effect if 🍀 sẽ đạt được hiệu quả mong muốn nếu
  we do it this way so outside here I'm 🍀 chúng tôi làm theo cách này vì vậy bên ngoài đây tôi
  gonna print some let's stop it and run 🍀 sẽ in một số, hãy dừng nó lại và chạy
  it again and so we get 15 and that's the 🍀 nó một lần nữa và vì vậy chúng tôi nhận được 15 và đó là
  numbers from 1 to 5 all added up now as 🍀 các số từ 1 đến 5 tất cả được cộng lại bây giờ là
  you can see up here we've declared some 🍀 bạn có thể thấy ở đây chúng tôi đã tuyên bố một số
  we've set it 🍀 chúng tôi đã thiết lập nó
  and down here in the for loop in the 🍀 và xuống đây trong vòng lặp for trong
  first iteration counter is one so we're 🍀 bộ đếm lặp đầu tiên là một vì vậy chúng tôi
  adding that to zero and so sum now is 1 🍀 thêm số đó vào 0 và tổng bây giờ là 1
  and in the second iteration we're not 🍀 và trong lần lặp lại thứ hai, chúng tôi không
  resetting in some counters to this time 🍀 đặt lại ở một số quầy đến thời điểm này
  and we are adding 2 to 1 so we get 3 and 🍀 và chúng tôi đang thêm 2 vào 1 để chúng tôi nhận được 3 và
  then so on and so forth and then the 🍀 sau đó vân vân và vân vân và sau đó là
  loop ends after five iterations and then 🍀 vòng lặp kết thúc sau năm lần lặp và sau đó
  we print something so that's why we get 🍀 chúng tôi in một cái gì đó vì vậy đó là lý do tại sao chúng tôi nhận được
  a single number here so I just wanted to 🍀 một số duy nhất ở đây vì vậy tôi chỉ muốn
  go through that quick example to 🍀 đi qua ví dụ nhanh đó để
  illustrate kind of how loops behave 🍀 minh họa cách hoạt động của các vòng lặp
  because I know a lot of beginners who 🍀 bởi vì tôi biết rất nhiều người mới bắt đầu
  get tripped up with something like that 🍀 bị vấp ngã với một cái gì đó như thế
  all right recap time so use a 4 in loop 🍀 tất cả thời gian tóm tắt đúng, vì vậy hãy sử dụng vòng lặp 4 trong
  to execute a block of code for a set 🍀 để thực thi một khối mã cho một tập hợp
  number of times and each time your code 🍀 số lần và mỗi lần mã của bạn
  runs is called an iteration of the loop 🍀 chạy được gọi là một lần lặp của vòng lặp
  now be sure to practice with the 🍀 bây giờ hãy chắc chắn để thực hành với
  worksheet for this lesson because loops 🍀 trang tính cho bài học này bởi vì các vòng lặp
  are powerful stuff hello and welcome to 🍀 là những thứ mạnh mẽ xin chào và chào mừng đến với
  lesson 6 of my Swift tutorial for 🍀 bài 6 của hướng dẫn Swift của tôi cho
  beginners video series now in the last 🍀 loạt video dành cho người mới bắt đầu bây giờ ở phần cuối
  lesson you learned about the for in loop 🍀 bài học bạn đã học về vòng lặp for in
  which lets you execute a block of code 🍀 cho phép bạn thực thi một khối mã
  for a set number of times well there's 🍀 trong một số lần nhất định, có
  another kind of loop too actually that 🍀 một loại vòng lặp khác thực sự là
  allows you to loop your block of code 🍀 cho phép bạn lặp lại khối mã của mình
  indefinitely until a condition is met 🍀 vô thời hạn cho đến khi một điều kiện được đáp ứng
  these kinds of loops are awesome when 🍀 những loại vòng lặp này thật tuyệt vời khi
  you don't know how many iterations it's 🍀 bạn không biết có bao nhiêu lần lặp lại
  going to take to get the job done 🍀 sẽ thực hiện để hoàn thành công việc
  all right so let's dive in and see how 🍀 được rồi, vậy hãy đi sâu vào và xem thế nào
  they work so in this demo we're going to 🍀 chúng hoạt động nên trong bản demo này, chúng ta sẽ
  go through two types of loops that are 🍀 trải qua hai loại vòng lặp đó là
  really good to use when the number of 🍀 thực sự tốt để sử dụng khi số lượng
  times that you need to loop for is 🍀 số lần mà bạn cần lặp lại là
  unknown so the first one is called the 🍀 chưa biết nên cái đầu tiên được gọi là
  while loop and this loop checks a 🍀 vòng lặp while và vòng lặp này kiểm tra một
  condition to see if it's true and then 🍀 điều kiện để xem nó có đúng không và sau đó
  it's going to run your code and then 🍀 nó sẽ chạy mã của bạn và sau đó
  check the condition again and then run 🍀 kiểm tra lại điều kiện rồi chạy
  your code and check the condition again 🍀 mã của bạn và kiểm tra lại điều kiện
  that's to quickly take a look at the 🍀 đó là để nhanh chóng có một cái nhìn vào
  syntax for this so you start with the 🍀 cú pháp cho điều này để bạn bắt đầu với
  wild keyword and then you have a 🍀 từ khóa hoang dã và sau đó bạn có một
  condition and then you have a set of 🍀 điều kiện và sau đó bạn có một bộ
  braces and then inside the braces you 🍀 niềng răng và sau đó bên trong niềng răng bạn
  have the code that you want to loop now 🍀 có mã mà bạn muốn lặp lại ngay bây giờ
  notice that the condition is up there at 🍀 lưu ý rằng điều kiện ở trên đó tại
  the top before it even execute your code 🍀 trên cùng trước khi nó thậm chí thực thi mã của bạn
  it's going to check the condition first 🍀 nó sẽ kiểm tra điều kiện đầu tiên
  to see if it's true kind of like an if 🍀 để xem nó có đúng không giống như nếu
  statement if that condition is not true 🍀 tuyên bố nếu điều kiện đó không đúng
  then your code is not going to be run at 🍀 sau đó mã của bạn sẽ không được chạy tại
  all let alone loop let's jump into the 🍀 tất cả hãy để một mình vòng lặp hãy nhảy vào
  playground now and let's do a demo of 🍀 sân chơi ngay bây giờ và hãy làm một bản demo của
  the while loop so I've got this guy 🍀 vòng lặp while vì vậy tôi đã có anh chàng này
  right here brand new playground for 🍀 ngay tại đây sân chơi hoàn toàn mới cho
  shot out of the oven so far let's say 🍀 bắn ra khỏi lò cho đến nay hãy nói
  this counter is equal to five and then 🍀 bộ đếm này bằng năm và sau đó
  let's say that I want to let's do the 🍀 hãy nói rằng tôi muốn làm
  same example like we did before we're 🍀 ví dụ tương tự như chúng tôi đã làm trước khi chúng tôi
  going to print hello and what we're 🍀 sẽ in xin chào và chúng ta là gì
  going to do is say while counter is less 🍀 sẽ làm là nói trong khi truy cập ít hơn
  than or sorry while counter is greater 🍀 hơn hoặc xin lỗi trong khi bộ đếm lớn hơn
  than zero I'm gonna print hello now 🍀 hơn không tôi sẽ in xin chào bây giờ
  before I finish writing the syntax for 🍀 trước khi tôi viết xong cú pháp cho
  this while loop you can see here it's 🍀 vòng lặp while này bạn có thể thấy nó ở đây
  telling me you need a set of braces but 🍀 nói với tôi rằng bạn cần một bộ niềng răng nhưng
  before I finish writing the syntax for 🍀 trước khi tôi viết xong cú pháp cho
  this while loop I just want you to 🍀 vòng lặp while này tôi chỉ muốn bạn
  notice one thing so first it's going to 🍀 lưu ý một điều vì vậy trước tiên nó sẽ
  evaluate this condition and it's true 🍀 đánh giá điều kiện này và đó là sự thật
  right you can see that counter is equal 🍀 đúng bạn có thể thấy bộ đếm đó bằng nhau
  to five and five is greater than zero so 🍀 đến năm và năm lớn hơn 0 nên
  it's true so it's going to print hello 🍀 đó là sự thật vì vậy nó sẽ in xin chào
  and then it's going to loop and check 🍀 và sau đó nó sẽ lặp lại và kiểm tra
  the condition again and it's gonna be 🍀 điều kiện một lần nữa và nó sẽ là
  true again so it's gonna loop and it's 🍀 đúng một lần nữa vì vậy nó sẽ lặp lại và nó
  gonna keep looping infinitely until we 🍀 sẽ tiếp tục lặp vô tận cho đến khi chúng ta
  get a crash there's some overflow so let 🍀 gặp sự cố, có một số tràn vì vậy hãy để
  me demonstrate that I would not 🍀 tôi chứng minh rằng tôi sẽ không
  recommend this if you've got a slower 🍀 đề nghị điều này nếu bạn đã có một chậm hơn
  computer and I'm not even sure if mine's 🍀 máy tính và tôi thậm chí không chắc nếu của tôi
  very fast so it's it's just gonna keep 🍀 rất nhanh nên nó sẽ giữ nguyên
  going maybe now Xcode has something 🍀 có lẽ bây giờ Xcode có thứ gì đó
  where it's oh I have to run my code 🍀 nó ở đâu vậy tôi phải chạy mã của mình
  let's do that so you can see it just 🍀 hãy làm điều đó để bạn có thể nhìn thấy nó
  it's going bonkers right so I'm gonna 🍀 nó sẽ điên cuồng ngay vì vậy tôi sẽ
  stop that right now 🍀 dừng lại ngay bây giờ
  it's not stopping okay yeah it's not 🍀 nó không dừng lại được rồi, vâng, không phải vậy
  stopping my computer is kind of going 🍀 dừng máy tính của tôi là loại đi
  haywire right now so what you want to do 🍀 haywire ngay bây giờ vì vậy những gì bạn muốn làm
  actually is inside this while loop you 🍀 thực sự là bên trong này trong khi vòng lặp bạn
  want to write some code to actually make 🍀 muốn viết một số mã để thực sự làm cho
  it so that this condition can be false 🍀 nó để điều kiện này có thể là sai
  so if we print it now sorry if I can 🍀 vì vậy nếu chúng tôi in nó bây giờ xin lỗi nếu tôi có thể
  actually get this yeah so you see I 🍀 thực sự có được điều này yeah vì vậy bạn thấy tôi
  wouldn't recommend you to do this but we 🍀 sẽ không khuyên bạn làm điều này nhưng chúng tôi
  can still walk through the code so while 🍀 vẫn có thể đi qua mã vì vậy trong khi
  that's running my playground let me just 🍀 đó là điều hành sân chơi của tôi hãy để tôi chỉ
  explain what happened here 🍀 giải thích những gì đã xảy ra ở đây
  so I basically created a while loop that 🍀 vì vậy về cơ bản tôi đã tạo một vòng lặp while
  ran on indefinitely until I added this 🍀 chạy vô thời hạn cho đến khi tôi thêm cái này
  code here so this code 🍀 mã ở đây vì vậy mã này
  decrements the counter buy one just like 🍀 giảm truy cập mua một giống như
  you saw the other one which was plus 🍀 bạn đã thấy một cái khác là cộng
  equal one and that would actually add 🍀 bằng một và điều đó thực sự sẽ thêm
  one to the counter this one minus is one 🍀 một đến quầy cái này trừ đi một
  from the counter so it starts at five 🍀 từ quầy để nó bắt đầu lúc năm giờ
  right so the first iteration would be 🍀 đúng vậy lần lặp đầu tiên sẽ là
  five and then print hello and then it 🍀 năm và sau đó in xin chào và sau đó nó
  would turn that counter into four 🍀 sẽ biến bộ đếm đó thành bốn
  because a decorated meant by one then 🍀 bởi vì một trang trí có nghĩa là một sau đó
  loop again and four is greater than zero 🍀 lặp lại và bốn lớn hơn 0
  loops and then this line would set 🍀 vòng lặp và sau đó dòng này sẽ thiết lập
  counter to three and then I'd go on and 🍀 truy cập đến ba và sau đó tôi sẽ tiếp tục và
  on and on until it hits zero and then 0 🍀 cứ lặp đi lặp lại cho đến khi nó chạm 0 và sau đó là 0
  is not greater than zero so that is 🍀 không lớn hơn 0 nên đó là
  actually allows us to exit the loop I 🍀 thực sự cho phép chúng ta thoát khỏi vòng lặp I
  knew that was pretty bad idea so I'm 🍀 biết đó là một ý tưởng khá tồi vì vậy tôi
  gonna try and stop this oh there we go 🍀 sẽ cố gắng và ngăn chặn điều này oh chúng ta bắt đầu
  so can I run this down I think I broke 🍀 vì vậy tôi có thể chạy cái này xuống tôi nghĩ rằng tôi đã phá vỡ
  it so I'm going to actually quit Xcode 🍀 vì vậy tôi sẽ thực sự thoát khỏi Xcode
  right now I think let's see what we can 🍀 ngay bây giờ tôi nghĩ chúng ta hãy xem những gì chúng ta có thể
  do here nope 🍀 làm ở đây không
  all right guys we're back so all I had 🍀 được rồi các bạn, chúng tôi đã trở lại vì vậy tất cả những gì tôi có
  to do was quit Xcode and restart Xcode 🍀 việc cần làm là thoát khỏi Xcode và khởi động lại Xcode
  and run my playground again so let's run 🍀 và chạy sân chơi của tôi một lần nữa vì vậy hãy chạy
  it here alright so we've got our hello 🍀 nó ở đây được rồi vì vậy chúng tôi đã có lời chào của chúng tôi
  five times which is great now we can 🍀 năm lần, điều đó thật tuyệt, bây giờ chúng ta có thể
  talk about our second type of loop which 🍀 nói về loại vòng lặp thứ hai của chúng tôi
  is the repeat while loop so let's let me 🍀 là vòng lặp lặp lại trong khi hãy để tôi
  show you where that is just scroll a 🍀 chỉ cho bạn nơi đó chỉ cần cuộn một
  little down further here the repeat 🍀 một chút xuống đây lặp lại
  while loop and let's take a look at the 🍀 vòng lặp while và chúng ta hãy xem
  syntax for this so here you have the 🍀 cú pháp cho điều này vì vậy ở đây bạn có
  repeat keyword followed by a set of 🍀 lặp lại từ khóa theo sau bởi một tập hợp các
  braces inside the braces you have the 🍀 niềng răng bên trong niềng răng bạn có
  code that you want to loop and then 🍀 mã mà bạn muốn lặp và sau đó
  what's noteworthy is that behind the 🍀 điều đáng chú ý là đằng sau
  closing brace you have the wild keyword 🍀 đóng cú đúp bạn có từ khóa hoang dã
  and then the condition so notice how the 🍀 và sau đó là điều kiện để chú ý cách
  condition is at the end of the loop 🍀 điều kiện ở cuối vòng lặp
  instead of the while loop where the 🍀 thay vì vòng lặp while nơi
  condition was at the top so essentially 🍀 điều kiện đã ở trên cùng vì vậy về cơ bản
  what happens here is that your code 🍀 điều xảy ra ở đây là mã của bạn
  statements are going to be run at least 🍀 báo cáo sẽ được chạy ít nhất
  once and then after it is run it's going 🍀 một lần và sau khi nó chạy, nó sẽ tiếp tục
  to check the condition and if the 🍀 để kiểm tra điều kiện và nếu
  condition is true then it's going to 🍀 điều kiện là đúng thì nó sẽ
  repeat and loop it so that's different 🍀 lặp lại và lặp lại để nó khác
  from the 🍀 từ
  while loop which checks the condition 🍀 vòng lặp while kiểm tra điều kiện
  first and it might not even run even 🍀 đầu tiên và nó thậm chí có thể không chạy
  once if your condition isn't true so 🍀 một lần nếu điều kiện của bạn không đúng như vậy
  let's go back to the playground now and 🍀 bây giờ chúng ta hãy quay trở lại sân chơi và
  test out the repeat while loop so I am 🍀 kiểm tra vòng lặp lặp lại trong khi tôi
  going to declare I would say counter - 🍀 sẽ tuyên bố tôi sẽ nói phản đối -
  let's do evil five again and I'm going 🍀 hãy làm điều ác năm lần nữa và tôi sẽ đi
  to use the repeat keyword and I'm going 🍀 để sử dụng từ khóa lặp lại và tôi sẽ
  to print hello and then here I'm going 🍀 để in xin chào và sau đó tôi đi đây
  to decrement my counter just like we 🍀 để giảm truy cập của tôi giống như chúng tôi
  have up there and I am going to say 🍀 có lên đó và tôi sẽ nói
  while counter two is greater than zero 🍀 trong khi bộ đếm hai lớn hơn 0
  so while let me do ya help from while 🍀 Vì vậy, hãy để tôi giúp bạn trong khi
  loop from repeat while loop and let's do 🍀 vòng lặp từ vòng lặp lặp lại trong khi chúng ta hãy làm
  that so what happens is that we get five 🍀 điều đó xảy ra là chúng ta có năm
  of these printouts from the first while 🍀 của những bản in này từ lần đầu tiên
  loop and we get five of these printouts 🍀 vòng lặp và chúng tôi nhận được năm trong số các bản in này
  from the second while loop all right 🍀 từ vòng lặp thứ hai đều ổn
  just like we expected however what if I 🍀 giống như chúng tôi mong đợi tuy nhiên nếu tôi
  changed counter to let's say negative 🍀 đã thay đổi bộ đếm để nói tiêu cực
  five and I change the counter to 🍀 năm và tôi thay đổi bộ đếm thành
  negative five and I run it 🍀 âm năm và tôi chạy nó
  well you look at that the while loop 🍀 bạn nhìn vào đó vòng lặp while
  doesn't even run once right because it 🍀 thậm chí không chạy đúng một lần vì nó
  checks the condition first 🍀 kiểm tra điều kiện đầu tiên
  that's not true it's not gonna run your 🍀 điều đó không đúng, nó sẽ không chạy của bạn
  code skip this one it's going to print 🍀 mã bỏ qua cái này nó sẽ in
  it out first and then it's going to 🍀 nó ra trước và sau đó nó sẽ
  realize that a negative five is not 🍀 nhận ra rằng một âm năm không phải là
  greater than zero so I'm not going to 🍀 lớn hơn 0 nên tôi sẽ không
  repeat I'm not going to loop so the one 🍀 nhắc lại tôi sẽ không lặp lại nên cái đó
  that you use really depends on the 🍀 mà bạn sử dụng thực sự phụ thuộc vào
  situation and what you're trying to 🍀 tình hình và những gì bạn đang cố gắng
  accomplish if you're writing some logic 🍀 hoàn thành nếu bạn đang viết một số logic
  that you know you want it to happen once 🍀 rằng bạn biết bạn muốn nó xảy ra một lần
  and it only conditionally repeats then 🍀 và nó chỉ lặp lại có điều kiện sau đó
  you want to use the repeat while loop 🍀 bạn muốn sử dụng vòng lặp while
  however if you want your code to only be 🍀 tuy nhiên nếu bạn muốn mã của mình chỉ là
  run when certain conditions are 🍀 chạy khi một số điều kiện là
  meant and as long as that condition is 🍀 có nghĩa là và miễn là điều kiện đó là
  still true then you use the while loop 🍀 vẫn đúng thì bạn sử dụng vòng lặp while
  all right let's recap you learned about 🍀 được rồi, hãy tóm tắt lại những gì bạn đã học
  the while loop and the repeat while loop 🍀 vòng lặp while và vòng lặp while
  that lets you execute a block of code 🍀 cho phép bạn thực thi một khối mã
  and loop it indefinitely until a 🍀 và lặp nó vô thời hạn cho đến khi một
  condition is met 🍀 điều kiện được đáp ứng
  now the while loop checks the condition 🍀 bây giờ vòng lặp while kiểm tra điều kiện
  first before executing the block of code 🍀 đầu tiên trước khi thực thi khối mã
  and then looping and the repeat while 🍀 và sau đó lặp lại và lặp lại trong khi
  loop will execute your block of code 🍀 vòng lặp sẽ thực thi khối mã của bạn
  first and then check your condition to 🍀 đầu tiên và sau đó kiểm tra tình trạng của bạn để
  decide whether or not it should repeat 🍀 quyết định có nên lặp lại hay không
  for another iteration hello and welcome 🍀 cho một lần lặp lại xin chào và chào mừng
  to my Swift tutorial for beginners in 🍀 đến hướng dẫn Swift của tôi cho người mới bắt đầu trong
  this lesson you're going to learn all 🍀 bài học này bạn sẽ học tất cả
  about functions what they are and how to 🍀 về chức năng chúng là gì và làm thế nào để
  use them now functions are a critical 🍀 sử dụng chúng bây giờ chức năng là một quan trọng
  part of the Swift programming language 🍀 một phần của ngôn ngữ lập trình Swift
  especially if you're going to be 🍀 đặc biệt nếu bạn sắp trở thành
  building apps with Swift so let's get 🍀 xây dựng ứng dụng với Swift, vì vậy hãy bắt đầu
  started all right so I've got a brand 🍀 bắt đầu ổn vì vậy tôi đã có một thương hiệu
  new playground here but before we dive 🍀 sân chơi mới ở đây nhưng trước khi chúng ta lặn
  into write our first function let's 🍀 viết chức năng đầu tiên của chúng tôi, hãy
  define what they are at the most basic 🍀 xác định chúng là gì ở mức cơ bản nhất
  level a function lets you take a block 🍀 cấp một chức năng cho phép bạn lấy một khối
  of code and give it a function name and 🍀 mã và đặt cho nó một tên hàm và
  whenever you want to execute that block 🍀 bất cứ khi nào bạn muốn thực thi khối đó
  of code or basically run that code you 🍀 mã hoặc về cơ bản chạy mã đó bạn
  call that function name so that might 🍀 gọi tên chức năng đó để có thể
  seem really simple but the powerful 🍀 có vẻ thực sự đơn giản nhưng mạnh mẽ
  aspect of it is that it lets you 🍀 khía cạnh của nó là nó cho phép bạn
  organize your code into smaller chunks 🍀 sắp xếp mã của bạn thành các phần nhỏ hơn
  of code for specific tasks so that way 🍀 mã cho các tác vụ cụ thể để theo cách đó
  if you want it to perform a specific 🍀 nếu bạn muốn nó thực hiện một chức năng cụ thể
  task you can run that specific function 🍀 nhiệm vụ bạn có thể chạy chức năng cụ thể đó
  now they can get pretty powerful with 🍀 bây giờ họ có thể trở nên khá mạnh mẽ với
  the ability to give the function data to 🍀 khả năng cung cấp dữ liệu chức năng cho
  have the code take that data work with 🍀 để mã lấy dữ liệu đó hoạt động với
  it and return the result back to you but 🍀 nó và trả lại kết quả cho bạn nhưng
  in this lesson we are just going to take 🍀 trong bài học này chúng ta sẽ chỉ lấy
  a look at the basic function so let's 🍀 nhìn vào chức năng cơ bản vì vậy hãy
  take a look at how to define a function 🍀 hãy xem làm thế nào để xác định một chức năng
  first so it all starts with the func 🍀 đầu tiên để tất cả bắt đầu với func
  keyword or F UNC followed by a space and 🍀 từ khóa hoặc F UNC theo sau là khoảng trắng và
  then your function name so you can give 🍀 sau đó tên chức năng của bạn để bạn có thể cung cấp
  your function any sort of name you'd 🍀 chức năng của bạn bất kỳ loại tên nào bạn muốn
  like but you should be descriptive about 🍀 thích nhưng bạn nên mô tả về
  what that code inside the function does 🍀 mã đó bên trong hàm làm gì
  so that when you want to perform that 🍀 để khi bạn muốn thực hiện điều đó
  task you know which function to call 🍀 nhiệm vụ bạn biết nên gọi chức năng nào
  following the function name you have a 🍀 theo tên chức năng bạn có một
  pair of parentheses now in the basic 🍀 cặp dấu ngoặc đơn bây giờ trong cơ bản
  function we're not going to have 🍀 chức năng chúng ta sẽ không có
  anything in between these parentheses 🍀 bất cứ điều gì ở giữa các dấu ngoặc đơn
  but in the next lesson we're going to 🍀 nhưng trong bài học tiếp theo chúng ta sẽ
  learn how to add input parameter 🍀 tìm hiểu cách thêm tham số đầu vào
  and in between those parentheses is 🍀 và ở giữa các dấu ngoặc đơn là
  where you would specify those parameters 🍀 nơi bạn sẽ chỉ định các tham số đó
  for now we're just going to leave it as 🍀 bây giờ chúng ta sẽ để nó như
  two parentheses with nothing in between 🍀 hai dấu ngoặc đơn không có gì ở giữa
  them all right and then next up we have 🍀 tất cả đều ổn và tiếp theo chúng ta có
  a pair of curly braces and then in 🍀 một cặp dấu ngoặc nhọn và sau đó trong
  between the curly braces is where you 🍀 giữa các dấu ngoặc nhọn là nơi bạn
  would define your code for that function 🍀 sẽ xác định mã của bạn cho chức năng đó
  now any code you write in between those 🍀 bây giờ bất kỳ mã nào bạn viết ở giữa những mã đó
  curly braces that's going to get 🍀 dấu ngoặc nhọn sẽ nhận được
  executed when you call the function by 🍀 được thực thi khi bạn gọi hàm bằng
  its name now let's go back to the 🍀 tên của nó bây giờ chúng ta hãy quay trở lại
  playground and write a basic function so 🍀 sân chơi và viết một chức năng cơ bản như vậy
  I'm going to start on the next line here 🍀 Tôi sẽ bắt đầu vào dòng tiếp theo ở đây
  and I'm going to use the keyword F UNC 🍀 và tôi sẽ sử dụng từ khóa F UNC
  space followed by my function name now 🍀 không gian theo sau là tên chức năng của tôi bây giờ
  for this one I'm going to call it add 🍀 đối với cái này tôi sẽ gọi nó là add
  two numbers because that's what we're 🍀 hai con số bởi vì đó là những gì chúng ta
  going to do inside that function and I'm 🍀 sẽ làm bên trong chức năng đó và tôi
  going to put two parentheses like that 🍀 sẽ đặt hai dấu ngoặc đơn như thế
  and next up I would put two curly 🍀 và tiếp theo tôi sẽ đặt hai lọn tóc
  brackets this is where I would specify 🍀 ngoặc đây là nơi tôi sẽ chỉ định
  the code that I want to run whenever I 🍀 mã mà tôi muốn chạy bất cứ khi nào tôi
  call add two numbers so why don't we 🍀 gọi thêm hai số vậy tại sao chúng ta không
  define some constants here let a equals 🍀 xác định một số hằng số ở đây để cho một bằng
  one let B equals two and I'll say let C 🍀 một để B bằng hai và tôi sẽ nói hãy để C
  equals a plus B so C equals three and 🍀 bằng a cộng với B nên C bằng ba và
  lastly I'm going to print C now I'm 🍀 cuối cùng tôi sẽ in C bây giờ tôi
  going to run my code right here and 🍀 sẽ chạy mã của tôi ngay tại đây và
  let's come on playground all right so 🍀 chúng ta hãy đến sân chơi được rồi
  now it's run but as you can see there is 🍀 bây giờ nó đã chạy nhưng như bạn có thể thấy có
  no console output and the reason why is 🍀 không có đầu ra giao diện điều khiển và lý do tại sao là
  because this code inside this function 🍀 bởi vì mã này bên trong chức năng này
  doesn't get executed until you call the 🍀 không được thực hiện cho đến khi bạn gọi
  function but its name so the way you 🍀 chức năng nhưng tên của nó theo cách bạn
  call it is you simply write the function 🍀 gọi nó là bạn chỉ cần viết hàm
  name and sometimes you can even use 🍀 tên và đôi khi bạn thậm chí có thể sử dụng
  autocomplete like that followed by the 🍀 tự động hoàn thành như thế theo sau là
  parentheses and if we did define some 🍀 dấu ngoặc đơn và nếu chúng tôi đã xác định một số
  sort of input parameter here that the 🍀 loại tham số đầu vào ở đây mà
  function will be required when you call 🍀 chức năng sẽ được yêu cầu khi bạn gọi
  that a function you would also have to 🍀 rằng một chức năng bạn cũng sẽ phải
  specify that input data in this lesson 🍀 chỉ định dữ liệu đầu vào đó trong bài học này
  for this basic function we don't have to 🍀 đối với chức năng cơ bản này, chúng ta không cần phải
  do that all right so let's run this line 🍀 làm điều đó được rồi, vì vậy hãy chạy dòng này
  of code and as you can see in the 🍀 mã và như bạn có thể thấy trong
  console it outputs three as expected now 🍀 bảng điều khiển nó xuất ra ba như mong đợi bây giờ
  let's try another one so I'm going to 🍀 hãy thử một cái khác vì vậy tôi sẽ
  just get rid of that line there so 🍀 chỉ cần thoát khỏi dòng đó ở đó
  calling the function and I'll call this 🍀 gọi hàm và tôi sẽ gọi cái này
  subtract two numbers I'll say let D 🍀 trừ hai số tôi sẽ nói để cho D
  equals five let e equals one and let F 🍀 bằng năm để e bằng một và để F
  equals D minus e alright and here I'm 🍀 bằng D trừ e được rồi và tôi đây
  going to print F and again nothing is 🍀 sẽ in F và một lần nữa không có gì
  going to happen until I actually call 🍀 sẽ xảy ra cho đến khi tôi thực sự gọi
  the function right so let's run the 🍀 chức năng đúng vì vậy hãy chạy
  project now and as you can see there is 🍀 dự án ngay bây giờ và như bạn có thể thấy có
  four now this might not be immediately 🍀 bốn bây giờ điều này có thể không ngay lập tức
  obvious to you but using functions is 🍀 rõ ràng với bạn nhưng sử dụng chức năng là
  actually a huge time savings because 🍀 thực sự là một khoản tiết kiệm thời gian rất lớn bởi vì
  oftentimes when you write your code for 🍀 đôi khi bạn viết mã của bạn cho
  your app there are instances where 🍀 ứng dụng của bạn có những trường hợp
  you're going to have to repeat a chunk 🍀 bạn sẽ phải lặp lại một đoạn
  of code in different places having 🍀 mã ở những nơi khác nhau có
  duplicate code in your project is 🍀 mã trùng lặp trong dự án của bạn là
  generally a bad practice and something 🍀 nói chung là một thực tế xấu và một cái gì đó
  that you'll want to avoid and so 🍀 mà bạn sẽ muốn tránh và vì vậy
  whenever you see yourself having to 🍀 bất cứ khi nào bạn thấy mình phải
  repeat code writing the same thing that 🍀 lặp lại mã viết điều tương tự mà
  you've written before in another place 🍀 bạn đã viết trước đây ở một nơi khác
  then think about putting that chunk of 🍀 sau đó nghĩ về việc đặt đoạn đó
  code into a function so that you can 🍀 mã vào một chức năng để bạn có thể
  call it from multiple places now there's 🍀 gọi nó từ nhiều nơi bây giờ có
  one more tricky thing about functions 🍀 một điều khó khăn nữa về chức năng
  that I want to mention to you and that 🍀 mà tôi muốn đề cập với bạn và rằng
  is the concept of variable scope the 🍀 là khái niệm về phạm vi biến
  idea is that any variables and constants 🍀 ý tưởng là bất kỳ biến và hằng nào
  that you define inside of your function 🍀 mà bạn xác định bên trong chức năng của mình
  they only exist and can be used within 🍀 chúng chỉ tồn tại và có thể được sử dụng trong
  the curly brackets of that function so 🍀 dấu ngoặc nhọn của hàm đó
  for example here in the add two numbers 🍀 ví dụ ở đây trong cộng hai số
  function we have declared a B and C well 🍀 chức năng chúng tôi đã khai báo một B và C tốt
  outside of my function that would be 🍀 bên ngoài chức năng của tôi đó sẽ là
  right here I can't let's say print a 🍀 ngay tại đây tôi không thể nói in một
  write that's gonna trigger in an error 🍀 viết điều đó sẽ gây ra lỗi
  use of unresolved identifier and that's 🍀 sử dụng số nhận dạng chưa được giải quyết và đó là
  just another way of saying that it can't 🍀 chỉ là một cách khác để nói rằng nó không thể
  find what a is it doesn't know the same 🍀 tìm a là gì nó không biết như vậy
  thing for B or C and the reason for this 🍀 điều cho B hoặc C và lý do cho điều này
  is because we've declared a B and C 🍀 là bởi vì chúng tôi đã khai báo B và C
  inside that scope of that function 🍀 bên trong phạm vi của chức năng đó
  that's where it exists and likewise 🍀 đó là nơi nó tồn tại và tương tự như vậy
  inside the subtract 🍀 bên trong phép trừ
  to numbers function we have de and F I 🍀 đến hàm số chúng ta có de và F I
  won't be able to access a B or C here 🍀 sẽ không thể truy cập B hoặc C tại đây
  either I try and print a it still 🍀 hoặc tôi thử và in nó vẫn
  doesn't know what a is so we're going to 🍀 không biết a là gì nên chúng ta sẽ
  get a crash if for some reason you 🍀 gặp sự cố nếu vì lý do nào đó bạn
  needed your variables to be able to be 🍀 cần các biến của bạn để có thể được
  accessed outside of the functions then 🍀 truy cập bên ngoài các chức năng sau đó
  you would have to declare these guys 🍀 bạn sẽ phải tuyên bố những người này
  outside of the function now that's just 🍀 bên ngoài chức năng bây giờ chỉ là
  something to keep in mind as you're 🍀 một cái gì đó để ghi nhớ như bạn đang
  starting to work with functions for a 🍀 bắt đầu làm việc với các chức năng cho một
  lot of beginners they run into issues 🍀 rất nhiều người mới bắt đầu họ gặp vấn đề
  where they're frustrated with not being 🍀 nơi họ thất vọng vì không được
  able to access these variables and 🍀 có thể truy cập các biến này và
  constants that they've declared inside 🍀 hằng số mà họ đã khai báo bên trong
  their function and now you know why 🍀 chức năng của họ và bây giờ bạn biết tại sao
  so just to recap you learn about what 🍀 vì vậy chỉ để tóm tắt lại bạn tìm hiểu về những gì
  functions are and how important they are 🍀 chức năng là gì và tầm quan trọng của chúng
  because they allow us to organize our 🍀 bởi vì chúng cho phép chúng tôi tổ chức
  code into executable blocks which we can 🍀 mã thành các khối thực thi mà chúng ta có thể
  then call upon to perform specific tasks 🍀 sau đó kêu gọi thực hiện các nhiệm vụ cụ thể
  you've learned how to define a simple 🍀 bạn đã học cách xác định một
  function you learn how to call that 🍀 chức năng bạn học cách gọi đó
  function so that you can execute the 🍀 chức năng để bạn có thể thực hiện
  code inside of it and furthermore you 🍀 mã bên trong nó và hơn nữa bạn
  learned about the variable scope inside 🍀 đã học về phạm vi biến bên trong
  of a function and just to remind you 🍀 của một chức năng và chỉ để nhắc nhở bạn
  about that if you declare variables or 🍀 về điều đó nếu bạn khai báo các biến hoặc
  constants inside the curly brackets of 🍀 hằng số bên trong dấu ngoặc nhọn của
  your function they are only going to be 🍀 chức năng của bạn, họ sẽ chỉ là
  available inside that function now in 🍀 có sẵn bên trong chức năng đó bây giờ trong
  the next lesson we're going to build 🍀 bài học tiếp theo chúng ta sẽ xây dựng
  upon what you've learned here and make 🍀 dựa trên những gì bạn đã học được ở đây và thực hiện
  functions even more powerful 🍀 chức năng thậm chí còn mạnh mẽ hơn
  [Music] 🍀 [Âm nhạc]
  hello welcome to my Swift tutorial for 🍀 xin chào chào mừng đến với hướng dẫn Swift của tôi cho
  beginners series now in the previous 🍀 loạt người mới bắt đầu bây giờ trong phần trước
  lesson you learned about functions what 🍀 bài học bạn đã học về chức năng gì
  they are and how to call them well in 🍀 họ là ai và làm thế nào để gọi họ tốt trong
  this lesson you're going to learn how to 🍀 bài học này bạn sẽ học cách
  use them in an even more powerful way 🍀 sử dụng chúng theo cách thậm chí còn mạnh mẽ hơn
  and that is to have your functions 🍀 và đó là để có chức năng của bạn
  accept data and return data back to you 🍀 chấp nhận dữ liệu và trả lại dữ liệu cho bạn
  when you call them alright stay tuned so 🍀 khi bạn gọi cho họ, hãy theo dõi vì vậy
  in the last lesson we declared this 🍀 trong bài học cuối cùng chúng tôi tuyên bố này
  function here to add two numbers and 🍀 chức năng ở đây để thêm hai số và
  when you call this function it prints 🍀 khi bạn gọi chức năng này, nó sẽ in
  something down in the console however 🍀 một cái gì đó xuống trong bảng điều khiển tuy nhiên
  most of the times or rather sometimes we 🍀 hầu hết thời gian hay đúng hơn là đôi khi chúng ta
  declare a function to take some input 🍀 khai báo một hàm để lấy một số đầu vào
  perform a specific task and then return 🍀 thực hiện một nhiệm vụ cụ thể và sau đó trở lại
  the result to us so the first part of 🍀 kết quả cho chúng tôi vì vậy phần đầu tiên của
  being able to do that is to specify that 🍀 có thể làm điều đó là để xác định rằng
  your function actually returns something 🍀 chức năng của bạn thực sự trả về một cái gì đó
  back to you when you call it and let's 🍀 quay lại với bạn khi bạn gọi nó và chúng ta hãy
  take a look at the syntax for how this 🍀 hãy xem cú pháp để biết cách này
  works so here's the syntax for a 🍀 hoạt động nên đây là cú pháp cho một
  function that returns some data you'll 🍀 chức năng trả về một số dữ liệu bạn sẽ
  notice that we still have the funky word 🍀 lưu ý rằng chúng ta vẫn có từ sôi nổi
  and we still have the function name 🍀 và chúng ta vẫn có tên hàm
  followed by the parentheses but after 🍀 theo sau bởi dấu ngoặc đơn nhưng sau
  that you have a - followed by a greater 🍀 rằng bạn có một - theo sau là một số lớn hơn
  than sign which combines itself to look 🍀 hơn dấu hiệu kết hợp chính nó để tìm
  like an arrow followed by a space and 🍀 giống như một mũi tên theo sau bởi một không gian và
  then the data type of the data that 🍀 thì kiểu dữ liệu của dữ liệu đó
  you're going to return from the function 🍀 bạn sẽ trở về từ chức năng
  so if in our case add two numbers if we 🍀 vì vậy nếu trong trường hợp của chúng tôi thêm hai số nếu chúng tôi
  wanted to return the result to the 🍀 muốn trả lại kết quả cho
  function caller we would probably put 🍀 người gọi chức năng chúng ta có thể sẽ đặt
  int where it says data type right here 🍀 int nơi nó nói kiểu dữ liệu ngay tại đây
  because that is the type of the data 🍀 bởi vì đó là loại dữ liệu
  that we are returning all right so after 🍀 rằng chúng tôi sẽ trở lại tất cả các quyền vì vậy sau
  the data type you have a space and then 🍀 kiểu dữ liệu bạn có một khoảng trắng và sau đó
  you have the curly brackets again and 🍀 bạn lại có dấu ngoặc nhọn và
  you would specify your code now if you 🍀 bạn sẽ chỉ định mã của mình ngay bây giờ nếu bạn
  do specify a return value like this 🍀 làm chỉ định một giá trị trả lại như thế này
  inside your function you must have the 🍀 bên trong chức năng của bạn, bạn phải có
  return keyword and that return keyword 🍀 từ khóa trả về và từ khóa trả về đó
  is used to actually end the function and 🍀 được sử dụng để thực sự kết thúc chức năng và
  return the data back to the color so now 🍀 trả lại dữ liệu về màu nên bây giờ
  let's jump back to our playground and 🍀 hãy quay trở lại sân chơi của chúng ta và
  modifier function to return the data to 🍀 chức năng sửa đổi để trả lại dữ liệu cho
  us all right so we've got our function 🍀 chúng tôi đều ổn vì vậy chúng tôi có chức năng của mình
  up here so we just add a - greater than 🍀 lên đây vì vậy chúng tôi chỉ cần thêm một - lớn hơn
  sign and then we specify space the data 🍀 ký và sau đó chúng tôi chỉ định không gian dữ liệu
  type that does function returns and as 🍀 loại có chức năng trả về và như
  I've said we're working with int so 🍀 Tôi đã nói rằng chúng tôi đang làm việc với int
  I'm going to return an INT so right away 🍀 Tôi sẽ trả lại một INT ngay lập tức
  you can see Xcode detects hey you're 🍀 bạn có thể thấy Xcode phát hiện này, bạn
  saying that this function returns data 🍀 nói rằng chức năng này trả về dữ liệu
  but you're not using the return keyword 🍀 nhưng bạn không sử dụng từ khóa return
  and so we've got this error here 🍀 và vì vậy chúng tôi đã gặp lỗi này ở đây
  so let's modify our function instead of 🍀 vì vậy hãy sửa đổi chức năng của chúng tôi thay vì
  printing C to the console why don't we 🍀 in C ra bàn điều khiển tại sao chúng ta không
  try returning it so we just put return 🍀 hãy thử trả lại nó để chúng tôi chỉ cần trả lại
  space C just like that 🍀 không gian C cứ như vậy
  all right so let's run our function now 🍀 được rồi, vậy hãy chạy chức năng của chúng ta ngay bây giờ
  now nothing gets output into the console 🍀 bây giờ không có gì được xuất vào bảng điều khiển
  where where that C go right well what 🍀 nơi mà C đi đúng tốt những gì
  happens is that when you call a function 🍀 xảy ra là khi bạn gọi một chức năng
  that returns some data like we have in 🍀 trả về một số dữ liệu như chúng ta có trong
  this case you have to capture that data 🍀 trường hợp này bạn phải nắm bắt dữ liệu đó
  somehow 🍀 bằng cách nào đó
  so remember variables and constants are 🍀 vì vậy hãy nhớ biến và hằng là
  used to keep track of data right so all 🍀 được sử dụng để theo dõi dữ liệu, vì vậy tất cả
  we need to do is say let's define a 🍀 chúng ta cần làm là nói hãy xác định một
  constant let's call it sum and we are 🍀 hằng số hãy gọi nó là tổng và chúng ta là
  going to assign to this new constant the 🍀 sẽ gán cho hằng số mới này
  result or the returned data from our 🍀 kết quả hoặc dữ liệu trả về từ chúng tôi
  function add two numbers so let's run 🍀 chức năng thêm hai số vì vậy hãy chạy
  this and see what happens again actually 🍀 điều này và xem những gì thực sự xảy ra một lần nữa
  nothing will happen because we haven't 🍀 sẽ không có gì xảy ra bởi vì chúng ta chưa
  output anything to the console but let 🍀 xuất bất cứ thứ gì ra bàn điều khiển nhưng hãy để
  me write this print statement here so 🍀 tôi viết tuyên bố in này ở đây để
  we're gonna print some and as you can 🍀 chúng tôi sẽ in một số và như bạn có thể
  see there it is in the console so what's 🍀 thấy nó ở trong bảng điều khiển vậy là sao
  happening here well add two numbers 🍀 xảy ra ở đây tốt cộng hai số
  we're calling this function 🍀 chúng tôi đang gọi chức năng này
  it's declaring a B and then declaring C 🍀 nó đang khai báo B và sau đó khai báo C
  and adding a and B assigning it to see 🍀 và thêm a và B gán nó để xem
  and then it's returning C then we're 🍀 và sau đó nó trả về C thì chúng ta
  assigning that result into a new 🍀 gán kết quả đó vào một cái mới
  constant called sum and finally we are 🍀 hằng số được gọi là tổng và cuối cùng chúng ta là
  printing that into the console using 🍀 in nó vào bảng điều khiển bằng cách sử dụng
  this print statement now it's not really 🍀 tuyên bố in này bây giờ nó không thực sự
  interesting that whenever we call this 🍀 thú vị là bất cứ khi nào chúng ta gọi đây là
  function it always just returns three 🍀 hàm nó luôn chỉ trả về ba
  right so would it be cool if we were 🍀 đúng vậy sẽ thật tuyệt nếu chúng ta
  able to tell the function which two 🍀 có thể cho biết chức năng mà hai
  numbers to add and we can do that by 🍀 số để thêm và chúng ta có thể làm điều đó bằng cách
  using input parameters so let's take a 🍀 sử dụng các tham số đầu vào, vì vậy hãy xem
  look at the syntax for that so like I 🍀 nhìn vào cú pháp cho điều đó giống như tôi
  mentioned in the last lesson we specify 🍀 đã đề cập trong bài học trước, chúng tôi chỉ định
  our parameters in between the rounded 🍀 thông số của chúng tôi ở giữa làm tròn
  parentheses now if you take a look at 🍀 dấu ngoặc đơn bây giờ nếu bạn nhìn vào
  the screen you're going to see how we 🍀 màn hình bạn sẽ thấy cách chúng tôi
  specify one parameter 🍀 chỉ định một tham số
  for our function I know that's a lot of 🍀 cho chức năng của chúng tôi, tôi biết đó là rất nhiều
  text but we're going to jump into the 🍀 văn bản nhưng chúng ta sẽ nhảy vào
  playground and I will show you an 🍀 sân chơi và tôi sẽ cho bạn thấy một
  example so you first start with the 🍀 ví dụ để bạn lần đầu tiên bắt đầu với
  datatype let's start from the right hand 🍀 kiểu dữ liệu hãy bắt đầu từ bên tay phải
  and work our way to the left we start 🍀 và làm việc theo cách của chúng tôi bên trái, chúng tôi bắt đầu
  with the data type of the parameter and 🍀 với kiểu dữ liệu của tham số và
  this merely specifies you know if it's 🍀 điều này chỉ xác định bạn biết nếu nó
  an int if it's a bool you know what type 🍀 một int nếu đó là một bool bạn biết loại
  of data are you asking for to be input 🍀 dữ liệu bạn yêu cầu nhập vào
  into your function alright and take note 🍀 vào chức năng của bạn được rồi và lưu ý
  that there is a colon in front of that 🍀 rằng có một dấu hai chấm trước đó
  and then in front of the colon you have 🍀 và sau đó ở phía trước dấu hai chấm bạn có
  your parameter name now you can specify 🍀 tên tham số của bạn bây giờ bạn có thể chỉ định
  any sort of name you want you're going 🍀 bất kỳ loại tên nào bạn muốn bạn sẽ đi
  to be using this parameter name inside 🍀 được sử dụng tên tham số này bên trong
  your function if you want to access that 🍀 chức năng của bạn nếu bạn muốn truy cập vào đó
  data and then you have your argument 🍀 dữ liệu và sau đó bạn có đối số của bạn
  label notice that there is a space in 🍀 nhãn thông báo rằng có một không gian trong
  between the argument label and parameter 🍀 giữa nhãn đối số và tham số
  name now what's the argument label for 🍀 bây giờ đặt tên cho nhãn đối số là gì
  well it's optional and it helps your 🍀 cũng là tùy chọn và nó giúp bạn
  function call read more like natural 🍀 chức năng gọi đọc giống như tự nhiên
  English I'll show you what that means in 🍀 Tôi sẽ chỉ cho bạn điều đó có nghĩa là gì trong
  a second for now why don't we jump back 🍀 một giây bây giờ tại sao chúng ta không quay trở lại
  into the playground and take a look at 🍀 vào sân chơi và nhìn vào
  how we specify this parameter all right 🍀 cách chúng tôi chỉ định tham số này được rồi
  so let's modify our add two numbers 🍀 vì vậy hãy sửa đổi thêm hai số của chúng tôi
  function up here with the parameter and 🍀 chức năng ở đây với tham số và
  before I use descriptive labels argument 🍀 trước khi tôi sử dụng đối số nhãn mô tả
  names and prior names I am going to just 🍀 tên và tên trước tôi sẽ chỉ
  put arg here as our argument label and 🍀 đặt arg ở đây làm nhãn đối số của chúng tôi và
  I'm gonna put space and then I'm gonna 🍀 Tôi sẽ đặt không gian và sau đó tôi sẽ
  call this para for our parameter 🍀 gọi para này cho tham số của chúng tôi
  remember then we specify colon and then 🍀 hãy nhớ sau đó chúng tôi chỉ định dấu hai chấm và sau đó
  the datatype of our parameter which is 🍀 kiểu dữ liệu của tham số của chúng tôi đó là
  going to be int and the reason why I'm 🍀 sẽ là int và lý do tại sao tôi
  just specifying the argument label and 🍀 chỉ xác định nhãn đối số và
  the parameter name as these is because I 🍀 tên tham số như thế này là bởi vì tôi
  want you to see what the resulting 🍀 muốn bạn xem kết quả là gì
  function call looks like so down here 🍀 cuộc gọi chức năng trông giống như vậy ở đây
  you can see Xcode automatically detects 🍀 bạn có thể thấy Xcode tự động phát hiện
  that this function call is no longer 🍀 cuộc gọi chức năng này không còn nữa
  correct in order to call the add two 🍀 đúng để gọi thêm hai
  numbers function you're now going to 🍀 số chức năng bạn đang đi đến
  have to specify that parameter so an 🍀 phải chỉ định tham số đó để một
  easy way to do that is just to delete 🍀 cách dễ dàng để làm điều đó chỉ là để xóa
  this and then use autocomplete again and 🍀 cái này và sau đó sử dụng lại tự động hoàn thành và
  you can see here that now the function 🍀 bạn có thể thấy ở đây bây giờ chức năng
  call has this which tells you the return 🍀 cuộc gọi có cái này cho bạn biết sự trở lại
  type of the function now if the function 🍀 loại chức năng bây giờ nếu chức năng
  doesn't return any data then you're 🍀 không trả lại bất kỳ dữ liệu nào thì bạn
  going to see void in this column instead 🍀 thay vào đó sẽ thấy khoảng trống trong cột này
  kind of like this down here 🍀 đại loại như thế này ở đây
  but our add two numbers function does 🍀 nhưng chức năng cộng hai số của chúng tôi không
  return an end so you see int here and 🍀 trả lại kết thúc để bạn thấy int ở đây và
  then you can see the parameter that it 🍀 sau đó bạn có thể thấy thông số mà nó
  requires right here as well along with 🍀 yêu cầu ngay tại đây cũng như
  the data type all right so let's double 🍀 kiểu dữ liệu ổn, vì vậy hãy nhân đôi
  click that or just press ENTER on that 🍀 nhấp vào đó hoặc chỉ cần nhấn ENTER vào đó
  and you can see that the argument label 🍀 và bạn có thể thấy rằng nhãn đối số
  is right there and then this int here we 🍀 ở ngay đó và sau đó int ở đây chúng tôi
  can put a number in there let's put 5 so 🍀 có thể đặt một số trong đó, hãy đặt 5
  now this is how you would call add two 🍀 bây giờ đây là cách bạn sẽ gọi thêm hai
  numbers with one parameter and you're 🍀 số với một tham số và bạn đang
  basically passing in five into the 🍀 về cơ bản chuyển năm vào
  function from inside of the function 🍀 chức năng từ bên trong chức năng
  let's say that we wanted to assign that 🍀 giả sử rằng chúng tôi muốn chỉ định điều đó
  5 into a we would use the parameter name 🍀 5 thành a chúng ta sẽ sử dụng tên tham số
  we've not using the argument label we're 🍀 chúng tôi không sử dụng nhãn đối số, chúng tôi
  using the parameter name inside the 🍀 sử dụng tên tham số bên trong
  function here so why don't we go print 🍀 chức năng ở đây vậy tại sao chúng ta không đi in
  and the sum should be 7 right as you can 🍀 và tổng phải là 7 ngay khi bạn có thể
  see here now what if we wanted to 🍀 xem ở đây bây giờ nếu chúng ta muốn
  specify another parameter so that we can 🍀 chỉ định một tham số khác để chúng tôi có thể
  also specify what B should be inside of 🍀 cũng chỉ định những gì B nên ở bên trong
  our function well you can specify 🍀 chức năng của chúng tôi tốt, bạn có thể chỉ định
  multiple parameters you would just have 🍀 nhiều thông số bạn sẽ có
  to use comma in between each parameter 🍀 để sử dụng dấu phẩy ở giữa mỗi tham số
  so let's take a look at that syntax now 🍀 vì vậy bây giờ chúng ta hãy xem cú pháp đó
  as you can see you have a comma and then 🍀 như bạn có thể thấy bạn có một dấu phẩy và sau đó
  you have your second argument label then 🍀 bạn có nhãn đối số thứ hai của mình sau đó
  you have your second parameter name and 🍀 bạn có tên tham số thứ hai của bạn và
  then the data type of that second 🍀 thì kiểu dữ liệu của giây đó
  parameter pretty straightforward and you 🍀 tham số khá đơn giản và bạn
  can repeat this for three four five six 🍀 có thể lặp lại điều này trong ba bốn năm sáu
  parameters whatever you need all right 🍀 thông số bất cứ thứ gì bạn cần đều ổn
  now let's jump back to the playground 🍀 bây giờ chúng ta hãy quay trở lại sân chơi
  and specify another parameter for our 🍀 và chỉ định một tham số khác cho chúng tôi
  function so we're gonna go ahead right 🍀 chức năng vì vậy chúng tôi sẽ tiếp tục ngay
  here and hit comma and then now I'm 🍀 ở đây và nhấn dấu phẩy và bây giờ tôi
  going to say Arg 🍀 sẽ nói Arg
  two pair of two and that's going to be 🍀 hai cặp của hai và đó sẽ là
  an int and now I'm going to assign para 🍀 một int và bây giờ tôi sẽ gán para
  two to be and this function call will no 🍀 hai là được và lệnh gọi hàm này sẽ không
  longer be correct so I'm just going to 🍀 lâu hơn là chính xác vì vậy tôi sẽ chỉ
  erase that and retype it like that and 🍀 xóa nó và gõ lại nó như vậy và
  you can see now I have to specify two 🍀 bây giờ bạn có thể thấy tôi phải chỉ định hai
  arguments or parameters so I'm gonna say 🍀 đối số hoặc tham số vì vậy tôi sẽ nói
  five and five and the cool thing is that 🍀 năm và năm và điều thú vị là
  let me just go back there for a second 🍀 hãy để tôi quay lại đó một chút
  is when you let's say you're specifying 🍀 là khi bạn giả sử bạn đang chỉ định
  the parameters you hit five you can 🍀 các thông số bạn nhấn năm bạn có thể
  press tab to jump to the next parameter 🍀 nhấn tab để chuyển sang tham số tiếp theo
  so that's 🍀 vậy đó là
  little shortcut little tip for you there 🍀 phím tắt nhỏ mẹo nhỏ cho bạn ở đó
  all right so let's print the sum and 🍀 được rồi, vậy hãy in tổng và
  we've got ten okay cool so let me show 🍀 chúng tôi có mười cái được rồi, tuyệt lắm, vậy hãy để tôi cho xem
  you some other cool things I did tell 🍀 bạn một số điều tuyệt vời khác tôi đã nói
  you that argument labels were optional 🍀 bạn rằng nhãn đối số là tùy chọn
  right so why don't we go ahead and 🍀 đúng vậy tại sao chúng ta không tiếp tục và
  remove the argument labels here and just 🍀 loại bỏ các nhãn đối số ở đây và chỉ
  have the parameter name and the data 🍀 có tên tham số và dữ liệu
  type so incorrect argument labels so why 🍀 nhập nhãn đối số không chính xác vậy tại sao
  don't we get rid of that and just now 🍀 chúng ta không thoát khỏi điều đó và ngay bây giờ
  when you make your function call you 🍀 khi bạn thực hiện chức năng của mình, hãy gọi cho bạn
  have to specify 🍀 phải chỉ định
  still two parameters right because we 🍀 vẫn đúng hai tham số vì chúng ta
  still have two parameters but with the 🍀 vẫn có hai tham số nhưng với
  absence of the argument label now it 🍀 không có nhãn đối số bây giờ nó
  writes the parameter name so let's go 🍀 viết tên tham số vì vậy hãy đi
  five and five like that right so 🍀 năm và năm như thế đúng vậy
  generally when you're specifying 🍀 nói chung khi bạn chỉ định
  parameters into your function you kind 🍀 tham số vào chức năng của bạn, bạn gõ
  of want to be descriptive with them so 🍀 muốn được mô tả với họ như vậy
  para and para two really doesn't mean 🍀 para và para hai thực sự không có nghĩa là
  anything so why don't we change that to 🍀 bất cứ điều gì vậy tại sao chúng ta không thay đổi điều đó thành
  number one and number two and remember 🍀 số một và số hai và ghi nhớ
  changing these parameter names it means 🍀 thay đổi các tên tham số này có nghĩa là
  that we also have to change this number 🍀 rằng chúng ta cũng phải thay đổi con số này
  one and number two and as a result this 🍀 một và số hai và kết quả là điều này
  also changes 🍀 cũng thay đổi
  remember oops okay so we can specify 🍀 nhớ rất tiếc, được rồi để chúng tôi có thể chỉ định
  five and five so that's all good so far 🍀 năm và năm vậy là tốt cho đến nay
  now that you notice that initially when 🍀 bây giờ bạn nhận thấy rằng ban đầu khi
  we had the argument labels the function 🍀 chúng tôi đã có đối số nhãn chức năng
  call was using the argument labels right 🍀 cuộc gọi đang sử dụng đúng nhãn đối số
  but now that we've removed the argument 🍀 nhưng bây giờ chúng tôi đã loại bỏ đối số
  labels from this function definition 🍀 nhãn từ định nghĩa chức năng này
  this has turned into the parameter name 🍀 cái này đã biến thành tên tham số
  so if you had a need to make this read 🍀 vì vậy nếu bạn có nhu cầu đọc nó
  like more like natural English then you 🍀 thích tiếng anh tự nhiên hơn thì bạn
  could specify argument labels to do it 🍀 có thể chỉ định nhãn đối số để làm điều đó
  like that so for example I would I could 🍀 như vậy ví dụ như tôi sẽ tôi có thể
  say add two numbers and my first 🍀 nói thêm hai số và số đầu tiên của tôi
  argument league label could be using and 🍀 nhãn giải đấu đối số có thể được sử dụng và
  my 🍀 Của tôi
  second argument label can be end and 🍀 nhãn đối số thứ hai có thể kết thúc và
  that would become the function call 🍀 đó sẽ trở thành chức năng gọi
  would be something like that now all 🍀 sẽ là một cái gì đó như thế bây giờ tất cả
  right 🍀 Phải
  add two numbers using five and five so 🍀 thêm hai số sử dụng năm và năm như vậy
  it reads clearly and it's really 🍀 nó đọc rõ ràng và nó thực sự
  understandable and inside your function 🍀 dễ hiểu và bên trong chức năng của bạn
  when you're working with your code you 🍀 khi bạn đang làm việc với mã của mình, bạn
  still reference those parameters with 🍀 vẫn tham chiếu các tham số đó với
  the parameter name that was specified so 🍀 tên tham số đã được chỉ định như vậy
  you have number one and number two now 🍀 bây giờ bạn có số một và số hai
  another trick that you could do if you 🍀 một thủ thuật khác mà bạn có thể làm nếu bạn
  totally want to omit parameter names and 🍀 hoàn toàn muốn bỏ qua tên tham số và
  labels from the function call and you 🍀 nhãn từ lệnh gọi hàm và bạn
  just want to specify five and five then 🍀 chỉ muốn chỉ định năm và năm sau đó
  what you can do is instead of using 🍀 những gì bạn có thể làm là thay vì sử dụng
  argument labels like this you can just 🍀 nhãn đối số như thế này bạn chỉ có thể
  put an underscore in front of your 🍀 đặt một dấu gạch dưới ở phía trước của bạn
  parameter name there is a space in 🍀 tên tham số có một khoảng trắng trong
  between that and your parameter name 🍀 giữa điều đó và tên tham số của bạn
  though so if you specify the underscores 🍀 mặc dù vậy nếu bạn chỉ định dấu gạch dưới
  like that then your function call would 🍀 như thế thì chức năng gọi của bạn sẽ
  look like this whoops not that one 🍀 trông giống cái này, không phải cái kia
  [Applause] 🍀 [Vỗ tay]
  numbers there we go now you just five 🍀 những con số ở đó chúng tôi đi bây giờ bạn chỉ cần năm
  and five and that now becomes your 🍀 và năm và bây giờ trở thành của bạn
  function call 🍀 gọi hàm
  so just to recap you learned about what 🍀 vì vậy chỉ để tóm tắt lại bạn đã học về những gì
  return values are you learned how to use 🍀 giá trị trả về là bạn đã học cách sử dụng
  the return keyword you learned about 🍀 từ khóa trả lại mà bạn đã học về
  what input parameters are and how to 🍀 tham số đầu vào là gì và làm thế nào để
  specify them you learn about parameter 🍀 chỉ định chúng bạn tìm hiểu về tham số
  names and you learned about argument 🍀 tên và bạn đã học về lập luận
  labels and how to omit them altogether 🍀 nhãn và làm thế nào để bỏ qua chúng hoàn toàn
  now I know it still might be confusing 🍀 bây giờ tôi biết nó vẫn có thể gây nhầm lẫn
  in your head and that's why I highly 🍀 trong đầu của bạn và đó là lý do tại sao tôi đánh giá cao
  recommend that you use the exercises and 🍀 khuyên bạn nên sử dụng các bài tập và
  challenges to practice more find all 🍀 thách thức để thực hành nhiều hơn tìm tất cả
  those resources in the link in the 🍀 những tài nguyên đó trong liên kết trong
  description below 🍀 mô tả bên dưới
  hello and welcome to my Swift tutorial 🍀 xin chào và chào mừng đến với hướng dẫn Swift của tôi
  series for beginners in this lesson 🍀 loạt cho người mới bắt đầu trong bài học này
  you're going to be introduced to classes 🍀 bạn sẽ được giới thiệu đến các lớp học
  which is a highly critical part of the 🍀 đó là một phần rất quan trọng của
  Swift programming language now I'm going 🍀 Ngôn ngữ lập trình Swift bây giờ tôi sẽ
  to warn you it's a little bit of an 🍀 để cảnh báo bạn đó là một chút của một
  abstract concept but I'm sure you'll do 🍀 khái niệm trừu tượng nhưng tôi chắc chắn bạn sẽ làm được
  fine alright let's get started 🍀 tốt thôi, chúng ta hãy bắt đầu
  so in this playground here I have 🍀 vì vậy trong sân chơi này ở đây tôi có
  several pieces of information I've got 🍀 một số thông tin tôi đã có
  three variables actually two of them are 🍀 ba biến thực sự hai trong số chúng là
  strings one of them is an int datatype 🍀 chuỗi một trong số chúng là kiểu dữ liệu int
  remember back in lesson 2 of this series 🍀 nhớ lại trong bài học 2 của loạt bài này
  I talked to you about several common 🍀 Tôi đã nói chuyện với bạn về một số điểm chung
  data types and I just mentioned in a 🍀 các loại dữ liệu và tôi vừa đề cập trong một
  brief like one second sentence that you 🍀 ngắn gọn như một câu thứ hai mà bạn
  can create your own data types well now 🍀 bây giờ có thể tạo các loại dữ liệu của riêng bạn
  we've arrived at that point and what 🍀 chúng tôi đã đến thời điểm đó và những gì
  we're going to talk about our classes 🍀 chúng ta sẽ nói về các lớp học của chúng ta
  and you can think of it as a way to 🍀 và bạn có thể nghĩ về nó như một cách để
  organize your information now I know we 🍀 sắp xếp thông tin của bạn bây giờ tôi biết chúng tôi
  talked about functions and that was a 🍀 đã nói về các chức năng và đó là một
  way to kind of group pieces of code 🍀 cách để nhóm các đoạn mã
  together well when you think about 🍀 cùng nhau tốt khi bạn nghĩ về
  classes you're moreso thinking about 🍀 các lớp học mà bạn đang nghĩ đến
  information so for example in this 🍀 thông tin như vậy ví dụ trong này
  scenario I have a name I have a salary 🍀 kịch bản tôi có tên tôi có lương
  and I have a role well you can see where 🍀 và tôi có một vai trò tốt, bạn có thể thấy ở đâu
  this is going 🍀 Điều này sẽ xảy ra
  all of these different variables or 🍀 tất cả các biến khác nhau này hoặc
  pieces of information have to do with a 🍀 mẩu thông tin phải làm với một
  person or an employee or something like 🍀 người hoặc một nhân viên hoặc một cái gì đó như
  that so what we can do is we can group 🍀 vì vậy những gì chúng ta có thể làm là chúng ta có thể nhóm
  this information together into our own 🍀 thông tin này với nhau thành của chúng ta
  new data type called employee and in 🍀 kiểu dữ liệu mới được gọi là nhân viên và trong
  order to do that we define a new class 🍀 để làm điều đó, chúng tôi xác định một lớp mới
  called employee let's take a look at the 🍀 được gọi là nhân viên chúng ta hãy nhìn vào
  syntax involved so you start with the 🍀 cú pháp liên quan để bạn bắt đầu với
  class keyword followed by a space and 🍀 từ khóa lớp theo sau là một khoảng trắng và
  then your class name in this case we 🍀 sau đó tên lớp của bạn trong trường hợp này chúng tôi
  would call it employee followed by space 🍀 sẽ gọi nó là nhân viên theo sau là không gian
  and then you have a pair of curly 🍀 và sau đó bạn có một cặp xoăn
  brackets inside your curly brackets is 🍀 dấu ngoặc bên trong dấu ngoặc nhọn của bạn là
  where you would define your class let's 🍀 nơi bạn sẽ xác định lớp học của mình, hãy
  jump back to the playground and define 🍀 nhảy trở lại sân chơi và xác định
  our employee class so you start with the 🍀 lớp nhân viên của chúng tôi để bạn bắt đầu với
  class keyword followed by space and then 🍀 từ khóa lớp theo sau là khoảng trắng và sau đó
  employee followed by space and then we 🍀 nhân viên theo sau bởi không gian và sau đó chúng tôi
  have our set of curly brackets so in 🍀 có bộ dấu ngoặc nhọn của chúng tôi, vì vậy trong
  between those curly brackets you would 🍀 giữa những dấu ngoặc nhọn đó bạn sẽ
  put all of the pieces of information 🍀 đặt tất cả các mẩu thông tin
  that an employee would have so why don't 🍀 mà một nhân viên sẽ có vậy tại sao không
  we take this information up here I'm 🍀 chúng tôi đưa thông tin này lên đây tôi
  going to cut it and I'm going to paste 🍀 tôi sẽ cắt nó và tôi sẽ dán
  it inside of our employee class but one 🍀 nó bên trong lớp nhân viên của chúng tôi nhưng một
  thing to keep in mind is that you're not 🍀 điều cần ghi nhớ là bạn không
  defining the 🍀 xác định
  information for a single employee 🍀 thông tin của một nhân viên
  because remember we are creating a new 🍀 bởi vì hãy nhớ rằng chúng tôi đang tạo một cái mới
  data type here called employee so this 🍀 kiểu dữ liệu ở đây được gọi là nhân viên vì vậy điều này
  is a general definition that you can use 🍀 là một định nghĩa chung mà bạn có thể sử dụng
  over and over again instead you're 🍀 lặp đi lặp lại thay vì bạn
  specifying what sort of information 🍀 chỉ định loại thông tin nào
  every employee should have so we don't 🍀 mỗi nhân viên nên có vì vậy chúng tôi không
  fill out the specifics now we just say 🍀 điền vào các chi tiết cụ thể bây giờ chúng tôi chỉ cần nói
  that an employee data type should have a 🍀 rằng một kiểu dữ liệu nhân viên nên có một
  name it should have a salary we could 🍀 tên nó nên có một mức lương chúng ta có thể
  start it at zero and fill it in later 🍀 bắt đầu từ số 0 và điền vào sau
  and let's say for role it should be a 🍀 và giả sử đối với vai trò đó phải là một
  string type as well and by just 🍀 loại chuỗi là tốt và chỉ bằng
  specifying two quotes with nothing in 🍀 chỉ định hai trích dẫn không có gì trong
  between them it's just an empty string 🍀 giữa chúng nó chỉ là một chuỗi rỗng
  so just like that you've defined your 🍀 vì vậy giống như bạn đã xác định
  new class which is essentially a new 🍀 lớp mới về cơ bản là một lớp mới
  data type 🍀 loại dữ liệu
  it's called employee and every single 🍀 nó được gọi là nhân viên và mọi người
  employee is going to have a name a 🍀 nhân viên sẽ có một cái tên a
  salary and a role now here's the part 🍀 tiền lương và một vai trò bây giờ đây là một phần
  that is going to get really tricky and 🍀 điều đó sẽ trở nên thực sự phức tạp và
  you really have to wrap your head around 🍀 bạn thực sự phải quấn lấy đầu mình
  that and that is that your class that 🍀 đó và đó là lớp học của bạn
  you've defined right here is kind of 🍀 bạn đã xác định ngay tại đây là loại
  like a template so now that we've 🍀 giống như một mẫu để bây giờ chúng tôi đã
  defined this class how do we use it well 🍀 đã định nghĩa lớp này làm thế nào để chúng ta sử dụng nó tốt
  let me show you some examples with some 🍀 để tôi chỉ cho bạn một số ví dụ với một số
  previous data types that we've worked 🍀 các kiểu dữ liệu trước đây mà chúng tôi đã làm việc
  with before first so let's say we have a 🍀 với trước tiên, vì vậy hãy nói rằng chúng ta có một
  equals 10 and let's say we have B equals 🍀 bằng 10 và giả sử chúng ta có B bằng
  Ted and that will suffice so what's 🍀 Ted và điều đó sẽ đủ vậy thì sao
  happening here with this line 🍀 xảy ra ở đây với dòng này
  essentially we are creating a piece of 🍀 về cơ bản chúng tôi đang tạo ra một phần của
  data 10 right it's going to be stored in 🍀 dữ liệu 10 ngay, nó sẽ được lưu trữ trong
  memory and then we're creating a 🍀 bộ nhớ và sau đó chúng tôi đang tạo ra một
  constant called a to keep track of that 🍀 hằng số được gọi là a để theo dõi điều đó
  data in memory same thing happening 🍀 dữ liệu trong bộ nhớ điều tương tự xảy ra
  right here Ted is a piece of string data 🍀 ngay tại đây Ted là một đoạn dữ liệu chuỗi
  that we are creating in memory and then 🍀 mà chúng ta đang tạo trong bộ nhớ và sau đó
  we are creating a constant called B to 🍀 chúng tôi đang tạo một hằng số gọi là B để
  keep track of that data in memory now 🍀 theo dõi dữ liệu đó trong bộ nhớ ngay bây giờ
  the same concept applies here with our 🍀 cùng một khái niệm áp dụng ở đây với của chúng tôi
  new data type we're going to create a 🍀 kiểu dữ liệu mới chúng ta sẽ tạo một
  new employee in memory and then we are 🍀 nhân viên mới trong bộ nhớ và sau đó chúng tôi
  going to create a variable or constant 🍀 sẽ tạo một biến hoặc hằng số
  called C let's say to keep track of that 🍀 được gọi là C, hãy nói để theo dõi điều đó
  employee in memory so let me show you 🍀 nhân viên trong bộ nhớ vì vậy hãy để tôi chỉ cho bạn
  how to create a new employee in memory 🍀 cách tạo nhân viên mới trong bộ nhớ
  well all you have to do is write the 🍀 tất cả những gì bạn phải làm là viết
  class name followed by two parentheses 🍀 tên lớp theo sau bởi hai dấu ngoặc đơn
  like that and by writing this statement 🍀 như thế và bằng cách viết tuyên bố này
  here we are creating a new employee data 🍀 ở đây chúng tôi đang tạo một dữ liệu nhân viên mới
  in memory so why don't we create a new 🍀 trong bộ nhớ vậy tại sao chúng ta không tạo một cái mới
  constant and assign it to that constant 🍀 hằng số và gán nó cho hằng số đó
  now this employee data that you've 🍀 bây giờ dữ liệu nhân viên này mà bạn đã
  created in memory is called an object 🍀 được tạo trong bộ nhớ được gọi là một đối tượng
  also known as an instance of the class 🍀 còn được gọi là một thể hiện của lớp
  in this case that is an instance of the 🍀 trong trường hợp này đó là một ví dụ của
  employee class so let me show you just 🍀 lớp nhân viên vì vậy hãy để tôi chỉ cho bạn
  to drive home that this is your own 🍀 lái xe về nhà rằng đây là của riêng bạn
  custom type when you create a constant a 🍀 loại tùy chỉnh khi bạn tạo một hằng a
  that would be like that you know you're 🍀 điều đó sẽ giống như bạn biết bạn là
  defining the data type of the constant 🍀 xác định kiểu dữ liệu của hằng
  right and this would be that now a and B 🍀 đúng và đây sẽ là bây giờ a và B
  are really simple data types 🍀 là những kiểu dữ liệu thực sự đơn giản
  right integer and string however C is 🍀 số nguyên và chuỗi bên phải tuy nhiên C là
  your custom type right it's employee and 🍀 loại tùy chỉnh của bạn đúng là nhân viên và
  inside contains this sort of data here 🍀 bên trong chứa loại dữ liệu này ở đây
  and right now it's all it's set to these 🍀 và ngay bây giờ, tất cả được đặt thành những thứ này
  default values which you have specified 🍀 giá trị mặc định mà bạn đã chỉ định
  but we can actually access that data 🍀 nhưng chúng tôi thực sự có thể truy cập dữ liệu đó
  inside of the employee and we can set 🍀 bên trong nhân viên và chúng ta có thể thiết lập
  and we can also get that data and the 🍀 và chúng tôi cũng có thể lấy dữ liệu đó và
  way we do that is using something called 🍀 cách chúng tôi làm điều đó là sử dụng một cái gì đó gọi là
  dot notation so let me show you how it 🍀 ký hiệu dấu chấm vì vậy hãy để tôi chỉ cho bạn cách thực hiện
  works so down here since we've created a 🍀 hoạt động rất tốt ở đây vì chúng tôi đã tạo một
  new employee object and assigned it to C 🍀 đối tượng nhân viên mới và gán nó cho C
  let us change this to var actually 🍀 hãy để chúng tôi thay đổi điều này thành var thực sự
  because we will probably be modifying it 🍀 bởi vì chúng tôi có thể sẽ sửa đổi nó
  so we write C which points to our 🍀 vì vậy chúng tôi viết C trỏ đến của chúng tôi
  employee object and we hit dot on our 🍀 đối tượng nhân viên và chúng tôi nhấn dấu chấm trên
  keyboard and that lets us access all of 🍀 bàn phím và điều đó cho phép chúng tôi truy cập tất cả
  that data inside of the employee class 🍀 dữ liệu đó bên trong lớp nhân viên
  so we have name 🍀 vì vậy chúng tôi có tên
  we have role we have integer so why 🍀 chúng tôi có vai trò chúng tôi có số nguyên vậy tại sao
  don't we set the salary to a thousand or 🍀 chúng ta không đặt mức lương thành một nghìn hay
  first yeah let's do that and then I can 🍀 đầu tiên vâng hãy làm điều đó và sau đó tôi có thể
  show you print C dot salary and you can 🍀 chỉ cho bạn in mức lương C dot và bạn có thể
  see that it says a thousand right there 🍀 thấy rằng nó nói một ngàn ngay tại đó
  I can also set the other pieces of data 🍀 Tôi cũng có thể đặt các phần dữ liệu khác
  like that 🍀 như thế
  you know something like that now another 🍀 bạn biết một cái gì đó như thế bây giờ khác
  cool thing about defining your own data 🍀 điều thú vị về việc xác định dữ liệu của riêng bạn
  type using the class like that is that 🍀 gõ bằng cách sử dụng lớp như thế là
  in addition to specifying what sorts of 🍀 ngoài việc chỉ định những loại
  pieces of data it should have you can 🍀 các mẩu dữ liệu nó nên có bạn có thể
  also define functions in here yes you 🍀 cũng xác định các chức năng ở đây có bạn
  can write F UNC space let's say do work 🍀 có thể viết không gian F UNC giả sử làm việc
  right if you forget this is how you 🍀 đúng nếu bạn quên đây là cách bạn
  define a basic function here and I'm 🍀 xác định một chức năng cơ bản ở đây và tôi
  just gonna print I'm doing work or 🍀 chỉ cần in tôi đang làm việc hoặc
  something like that and then let's say 🍀 một cái gì đó như thế và sau đó hãy nói
  because they are doing work we are going 🍀 bởi vì họ đang làm việc chúng tôi sẽ đi
  to increase his salary by one doing work 🍀 để tăng lương của mình bằng cách làm việc
  gets you noticed by your boss which 🍀 khiến bạn được sếp chú ý
  results could result in a promotion and 🍀 kết quả có thể dẫn đến một chương trình khuyến mãi và
  you would get more salary so that's at 🍀 bạn sẽ nhận được nhiều tiền lương hơn vì vậy đó là lúc
  least my line of thinking right now so 🍀 ít nhất là dòng suy nghĩ của tôi ngay bây giờ vì vậy
  let's say that that's the case how would 🍀 hãy nói rằng đó là trường hợp như thế nào
  I execute this function if I just try to 🍀 Tôi thực hiện chức năng này nếu tôi chỉ cố gắng
  call the function do work like this it's 🍀 gọi hàm làm việc như thế này
  not actually going to be recognized 🍀 không thực sự sẽ được công nhận
  because this function is part of my 🍀 bởi vì chức năng này là một phần của tôi
  employee class I would actually have to 🍀 lớp nhân viên tôi thực sự sẽ phải
  call this function on an object of that 🍀 gọi chức năng này trên một đối tượng của điều đó
  class because I've created an employee 🍀 class vì tôi đã tạo một nhân viên
  object right here and assigned it to see 🍀 đối tượng ngay tại đây và chỉ định nó để xem
  I can actually do C using dot notation 🍀 Tôi thực sự có thể làm C bằng ký hiệu dấu chấm
  now and you can see that I can access 🍀 bây giờ và bạn có thể thấy rằng tôi có thể truy cập
  this function actually why don't we 🍀 chức năng này thực sự tại sao chúng ta không
  change our print statement here and 🍀 thay đổi tuyên bố in của chúng tôi ở đây và
  insert the name let's say but why would 🍀 chèn tên hãy nói nhưng tại sao
  you refer to yourself in the third 🍀 bạn đề cập đến chính mình trong phần ba
  person it's doing work how about hi my 🍀 mọi người, nó đang làm việc, còn bạn thì sao, chào tôi
  name is 🍀 tên là
  and I'm doing work I don't think I'd 🍀 và tôi đang làm việc tôi không nghĩ rằng tôi muốn
  hire someone like this who refers to 🍀 thuê một người như thế này, người đề cập đến
  some themselves like that let's see what 🍀 một số bản thân họ như vậy hãy xem những gì
  happens 🍀 xảy ra
  okay all right 🍀 Ok, mọi chuyện ổn rồi
  it's running all right hi my name is Tom 🍀 nó chạy ổn định xin chào tôi tên là Tom
  and I'm doing work so that's pretty cool 🍀 và tôi đang làm việc nên điều đó thật tuyệt
  now I want to show you something else so 🍀 bây giờ tôi muốn cho bạn thấy một cái gì đó khác
  I'm going to define another employee I'm 🍀 Tôi sẽ định nghĩa một nhân viên khác mà tôi là
  going to create another employee object 🍀 sẽ tạo một đối tượng nhân viên khác
  in memory and I'm gonna set this process 🍀 trong bộ nhớ và tôi sẽ thiết lập quá trình này
  name to Sarah and let's say Sarah is a 🍀 đặt tên cho Sarah và giả sử Sarah là một
  sa manager d dot salary equals do with 🍀 sa quản lý d chấm lương bằng làm với
  that oh this is an integer and I am 🍀 rằng ồ đây là một số nguyên và tôi là
  going to say d dot to do work now you'll 🍀 sẽ nói dấu chấm để làm việc ngay bây giờ bạn sẽ
  notice that C and D are two separate 🍀 lưu ý rằng C và D là hai riêng biệt
  employee objects when I'm modifying the 🍀 đối tượng nhân viên khi tôi đang sửa đổi
  data for D it doesn't affect C and vice 🍀 dữ liệu cho D nó không ảnh hưởng đến C và ngược lại
  versa and when I call the do work 🍀 ngược lại và khi tôi gọi công việc
  function on D it has nothing to do with 🍀 chức năng trên D nó không có gì để làm với
  the do work function for C so that's a 🍀 chức năng làm việc cho C vì vậy đó là một
  basic introduction of how to use classes 🍀 giới thiệu cơ bản về cách sử dụng các lớp
  so one last thing I want to mention is 🍀 vì vậy một điều cuối cùng tôi muốn đề cập là
  that when you declare a function inside 🍀 rằng khi bạn khai báo một hàm bên trong
  of a class it's actually called a method 🍀 của một lớp, nó thực sự được gọi là một phương thức
  of that class and these variables that 🍀 của lớp đó và các biến này
  you're defining inside your class are 🍀 bạn đang xác định bên trong lớp của bạn là
  called properties of that class and also 🍀 được gọi là thuộc tính của lớp đó và cũng
  I want to point one thing out is that 🍀 Tôi muốn chỉ ra một điều rằng
  notice I can access salary from inside 🍀 thông báo tôi có thể truy cập tiền lương từ bên trong
  my function and that is because it's 🍀 chức năng của tôi và đó là bởi vì nó
  declared up here all right so properties 🍀 khai báo lên đây hết rồi nên thuộc tính
  and methods when there are inside 🍀 và các phương thức khi có bên trong
  classes now there's a lot more to 🍀 các lớp bây giờ có nhiều thứ hơn để
  classes but I just wanted to introduce 🍀 các lớp học nhưng tôi chỉ muốn giới thiệu
  them to you in this video I hope you can 🍀 chúng cho bạn trong video này, tôi hy vọng bạn có thể
  see why classes are a fundamental 🍀 xem tại sao các lớp học là một nền tảng
  building block to organizing your 🍀 khối xây dựng để tổ chức của bạn
  information now in the next lesson we're 🍀 thông tin bây giờ trong bài học tiếp theo chúng ta
  going to take classes even further 🍀 sẽ tham gia các lớp học hơn nữa
  hello and welcome to my Swift tutorial 🍀 xin chào và chào mừng đến với hướng dẫn Swift của tôi
  series for beginners in this video 🍀 sê-ri cho người mới bắt đầu trong video này
  you're going to learn about inheritance 🍀 bạn sẽ học về thừa kế
  otherwise known as sub classing which 🍀 còn được gọi là phân lớp phụ mà
  allows you to create a class which 🍀 cho phép bạn tạo một lớp mà
  builds upon or extends from other 🍀 xây dựng trên hoặc mở rộng từ khác
  classes which have already been defined 🍀 các lớp đã được xác định
  now this saves us a lot of time and 🍀 bây giờ điều này giúp chúng tôi tiết kiệm rất nhiều thời gian và
  effort from defining classes that do 🍀 nỗ lực từ việc xác định các lớp làm
  similar things 🍀 Những thứ tương tự
  alright so stay tuned I don't know if 🍀 được rồi vì vậy hãy theo dõi tôi không biết nếu
  you've noticed but now that we've talked 🍀 bạn đã nhận thấy nhưng bây giờ chúng ta đã nói chuyện
  about functions having the ability to 🍀 về các chức năng có khả năng
  organize your code into chunks and then 🍀 sắp xếp mã của bạn thành nhiều phần và sau đó
  classes being able to organize and group 🍀 các lớp có thể tổ chức và nhóm
  variables and functions together in the 🍀 biến và chức năng với nhau trong
  way that makes sense these are all 🍀 cách có ý nghĩa đó là tất cả
  different ways of organizing your code 🍀 các cách khác nhau để tổ chức mã của bạn
  now today's topic sub classing is 🍀 bây giờ phân loại chủ đề hôm nay là
  another way to further organize your 🍀 một cách khác để tiếp tục tổ chức của bạn
  classes so remember what I said about 🍀 các lớp học vì vậy hãy nhớ những gì tôi đã nói về
  duplicated code and how it's a bad 🍀 mã trùng lặp và nó xấu như thế nào
  practice to have duplicate code all over 🍀 thực hành để có mã trùng lặp trên tất cả
  your project because that makes it hard 🍀 dự án của bạn bởi vì điều đó làm cho nó khó khăn
  to maintain and hard to manage hard to 🍀 để duy trì và khó quản lý khó để
  make changes now when I introduce 🍀 thay đổi ngay bây giờ khi tôi giới thiệu
  functions I told you that having 🍀 chức năng tôi đã nói với bạn rằng có
  duplicate code all over your project is 🍀 mã trùng lặp trên tất cả các dự án của bạn là
  a bad practice and it is and functions 🍀 một thực tế xấu và nó là và chức năng
  were a way to address that you can 🍀 là một cách để giải quyết mà bạn có thể
  define a function and then you can call 🍀 xác định một chức năng và sau đó bạn có thể gọi
  it from multiple places when you need to 🍀 nó từ nhiều nơi khi bạn cần
  execute that piece of code classes are 🍀 thực thi đoạn mã đó các lớp là
  the same thing sometimes you might have 🍀 điều tương tự đôi khi bạn có thể có
  to define two classes which are very 🍀 để định nghĩa hai lớp rất
  similar so instead of having two very 🍀 tương tự như vậy thay vì có hai rất
  similar definitions or classes you can 🍀 các định nghĩa hoặc lớp tương tự bạn có thể
  use sub classing and have one cost 🍀 sử dụng phân loại con và có một chi phí
  extend from the other so that's what 🍀 mở rộng từ khác để đó là những gì
  subclassing is all about let's take a 🍀 phân lớp là tất cả về chúng ta hãy lấy một
  look at an example using the playground 🍀 nhìn vào một ví dụ sử dụng sân chơi
  that we had yesterday we had to find an 🍀 mà chúng tôi đã có ngày hôm qua chúng tôi phải tìm một
  employee which had a named salary and a 🍀 nhân viên có một mức lương được đặt tên và một
  role and a method called do work now 🍀 vai trò và một phương thức được gọi là làm việc ngay bây giờ
  remember these are called properties of 🍀 hãy nhớ rằng đây được gọi là thuộc tính của
  the employee class and this is called a 🍀 lớp nhân viên và điều này được gọi là một
  method of the employee class now let's 🍀 phương thức của lớp nhân viên bây giờ chúng ta hãy
  say that I wanted to create another 🍀 nói rằng tôi muốn tạo ra một cái khác
  custom data type called manager right so 🍀 kiểu dữ liệu tùy chỉnh được gọi là người quản lý đúng như vậy
  I would define a manager class like so 🍀 Tôi sẽ định nghĩa một lớp người quản lý như vậy
  right now a manager also has a name 🍀 ngay bây giờ một người quản lý cũng có tên
  right so I can go ahead and define that 🍀 đúng để tôi có thể tiếp tục và xác định điều đó
  managers also have salary and roles and 🍀 các nhà quản lý cũng có tiền lương và vai trò và
  they also have 🍀 Họ cũng có
  they also do work so you know I would 🍀 họ cũng làm việc nên bạn biết tôi sẽ
  just be defining the same thing very 🍀 chỉ cần xác định điều tương tự rất
  close to it all over again now instead 🍀 gần với nó tất cả một lần nữa bây giờ thay vào đó
  of doing that what we can do is have the 🍀 làm điều đó những gì chúng ta có thể làm là có
  manager class be a subclass of the 🍀 lớp quản lý là một lớp con của
  employee class so we can define that or 🍀 lớp nhân viên để chúng tôi có thể xác định điều đó hoặc
  we can do that by putting a colon after 🍀 chúng ta có thể làm điều đó bằng cách đặt dấu hai chấm sau
  manager and we can specify employee and 🍀 quản lý và chúng tôi có thể chỉ định nhân viên và
  that is basically saying that the 🍀 điều đó về cơ bản nói rằng
  manager class inherits or is a subclass 🍀 lớp quản lý kế thừa hoặc là một lớp con
  of the employee class and this also 🍀 của tầng lớp nhân viên và điều này cũng
  means that the manager class 🍀 có nghĩa là lớp quản lý
  automatically inherits all of the 🍀 tự động kế thừa tất cả các
  properties and methods of the employee 🍀 thuộc tính và phương thức của nhân viên
  class so let me demonstrate for you so 🍀 cả lớp vì vậy hãy để tôi chứng minh cho bạn thấy như vậy
  let's say let M equals let's use var M 🍀 giả sử để M bằng hãy sử dụng var M
  equals a new manager object so I've just 🍀 bằng một đối tượng người quản lý mới nên tôi chỉ
  created a new manager piece of data in 🍀 đã tạo một phần dữ liệu quản lý mới trong
  memory and assigned it to M I can say 🍀 bộ nhớ và gán nó cho M Tôi có thể nói
  you can see here Maggie maybe she's got 🍀 bạn có thể thấy ở đây Maggie có lẽ cô ấy có
  a bigger salary role of manager of IT or 🍀 vai trò lương cao hơn của người quản lý CNTT hoặc
  something like that right and M can do 🍀 một cái gì đó như thế đúng và M có thể làm
  work so hi my name is Maggie and I'm 🍀 làm việc vì vậy xin chào, tên tôi là Maggie và tôi là
  doing work now let's say as a manager 🍀 hiện đang làm việc, giả sử với tư cách là người quản lý
  you also want to keep track of the size 🍀 bạn cũng muốn theo dõi kích thước
  of the team that the manager is managing 🍀 của nhóm mà người quản lý đang quản lý
  so for the manager class we could have 🍀 vì vậy đối với lớp người quản lý, chúng ta có thể có
  another property called team size you 🍀 một thuộc tính khác được gọi là quy mô nhóm bạn
  know and we can start that at zero but 🍀 biết và chúng ta có thể bắt đầu từ con số 0 nhưng
  now for my manager object down here in 🍀 bây giờ cho đối tượng người quản lý của tôi ở đây trong
  addition to all of these properties and 🍀 ngoài tất cả các thuộc tính này và
  methods that it inherited from the 🍀 các phương thức mà nó kế thừa từ
  employee class in addition to that it 🍀 lớp nhân viên ngoài ra nó
  also has you know the properties that 🍀 bạn cũng biết các thuộc tính mà
  I've defined inside the manager class so 🍀 Tôi đã định nghĩa bên trong lớp người quản lý để
  I can say the team size is 10 now 🍀 Tôi có thể nói quy mô đội bây giờ là 10 người
  essentially I was able to create a new 🍀 về cơ bản tôi đã có thể tạo một cái mới
  class based off of an old class right 🍀 lớp dựa trên quyền của một lớp cũ
  and add additional functionality to it 🍀 và thêm chức năng bổ sung cho nó
  now you can also modify existing 🍀 bây giờ bạn cũng có thể sửa đổi hiện tại
  function 🍀 chức năng
  so let's say that you know when a 🍀 vì vậy hãy nói rằng bạn biết khi nào
  manager does work it's he or she is not 🍀 người quản lý làm việc đó là anh ấy hoặc cô ấy không
  just doing work he or she is managing 🍀 chỉ làm công việc mình đang quản lý
  people so what we can do if we wanted to 🍀 mọi người vì vậy những gì chúng ta có thể làm nếu chúng ta muốn
  change the definition of do work we can 🍀 thay đổi định nghĩa về công việc chúng ta có thể
  say we can redefine it here after using 🍀 nói rằng chúng ta có thể xác định lại nó ở đây sau khi sử dụng
  this keyword override so I'm gonna 🍀 ghi đè từ khóa này vì vậy tôi sẽ
  override the do work method and I am 🍀 ghi đè phương thức làm việc và tôi
  going to print I'm managing people very 🍀 sắp in tôi đang quản lý mọi người rất
  important right and the salary increase 🍀 quyền quan trọng và tăng lương
  Wow it's going to increase by two all 🍀 Wow nó sẽ tăng gấp đôi tất cả
  right so now when I run this if not 🍀 ngay bây giờ khi tôi chạy cái này nếu không
  going to say hi my name is Maggie I'm 🍀 tôi sẽ nói xin chào, tên tôi là Maggie, tôi là
  doing work it's going to take this 🍀 làm việc nó sẽ mất cái này
  overridden function right because M is a 🍀 chức năng bị ghi đè đúng vì M là một
  manager so that's why we get down here 🍀 người quản lý vì vậy đó là lý do tại sao chúng tôi xuống đây
  I'm managing people but did you know 🍀 Tôi đang quản lý mọi người nhưng bạn có biết
  that if you wanted to instead of 🍀 rằng nếu bạn muốn thay vì
  replacing the functionality of that 🍀 thay thế chức năng đó
  inherited do work method you let's say 🍀 kế thừa phương pháp làm việc bạn hãy nói
  you just wanted to increase the 🍀 bạn chỉ muốn tăng
  functionality you want it to add to it 🍀 chức năng bạn muốn nó thêm vào nó
  so what you can do inside here after 🍀 vậy những gì bạn có thể làm bên trong đây sau
  overriding it you can call the do work 🍀 ghi đè nó, bạn có thể gọi do work
  method of the employee cost from here 🍀 phương pháp chi phí nhân viên từ đây
  all you have to do is write super dot 🍀 tất cả những gì bạn phải làm là viết siêu chấm
  and you can access these properties or 🍀 và bạn có thể truy cập các thuộc tính này hoặc
  you can call the do work method so now 🍀 bây giờ bạn có thể gọi phương thức do work
  when I write M do work what it's 🍀 khi tôi viết M làm việc đó là gì
  actually going to do it's it's going to 🍀 thực sự sẽ làm điều đó nó sẽ làm
  execute the do work method definition 🍀 thực thi định nghĩa phương thức do work
  from the employee class and then after 🍀 từ lớp nhân viên và sau đó
  that it's going to do this additional 🍀 rằng nó sẽ làm điều này bổ sung
  code that I've written here so let's run 🍀 mã mà tôi đã viết ở đây vì vậy hãy chạy
  our project and see what that looks like 🍀 dự án của chúng tôi và xem nó trông như thế nào
  you can see hi my name is Maggie and I'm 🍀 bạn có thể thấy xin chào, tên tôi là Maggie và tôi là
  doing work and I'm managing people the 🍀 làm việc và tôi đang quản lý mọi người
  reason why this keyword is called super 🍀 lý do tại sao từ khóa này được gọi là siêu
  is because the class that your sub 🍀 là bởi vì lớp mà phụ của bạn
  classing from is also known as the 🍀 phân loại từ còn được gọi là
  superclass or the parent class so for 🍀 lớp cha hoặc lớp cha vì vậy đối với
  the manager class employee would be the 🍀 nhân viên lớp quản lý sẽ là
  superclass or the parent class and 🍀 lớp cha hoặc lớp cha và
  that's why the keyword is called super 🍀 đó là lý do tại sao từ khóa được gọi là siêu
  alright so in addition 🍀 được rồi ngoài ra
  to being able to redefine the methods of 🍀 để có thể xác định lại các phương pháp của
  the superclass I can also declare new 🍀 siêu lớp tôi cũng có thể khai báo mới
  methods so I can say you know fire 🍀 phương pháp để tôi có thể nói rằng bạn biết lửa
  people 🍀 mọi người
  oops what's going on 🍀 rất tiếc chuyện gì đang xảy ra vậy
  I'm firing people so now I can say m dot 🍀 Tôi đang sa thải mọi người nên bây giờ tôi có thể nói m dot
  fire people but you know if I let's say 🍀 sa thải mọi người nhưng bạn biết đấy nếu tôi nói
  declare a new employee here just to 🍀 khai báo một nhân viên mới ở đây chỉ để
  demonstrate using dot notation on the 🍀 chứng minh bằng cách sử dụng ký hiệu dấu chấm trên
  employee object you can see I only have 🍀 đối tượng nhân viên bạn có thể thấy tôi chỉ có
  those things which have been defined in 🍀 những thứ đã được định nghĩa trong
  the employee class so that's how 🍀 lớp nhân viên vì vậy đó là cách
  powerful sub classing can be it can 🍀 phân loại phụ mạnh mẽ có thể là nó có thể
  really save you a lot of work you're not 🍀 thực sự giúp bạn tiết kiệm rất nhiều công việc mà bạn không
  gonna have to redefine two different 🍀 sẽ phải xác định lại hai khác nhau
  things that are very similar what we've 🍀 những thứ rất giống với những gì chúng ta đã
  got right here is actually one level of 🍀 có ngay đây thực sự là một cấp độ của
  sub classing or one level of inheritance 🍀 phân lớp phụ hoặc một cấp độ kế thừa
  but it can actually go much deeper than 🍀 nhưng nó thực sự có thể đi sâu hơn nhiều so với
  that for example an employee is also a 🍀 ví dụ như một nhân viên cũng là một
  person right and all people have names 🍀 người đúng và tất cả mọi người có tên
  so I could for example declare another 🍀 vì vậy tôi có thể khai báo một ví dụ khác
  class up here which contains the name 🍀 lớp lên đây có chứa tên
  property right because all people will 🍀 quyền sở hữu bởi vì tất cả mọi người sẽ
  have a name and you know so then inside 🍀 có một cái tên và bạn biết vậy thì bên trong
  the employee class I wouldn't have to 🍀 lớp nhân viên tôi sẽ không phải
  define that and instead I can go that 🍀 xác định điều đó và thay vào đó tôi có thể đi đó
  the employee is a subclass of person 🍀 nhân viên là một lớp con của người
  right so you can build these hierarchies 🍀 đúng để bạn có thể xây dựng các hệ thống phân cấp này
  in these trees and it's really a way of 🍀 trong những cái cây này và đó thực sự là một cách
  organizing your data and your 🍀 tổ chức dữ liệu của bạn và của bạn
  information now inside of your classes 🍀 thông tin bây giờ bên trong các lớp học của bạn
  you're organizing your properties and 🍀 bạn đang tổ chức tài sản của bạn và
  your functions so now you can see 🍀 các chức năng của bạn để bây giờ bạn có thể thấy
  holistically how all of these things are 🍀 một cách tổng thể tất cả những điều này là như thế nào
  starting to come together variables 🍀 bắt đầu kết hợp các biến
  functions and classes okay so this was a 🍀 chức năng và lớp học ổn vì vậy đây là một
  simplified example of sub classing but 🍀 ví dụ đơn giản về phân lớp nhưng
  it's essentially how it works and it's 🍀 về cơ bản nó hoạt động như thế nào và nó
  very predominant in the Swift 🍀 rất chiếm ưu thế trong Swift
  programming language as you're going to 🍀 ngôn ngữ lập trình như bạn sẽ
  see in the next lesson as you can see 🍀 xem trong bài học tiếp theo như bạn có thể thấy
  sub classing helps you save a lot of 🍀 phân loại phụ giúp bạn tiết kiệm rất nhiều
  time by 🍀 thời gian bằng
  allowing you to define your new classes 🍀 cho phép bạn xác định các lớp mới của mình
  based on what already exists and then 🍀 dựa trên những gì đã tồn tại và sau đó
  improving upon that or customizing it a 🍀 cải thiện điều đó hoặc tùy chỉnh nó
  little bit without having to redefine 🍀 một chút mà không cần phải xác định lại
  everything all over again hello and 🍀 tất cả mọi thứ một lần nữa xin chào và
  welcome to my Swift tutorial for 🍀 chào mừng đến với hướng dẫn Swift của tôi cho
  beginners in this video I want to 🍀 người mới bắt đầu trong video này tôi muốn
  introduce you to UI kit which is an 🍀 giới thiệu với bạn bộ giao diện người dùng là một
  apple framework that contains a lot of 🍀 khuôn khổ apple có chứa rất nhiều
  the classes we're going to need in order 🍀 các lớp chúng ta sẽ cần theo thứ tự
  to construct iOS apps all right so let's 🍀 để xây dựng các ứng dụng iOS được rồi, vì vậy hãy
  dive in and see what's available in UI 🍀 đi sâu vào và xem những gì có sẵn trong giao diện người dùng
  kit so if you imagine most apps there 🍀 kit vì vậy nếu bạn tưởng tượng hầu hết các ứng dụng ở đó
  are common elements between all of them 🍀 là những yếu tố chung giữa tất cả chúng
  such as labels buttons maybe text fields 🍀 chẳng hạn như nút nhãn có thể trường văn bản
  images and if we were to build each of 🍀 hình ảnh và nếu chúng ta xây dựng từng hình ảnh
  these components from scratch every 🍀 những thành phần này từ đầu mỗi
  single time we've built an app it would 🍀 một lần chúng tôi đã xây dựng một ứng dụng, nó sẽ
  be very time consuming and a lot of 🍀 rất tốn thời gian và rất nhiều
  wasted effort and so Apple has provided 🍀 nỗ lực lãng phí và vì vậy Apple đã cung cấp
  us a library of all these pre-built 🍀 cho chúng tôi một thư viện gồm tất cả những thứ được tạo sẵn này
  elements that we can use in our apps and 🍀 các yếu tố mà chúng tôi có thể sử dụng trong các ứng dụng của mình và
  they've called this library UI kit 🍀 họ đã gọi bộ giao diện người dùng thư viện này
  that's what we're here to discuss now UI 🍀 đó là những gì chúng tôi đang ở đây để thảo luận bây giờ UI
  kit contains a lot of user interface 🍀 kit chứa rất nhiều giao diện người dùng
  elements and I know it strays a little 🍀 các yếu tố và tôi biết nó đi lạc một chút
  bit away from Swift programming which is 🍀 cách xa lập trình Swift một chút
  what this series is about but one of the 🍀 loạt bài này nói về cái gì ngoài một trong những
  very interesting things about UI kit 🍀 những điều rất thú vị về bộ giao diện người dùng
  which is relevant to what we've been 🍀 có liên quan đến những gì chúng tôi đã được
  talking about is how they use 🍀 nói về cách họ sử dụng
  inheritance and sub classing to create 🍀 thừa kế và phân lớp để tạo
  all of these different UI kid classes so 🍀 tất cả các lớp trẻ em giao diện người dùng khác nhau này
  I'm gonna go through that with you as 🍀 Tôi sẽ trải qua điều đó với bạn như
  well but first let's take a look at 🍀 tốt nhưng trước tiên chúng ta hãy xem
  where you can see the documentation for 🍀 nơi bạn có thể xem tài liệu cho
  UI kit so if you just type into google 🍀 Bộ giao diện người dùng vì vậy nếu bạn chỉ cần gõ vào google
  apple space UI kit into a search it 🍀 bộ giao diện người dùng không gian của apple vào tìm kiếm nó
  should be the first result when you 🍀 phải là kết quả đầu tiên khi bạn
  click on that you're going to get to the 🍀 bấm vào đó bạn sẽ đến
  reference page or the documentation page 🍀 trang tham khảo hoặc trang tài liệu
  for that and then you scroll down and 🍀 cho điều đó và sau đó bạn cuộn xuống và
  you can see all of the different things 🍀 bạn có thể thấy tất cả những thứ khác nhau
  in UI kit you can see it doesn't just 🍀 trong bộ giao diện người dùng, bạn có thể thấy nó không chỉ
  contain user interface elements but it 🍀 chứa các phần tử giao diện người dùng nhưng nó
  contains other things like classes for 🍀 chứa những thứ khác như các lớp cho
  animation touches gestures dragging job 🍀 hoạt hình chạm cử chỉ kéo công việc
  and stuff like that another really handy 🍀 và những thứ tương tự khác thực sự tiện dụng
  way to explore UI kit which I recommend 🍀 cách khám phá bộ giao diện người dùng mà tôi khuyên dùng
  even more is just to open up Xcode if 🍀 thậm chí nhiều hơn chỉ là để mở Xcode nếu
  you go under window you should see 🍀 bạn đi dưới cửa sổ bạn sẽ thấy
  developer documentation and that's what 🍀 tài liệu dành cho nhà phát triển và đó là những gì
  you want to click and bring up on the 🍀 bạn muốn nhấp và đưa lên trên
  left hand side under Swift you're going 🍀 bên tay trái dưới Swift bạn đang đi
  to find UI kit near the top and it's 🍀 để tìm bộ giao diện người dùng ở gần trên cùng và đó là
  much easier to browse 🍀 dễ duyệt hơn nhiều
  this like that one of the things that 🍀 cái này giống cái kia một trong những thứ mà
  they have removed is kind of a hierarchy 🍀 họ đã loại bỏ là một loại phân cấp
  that shows you how each of the classes 🍀 cho bạn thấy mỗi lớp học như thế nào
  are subclasses of other classes above it 🍀 là các lớp con của các lớp khác trên nó
  and so I wanted to pull up that diagram 🍀 và vì vậy tôi muốn kéo sơ đồ đó lên
  for you to illustrate how they're using 🍀 để bạn minh họa cách họ đang sử dụng
  inheritance and sub classing and so I 🍀 thừa kế và phân lớp và vì vậy tôi
  googled it and I found an old image from 🍀 googled nó và tôi tìm thấy một hình ảnh cũ từ
  back then 🍀 trở lại sau đó
  that shows you how each of the elements 🍀 cho bạn thấy làm thế nào mỗi yếu tố
  derived from other elements and all the 🍀 có nguồn gốc từ các yếu tố khác và tất cả các
  way here on the right hand side you're 🍀 đường ở đây phía bên tay phải bạn
  going to see this UI button here and 🍀 sẽ thấy nút giao diện người dùng này ở đây và
  this is your classic or standard iOS 🍀 đây là iOS cổ điển hoặc tiêu chuẩn của bạn
  button that you would put in your view 🍀 nút mà bạn sẽ đặt trong chế độ xem của mình
  but notice if you follow the lines that 🍀 nhưng chú ý nếu bạn làm theo các dòng mà
  it's a subclass of UI control which is a 🍀 đó là một lớp con của điều khiển giao diện người dùng, đó là một
  subclass of UI view which is a subclass 🍀 lớp con của chế độ xem giao diện người dùng là lớp con
  of UI responder which is ultimately a 🍀 của bộ phản hồi giao diện người dùng mà cuối cùng là một
  subclass of nsobject so it's very 🍀 lớp con của nsobject vì vậy nó rất
  interesting to see if you are curious 🍀 thú vị để xem nếu bạn tò mò
  about what any of these classes do you 🍀 về những gì bất kỳ của các lớp này làm bạn
  can go into this documentation which I 🍀 có thể đi vào tài liệu này mà tôi
  showed you here let's say we go under 🍀 cho bạn thấy ở đây hãy nói rằng chúng tôi đi theo
  button great you can see the declaration 🍀 nút tuyệt vời bạn có thể thấy tuyên bố
  here class UI button that it's 🍀 đây là nút giao diện người dùng lớp
  subclasses from UI controls just like we 🍀 các lớp con từ các điều khiển giao diện người dùng giống như chúng ta
  saw over there in that hierarchy but if 🍀 đã thấy ở đó trong hệ thống phân cấp đó nhưng nếu
  you click that UI control it's gonna 🍀 bạn nhấp vào điều khiển giao diện người dùng đó, nó sẽ
  bring you to that class and you can read 🍀 đưa bạn đến lớp học đó và bạn có thể đọc
  about it as you can see it's the base 🍀 về nó như bạn có thể thấy đó là cơ sở
  class for controls which are visual 🍀 lớp cho các điều khiển trực quan
  elements that convey specific action and 🍀 các yếu tố truyền đạt hành động cụ thể và
  response to user interactions pretty 🍀 phản ứng với tương tác của người dùng khá
  cool but down here you can see that UI 🍀 tuyệt nhưng ở đây bạn có thể thấy giao diện người dùng đó
  control is actually a subclass of UI 🍀 kiểm soát thực sự là một lớp con của giao diện người dùng
  view so we click on UI view and see what 🍀 chế độ xem để chúng tôi nhấp vào chế độ xem giao diện người dùng và xem những gì
  that does it is basically something that 🍀 về cơ bản nó là một cái gì đó
  you can put on the screen for the user 🍀 bạn có thể đặt trên màn hình cho người dùng
  to see now UI view is actually a 🍀 để xem bây giờ giao diện người dùng thực sự là một
  subclass of UI responder what's that 🍀 lớp con của bộ phản hồi giao diện người dùng đó là gì
  click into there is an abstract 🍀 nhấp vào đó là một bản tóm tắt
  interface for responding to and handling 🍀 Giao diện phản hồi và xử lý
  events which explains why so many user 🍀 sự kiện giải thích tại sao rất nhiều người dùng
  interface elements are ultimately a 🍀 các yếu tố giao diện cuối cùng là một
  subclass of us responder but UI 🍀 lớp con của chúng tôi phản hồi nhưng giao diện người dùng
  responder itself is a subclass of 🍀 bản thân bộ phản hồi là một lớp con của
  nsobject so what's that click on that 🍀 nsobject vậy click vào đó là gì
  the root class of most objective-c class 🍀 lớp gốc của hầu hết lớp object-c
  hierarchies and we're gonna talk about 🍀 hệ thống phân cấp và chúng ta sẽ nói về
  that in a second why that says Objective 🍀 rằng trong một giây tại sao điều đó nói Mục tiêu
  C from which sub classes inherit a basic 🍀 C mà từ đó các lớp con kế thừa một cơ sở
  interface to the runtime system 🍀 giao diện với hệ thống thời gian chạy
  and the ability to behave as objects so 🍀 và khả năng cư xử như những đối tượng như vậy
  it's basically what makes an object tick 🍀 về cơ bản đó là thứ làm cho một đối tượng được đánh dấu
  if you will and the reason it says 🍀 nếu bạn muốn và lý do nó nói
  Objective C is that originally before 🍀 Mục tiêu C là ban đầu trước đây
  Swift the language to build apps was 🍀 Swift ngôn ngữ để xây dựng ứng dụng là
  Objective C so a lot of UI kit is 🍀 Mục tiêu C nên rất nhiều bộ giao diện người dùng là
  actually still written in Objective C 🍀 thực sự vẫn được viết trong Mục tiêu C
  with Swift being a layer on top where 🍀 với Swift là một lớp trên cùng nơi
  you can use these classes as Swift one 🍀 bạn có thể sử dụng các lớp này như Swift một
  of the dead giveaways is this NS prefix 🍀 trong số những quà tặng đã chết là tiền tố NS này
  in front of the class name usually when 🍀 trước tên lớp thường khi
  you see that you can expect that that is 🍀 bạn thấy rằng bạn có thể mong đợi rằng đó là
  an objective-c class however whether 🍀 một lớp khách quan-c tuy nhiên liệu
  that's objective-c or Swift that's not 🍀 đó là mục tiêu-c hoặc Swift thì không
  what I wanted to point out to you in 🍀 những gì tôi muốn chỉ ra cho bạn trong
  this lesson right here what I wanted to 🍀 bài học này ngay tại đây những gì tôi muốn
  show you was eight how Apple has created 🍀 cho bạn thấy bạn tám tuổi như thế nào Apple đã tạo ra
  this whole UI kit library from all of 🍀 toàn bộ thư viện bộ giao diện người dùng này từ tất cả
  this inheritance and sub classing and 🍀 thừa kế và phân lớp này và
  that's really cool to see how they 🍀 điều đó thực sự tuyệt vời để xem cách họ
  organized all of the different pieces 🍀 tổ chức tất cả các phần khác nhau
  there and then B to let you know that 🍀 ở đó và sau đó B để cho bạn biết rằng
  there is this UI kit library at your 🍀 có thư viện bộ giao diện người dùng này tại
  disposal with so many pre-built 🍀 xử lý với rất nhiều tiền được xây dựng
  components that you can use to build 🍀 các thành phần mà bạn có thể sử dụng để xây dựng
  your app now once you finish the Swift 🍀 ứng dụng của bạn ngay bây giờ sau khi bạn hoàn thành Swift
  programming series and you move on to 🍀 loạt chương trình và bạn chuyển sang
  learning about Xcode and building user 🍀 tìm hiểu về Xcode và xây dựng người dùng
  interfaces and stuff like that all of 🍀 giao diện và những thứ như thế tất cả
  these classes are going to come in handy 🍀 những lớp học này sẽ có ích
  all right so at this point that's all 🍀 được rồi vì vậy tại thời điểm này đó là tất cả
  you need to know about the UI kit 🍀 bạn cần biết về bộ giao diện người dùng
  library I'll see you guys in the next 🍀 thư viện tôi sẽ gặp lại các bạn trong phần tiếp theo
  lesson hello and welcome to my Swift 🍀 bài học xin chào và chào mừng đến với Swift của tôi
  tutorial series for beginners in this 🍀 loạt hướng dẫn cho người mới bắt đầu trong này
  video I want to talk to you about 🍀 video tôi muốn nói chuyện với bạn về
  initializer methods for classes these 🍀 các phương thức khởi tạo cho các lớp này
  guys exist to make sure that when you 🍀 kẻ tồn tại để đảm bảo rằng khi bạn
  create a new object of your class that 🍀 tạo một đối tượng mới của lớp học của bạn
  that object is ready to go plus you can 🍀 đối tượng đó đã sẵn sàng để đi cộng với bạn có thể
  customize these initializer methods to 🍀 tùy chỉnh các phương thức khởi tạo này để
  set up your object in any way that you 🍀 thiết lập đối tượng của bạn theo bất kỳ cách nào mà bạn
  want when you create a new object from 🍀 muốn khi bạn tạo một đối tượng mới từ
  your class all right so let's get 🍀 lớp học của bạn ổn, vì vậy hãy bắt đầu
  started and see what that all means so 🍀 bắt đầu và xem tất cả những gì có nghĩa là như vậy
  what I've got here on the screen is the 🍀 những gì tôi có ở đây trên màn hình là
  playground that we created back in the 🍀 sân chơi mà chúng tôi đã tạo lại trong
  classes part two lesson when we're 🍀 lớp học phần hai bài học khi chúng tôi
  talking about sub classing just to 🍀 nói về phân lớp chỉ để
  remind you we have a person class and 🍀 nhắc nhở bạn rằng chúng tôi có một lớp người và
  then we have an employee class which is 🍀 sau đó chúng ta có một lớp nhân viên đó là
  a subclass of that person class and then 🍀 một lớp con của lớp người đó và sau đó
  we have a manager class which is a 🍀 chúng tôi có một lớp người quản lý là một
  subclass of the employee class 🍀 lớp con của lớp nhân viên
  so now that I've jogged your memory 🍀 vì vậy bây giờ tôi đã chạy bộ nhớ của bạn
  about what we have here why don't we 🍀 về những gì chúng ta có ở đây tại sao chúng ta không
  create a new person object do you 🍀 tạo một đối tượng người mới phải không
  remember how to do that first of all you 🍀 hãy nhớ làm thế nào để làm điều đó trước hết bạn
  use the class name followed by two 🍀 sử dụng tên lớp theo sau là hai
  around in parentheses right let me show 🍀 xung quanh trong ngoặc đơn phải cho tôi hiển thị
  you let's do it here person two rounded 🍀 bạn hãy làm điều đó ở đây người hai hiệp
  parentheses and just like that we've 🍀 dấu ngoặc đơn và cứ như thế chúng ta có
  created a new person object well what 🍀 tạo ra một đối tượng người mới tốt những gì
  you might notice is that this kind of 🍀 bạn có thể nhận thấy rằng đây là loại
  looks like a function call right 🍀 trông giống như một cuộc gọi chức năng phải không
  remember to call a function you write 🍀 nhớ gọi một chức năng bạn viết
  the function name followed by two 🍀 tên chức năng theo sau bởi hai
  rounded parentheses and in any input 🍀 dấu ngoặc tròn và trong bất kỳ đầu vào nào
  parameters in between those parentheses 🍀 tham số ở giữa các dấu ngoặc đơn
  in this case right here a person with 🍀 trong trường hợp này ngay tại đây một người với
  these two around in parentheses you 🍀 hai cái này xung quanh trong ngoặc đơn bạn
  actually are calling a function of that 🍀 thực sự đang gọi một chức năng của điều đó
  class now I know that might seem weird 🍀 lớp bây giờ tôi biết điều đó có vẻ kỳ lạ
  because if you scroll up to the top here 🍀 bởi vì nếu bạn cuộn lên trên cùng ở đây
  we don't have any functions that cleared 🍀 chúng tôi không có bất kỳ chức năng nào bị xóa
  in the person class right well there's 🍀 trong lớp người đúng là có
  actually a initializer function that is 🍀 thực sự là một chức năng khởi tạo đó là
  default to all classes that you don't 🍀 mặc định cho tất cả các lớp mà bạn không
  have to declare and let me show you what 🍀 phải khai báo và để tôi chỉ cho bạn những gì
  it looks like because you can explicitly 🍀 có vẻ như bởi vì bạn có thể rõ ràng
  declare it so if we were to explicitly 🍀 tuyên bố nó như vậy nếu chúng ta rõ ràng
  declare the initializer function of the 🍀 khai báo hàm khởi tạo của
  person class it would be using the 🍀 lớp người nó sẽ được sử dụng
  keyword in it followed by two rounded 🍀 từ khóa trong đó theo sau là hai dấu tròn
  brackets followed by these curly 🍀 dấu ngoặc theo sau bởi những xoăn
  brackets and you can put any sort of 🍀 dấu ngoặc và bạn có thể đặt bất kỳ loại nào
  initialization code you can here let's 🍀 mã khởi tạo bạn có thể ở đây hãy
  say custom init code also notice that 🍀 nói mã init tùy chỉnh cũng nhận thấy rằng
  for this special initializer function 🍀 cho chức năng khởi tạo đặc biệt này
  you do not need the F UNC keyword that 🍀 bạn không cần từ khóa F UNC
  we normally use to declare functions 🍀 chúng ta thường sử dụng để khai báo các chức năng
  this is an initializer function so let's 🍀 đây là một chức năng khởi tạo, vì vậy hãy
  say for example I put in here that I 🍀 nói ví dụ tôi đặt ở đây mà tôi
  want the name property to be Joe right 🍀 muốn thuộc tính name là Joe đúng không
  and now if I create a new personal 🍀 và bây giờ nếu tôi tạo một cá nhân mới
  object I say let my person equals new 🍀 đối tượng tôi nói hãy để người của tôi bằng mới
  person object what's actually happening 🍀 người phản đối những gì đang thực sự xảy ra
  here when I call this it is creating a 🍀 ở đây khi tôi gọi nó là tạo ra một
  new personal objective but it's using 🍀 mục tiêu cá nhân mới nhưng nó đang sử dụng
  this init function here right and it's 🍀 chức năng init này ở đây ngay và nó
  actually setting this it's running this 🍀 thực sự cài đặt cái này nó đang chạy cái này
  custom code so to prove it to you why 🍀 mã tùy chỉnh để chứng minh cho bạn lý do tại sao
  don't we 🍀 chúng ta không
  print out the name right after creating 🍀 in tên ra ngay sau khi tạo
  that object so you can see here it says 🍀 đối tượng đó để bạn có thể thấy ở đây nó nói
  Joe as the name now the initializer 🍀 Joe là tên bây giờ là trình khởi tạo
  function is useful for you to put any 🍀 chức năng hữu ích cho bạn để đặt bất kỳ
  custom code you want in there to setup 🍀 mã tùy chỉnh bạn muốn trong đó để thiết lập
  the object if you don't specify an init 🍀 đối tượng nếu bạn không chỉ định init
  function at all like what we had before 🍀 hoạt động hoàn toàn giống như những gì chúng ta đã có trước đây
  then it's still there you can still 🍀 sau đó nó vẫn ở đó bạn vẫn có thể
  create new objects from that class and 🍀 tạo các đối tượng mới từ lớp đó và
  that's actually what the purpose of the 🍀 đó thực sự là mục đích của
  initializer function is for it's to set 🍀 chức năng khởi tạo là để thiết lập
  up a new object of that class you know 🍀 lên một đối tượng mới của lớp đó bạn biết
  allocated memory do whatever it needs to 🍀 bộ nhớ được cấp phát làm bất cứ điều gì nó cần
  do to return that object to you ready to 🍀 làm gì để trả lại đối tượng đó cho bạn để sẵn sàng
  use now here's the interesting thing 🍀 sử dụng ngay đây là điều thú vị
  about initializer functions so we can 🍀 về các hàm khởi tạo để chúng ta có thể
  have our basic one but we can also have 🍀 có cái cơ bản của chúng tôi nhưng chúng tôi cũng có thể có
  different ones which accept parameters 🍀 những cái khác nhau chấp nhận tham số
  for example let me show you this week an 🍀 ví dụ để tôi chỉ cho bạn tuần này một
  acceptable name let's make it a string 🍀 tên chấp nhận được hãy biến nó thành một chuỗi
  like that and then we can also have our 🍀 như thế và sau đó chúng ta cũng có thể có
  basic one that we had before like that 🍀 cái cơ bản mà chúng ta đã có trước đây như thế
  so we can have multiple initializer 🍀 vì vậy chúng ta có thể có nhiều trình khởi tạo
  functions let's go back down here now I 🍀 các chức năng hãy quay lại đây ngay bây giờ tôi
  can create a person object with the 🍀 có thể tạo một đối tượng người với
  basic initializer function which doesn't 🍀 chức năng khởi tạo cơ bản không
  do anything and when I run this code it 🍀 làm bất cứ điều gì và khi tôi chạy mã này nó
  doesn't print anything out because I 🍀 không in bất cứ thứ gì ra vì tôi
  haven't written anything in that init 🍀 chưa viết gì trong init đó
  function however don't forget that I 🍀 chức năng tuy nhiên đừng quên rằng tôi
  created another one which accepts a name 🍀 đã tạo một cái khác chấp nhận một cái tên
  so this time I can put in a name like 🍀 vì vậy lần này tôi có thể đặt một cái tên như
  that and if I print it not doing 🍀 điều đó và nếu tôi in nó không hoạt động
  anything right now did I oh did I do it 🍀 bất cứ điều gì ngay bây giờ tôi đã làm điều đó
  yeah my bad I didn't do anything in here 🍀 vâng lỗi của tôi tôi đã không làm bất cứ điều gì ở đây
  so now what I wanted to do inside this 🍀 vì vậy bây giờ những gì tôi muốn làm bên trong này
  initializer function was to set the name 🍀 chức năng khởi tạo là đặt tên
  property to the name input parameter 🍀 thuộc tính cho tham số đầu vào tên
  that got passed in here now I could 🍀 đã được thông qua ở đây bây giờ tôi có thể
  write something like this where I'm 🍀 viết một cái gì đó như thế này nơi tôi
  trying to set this property right to the 🍀 cố gắng đặt quyền thuộc tính này thành
  name that gets passed in but as you can 🍀 tên được thông qua nhưng như bạn có thể
  see it's a little bit ambiguous Xcode is 🍀 thấy nó hơi mơ hồ Xcode là
  telling you that there's an error but 🍀 nói với bạn rằng có lỗi nhưng
  it's not recognizing that I'm trying to 🍀 nó không nhận ra rằng tôi đang cố gắng
  set this property it thinks I'm trying 🍀 đặt thuộc tính này, nó nghĩ rằng tôi đang cố gắng
  to set this parameter 🍀 để thiết lập thông số này
  to that parameter so what you can do in 🍀 với tham số đó để bạn có thể làm gì trong
  this case to resolve this ambiguity is 🍀 trường hợp này để giải quyết sự mơ hồ này là
  to use the self keyword so you can write 🍀 sử dụng từ khóa self để bạn có thể viết
  something like that self dot name and 🍀 một cái gì đó giống như tên tự chấm đó và
  when you do this this is referring to 🍀 khi bạn làm điều này, điều này đề cập đến
  that object's name so this is basically 🍀 tên của đối tượng đó vì vậy về cơ bản đây là
  referring to this property here and now 🍀 đề cập đến tài sản này ở đây và bây giờ
  this name is from this parameter so it's 🍀 tên này là từ tham số này vì vậy nó
  very clear what you're trying to do here 🍀 rất rõ ràng những gì bạn đang cố gắng làm ở đây
  all right so let's run this code again 🍀 được rồi, vậy hãy chạy lại mã này
  and you can see that this time it prints 🍀 và bạn có thể thấy rằng lần này nó được in
  tom now let me ask you another question 🍀 tom bây giờ hãy để tôi hỏi bạn một câu hỏi khác
  since the employee class subclasses the 🍀 kể từ khi lớp nhân viên phân lớp các
  person class that means that the 🍀 lớp người có nghĩa là
  employee class also inherits all of its 🍀 lớp nhân viên cũng kế thừa tất cả các
  functions from the person class right do 🍀 các chức năng từ lớp người phải làm
  you think that this employee class also 🍀 bạn nghĩ rằng lớp nhân viên này cũng
  has these init functions why don't we 🍀 có các chức năng init này tại sao chúng ta không
  give it a try 🍀 hãy thử một lần
  go back down here let my employee equals 🍀 quay lại đây để nhân viên của tôi bình đẳng
  employee and as you can see the employee 🍀 nhân viên và như bạn có thể thấy nhân viên
  class does have this init function that 🍀 lớp có chức năng init này
  it inherited from the person class so I 🍀 nó được kế thừa từ lớp người nên tôi
  can use this with the employee class as 🍀 có thể sử dụng cái này với lớp nhân viên như
  well so that's pretty cool now I want to 🍀 tốt như vậy là khá mát mẻ bây giờ tôi muốn
  talk about overriding init functions you 🍀 nói về ghi đè chức năng init bạn
  know just like how we talked about right 🍀 biết giống như cách chúng ta nói về đúng
  here where the manager class overrides 🍀 ở đây nơi lớp quản lý ghi đè
  the do work function of the employee 🍀 chức năng làm việc của nhân viên
  class and then it calls superdude work 🍀 class và sau đó nó gọi superdude work
  which is going to execute the employees 🍀 đó là sẽ thực hiện các nhân viên
  do work function as well as you know any 🍀 làm chức năng làm việc cũng như bạn biết bất kỳ
  code down here the same thing applies 🍀 mã xuống đây điều tương tự được áp dụng
  for init functions so let's say that we 🍀 đối với các chức năng init, vì vậy hãy nói rằng chúng tôi
  have in the person class we have this 🍀 có trong lớp người chúng ta có cái này
  init function right where you pass in a 🍀 init ngay tại nơi bạn chuyển vào một
  name let's say for the employee class I 🍀 tên hãy nói cho loại nhân viên tôi
  wanted to do something extra I wanted to 🍀 muốn làm một cái gì đó thêm tôi muốn
  override in it 🍀 ghi đè lên nó
  so we're gonna override the same 🍀 vì vậy chúng ta sẽ ghi đè giống nhau
  function from the person class you know 🍀 chức năng từ lớp người mà bạn biết
  we're overriding this guy right here I 🍀 chúng tôi đang ghi đè anh chàng này ngay tại đây tôi
  also want to initialize the role so I'm 🍀 cũng muốn khởi tạo vai trò nên tôi
  gonna do self role let's default 🍀 sẽ tự đóng vai trò của mình, hãy để mặc định
  everyone to analyst or something like 🍀 mọi người để phân tích hoặc một cái gì đó như
  that 🍀 cái đó
  all right everyone starts off at the 🍀 được rồi mọi người bắt đầu tại
  analyst level however what I can do is 🍀 cấp độ phân tích tuy nhiên những gì tôi có thể làm là
  call this person's or sorry and I call 🍀 gọi cho người này hoặc xin lỗi và tôi gọi
  the super classes init function and pass 🍀 chức năng init siêu hạng và vượt qua
  the name into there so this this is 🍀 tên vào đó vì vậy đây là
  calling and the init function of the 🍀 gọi và chức năng init của
  person class this is additional init 🍀 lớp người này là init bổ sung
  code all right so now by calling this an 🍀 mã được rồi vì vậy bây giờ bằng cách gọi đây là
  it where I pass in the name of the 🍀 nó nơi tôi vượt qua trong tên của
  employee like if I print my employee dot 🍀 nhân viên thích nếu tôi in dấu chấm nhân viên của tôi
  role and my employee dot name so you can 🍀 vai trò và tên nhân viên của tôi để bạn có thể
  see that it's set to analyst and it's 🍀 thấy rằng nó được đặt thành nhà phân tích và nó
  set to Jo here so what I wanted to 🍀 đặt thành Jo ở đây vì vậy những gì tôi muốn
  demonstrate here was that even within it 🍀 chứng minh ở đây là ngay cả trong đó
  functions you can use to override 🍀 chức năng bạn có thể sử dụng để ghi đè
  keyword and provide a custom 🍀 từ khóa và cung cấp một tùy chỉnh
  implementation of that initializer 🍀 thực hiện trình khởi tạo đó
  function and then also call the super 🍀 chức năng và sau đó cũng gọi super
  classes implementation as well so I hope 🍀 thực hiện các lớp học là tốt vì vậy tôi hy vọng
  that was clear if it's not just leave a 🍀 điều đó thật rõ ràng nếu nó không chỉ để lại một
  comment below and I'll be happy to 🍀 bình luận bên dưới và tôi sẽ rất vui khi
  clarify things for you 🍀 làm rõ mọi thứ cho bạn
  alright later on we'll dive a little 🍀 được rồi sau này chúng ta sẽ lặn một chút
  deeper into initializer methods and 🍀 tìm hiểu sâu hơn về các phương thức khởi tạo và
  we'll talk about how there are two 🍀 chúng ta sẽ nói về cách có hai
  different types one called designated 🍀 các loại khác nhau được gọi là được chỉ định
  and one called convenience initializers 🍀 và một cái được gọi là bộ khởi tạo tiện lợi
  [Music] 🍀 [Âm nhạc]
  hello and welcome to my Swift tutorial 🍀 xin chào và chào mừng đến với hướng dẫn Swift của tôi
  for beginners in this video I want to 🍀 cho người mới bắt đầu trong video này tôi muốn
  tell you all about optionals which are 🍀 cho bạn biết tất cả về các tùy chọn
  probably one of the most confusing 🍀 có lẽ là một trong những khó hiểu nhất
  topics for beginners if you've ever 🍀 chủ đề cho người mới bắt đầu nếu bạn đã từng
  looked at Swift code and come across 🍀 đã xem mã Swift và bắt gặp
  exclamation marks or question marks then 🍀 dấu chấm than hoặc dấu chấm hỏi sau đó
  you've come across optionals so let's 🍀 bạn đã bắt gặp các tùy chọn, vì vậy hãy
  get started and find out what they're 🍀 bắt đầu và tìm hiểu xem chúng là gì
  all about so to demonstrate what an 🍀 tất cả về như vậy để chứng minh những gì một
  optional is let's first take a look at 🍀 tùy chọn là trước tiên chúng ta hãy xem
  how we've been declaring our variables 🍀 cách chúng tôi đã khai báo các biến của mình
  and constants as we remember whenever we 🍀 và hằng số như chúng ta nhớ bất cứ khi nào chúng ta
  declare a variable we use var and then 🍀 khai báo một biến chúng ta sử dụng var và sau đó
  we use some sort of name let's just say 🍀 chúng tôi sử dụng một số loại tên hãy nói
  a for this example and up until this 🍀 a cho ví dụ này và cho đến này
  point you've always seen me assign 🍀 điểm bạn luôn thấy tôi chỉ định
  something into my variable declaration 🍀 một cái gì đó vào khai báo biến của tôi
  something like this or whether I declare 🍀 một cái gì đó như thế này hoặc cho dù tôi tuyên bố
  you know a string I'm always assigning a 🍀 bạn biết một chuỗi tôi luôn chỉ định một
  piece of data into my variable 🍀 phần dữ liệu vào biến của tôi
  declaration or constant declaration 🍀 khai báo hoặc khai báo hằng
  right away now there will be instances 🍀 ngay bây giờ sẽ có trường hợp
  when you're building apps that you may 🍀 khi bạn đang xây dựng các ứng dụng mà bạn có thể
  not want to assign data to your variable 🍀 không muốn gán dữ liệu cho biến của bạn
  right away you might just want to 🍀 ngay lập tức bạn có thể chỉ muốn
  declare it but if we try to do that 🍀 tuyên bố nó nhưng nếu chúng ta cố gắng làm điều đó
  let's erase this assignment statement 🍀 hãy xóa câu lệnh gán này
  and you erase the data as well and just 🍀 và bạn cũng xóa dữ liệu và chỉ
  leave it at that you'll see that Xcode 🍀 để nó ở đó bạn sẽ thấy Xcode đó
  really doesn't like that and that's 🍀 thực sự không thích điều đó và đó là
  because it wants to make sure that all 🍀 bởi vì nó muốn đảm bảo rằng tất cả
  of your variables and constants actually 🍀 các biến và hằng số của bạn thực sự
  are keeping track of some sort of data 🍀 đang theo dõi một số loại dữ liệu
  because that's the purpose of their 🍀 bởi vì đó là mục đích của họ
  variable and the constant right well 🍀 biến và hằng đúng
  using optionals you can create a 🍀 sử dụng các tùy chọn, bạn có thể tạo một
  situation where you declare a variable 🍀 tình huống mà bạn khai báo một biến
  or a concept without assigning something 🍀 hoặc một khái niệm mà không gán một cái gì đó
  to it first 🍀 với nó đầu tiên
  in which case it is empty so how do you 🍀 trong trường hợp đó nó trống vậy làm thế nào để bạn
  define emptiness well there's actually a 🍀 định nghĩa rõ ràng về sự trống rỗng, thực sự có một
  type for empty and it's called nil and 🍀 gõ cho trống và nó được gọi là nil và
  it's simply a keyword like that and il 🍀 nó chỉ đơn giản là một từ khóa như thế và il
  which stands for empty or nothing now if 🍀 viết tắt của trống rỗng hoặc không có gì bây giờ nếu
  we don't want to assign actual data to 🍀 chúng tôi không muốn gán dữ liệu thực tế cho
  our variable first we can assign it nil 🍀 biến của chúng tôi trước tiên chúng tôi có thể gán nó nil
  like that right and that means that that 🍀 như vậy đúng và điều đó có nghĩa là
  variable can 🍀 biến có thể
  it's nothing however as you can see 🍀 nó không có gì tuy nhiên như bạn có thể thấy
  we're still having some problems here 🍀 chúng tôi vẫn đang gặp một số vấn đề ở đây
  remember I told you about data types for 🍀 hãy nhớ rằng tôi đã nói với bạn về các loại dữ liệu cho
  variables and how variables can only 🍀 biến và cách biến chỉ có thể
  store data of a certain data type and 🍀 lưu trữ dữ liệu của một loại dữ liệu nhất định và
  you can explicitly state the data type 🍀 bạn có thể nêu rõ kiểu dữ liệu
  of that variable and if you don't then 🍀 của biến đó và nếu bạn không thì
  it's going to take on the data type of 🍀 nó sẽ lấy kiểu dữ liệu của
  the first piece of data that you assign 🍀 phần dữ liệu đầu tiên mà bạn chỉ định
  to it so for example for a if I did that 🍀 với nó, ví dụ như nếu tôi đã làm điều đó
  then it would take the data type of my 🍀 thì nó sẽ lấy kiểu dữ liệu của tôi
  integer and it would determine that a 🍀 số nguyên và nó sẽ xác định rằng một
  should have the data type of int in the 🍀 nên có kiểu dữ liệu của int trong
  case of nil however there is no data 🍀 trường hợp nil tuy nhiên không có dữ liệu
  type for empty and so variable a really 🍀 gõ cho trống và vì vậy biến a thực sự
  doesn't have a data type right now and 🍀 không có kiểu dữ liệu ngay bây giờ và
  we have to give our variable a data type 🍀 chúng ta phải cung cấp cho biến của mình một kiểu dữ liệu
  so in this case if you're going to 🍀 vì vậy trong trường hợp này nếu bạn định
  assign empty into your variable that 🍀 gán trống vào biến của bạn
  means you don't want to put any data 🍀 có nghĩa là bạn không muốn đặt bất kỳ dữ liệu nào
  into it yet we have to explicitly put a 🍀 vào nó nhưng chúng ta phải đặt một cách rõ ràng
  data type now let's go ahead and put int 🍀 kiểu dữ liệu bây giờ hãy tiếp tục và đặt int
  right and for this one let's put string 🍀 đúng và đối với cái này, hãy đặt chuỗi
  like that let's run it as you can see 🍀 như vậy hãy chạy nó như bạn có thể thấy
  there is still a problem because the int 🍀 vẫn còn một vấn đề vì int
  data type doesn't include empty in fact 🍀 kiểu dữ liệu không bao gồm trống trên thực tế
  none of the data types include mil as a 🍀 không có loại dữ liệu nào bao gồm mil dưới dạng
  valid value they nil is not a valid 🍀 giá trị hợp lệ họ không là không hợp lệ
  integer and nil is also not a valid 🍀 số nguyên và nil cũng không hợp lệ
  string so that's why we can't assign nil 🍀 chuỗi vì vậy đó là lý do tại sao chúng ta không thể gán nil
  to an integer variable and we can't 🍀 thành một biến số nguyên và chúng ta không thể
  assign nil to a string variable well 🍀 gán nil cho một biến chuỗi tốt
  this is where optionals come in by 🍀 đây là nơi các tùy chọn xuất hiện
  adding a question mark to the data type 🍀 thêm dấu chấm hỏi vào kiểu dữ liệu
  like this this becomes an optional 🍀 như thế này điều này trở thành một tùy chọn
  integer which means that it could either 🍀 số nguyên có nghĩa là nó có thể
  be an integer or it could be nil same 🍀 là một số nguyên hoặc nó có thể là nil giống nhau
  thing goes for this right here the data 🍀 mọi thứ diễn ra ngay tại đây dữ liệu
  type is now it's not string it's an 🍀 loại bây giờ nó không phải là chuỗi nó là một
  optional string which means that it 🍀 chuỗi tùy chọn có nghĩa là nó
  could contain a string object or it 🍀 có thể chứa một đối tượng chuỗi hoặc nó
  might contain no so that's the gist of 🍀 có thể chứa không vì vậy đó là ý chính của
  an optional in order to demonstrate how 🍀 một tùy chọn để chứng minh làm thế nào
  to work with optionals 🍀 để làm việc với các tùy chọn
  I'm going to use another example so let 🍀 Tôi sẽ sử dụng một ví dụ khác vì vậy hãy để
  me delete this for now and then let me 🍀 em xóa cái này đi rồi để em
  grab a piece of code that I prepared for 🍀 lấy một đoạn mã mà tôi đã chuẩn bị cho
  you let me just run the project here 🍀 bạn để tôi chạy dự án ở đây
  make sure that it runs as you can see 🍀 đảm bảo rằng nó chạy như bạn có thể thấy
  here I have a class called Christmas 🍀 ở đây tôi có một lớp tên là Christmas
  present and this class contains a 🍀 hiện tại và lớp này chứa một
  function called surprise which returns 🍀 hàm được gọi là bất ngờ trả về
  an integer now this integer is going to 🍀 một số nguyên bây giờ số nguyên này sẽ
  be a random number from 1 to 10 so why 🍀 là một số ngẫu nhiên từ 1 đến 10 vậy tại sao
  don't we just use this code here let's 🍀 chúng ta không chỉ sử dụng mã này ở đây thôi
  use let present equals let's create a 🍀 sử dụng hãy để hiện tại bằng hãy tạo một
  new Christmas present object using that 🍀 đối tượng quà Giáng sinh mới bằng cách sử dụng đó
  remember initializer functions right and 🍀 nhớ các chức năng khởi tạo đúng và
  then we want to activate the surprise so 🍀 sau đó chúng tôi muốn kích hoạt sự ngạc nhiên vì vậy
  sorry present dot surprise and then 🍀 xin lỗi hiện tại dot bất ngờ và sau đó
  we're going to print the output of that 🍀 chúng ta sẽ in đầu ra của nó
  function so let's run our code and we 🍀 chức năng vì vậy hãy chạy mã của chúng tôi và chúng tôi
  get 5 in our console right here so 🍀 nhận được 5 trong bảng điều khiển của chúng tôi ngay tại đây
  that's the surprise now this data type 🍀 đó là điều ngạc nhiên bây giờ loại dữ liệu này
  of this constant right here if I 🍀 của hằng số này ngay tại đây nếu tôi
  explicitly declare it would be the type 🍀 tuyên bố rõ ràng nó sẽ là loại
  of my class right next why don't we make 🍀 của lớp tôi ngay bên cạnh tại sao chúng ta không làm
  this an optional type by adding the 🍀 đây là một loại tùy chọn bằng cách thêm
  question mark there and then let's say 🍀 dấu chấm hỏi ở đó và sau đó hãy nói
  that we put nil in there you can see 🍀 mà chúng tôi đặt con số không trong đó bạn có thể thấy
  here that there is an error Xcode says 🍀 ở đây có lỗi Xcode nói
  that the value of optional type 🍀 rằng giá trị của loại tùy chọn
  Christmas present must be unwrapped to 🍀 Món quà Giáng sinh phải được mở ra để
  refer to the member think of member as 🍀 đề cập đến các thành viên nghĩ về thành viên như
  function or property must be unwrapped 🍀 chức năng hoặc tài sản phải được mở ra
  to refer to the function surprise right 🍀 để chỉ chức năng bất ngờ phải không
  and the reason for this is because I 🍀 và lý do cho điều này là bởi vì tôi
  told you with an optional datatype this 🍀 nói với bạn với một kiểu dữ liệu tùy chọn này
  constant could contain a Christmas 🍀 hằng số có thể chứa một Giáng sinh
  present object or it could contain nil 🍀 đối tượng hiện tại hoặc nó có thể chứa nil
  and in this case we do know that it 🍀 và trong trường hợp này, chúng tôi biết rằng nó
  contains nil so what that means is that 🍀 chứa nil vì vậy điều đó có nghĩa là
  you have to check that optional constant 🍀 bạn phải kiểm tra hằng số tùy chọn đó
  or optional variable to see if it 🍀 hoặc biến tùy chọn để xem nếu nó
  actually contains 🍀 thực sự chứa
  an object or if it contains nil before 🍀 một đối tượng hoặc nếu nó chứa nil trước
  you access any of its functions or 🍀 bạn truy cập bất kỳ chức năng nào của nó hoặc
  properties because you can't call a 🍀 thuộc tính vì bạn không thể gọi một
  function on empty right you can't access 🍀 chức năng bên phải trống bạn không thể truy cập
  a property of nil so what we have to do 🍀 một tài sản của nil vì vậy những gì chúng ta phải làm
  in this case is just double check that 🍀 trong trường hợp này chỉ cần kiểm tra lại xem
  the constant present actually contains 🍀 hiện tại không đổi thực sự chứa
  an object a Christmas present object to 🍀 một đồ vật một món quà Giáng sinh
  be specific before we call the surprise 🍀 hãy cụ thể trước khi chúng tôi gọi là bất ngờ
  function on it now there are several 🍀 chức năng trên nó bây giờ có một số
  ways of checking an optional type to see 🍀 cách kiểm tra một loại tùy chọn để xem
  if it's nil before using it and I'll 🍀 nếu nó là không trước khi sử dụng nó và tôi sẽ
  demonstrate some of them let me erase 🍀 chứng minh một số trong số họ để tôi xóa
  this line first so we are going to check 🍀 dòng này đầu tiên vì vậy chúng tôi sẽ kiểm tra
  the optional to see if an object exists 🍀 tùy chọn để xem nếu một đối tượng tồn tại
  or if it contains an object let's say it 🍀 hoặc nếu nó chứa một đối tượng, hãy nói nó
  like that so the first thing we can do 🍀 như thế nên điều đầu tiên chúng ta có thể làm
  is basically compare it to nil with an 🍀 về cơ bản là so sánh nó với con số không với một
  if statement so if present is equal to 🍀 câu lệnh if vì vậy nếu hiện tại bằng
  nil if this is true then it contains no 🍀 nil nếu điều này là đúng thì nó không chứa
  so don't do anything with it else it 🍀 vì vậy đừng làm bất cứ điều gì khác với nó
  contains an object right now the reverse 🍀 chứa một đối tượng ngay bây giờ ngược lại
  of this is also true you can check if 🍀 điều này cũng đúng, bạn có thể kiểm tra xem
  present not equal to nil right and if 🍀 hiện tại không bằng không đúng và nếu
  it's not equal to nil then it contains 🍀 nó không bằng 0 thì nó chứa
  an object so why don't we use this 🍀 một đối tượng vậy tại sao chúng ta không sử dụng cái này
  statement here because we want to only 🍀 tuyên bố ở đây bởi vì chúng tôi muốn chỉ
  call the surprised function if there is 🍀 gọi hàm ngạc nhiên nếu có
  an object and we don't really need to do 🍀 một đối tượng và chúng ta không thực sự cần phải làm
  anything with it if it is a nil so why 🍀 bất cứ điều gì với nó nếu nó là một con số không vậy tại sao
  don't we erase this one here and let's 🍀 chúng ta không xóa cái này ở đây và chúng ta hãy
  use this one so it contains an object 🍀 sử dụng cái này để nó chứa một đối tượng
  now call the surprised function now 🍀 bây giờ hãy gọi chức năng ngạc nhiên ngay bây giờ
  since I have already checked that it 🍀 vì tôi đã kiểm tra rằng nó
  contains an object I should be able to 🍀 chứa một đối tượng tôi sẽ có thể
  just call surprise right you'll notice 🍀 chỉ cần gọi bất ngờ ngay bạn sẽ nhận thấy
  that Xcode has helped us put 🍀 Xcode đó đã giúp chúng tôi đặt
  this question mark here because that's 🍀 dấu chấm hỏi này ở đây bởi vì đó là
  what it thinks you want to do but I'm 🍀 những gì nó nghĩ bạn muốn làm nhưng tôi
  going to erase it because I want to 🍀 sẽ xóa nó đi vì tôi muốn
  demonstrate something for you see if I 🍀 chứng minh điều gì đó cho bạn thấy nếu tôi
  try to run this there's an error because 🍀 cố gắng chạy cái này có lỗi vì
  you see with an optional variable or an 🍀 bạn thấy với một biến tùy chọn hoặc một
  optional constant before you can 🍀 hằng số tùy chọn trước khi bạn có thể
  actually access the value inside that 🍀 thực sự truy cập vào giá trị bên trong đó
  optional datatype whether that's a 🍀 kiểu dữ liệu tùy chọn cho dù đó là một
  natural object or whether that's nil you 🍀 đối tượng tự nhiên hoặc cho dù đó là nil bạn
  have to unwrap that optional now I know 🍀 phải mở gói tùy chọn đó bây giờ tôi biết
  that's a weird term but a good analogy 🍀 đó là một thuật ngữ kỳ lạ nhưng một phép loại suy tốt
  or a good metaphor to think about an 🍀 hoặc một phép ẩn dụ tốt để suy nghĩ về một
  optional variable is that it's like a 🍀 biến tùy chọn là nó giống như một
  Christmas present or it's like a box and 🍀 Món quà Giáng sinh hoặc nó giống như một chiếc hộp và
  you don't know what's inside of it it 🍀 bạn không biết những gì bên trong nó
  could actually contain an object or it 🍀 thực sự có thể chứa một đối tượng hoặc nó
  could be nil but you're never going to 🍀 có thể là con số không nhưng bạn sẽ không bao giờ
  know unless you unwrap it first you open 🍀 biết trừ khi bạn mở nó ra trước khi bạn mở
  that box to see what's inside now right 🍀 hộp đó để xem những gì bên trong ngay bây giờ
  here you you might say hey we've already 🍀 ở đây bạn có thể nói này chúng tôi đã
  checked that it's not nil right so this 🍀 đã kiểm tra rằng nó không phải là con số không, vì vậy điều này
  check is kind of like taking that box 🍀 kiểm tra giống như lấy hộp đó
  and just shaking it and listening to it 🍀 và chỉ cần lắc nó và lắng nghe nó
  you know when you're a kid trying to 🍀 bạn biết khi bạn là một đứa trẻ đang cố gắng
  find out what's inside your present 🍀 tìm hiểu những gì bên trong món quà của bạn
  that's what that's like 🍀 đó là những gì nó giống như
  and all that does is that it tells you 🍀 và tất cả những gì làm là nó cho bạn biết
  if there's something inside I mean if 🍀 nếu có một cái gì đó bên trong ý tôi là nếu
  it's nil you're shaking it this it's not 🍀 nó không phải là bạn đang lắc nó đây không phải là
  gonna sound like anything but if there's 🍀 sẽ nghe giống như bất cứ điều gì nhưng nếu có
  an actual object inside and you shake it 🍀 một đối tượng thực tế bên trong và bạn lắc nó
  you'll hear something 🍀 bạn sẽ nghe thấy điều gì đó
  so this check right here lets you know 🍀 vì vậy kiểm tra này ngay tại đây cho bạn biết
  that there is something inside but that 🍀 rằng có một cái gì đó bên trong nhưng đó
  doesn't mean that you can access what's 🍀 không có nghĩa là bạn có thể truy cập những gì
  inside right until you unwrap it so let 🍀 bên phải cho đến khi bạn mở nó ra, vì vậy hãy để
  me show you how you can unwrap that 🍀 tôi chỉ cho bạn cách bạn có thể mở gói đó
  variable and get at the object so that 🍀 biến và lấy đối tượng sao cho
  you can call the surprise function on it 🍀 bạn có thể gọi hàm bất ngờ trên đó
  all you have to do to unwrap this 🍀 tất cả những gì bạn phải làm để mở gói này
  optional variable is use the exclamation 🍀 biến tùy chọn được sử dụng dấu chấm than
  mark after it and what that does is that 🍀 đánh dấu sau nó và những gì nó làm là
  tears open that box and you get 🍀 nước mắt mở hộp đó và bạn nhận được
  whatever's inside whether that is the 🍀 bất cứ điều gì bên trong cho dù đó là
  actual Christmas present object or 🍀 đối tượng quà Giáng sinh thực tế hoặc
  whether that's nil so because we've 🍀 cho dù đó là con số không vì chúng tôi đã
  already checked here that it is an 🍀 đã kiểm tra ở đây rằng nó là một
  object I'm gonna say dot surprise and I 🍀 đối tượng tôi sẽ nói dấu chấm bất ngờ và tôi
  can print that right so let's run the 🍀 có thể in đúng như vậy, hãy chạy
  statement here actually nothing is going 🍀 tuyên bố ở đây thực sự không có gì là đi
  to run do you know why because it's 🍀 để chạy bạn có biết tại sao bởi vì nó
  actually nil 🍀 thực sự không
  right so our if statement actually 🍀 đúng vậy câu lệnh if của chúng ta thực sự
  worked so this if statement said if it's 🍀 đã làm việc như vậy nếu câu lệnh này cho biết nếu đó là
  not nil right then unwrap it and then 🍀 không phải nil ngay sau đó mở nó ra và sau đó
  call the surprise function on it but 🍀 gọi chức năng bất ngờ trên nó nhưng
  since it is nil it didn't do anything so 🍀 vì nó là con số không nên nó không làm gì cả
  why don't we change the statement why 🍀 tại sao chúng ta không thay đổi tuyên bố tại sao
  don't we actually put a present inside 🍀 chúng ta không thực sự đặt một món quà bên trong
  the box so now when we run it we're 🍀 hộp vì vậy bây giờ khi chúng tôi chạy nó, chúng tôi
  going to get the random number surprise 🍀 sẽ nhận được số ngẫu nhiên bất ngờ
  which is 6 so now you know how optionals 🍀 đó là 6 vì vậy bây giờ bạn biết cách tùy chọn
  work but I mentioned there are a couple 🍀 làm việc nhưng tôi đã đề cập có một vài
  of different ways of checking right to 🍀 các cách khác nhau để kiểm tra quyền
  see if there's an object inside of your 🍀 xem nếu có một đối tượng bên trong của bạn
  optional so this is one way another way 🍀 tùy chọn vì vậy đây là một cách khác
  is called optional binding and this is a 🍀 được gọi là ràng buộc tùy chọn và đây là một
  little bit more advanced than that basic 🍀 nâng cao hơn một chút so với cơ bản đó
  check there and it's kind of another way 🍀 kiểm tra ở đó và đó là một cách khác
  of writing an if statement so you say if 🍀 viết một câu lệnh if để bạn nói nếu
  let say actual present equals present 🍀 giả sử hiện tại thực tế bằng hiện tại
  then we will print actual present dot 🍀 sau đó chúng tôi sẽ in dấu chấm hiện tại thực tế
  surprise so let me explain this 🍀 ngạc nhiên vì vậy hãy để tôi giải thích điều này
  statement right here it's still an if 🍀 tuyên bố ngay tại đây nó vẫn là một nếu
  statement so you're checking something 🍀 tuyên bố vì vậy bạn đang kiểm tra một cái gì đó
  you're actually checking to see if 🍀 bạn đang thực sự kiểm tra xem nếu
  present this optional variable to see if 🍀 trình bày biến tùy chọn này để xem nếu
  it's nil or not if it is nil then it's 🍀 nó không hay không nếu nó không thì nó là
  just going to pass through this if 🍀 chỉ đi qua đây nếu
  statement and not execute the stuff 🍀 tuyên bố và không thực hiện các công cụ
  inside however if this optional variable 🍀 bên trong tuy nhiên nếu biến tùy chọn này
  does contain an actual object then it's 🍀 không chứa một đối tượng thực tế thì nó
  going to assign it to this constant that 🍀 sẽ gán nó cho hằng số này
  you're creating right here called actual 🍀 bạn đang tạo ngay tại đây được gọi là thực tế
  present so it's almost like two 🍀 hiện tại vì vậy nó gần giống như hai
  statements in one the if statement 🍀 câu lệnh trong một câu lệnh if
  checks to see if it's nil if it's not 🍀 kiểm tra xem nó có bằng không nếu không
  nil then you're gonna assign the actual 🍀 không thì bạn sẽ chỉ định thực tế
  object unwrapped into actual present 🍀 đối tượng mở ra thành hiện tại thực tế
  this constant and then you can inside 🍀 hằng số này và sau đó bạn có thể vào bên trong
  that if they mean you can use actual 🍀 rằng nếu họ có nghĩa là bạn có thể sử dụng thực tế
  present as the actual object because 🍀 trình bày như đối tượng thực tế bởi vì
  what it will do is that it's going to 🍀 những gì nó sẽ làm là nó sẽ
  take the unwrap object and assign it to 🍀 lấy đối tượng mở ra và gán nó cho
  actual present ok so you don't have to 🍀 hiện tại thực tế ok, do đó bạn không cần phải
  do any unwrapping here 🍀 thực hiện bất kỳ thao tác mở gói nào ở đây
  and you can just call surprise so you'll 🍀 và bạn chỉ có thể gọi bất ngờ vì vậy bạn sẽ
  see six and four four was from here and 🍀 xem sáu và bốn bốn là từ đây và
  six was from here alright last thing to 🍀 sáu là từ đây được rồi điều cuối cùng để
  show you about optionals is another 🍀 chỉ cho bạn về các tùy chọn là một cái khác
  thing called optional chaining now this 🍀 thứ được gọi là chuỗi tùy chọn bây giờ cái này
  is what you saw a little earlier when 🍀 là những gì bạn đã thấy sớm hơn một chút khi
  Xcode tried to put a question mark there 🍀 Xcode đã cố gắng đặt một dấu chấm hỏi ở đó
  so let me show you what that is so you 🍀 vậy hãy để tôi cho bạn thấy đó là gì vậy bạn
  put a question mark next to the optional 🍀 đặt một dấu chấm hỏi bên cạnh tùy chọn
  variable and then you call your method 🍀 biến và sau đó bạn gọi phương thức của mình
  like that 🍀 như thế
  so with optional chaining you can see we 🍀 vì vậy với chuỗi tùy chọn, bạn có thể thấy chúng tôi
  don't have any if statements or anything 🍀 không có bất kỳ câu lệnh if hay bất cứ điều gì
  like that but basically what this does 🍀 như vậy nhưng về cơ bản nó làm gì
  is it checks to see if this is going to 🍀 là nó kiểm tra xem nếu điều này sẽ
  be nil or if it actually is an object if 🍀 là nil hoặc nếu nó thực sự là một đối tượng nếu
  this is nil nothing happens you're not 🍀 điều này là không có gì xảy ra bạn không
  going to call that function however if 🍀 sẽ gọi chức năng đó tuy nhiên nếu
  there is actually an object in there 🍀 thực sự có một đối tượng trong đó
  then it's going to call the next part on 🍀 sau đó nó sẽ gọi phần tiếp theo trên
  that object so in this case it's going 🍀 đối tượng đó vì vậy trong trường hợp này nó sẽ
  to call the surprise function on the 🍀 để gọi chức năng bất ngờ trên
  actual object because there is an object 🍀 đối tượng thực tế bởi vì có một đối tượng
  in that optional so that's what's known 🍀 trong tùy chọn đó, đó là những gì đã biết
  as optional chaining so why do we even 🍀 như chuỗi tùy chọn vậy tại sao chúng ta thậm chí
  have optionals and Swift well the reason 🍀 có tùy chọn và Swift cũng là lý do
  is because Swift is a type safe language 🍀 là bởi vì Swift là một loại ngôn ngữ an toàn
  and what this basically means is that 🍀 và điều này về cơ bản có nghĩa là
  Swift forces you the programmer to be 🍀 Swift buộc bạn phải là lập trình viên
  very specific about the types of data 🍀 rất cụ thể về các loại dữ liệu
  that you're working with in your code 🍀 mà bạn đang làm việc trong mã của bạn
  and in the long run this actually helps 🍀 và về lâu dài điều này thực sự có ích
  you because it forces you to think about 🍀 bạn bởi vì nó buộc bạn phải suy nghĩ về
  things thoroughly such as if this 🍀 mọi thứ kỹ lưỡng như nếu điều này
  variable will need to contain nil or if 🍀 biến sẽ cần chứa nil hoặc nếu
  it's always going to have a value and 🍀 nó sẽ luôn có một giá trị và
  also how we're restricted to a certain 🍀 cũng như cách chúng tôi bị hạn chế ở một số
  datatype for a variable or you're not 🍀 kiểu dữ liệu cho một biến hoặc bạn không
  going to accidentally assign another 🍀 sẽ vô tình chỉ định một cái khác
  datatype to that variable because it is 🍀 kiểu dữ liệu cho biến đó bởi vì nó là
  type safe so I just wanted to revisit 🍀 gõ an toàn vì vậy tôi chỉ muốn xem lại
  some of the ways of declaring our 🍀 một số cách khai báo của chúng tôi
  variables and constants with optionals 🍀 biến và hằng với tùy chọn
  now because there's one thing that I 🍀 bây giờ bởi vì có một điều mà tôi
  haven't shown you yet and that's what 🍀 chưa cho bạn thấy và đó là những gì
  I'm going to show you now so in here 🍀 Tôi sẽ cho bạn thấy bây giờ vì vậy ở đây
  line 3 you see kind of the standard way 🍀 dòng 3 bạn thấy giống như cách tiêu chuẩn
  where we declare a variable with the 🍀 nơi chúng tôi khai báo một biến với
  type and then we assign data to it and 🍀 gõ và sau đó chúng tôi gán dữ liệu cho nó và
  you've also seen about 🍀 bạn cũng đã thấy về
  how you can add the question mark after 🍀 làm thế nào bạn có thể thêm dấu chấm hỏi sau
  the data type to turn that into an 🍀 kiểu dữ liệu để biến nó thành một
  optional type and you can assign nil 🍀 loại tùy chọn và bạn có thể gán nil
  into it well you can also just do this 🍀 vào nó tốt, bạn cũng có thể làm điều này
  and that's absolutely fine because when 🍀 và điều đó hoàn toàn ổn bởi vì khi
  you declare an optional data type like 🍀 bạn khai báo một kiểu dữ liệu tùy chọn như
  this from variable C by default it's 🍀 cái này từ biến C theo mặc định, nó là
  going to be nil so you don't actually 🍀 sẽ là con số không nên bạn không thực sự
  have to explicitly assign nil to it so 🍀 phải gán rõ ràng nil cho nó để
  when you're declaring optionals I would 🍀 khi bạn khai báo các tùy chọn, tôi sẽ
  recommend that you do it this way there 🍀 khuyên bạn nên làm theo cách này
  is also another type of optional that 🍀 cũng là một loại tùy chọn khác mà
  you can declare and that is using the 🍀 bạn có thể khai báo và đó là sử dụng
  exclamation mark now I know in this 🍀 dấu chấm than bây giờ tôi biết trong này
  lesson I showed you that putting an 🍀 bài học tôi đã cho bạn thấy rằng đặt một
  exclamation mark is unwrapping that 🍀 dấu chấm than đang mở ra
  variable or constant to see what's 🍀 biến hoặc hằng số để xem những gì
  inside the optional right well this is 🍀 bên trong quyền tùy chọn, đây là
  called an unwrapped optional so this 🍀 được gọi là một tùy chọn chưa được mở vì vậy điều này
  allows you to D can store a string or 🍀 cho phép bạn D có thể lưu trữ một chuỗi hoặc
  nil but it is already unwrapped so you 🍀 nil nhưng nó đã được mở ra nên bạn
  don't have to unwrap it but it can also 🍀 không cần phải mở nó nhưng nó cũng có thể
  store nil 🍀 cửa hàng không
  C in store a string or nil but it is 🍀 C trong cửa hàng một chuỗi hoặc nil nhưng nó là
  wrapped so you have to unwrap it in 🍀 được bọc nên bạn phải tháo nó ra
  order to see the contents whether it's 🍀 để xem nội dung cho dù đó là
  nil or the actual string so when would 🍀 nil hoặc chuỗi thực tế vậy khi nào
  you want to use this sort of optional 🍀 bạn muốn sử dụng loại tùy chọn này
  vs. this one well I would say in general 🍀 so với cái này thì tôi sẽ nói chung chung
  you would want to use this one because 🍀 bạn sẽ muốn sử dụng cái này bởi vì
  it provides that sort of type safety 🍀 nó cung cấp loại an toàn đó
  checking that Xcode has so when you try 🍀 kiểm tra xem Xcode có như vậy không khi bạn thử
  to use C in some weird way and you're 🍀 sử dụng C theo một cách kỳ lạ nào đó và bạn
  not checking against nil Xcode is gonna 🍀 không kiểm tra lại nil Xcode sẽ
  warn you hey this is an optional so you 🍀 cảnh báo bạn này, đây là tùy chọn nên bạn
  you might have to check for nil before 🍀 bạn có thể phải kiểm tra nil trước
  using it you might not be able to call 🍀 sử dụng nó, bạn có thể không gọi được
  this property or this method on C 🍀 thuộc tính này hoặc phương thức này trên C
  because it might be empty so it provides 🍀 bởi vì nó có thể trống nên nó cung cấp
  you all of those warnings which makes 🍀 bạn tất cả những cảnh báo mà làm cho
  you a better programmer and it makes 🍀 bạn trở thành một lập trình viên giỏi hơn và nó giúp bạn
  your code more robust than it will 🍀 mã của bạn mạnh mẽ hơn nó sẽ
  probably crash less so if you use this 🍀 có lẽ sự cố ít hơn vì vậy nếu bạn sử dụng cái này
  instead you can also store nil or values 🍀 thay vào đó, bạn cũng có thể lưu trữ các giá trị nil hoặc
  in here 🍀 ở đây
  so it gives you that flexibility but 🍀 vì vậy nó mang lại cho bạn sự linh hoạt nhưng
  it's not gonna have any of that type 🍀 nó sẽ không có bất kỳ loại nào
  safety checking so Xcode is just going 🍀 kiểm tra an toàn để Xcode chỉ hoạt động
  to assume that you know what you're 🍀 để cho rằng bạn biết bạn là gì
  doing it's not gonna warn you that it 🍀 làm điều đó sẽ không cảnh báo bạn rằng nó
  might be nil because it's already 🍀 có thể là con số không vì nó đã có rồi
  unwrapped right but just know that deke 🍀 chưa bóc đúng nhưng chỉ biết vậy thôi deke
  may contain nil so it's it's almost like 🍀 có thể chứa nil nên nó gần giống như
  you are driving without a seat belt 🍀 bạn đang lái xe mà không thắt dây an toàn
  maybe that's a bad example but hey 🍀 có lẽ đó là một ví dụ tồi nhưng này
  because there are places where you might 🍀 bởi vì có những nơi mà bạn có thể
  want to use this you know for sure that 🍀 muốn sử dụng cái này bạn biết chắc chắn rằng
  only initially it may be nil but then 🍀 chỉ ban đầu nó có thể là con số không nhưng sau đó
  after a certain point you can always be 🍀 sau một thời điểm nhất định, bạn luôn có thể
  sure that there's a value then maybe 🍀 chắc chắn rằng có một giá trị thì có lẽ
  it's safe to use that and then you can 🍀 nó an toàn để sử dụng và sau đó bạn có thể
  ignore all of that sort of optional 🍀 bỏ qua tất cả các loại tùy chọn đó
  binding optional chaining all of those 🍀 ràng buộc chuỗi tùy chọn tất cả những thứ đó
  checking for nil you can save all of 🍀 kiểm tra con số không, bạn có thể lưu tất cả
  that code however if it's a variable 🍀 tuy nhiên mã đó nếu nó là một biến
  which may contain the value in the nil 🍀 có thể chứa giá trị trong nil
  and then that value might get erased so 🍀 và sau đó giá trị đó có thể bị xóa
  it's nil again and it keeps flipping 🍀 nó lại là con số không và nó tiếp tục lật
  back and forth then maybe having it as 🍀 qua lại sau đó có thể có nó như
  this sort of optional is better because 🍀 loại tùy chọn này là tốt hơn bởi vì
  then it forces you to remember to do 🍀 sau đó nó buộc bạn phải nhớ để làm
  that checking so I just wanted to give 🍀 việc kiểm tra đó vì vậy tôi chỉ muốn đưa ra
  one more quick example about these two 🍀 thêm một ví dụ nhanh về hai điều này
  kinds of optionals using our Christmas 🍀 các loại tùy chọn sử dụng Giáng sinh của chúng tôi
  present class so why don't we declare a 🍀 lớp hiện tại vậy tại sao chúng ta không khai báo một
  new Christmas present like so let's say 🍀 món quà Giáng sinh mới như vậy hãy nói
  present one is equal to well let's 🍀 hiện tại một là bằng tốt chúng ta hãy
  declare the type of this so we're going 🍀 khai báo loại này vì vậy chúng tôi sẽ
  to declare a new Christmas present 🍀 để tuyên bố một món quà Giáng sinh mới
  optional like so and we're going to 🍀 tùy chọn như vậy và chúng tôi sẽ
  assign it nil right and then we're going 🍀 chỉ định nó bằng không và sau đó chúng ta sẽ đi
  to do Christmas present too and we're 🍀 để làm quà Giáng sinh nữa và chúng tôi
  going to use this and remember we don't 🍀 sẽ sử dụng cái này và hãy nhớ rằng chúng ta không
  actually have to assign it to no but I'm 🍀 thực sự phải gán nó cho không nhưng tôi
  going to write it anyways just so it's 🍀 dù sao thì nó cũng sẽ viết nên nó
  very clear to you what's inside these 🍀 rất rõ ràng cho bạn những gì bên trong
  variables right here so if I wanted to 🍀 biến ngay tại đây vì vậy nếu tôi muốn
  let's say do present one dot surprise 🍀 hãy nói làm quà tặng bất ngờ một chấm
  like that let's remove the optional 🍀 như vậy hãy loại bỏ các tùy chọn
  chaining you know we get that sort of 🍀 xâu chuỗi bạn biết chúng tôi nhận được loại đó
  type safety checking it's saying that 🍀 gõ kiểm tra an toàn nó báo thế
  it's an optional it might be nil if it's 🍀 nó là một tùy chọn nó có thể là con số không nếu nó là
  nil then you can't call surprise on it 🍀 không thì bạn không thể gọi bất ngờ về nó
  so make sure you you know you do 🍀 vì vậy hãy chắc chắn rằng bạn biết bạn làm
  sort of checking however if I do present 🍀 loại kiểm tra tuy nhiên nếu tôi trình bày
  to dot surprise you can see that let me 🍀 để chấm bất ngờ bạn có thể thấy rằng hãy để tôi
  just show you can you type it out you 🍀 chỉ cho bạn thấy bạn có thể gõ nó ra bạn
  can see when I do that there's no sort 🍀 có thể thấy khi tôi làm điều đó không có loại
  of there's no optional chaining there 🍀 không có chuỗi tùy chọn ở đó
  there's no you don't have to unwrap it 🍀 không có bạn không cần phải mở nó ra
  at all or anything like that it just 🍀 ở tất cả hoặc bất cứ điều gì như thế nó chỉ
  treats it as an unwrapped optional you 🍀 coi nó như một tùy chọn chưa được mở mà bạn
  can just use it as is and you're not 🍀 chỉ có thể sử dụng nó như hiện tại và bạn không
  going to get any sort of warning so I'm 🍀 sẽ nhận được bất kỳ loại cảnh báo nào vì vậy tôi
  gonna run this but now you get an actual 🍀 sẽ chạy cái này nhưng bây giờ bạn nhận được một thực tế
  app crash so you know if this goes 🍀 sự cố ứng dụng để bạn biết nếu điều này xảy ra
  unchecked and you launch your app and 🍀 bỏ chọn và bạn khởi chạy ứng dụng của mình và
  the user is using it then you're 🍀 người dùng đang sử dụng nó thì bạn
  actually getting gonna get an app crash 🍀 thực sự sẽ nhận được một sự cố ứng dụng
  which is really bad whereas if you did 🍀 điều đó thực sự tồi tệ trong khi nếu bạn đã làm
  it with this sort of optional you know 🍀 nó với loại tùy chọn này bạn biết
  even as you're running it you're gonna 🍀 ngay cả khi bạn đang chạy nó, bạn sẽ
  get a warning from Xcode forcing you to 🍀 nhận được cảnh báo từ Xcode buộc bạn phải
  fix that and address that before 🍀 khắc phục điều đó và giải quyết vấn đề đó trước đây
  actually shipping your app or even 🍀 thực sự vận chuyển ứng dụng của bạn hoặc thậm chí
  allowing you to run your code so like 🍀 cho phép bạn chạy mã của mình giống như
  all the other things we're learning 🍀 tất cả những thứ khác chúng ta đang học
  about Swift we can go deeper there are 🍀 về Swift chúng ta có thể đi sâu hơn
  additional things that you can learn 🍀 những điều bổ sung mà bạn có thể học
  about optionals but this is your 🍀 về các tùy chọn nhưng đây là của bạn
  introduction and I just wanted to tell 🍀 giới thiệu và tôi chỉ muốn nói
  you what they are and a little bit about 🍀 bạn biết họ là ai và một chút về
  how to use them practically speaking 🍀 làm thế nào để sử dụng chúng thực tế nói
  you'll be using them most of the time 🍀 bạn sẽ sử dụng chúng hầu hết thời gian
  like how we covered in this lesson in 🍀 giống như cách chúng ta trình bày trong bài học này trong
  the future will cover more of the 🍀 tương lai sẽ bao gồm nhiều hơn
  complex aspects of optionals also you 🍀 các khía cạnh phức tạp của tùy chọn cũng bạn
  might be wondering why and when we would 🍀 có thể tự hỏi tại sao và khi nào chúng ta sẽ
  use optionals but let me tell you you 🍀 sử dụng tùy chọn nhưng để tôi nói cho bạn biết
  will definitely come across optionals 🍀 chắc chắn sẽ đi qua các tùy chọn
  when you're building apps and when we 🍀 khi bạn đang xây dựng ứng dụng và khi chúng tôi
  get to building our apps together now 🍀 hãy cùng nhau xây dựng các ứng dụng của chúng ta ngay bây giờ
  you'll know what they are and how 🍀 bạn sẽ biết chúng là gì và như thế nào
  they're used because you've watched this 🍀 chúng được sử dụng bởi vì bạn đã xem cái này
  lesson 🍀 bài học
  hello and welcome to my Swift tutorial 🍀 xin chào và chào mừng đến với hướng dẫn Swift của tôi
  beginner series in this video we're 🍀 loạt bài dành cho người mới bắt đầu trong video này, chúng tôi
  going to talk about properties which 🍀 sẽ nói về các thuộc tính mà
  you've been using already ever since we 🍀 bạn đã sử dụng kể từ khi chúng tôi
  introduced them in our classes lesson 🍀 giới thiệu chúng trong bài học lớp học của chúng tôi
  however in this video I'm going to go 🍀 tuy nhiên trong video này tôi sẽ đi
  through some additional things that you 🍀 thông qua một số điều bổ sung mà bạn
  can do with properties all right so 🍀 có thể làm với các thuộc tính đều ổn
  let's get started 🍀 Bắt đầu nào
  so before we start one thing that I 🍀 vì vậy trước khi chúng ta bắt đầu một điều mà tôi
  wanted to point out to you just in case 🍀 muốn chỉ ra cho bạn chỉ trong trường hợp
  you didn't notice is about property 🍀 bạn không để ý là về tài sản
  scope so remember back when we talked 🍀 phạm vi vì vậy hãy nhớ lại khi chúng ta nói chuyện
  about functions and talked about 🍀 về các chức năng và nói về
  variable scope and how if you declare a 🍀 phạm vi biến và làm thế nào nếu bạn khai báo một
  variable inside of a function you're not 🍀 biến bên trong một hàm mà bạn không
  going to be able to access and use that 🍀 sẽ có thể truy cập và sử dụng nó
  variable or constant outside of that 🍀 biến hoặc hằng số bên ngoài đó
  function you can only use it within that 🍀 chức năng bạn chỉ có thể sử dụng nó trong phạm vi đó
  the curly brackets of that function so 🍀 dấu ngoặc nhọn của hàm đó
  each function has its own variable scope 🍀 mỗi hàm có phạm vi biến riêng
  but when you declare a class like we 🍀 nhưng khi bạn khai báo một lớp như chúng ta
  have for example here these properties 🍀 ví dụ ở đây có những thuộc tính này
  that we declare up here they're kind of 🍀 mà chúng tôi tuyên bố ở đây họ là loại
  just like variables that are at the 🍀 giống như các biến ở
  class level so because they are declared 🍀 cấp lớp vì vậy vì chúng được khai báo
  up here at the class level they are 🍀 ở đây ở cấp độ lớp họ
  accessible and usable by any of the 🍀 có thể truy cập và sử dụng được bởi bất kỳ
  functions inside that class so for 🍀 chức năng bên trong lớp đó vì vậy cho
  example here you can see our do work 🍀 ví dụ ở đây bạn có thể thấy công việc của chúng tôi
  function or method sorry if a function 🍀 chức năng hoặc phương pháp xin lỗi nếu một chức năng
  is inside of a class it's called a 🍀 là bên trong của một lớp nó được gọi là một
  method remember so in our do work method 🍀 phương pháp nhớ như vậy trong phương pháp làm việc của chúng tôi
  of the employee class here we can access 🍀 của lớp nhân viên ở đây chúng ta có thể truy cập
  the salary property because it's 🍀 thuộc tính tiền lương vì nó là
  declared up here and if we had more 🍀 khai báo ở đây và nếu chúng ta có nhiều hơn
  methods in this class inside each of 🍀 các phương thức trong lớp này bên trong mỗi
  them we would be able to access the 🍀 chúng tôi sẽ có thể truy cập vào
  salary or the role all right so that's 🍀 tiền lương hoặc vai trò đều ổn, vì vậy đó là
  just one thing I wanted to get out of 🍀 chỉ một điều tôi muốn thoát ra
  the way in case that wasn't clear one 🍀 cách trong trường hợp đó không rõ ràng
  cool thing that I want to talk to you 🍀 điều tuyệt vời mà tôi muốn nói chuyện với bạn
  about declaring these properties up here 🍀 về việc khai báo các thuộc tính này ở đây
  is that aside from them just being 🍀 đó là ngoài việc họ chỉ là
  variables at the class level there are 🍀 các biến ở cấp lớp có
  some unique things that you can do with 🍀 một số điều độc đáo mà bạn có thể làm với
  them for example let's take this manager 🍀 họ chẳng hạn, hãy lấy người quản lý này
  class right here let's say that we 🍀 lớp ngay tại đây hãy nói rằng chúng tôi
  wanted to create a bonus property that 🍀 muốn tạo một tài sản tiền thưởng mà
  would basically determine how much of a 🍀 về cơ bản sẽ xác định bao nhiêu của một
  year-end bonus 🍀 tiền thưởng cuối năm
  this manager would receive as part of 🍀 người quản lý này sẽ nhận được như một phần của
  their compensation so let's create a new 🍀 bồi thường của họ vì vậy hãy tạo một cái mới
  property called bonus however and you 🍀 tài sản được gọi là tiền thưởng tuy nhiên và bạn
  know this is going to be an int type 🍀 biết đây sẽ là một kiểu int
  however the bonus is actually tied to 🍀 tuy nhiên tiền thưởng thực sự gắn liền với
  how many people they manage so you could 🍀 họ quản lý bao nhiêu người để bạn có thể
  do something like this for example maybe 🍀 làm một cái gì đó như thế này chẳng hạn có thể
  in the initializer function of the 🍀 trong chức năng khởi tạo của
  manager class you could say that the 🍀 lớp quản lý bạn có thể nói rằng
  bonus property equals let's say team 🍀 tài sản thưởng bằng giả sử đội
  size times a thousand so you get an 🍀 kích thước nhân với một nghìn để bạn có được một
  extra thousand dollars for each team 🍀 thêm nghìn đô la cho mỗi đội
  member that you manage right so you 🍀 thành viên mà bạn quản lý đúng như vậy bạn
  could definitely calculate that in the 🍀 chắc chắn có thể tính toán rằng trong
  initializer function of the manager and 🍀 chức năng khởi tạo của người quản lý và
  set that property however there are 🍀 thiết lập tài sản đó tuy nhiên có
  something called computed properties and 🍀 một cái gì đó gọi là thuộc tính được tính toán và
  that allows you basically to make your 🍀 về cơ bản cho phép bạn thực hiện
  property a calculation so instead of 🍀 tài sản một phép tính như vậy thay vì
  having to explicitly assign a thousand 🍀 phải chỉ định rõ ràng một nghìn
  times team size to the bonus property 🍀 nhân quy mô đội với thuộc tính tiền thưởng
  you can just make this bonus property a 🍀 bạn chỉ có thể biến tài sản thưởng này thành
  computed property so to do that you 🍀 tính toán để làm điều đó bạn
  would declare your property and you have 🍀 sẽ tuyên bố tài sản của bạn và bạn có
  to specify a data type and then you have 🍀 để chỉ định một loại dữ liệu và sau đó bạn có
  your curly brackets and let me just 🍀 dấu ngoặc nhọn của bạn và để tôi chỉ
  write a comment here this is a computed 🍀 viết bình luận ở đây đây là một tính toán
  property one it's accessed the code in 🍀 thuộc tính một, nó đã truy cập mã trong
  here will run 🍀 ở đây sẽ chạy
  then we'll return the value so here we 🍀 sau đó chúng tôi sẽ trả về giá trị vì vậy ở đây chúng tôi
  can say return team size times a 🍀 có thể nói quy mô nhóm trở lại nhân với một
  thousand and literally as simple as that 🍀 nghìn và nghĩa đen là đơn giản như vậy
  so the bonus property is calculated via 🍀 vì vậy thuộc tính tiền thưởng được tính thông qua
  this calculation here it's a problem 🍀 tính toán này ở đây nó là một vấn đề
  right now is that the team size is zero 🍀 ngay bây giờ là quy mô nhóm bằng không
  so we need to be able to specify the 🍀 vì vậy chúng ta cần có khả năng chỉ định
  team size why don't we set that as part 🍀 quy mô nhóm tại sao chúng ta không đặt đó là một phần
  of the initializer function so we could 🍀 của hàm khởi tạo để chúng ta có thể
  we don't have to over I let's create our 🍀 chúng ta không cần phải kết thúc, tôi hãy tạo ra
  own one which takes in a name but it 🍀 sở hữu một cái có tên nhưng nó
  also takes in a team size which will be 🍀 cũng có quy mô nhóm sẽ là
  an integer alright so this is our own 🍀 một số nguyên được rồi vì vậy đây là của riêng chúng ta
  custom initializer function for the 🍀 chức năng khởi tạo tùy chỉnh cho
  manager class however because the 🍀 Tuy nhiên, lớp quản lý vì
  manager class is a subclass of employee 🍀 lớp quản lý là một lớp con của nhân viên
  and it inherits all of the employee 🍀 và nó kế thừa tất cả các nhân viên
  classes methods and properties we have 🍀 các phương thức và thuộc tính lớp chúng ta có
  to make sure that all of those are 🍀 để đảm bảo rằng tất cả những thứ đó đều
  initialized properly to so the way we do 🍀 được khởi tạo đúng cách theo cách chúng tôi làm
  that is we can simply call super init 🍀 đó là chúng ta có thể gọi super init
  which is basically calling the init 🍀 về cơ bản là gọi init
  function of the employee class so we're 🍀 chức năng của lớp nhân viên vì vậy chúng tôi
  gonna pass in the name this calls the 🍀 sẽ vượt qua cái tên này gọi là
  init of the employee class additional 🍀 init của lớp nhân viên bổ sung
  and it work here we will set 🍀 và nó hoạt động ở đây chúng tôi sẽ thiết lập
  self-thought team size equals team and 🍀 quy mô nhóm tự nghĩ bằng nhóm và
  because you know the parameter is a 🍀 bởi vì bạn biết tham số là một
  different name from the property we 🍀 tên khác với tài sản chúng tôi
  technically don't need the self we could 🍀 về mặt kỹ thuật không cần bản thân chúng ta có thể
  just do that and it's very clear what 🍀 chỉ cần làm điều đó và nó rất rõ ràng những gì
  we're trying to do but you it doesn't 🍀 chúng tôi đang cố gắng làm nhưng bạn thì không
  hurt to add the self as well just be 🍀 làm tổn thương để thêm bản thân cũng như chỉ được
  consistent in your coding alright so now 🍀 nhất quán trong mã hóa của bạn, vì vậy bây giờ
  let's try to create a new manager object 🍀 hãy thử tạo một đối tượng người quản lý mới
  and then try 🍀 và sau đó thử
  access this bonus property so down here 🍀 truy cập tài sản tiền thưởng này để xuống đây
  say let M equals manager we're gonna use 🍀 giả sử để M bằng người quản lý chúng ta sẽ sử dụng
  our new fancy init method let's call her 🍀 phương thức init ưa thích mới của chúng ta, hãy gọi cô ấy
  Kate and the team size is let's say 11 🍀 Kate và quy mô đội giả sử là 11
  all right let's print out what would her 🍀 được rồi, hãy in ra cô ấy sẽ làm gì
  bonus be let's run this code and it is 🍀 phần thưởng là hãy chạy mã này và nó là
  11,000 so that's pretty cool 🍀 11.000 vậy là khá tuyệt
  now there are additional things that we 🍀 bây giờ có những điều bổ sung mà chúng tôi
  haven't covered in this lesson such as 🍀 chưa được đề cập trong bài học này chẳng hạn như
  getters and setters and property 🍀 getters và setters và tài sản
  observers but we'll have to do another 🍀 người quan sát nhưng chúng ta sẽ phải làm khác
  lesson on properties later on for now 🍀 bài học về tài sản sau này cho bây giờ
  this is a great start hello and welcome 🍀 đây là một khởi đầu tuyệt vời xin chào và chào mừng
  to my Swift tutorial series for 🍀 đến loạt bài hướng dẫn Swift của tôi cho
  beginners in this video we're going to 🍀 người mới bắt đầu trong video này chúng ta sẽ
  revisit initializer methods and I'm 🍀 xem lại các phương thức khởi tạo và tôi
  going to tell you about designated 🍀 sẽ cho bạn biết về được chỉ định
  versus convenience initializers so let's 🍀 so với trình khởi tạo tiện lợi, vì vậy hãy
  get started so here I've got a person 🍀 bắt đầu vì vậy ở đây tôi có một người
  class and all it has is one property 🍀 class và tất cả những gì nó có là một thuộc tính
  called name which is initialized to the 🍀 được gọi là tên được khởi tạo thành
  string none remember when we talked 🍀 chuỗi không nhớ khi chúng tôi nói chuyện
  about classes and default initializers 🍀 về các lớp và trình khởi tạo mặc định
  all classes will have a default init 🍀 tất cả các lớp sẽ có init mặc định
  initializer that's why I can create a 🍀 trình khởi tạo đó là lý do tại sao tôi có thể tạo một
  new personal object like this it's 🍀 đối tượng cá nhân mới như thế này
  actually calling the default initializer 🍀 thực sự gọi trình khởi tạo mặc định
  now I told you that the purpose of the 🍀 bây giờ tôi đã nói với bạn rằng mục đích của
  initializer method was to make sure that 🍀 phương pháp khởi tạo là để đảm bảo rằng
  that object is set up and ready to go 🍀 đối tượng đó đã được thiết lập và sẵn sàng hoạt động
  now in addition to allocating memory and 🍀 bây giờ ngoài việc phân bổ bộ nhớ và
  doing all of the other things that it 🍀 làm tất cả những thứ khác mà nó
  needs to do to create that object and 🍀 cần làm để tạo đối tượng đó và
  return it to us another job of the 🍀 trả lại cho chúng tôi một công việc khác của
  initializer method is to make sure that 🍀 phương pháp khởi tạo là để đảm bảo rằng
  all the properties of that object are 🍀 tất cả các thuộc tính của đối tượng đó là
  initialized and let me show you what 🍀 khởi tạo và để tôi chỉ cho bạn những gì
  that means right now so for example in 🍀 điều đó có nghĩa là ngay bây giờ, ví dụ như trong
  this person class I have a name property 🍀 lớp người này tôi có một tài sản tên
  it's initialized with this piece of data 🍀 nó được khởi tạo với phần dữ liệu này
  none now let's say I create an optional 🍀 không có bây giờ giả sử tôi tạo một tùy chọn
  let's say not salary let's say net worth 🍀 giả sử không phải tiền lương, hãy nói giá trị ròng
  or something like that 🍀 hay đại loại thế
  and let's make this an optional integer 🍀 và hãy biến đây thành một số nguyên tùy chọn
  and that is also already initialized to 🍀 và điều đó cũng đã được khởi tạo thành
  nil because remember I told you that by 🍀 không bởi vì hãy nhớ rằng tôi đã nói với bạn điều đó bởi
  default the value is nil for optionals 🍀 mặc định giá trị là không cho các tùy chọn
  now I can also say gender let's make 🍀 bây giờ tôi cũng có thể nói giới tính hãy làm
  this an optional string that is already 🍀 đây là một chuỗi tùy chọn đã có sẵn
  unwrapped now this is also initialized 🍀 mở ra bây giờ cái này cũng được khởi tạo
  to nil so right now by default all of 🍀 đến con số không vì vậy ngay bây giờ theo mặc định tất cả
  the properties of the person class are 🍀 các thuộc tính của lớp người là
  already initialized so that's why I can 🍀 đã được khởi tạo nên đó là lý do tại sao tôi có thể
  create a person object like that without 🍀 tạo một đối tượng người như thế mà không cần
  a problem but let's say that one of the 🍀 một vấn đề nhưng hãy nói rằng một trong những
  properties is not initialized now let me 🍀 thuộc tính không được khởi tạo bây giờ hãy để tôi
  show you what that looks like for 🍀 cho bạn thấy nó trông như thế nào
  example for name I can say that it's 🍀 ví dụ về tên tôi có thể nói rằng đó là
  gonna be a string type but I can not 🍀 sẽ là một loại chuỗi nhưng tôi không thể
  assign it any value right then it's 🍀 gán cho nó bất kỳ giá trị nào ngay sau đó
  gonna start to complain and say that hey 🍀 sẽ bắt đầu phàn nàn và nói rằng này
  your person class needs to have an 🍀 lớp người của bạn cần phải có một
  initializer explicitly where you 🍀 trình khởi tạo một cách rõ ràng nơi bạn
  initialize the name property so in this 🍀 khởi tạo thuộc tính tên vì vậy trong này
  case what we do is we do a knit and then 🍀 trường hợp những gì chúng tôi làm là chúng tôi đan và sau đó
  we assign a value to that property right 🍀 chúng tôi gán một giá trị cho quyền thuộc tính đó
  because this is not an optional right if 🍀 bởi vì đây không phải là một quyền tùy chọn nếu
  it isn't optional then that's a 🍀 nó không phải là tùy chọn thì đó là một
  different story it it is initialized to 🍀 câu chuyện khác nó được khởi tạo để
  nil but when you just say that it's a 🍀 không nhưng khi bạn chỉ nói rằng đó là một
  name property and it should contain a 🍀 thuộc tính name và nó phải chứa một
  value right this is the string datatype 🍀 giá trị đúng đây là kiểu dữ liệu chuỗi
  it should contain a string value and 🍀 nó phải chứa một giá trị chuỗi và
  you're not assigning a value to it then 🍀 bạn không gán giá trị cho nó rồi
  it falls on the initializer method to 🍀 nó rơi vào phương thức khởi tạo để
  give it a value before that object gets 🍀 cung cấp cho nó một giá trị trước khi đối tượng đó nhận được
  passed back to you when you create a new 🍀 được trả lại cho bạn khi bạn tạo một cái mới
  person object so I can show you let's 🍀 đối tượng người để tôi có thể chỉ cho bạn
  say let a equals new person object and 🍀 nói hãy để một đối tượng người mới bằng nhau và
  then I can print a dot name I can show 🍀 sau đó tôi có thể in một tên dấu chấm mà tôi có thể hiển thị
  you what that is right it's none because 🍀 bạn điều đó đúng, nó không có gì bởi vì
  when we create this new person object 🍀 khi chúng ta tạo đối tượng người mới này
  it's calling this initializer and it's 🍀 nó đang gọi bộ khởi tạo này và nó là
  initializing this name property to none 🍀 khởi tạo thuộc tính tên này thành không
  you can also try to print a net worth 🍀 bạn cũng có thể thử in giá trị ròng
  for you and you'll see that it's going 🍀 cho bạn và bạn sẽ thấy rằng nó đang diễn ra
  to be nil 🍀 là con số không
  now these initializer methods which 🍀 bây giờ các phương thức khởi tạo này
  ensure that all of the properties are 🍀 đảm bảo rằng tất cả các tài sản được
  initialized you know we're just calling 🍀 đã khởi tạo, bạn biết chúng tôi chỉ đang gọi
  them initializer methods but the proper 🍀 chúng phương thức khởi tạo nhưng thích hợp
  name is designated initializer and these 🍀 tên được chỉ định khởi tạo và những
  designated initializer methods can be 🍀 các phương thức khởi tạo được chỉ định có thể là
  guaranteed to return that object to you 🍀 đảm bảo trả lại đối tượng đó cho bạn
  ready to use all of its properties 🍀 sẵn sàng sử dụng tất cả các thuộc tính của nó
  initialized so on and so forth now 🍀 khởi tạo, vân vân và vân vân
  there's another type of initializer 🍀 có một loại trình khởi tạo khác
  method called a convenience initializer 🍀 phương thức được gọi là trình khởi tạo tiện lợi
  so these convenience and initializer 🍀 vì vậy những tiện ích và trình khởi tạo này
  methods are for you to kind of preset 🍀 phương pháp là để bạn loại cài sẵn
  some of the properties of that object 🍀 một số thuộc tính của đối tượng đó
  based on what you need and then that 🍀 dựa trên những gì bạn cần và sau đó
  convenience initializer should call a 🍀 trình khởi tạo tiện lợi nên gọi một
  designated initializer just to make sure 🍀 trình khởi tạo được chỉ định chỉ để đảm bảo
  that all of its properties are set so 🍀 rằng tất cả các thuộc tính của nó được đặt sao cho
  let me give you an example of what that 🍀 hãy để tôi cho bạn một ví dụ về những gì
  what that looks like so let's say that 🍀 nó trông như thế nào vì vậy hãy nói rằng
  this is our designated initializer right 🍀 đây là quyền khởi tạo được chỉ định của chúng tôi
  because because it makes sure that all 🍀 bởi vì nó đảm bảo rằng tất cả
  properties are initialized and it's 🍀 thuộc tính được khởi tạo và nó
  ready to go now I can create a 🍀 sẵn sàng để đi bây giờ tôi có thể tạo một
  convenience initializer by using the 🍀 trình khởi tạo tiện lợi bằng cách sử dụng
  convenience keyword like that and let's 🍀 từ khóa tiện lợi như thế và chúng ta hãy
  say I want to create an initializer to 🍀 nói rằng tôi muốn tạo một trình khởi tạo để
  create a rich female so let's say that 🍀 tạo ra một người phụ nữ giàu có vì vậy hãy nói rằng
  you need to pass in the gender and you 🍀 bạn cần phải vượt qua giới tính và bạn
  need to pass in the net worth or it 🍀 cần phải chuyển vào giá trị ròng hoặc nó
  should be a rich person in general right 🍀 nên là một người giàu có nói chung
  then I would first of all I would need 🍀 sau đó tôi sẽ trước hết tôi sẽ cần
  to call V in it right call the 🍀 để gọi V trong đó phải gọi
  designated initializer to ensure that 🍀 trình khởi tạo được chỉ định để đảm bảo rằng
  the object is ready to go set any other 🍀 đối tượng đã sẵn sàng để đặt bất kỳ thứ gì khác
  properties or custom code to initialize 🍀 thuộc tính hoặc mã tùy chỉnh để khởi tạo
  for this scenario so I can say you know 🍀 cho kịch bản này để tôi có thể nói rằng bạn biết
  self-taught gender is equal to whatever 🍀 tự học giới tính bằng cái gì cũng được
  gender was passed in and self-thought 🍀 giới tính đã được thông qua và tự suy nghĩ
  net worth is equal to I forgot to put a 🍀 giá trị ròng bằng với tôi quên đặt một
  type here so let's say that's int all 🍀 nhập vào đây để giả sử đó là tất cả
  right miss myself all right all right so 🍀 đúng nhớ bản thân mình được rồi được rồi
  this is creating a new person object 🍀 đây là tạo một đối tượng người mới
  creating a new rich person object that B 🍀 tạo một đối tượng người giàu mới mà B
  equals person and I can use my male 🍀 bằng người và tôi có thể sử dụng nam của mình
  let's change that to male that right so 🍀 hãy thay đổi điều đó thành nam đúng như vậy
  this convenience initializer just gives 🍀 trình khởi tạo tiện lợi này chỉ mang lại
  me an easy way to create a specific type 🍀 cho tôi một cách dễ dàng để tạo một loại cụ thể
  of person object initialized through 🍀 đối tượng người được khởi tạo thông qua
  some sort of whatever values that I need 🍀 một số loại giá trị mà tôi cần
  but it calls the designated one because 🍀 nhưng nó gọi cái được chỉ định bởi vì
  this is kind of like the steadfast 🍀 điều này giống như sự kiên định
  anchor initializer that makes sure that 🍀 trình khởi tạo neo để đảm bảo rằng
  all of its properties are initialized so 🍀 tất cả các thuộc tính của nó được khởi tạo để
  you can count on it as sort of like the 🍀 bạn có thể tin tưởng vào nó giống như
  go-to initializer 🍀 đi tới trình khởi tạo
  so just to recap designated initializers 🍀 vì vậy chỉ để tóm tắt lại các trình khởi tạo được chỉ định
  are those that guarantee all of its 🍀 là những người đảm bảo tất cả các
  properties are going to be initialized 🍀 các thuộc tính sẽ được khởi tạo
  and that that object is ready to go for 🍀 và rằng đối tượng đó đã sẵn sàng để đi cho
  you whereas convenience initializers are 🍀 bạn trong khi trình khởi tạo tiện lợi là
  optional and they basically give you an 🍀 tùy chọn và về cơ bản họ cung cấp cho bạn một
  opportunity to create an object but 🍀 cơ hội để tạo ra một đối tượng nhưng
  preset it to the values that you need 🍀 đặt trước nó với các giá trị mà bạn cần
  like what we did in this case 🍀 giống như những gì chúng tôi đã làm trong trường hợp này
  but convenience initializers must call a 🍀 nhưng trình khởi tạo tiện lợi phải gọi một
  designated initializer as well just to 🍀 trình khởi tạo được chỉ định cũng như chỉ để
  make sure that everything is set up and 🍀 đảm bảo rằng mọi thứ đã được thiết lập và
  ready to go so you can see that we did 🍀 sẵn sàng để đi để bạn có thể thấy rằng chúng tôi đã làm
  it here in line 16 so that's the 🍀 nó ở đây trong dòng 16 vì vậy đó là
  difference between a designated versus a 🍀 sự khác biệt giữa một được chỉ định so với một
  convenience initializer method 🍀 phương pháp khởi tạo thuận tiện
  [Music] 🍀 [Âm nhạc]
  hello and welcome to my Swift tutorial 🍀 xin chào và chào mừng đến với hướng dẫn Swift của tôi
  series for beginners today you're going 🍀 loạt bài cho người mới bắt đầu hôm nay bạn sẽ đi
  to learn how to manage a collection of 🍀 để tìm hiểu làm thế nào để quản lý một bộ sưu tập của
  data in what's called an array if you're 🍀 dữ liệu trong cái được gọi là một mảng nếu bạn
  working with many pieces of data it's 🍀 làm việc với nhiều phần dữ liệu đó là
  going to be hard to manage them all 🍀 sẽ rất khó để quản lý tất cả
  using just constants and variables so 🍀 chỉ sử dụng hằng và biến nên
  let's take a look at how a race can make 🍀 chúng ta hãy xem làm thế nào một cuộc đua có thể làm cho
  our life easier 🍀 cuộc sống của chúng ta dễ dàng hơn
  alright stay tuned so Swift has a couple 🍀 được rồi, hãy theo dõi để Swift có một vài
  of collection types that you can use to 🍀 các loại bộ sưu tập mà bạn có thể sử dụng để
  manage your data easily and the one 🍀 quản lý dữ liệu của bạn một cách dễ dàng và một
  we're going to talk about right now is 🍀 chúng ta sẽ nói về ngay bây giờ là
  called an array and this is a collection 🍀 được gọi là một mảng và đây là một bộ sưu tập
  type that is ordered by indexes and that 🍀 loại được sắp xếp theo chỉ mục và đó
  means that there is a specific order to 🍀 có nghĩa là có một thứ tự cụ thể để
  this list of values so you can see here 🍀 danh sách các giá trị này để bạn có thể xem tại đây
  in this demonstration or this example it 🍀 trong cuộc biểu tình này hoặc ví dụ này nó
  starts at 0 and then it goes 1 2 3 4 and 🍀 bắt đầu từ 0 và sau đó là 1 2 3 4 và
  so on and so forth and at each position 🍀 vân vân và vân vân và tại mỗi vị trí
  there is a value or a piece of data so 🍀 có một giá trị hoặc một phần dữ liệu vì vậy
  there is a defined order and that's 🍀 có một thứ tự xác định và đó là
  really important to know let's jump into 🍀 thực sự quan trọng để biết chúng ta hãy nhảy vào
  the playground where I can demonstrate 🍀 sân chơi nơi tôi có thể chứng minh
  and need and an example of how to use a 🍀 và nhu cầu và một ví dụ về cách sử dụng một
  race so right here I've got three 🍀 cuộc đua vì vậy ngay tại đây tôi có ba
  variables a B and C and let's say that I 🍀 biến a B và C và giả sử rằng tôi
  wanted to change these strings to my dog 🍀 muốn thay đổi những chuỗi này cho con chó của tôi
  my cat and my bird well I can go about 🍀 con mèo của tôi và con chim của tôi tốt, tôi có thể đi về
  it this way and say something like this 🍀 nó theo cách này và nói điều gì đó như thế này
  I can just add the word my with a space 🍀 Tôi chỉ có thể thêm từ my với khoảng trắng
  to a alright so a is dog I'm gonna add 🍀 với a được rồi nên a là con chó tôi sẽ thêm
  my in front of it and reassign it to 8 🍀 my trước nó và gán lại cho 8
  so that would be my dog so I could 🍀 vì vậy đó sẽ là con chó của tôi để tôi có thể
  repeat this with B and C but I mean this 🍀 lặp lại điều này với B và C nhưng ý tôi là thế này
  is only an example with 3 items let's 🍀 chỉ là một ví dụ với 3 mục let's
  say we had a hundred or 200 items then 🍀 nói rằng chúng tôi đã có một trăm hoặc 200 mặt hàng sau đó
  that would be very very tedious right 🍀 điều đó sẽ rất rất tẻ nhạt phải không
  what I could do is also I can put these 🍀 những gì tôi có thể làm là tôi cũng có thể đặt những thứ này
  values into an array and what that looks 🍀 các giá trị thành một mảng và nó trông như thế nào
  like 🍀 giống
  is it starts with a pair of square 🍀 là nó bắt đầu với một cặp hình vuông
  brackets and each item in the array is 🍀 ngoặc và mỗi mục trong mảng là
  separated by a comma so I would have dog 🍀 cách nhau bằng dấu phẩy vì vậy tôi sẽ có con chó
  comma cat comma and then bird so there's 🍀 dấu phẩy con mèo dấu phẩy và sau đó là con chim nên có
  no comma at the end it's only in between 🍀 không có dấu phẩy ở cuối nó chỉ ở giữa
  the actual items so this is an array of 🍀 các mục thực tế vì vậy đây là một mảng
  3 items 🍀 3 mục
  with dog starting at index zero cat at 🍀 với con chó bắt đầu từ chỉ số 0 con mèo tại
  index one and bird at index two so just 🍀 chỉ số một và con chim ở chỉ số hai vì vậy chỉ cần
  like what we saw here yeah dog cat and 🍀 giống như những gì chúng ta đã thấy ở đây yeah chó mèo và
  bird that is our rate so having this 🍀 con chim đó là tỷ lệ của chúng tôi vì vậy có cái này
  array is great but we need some sort of 🍀 mảng là tuyệt vời nhưng chúng tôi cần một số loại
  way to reference the items in the array 🍀 cách để tham chiếu các mục trong mảng
  so why don't we assign this array to a 🍀 vậy tại sao chúng ta không gán mảng này cho một
  constant called my array and in order to 🍀 hằng số được gọi là mảng của tôi và để
  access these items all I have to do is 🍀 truy cập các mục này tất cả những gì tôi phải làm là
  say my array and then use my square 🍀 nói mảng của tôi và sau đó sử dụng hình vuông của tôi
  brackets and then put in the index of 🍀 dấu ngoặc và sau đó đặt vào chỉ mục của
  the value that I want so if I want a dog 🍀 giá trị mà tôi muốn như vậy nếu tôi muốn có một con chó
  I would put in index 0 so it's print 🍀 Tôi sẽ đặt chỉ mục 0 để nó in
  that and we can see dog if I wanted bird 🍀 điều đó và chúng ta có thể nhìn thấy con chó nếu tôi muốn con chim
  I would put in index 2 right because it 🍀 Tôi sẽ đưa vào chỉ số 2 ngay bởi vì nó
  starts at 0 alright so in that case I 🍀 bắt đầu từ 0 được rồi nên trong trường hợp đó tôi
  could do something like this my array 0 🍀 có thể làm một cái gì đó như thế này mảng của tôi 0
  is equal to my space my array 0 kind of 🍀 bằng với không gian của tôi mảng 0 của tôi
  mirrors this statement right and this 🍀 phản ánh tuyên bố này đúng và điều này
  shows you that you can use this sort of 🍀 cho bạn thấy rằng bạn có thể sử dụng loại này
  same syntax and there's actually an 🍀 cùng một cú pháp và thực sự có một
  error here this is a really great 🍀 lỗi ở đây đây là một thực sự tuyệt vời
  example because I'm trying to assign 🍀 ví dụ vì tôi đang cố gán
  something into my array at index 0 but 🍀 một cái gì đó vào mảng của tôi ở chỉ số 0 nhưng
  this is a constant so I can modify it 🍀 đây là một hằng số để tôi có thể sửa đổi nó
  after it's a sign so I actually need to 🍀 sau đó là một dấu hiệu vì vậy tôi thực sự cần phải
  do variable like that let's make my 🍀 làm biến như vậy hãy làm cho tôi
  array a variable all right so this is 🍀 mảng một biến được rồi vì vậy đây là
  great because it shows you that this 🍀 tuyệt vời bởi vì nó cho bạn thấy rằng điều này
  syntax is to retrieve the item at index 🍀 cú pháp là lấy mục tại chỉ mục
  0 but I can also assign things into 🍀 0 nhưng tôi cũng có thể gán mọi thứ vào
  index 0 using this assignment operator 🍀 chỉ số 0 sử dụng toán tử gán này
  like that right so the resulting value 🍀 đúng như vậy nên giá trị kết quả
  at index 0 is yes that my dog right but 🍀 ở chỉ số 0 là có, con chó của tôi đúng nhưng
  this isn't very efficient either I mean 🍀 ý tôi là điều này cũng không hiệu quả lắm
  I'd have to write this line three times 🍀 Tôi phải viết dòng này ba lần
  or however many times for you know 🍀 hoặc tuy nhiên nhiều lần cho bạn biết
  however many pets I have 🍀 tuy nhiên tôi có nhiều vật nuôi
  so this is where it gets really powerful 🍀 vì vậy đây là nơi nó trở nên thực sự mạnh mẽ
  because you can use loops we learned way 🍀 bởi vì bạn có thể sử dụng các vòng lặp mà chúng ta đã học
  back then in conjunction with a race so 🍀 hồi đó kết hợp với một cuộc đua vì vậy
  let me show you how that works so for 🍀 để tôi chỉ cho bạn cách nó hoạt động
  example let's use a for loop or a for in 🍀 ví dụ hãy sử dụng vòng lặp for hoặc for in
  loop I mean let's say there's a counter 🍀 vòng lặp ý tôi là giả sử có một bộ đếm
  in 0 to 2 all right so now I can say I 🍀 trong 0 đến 2 được rồi vì vậy bây giờ tôi có thể nói tôi
  can well why don't we just print it out 🍀 có thể tại sao chúng ta không in nó ra
  for now so we can print out my array and 🍀 bây giờ để chúng tôi có thể in ra mảng của tôi và
  then let's access the index I can put in 🍀 sau đó hãy truy cập vào chỉ mục tôi có thể đưa vào
  counter in there so let's see what that 🍀 truy cập vào đó vì vậy hãy xem những gì
  looks like if I run this code see I'll 🍀 có vẻ như nếu tôi chạy mã này, tôi sẽ thấy
  print out my dog cat and bird but 🍀 in ra con chó mèo và con chim của tôi nhưng
  actually it's because this line modified 🍀 thực ra là do dòng này đã sửa đổi
  what was at index 0 so let me get rid of 🍀 những gì ở chỉ số 0 vì vậy hãy để tôi thoát khỏi
  that line and let me print this again so 🍀 dòng đó và để tôi in lại dòng này
  you can see dog cat and bird it's merely 🍀 bạn có thể thấy chó mèo và chim nó chỉ đơn thuần là
  printing out each index of that array 🍀 in ra từng chỉ mục của mảng đó
  but already this is really powerful 🍀 nhưng điều này đã thực sự mạnh mẽ
  right because we have one line of code 🍀 đúng vì chúng tôi có một dòng mã
  and it's being looped three times but 🍀 và nó được lặp lại ba lần nhưng
  each time it loops it's doing something 🍀 mỗi lần nó lặp lại nó đang làm gì đó
  different what if we did something like 🍀 khác đi nếu chúng ta làm điều gì đó như thế nào
  this what if we did my array counter is 🍀 điều này sẽ xảy ra nếu chúng ta thực hiện bộ đếm mảng của tôi là
  equal to my right space plus my array 🍀 bằng không gian bên phải của tôi cộng với mảng của tôi
  counter all right now we're talking 🍀 truy cập tất cả ngay bây giờ chúng ta đang nói chuyện
  because what we're doing here is each 🍀 bởi vì những gì chúng tôi đang làm ở đây là mỗi
  iteration of the loop we are accessing 🍀 lặp lại vòng lặp mà chúng ta đang truy cập
  that index and then we are adding my in 🍀 chỉ mục đó và sau đó chúng tôi sẽ thêm chỉ mục của tôi vào
  front of it and then we're reassigning 🍀 phía trước nó và sau đó chúng tôi đang chỉ định lại
  it to that same index basically changing 🍀 nó đến cùng một chỉ số về cơ bản thay đổi
  the value and then we're printing it out 🍀 giá trị và sau đó chúng tôi sẽ in nó ra
  here so if I had 200 items in my array I 🍀 ở đây vì vậy nếu tôi có 200 mục trong mảng của mình, tôi
  would just change this to 199 right and 🍀 sẽ chỉ cần thay đổi điều này thành 199 đúng và
  that's very little code compared to what 🍀 đó là rất ít mã so với những gì
  we were doing up here right so you can 🍀 chúng tôi đã làm ở đây ngay để bạn có thể
  start to see how powerful it is to use 🍀 bắt đầu thấy nó mạnh như thế nào khi sử dụng
  arrays with loops now what if we didn't 🍀 mảng có vòng lặp bây giờ nếu chúng ta không làm thì sao
  know the range of 🍀 biết phạm vi của
  the array right right here I'm assuming 🍀 mảng ngay tại đây tôi giả sử
  that I know there are three items in 🍀 mà tôi biết có ba mục trong
  here that's why I'm doing this range 🍀 đây là lý do tại sao tôi đang làm phạm vi này
  zero to two well the array comes with 🍀 không đến hai cũng mảng đi kèm với
  some handy properties that we can use 🍀 một số thuộc tính tiện dụng mà chúng ta có thể sử dụng
  one of them is called count which 🍀 một trong số chúng được gọi là số lượng
  returns how many items are in the array 🍀 trả về có bao nhiêu phần tử trong mảng
  it always starts at zero so we're gonna 🍀 nó luôn bắt đầu từ số 0 nên chúng ta sẽ
  start at zero if we want to access the 🍀 bắt đầu từ số không nếu chúng ta muốn truy cập
  first item in the array however we are 🍀 mục đầu tiên trong mảng tuy nhiên chúng ta
  actually we can use the count property 🍀 thực ra chúng ta có thể sử dụng thuộc tính đếm
  of the right so we can do my array dot 🍀 của bên phải để chúng tôi có thể thực hiện dấu chấm mảng của tôi
  count but they're gonna run into a 🍀 đếm nhưng họ sẽ chạy vào một
  problem with this let me show you why so 🍀 vấn đề với điều này hãy để tôi chỉ cho bạn tại sao như vậy
  if I run this code you're gonna get my 🍀 nếu tôi chạy mã này, bạn sẽ nhận được
  dog my cat my bird and then index out of 🍀 con chó con mèo của tôi con chim của tôi và sau đó lập chỉ mục ra khỏi
  range whenever you see this error index 🍀 phạm vi bất cứ khi nào bạn thấy chỉ số lỗi này
  out of range you start to think this 🍀 ngoài phạm vi bạn bắt đầu nghĩ điều này
  error message means that we're trying to 🍀 thông báo lỗi có nghĩa là chúng tôi đang cố gắng
  access an index that doesn't exist in 🍀 truy cập một chỉ mục không tồn tại trong
  that array it's out of the range of the 🍀 mảng đó nằm ngoài phạm vi của
  array well why is that because my array 🍀 mảng tốt tại sao lại như vậy bởi vì mảng của tôi
  dot count returns the number of items in 🍀 số dấu chấm trả về số lượng mục trong
  there right right so what it returns 🍀 đúng rồi nó trả về cái gì
  three so our loop actually goes from 🍀 ba để vòng lặp của chúng tôi thực sự đi từ
  zero to three inclusive so it's gonna 🍀 bao gồm từ 0 đến 3 vì vậy nó sẽ
  start at zero it's gonna do one and it's 🍀 bắt đầu từ số không nó sẽ làm một và nó
  gonna do two and then it's going to do 🍀 sẽ làm hai và sau đó nó sẽ làm
  three and there is no fourth item in our 🍀 ba và không có mục thứ tư trong của chúng tôi
  right right this is 0 this is 1 this is 🍀 đúng đúng đây là 0 đây là 1 đây là
  2 and when it tries to access index 3 🍀 2 và khi nó cố truy cập vào chỉ mục 3
  there's nothing and that's why it 🍀 không có gì và đó là lý do tại sao nó
  crashes and gives us this error index 🍀 sự cố và cung cấp cho chúng tôi chỉ số lỗi này
  out of range so what we actually have to 🍀 ngoài phạm vi vì vậy những gì chúng ta thực sự phải
  do when we're working with arrays like 🍀 làm khi chúng ta làm việc với các mảng như
  this and we want to basically use this 🍀 cái này và về cơ bản chúng tôi muốn sử dụng cái này
  count in a loop we have to do this minus 🍀 đếm trong một vòng lặp chúng ta phải làm điều này trừ đi
  1 and then that's going to go from 0 to 🍀 1 và sau đó nó sẽ đi từ 0 đến
  2 essentially now it's really good that 🍀 2 về cơ bản bây giờ nó thực sự tốt
  you know about the count property now of 🍀 bây giờ bạn biết về thuộc tính đếm của
  the array because that's really useful 🍀 mảng vì điều đó thực sự hữu ích
  but there's actually an even easier way 🍀 nhưng thực sự có một cách dễ dàng hơn
  to write this for loop we can do 🍀 để viết cái này cho vòng lặp chúng ta có thể làm
  something like this for each item in my 🍀 một cái gì đó như thế này cho mỗi mục trong tôi
  array do something with it and that's 🍀 mảng làm điều gì đó với nó và đó là
  really 🍀 Thực ra
  the easiest that you know the easiest 🍀 dễ nhất mà bạn biết là dễ nhất
  that you can get so you can do you know 🍀 mà bạn có thể nhận được để bạn có thể làm bạn biết
  if you need the index for some reason 🍀 nếu bạn cần chỉ mục vì lý do nào đó
  and you need to do something with it you 🍀 và bạn cần phải làm gì đó với nó
  need to reassign something then you 🍀 cần phải gán lại một cái gì đó sau đó bạn
  would have to use this method where 🍀 sẽ phải sử dụng phương pháp này nơi
  you're accessing where you're getting 🍀 bạn đang truy cập nơi bạn đang nhận được
  the index but if you just want to let's 🍀 chỉ mục nhưng nếu bạn chỉ muốn
  say out put each item or you want to you 🍀 nói ra đặt từng mục hoặc bạn muốn cho bạn
  know use each item without reassigning 🍀 biết sử dụng từng đồ vật mà không cần phân công lại
  it into the array then this sort of 🍀 nó vào mảng sau đó loại này
  format is great what it's going to do is 🍀 định dạng là tuyệt vời những gì nó sẽ làm là
  it's basically going to loop through 🍀 về cơ bản nó sẽ lặp lại
  every single item in my array and put it 🍀 từng mục trong mảng của tôi và đặt nó
  into this variable for you to use so let 🍀 vào biến này để bạn sử dụng, vì vậy hãy để
  me comment this part out actually let me 🍀 tôi bình luận phần này ra thực sự cho tôi
  let me just comment this whole thing out 🍀 hãy để tôi bình luận toàn bộ điều này ra
  and just a quick tip if you want to 🍀 và chỉ là một mẹo nhanh nếu bạn muốn
  comment out a whole block of code you 🍀 nhận xét toàn bộ khối mã bạn
  can press a command back slash and that 🍀 có thể nhấn một dấu gạch chéo ngược lệnh và điều đó
  just takes care of that so when we run 🍀 chỉ quan tâm đến điều đó vì vậy khi chúng tôi chạy
  our code here so you can see this loop 🍀 mã của chúng tôi ở đây để bạn có thể thấy vòng lặp này
  very simply it's just printing out the 🍀 rất đơn giản nó chỉ in ra
  items of the array so this is a quick 🍀 các mục của mảng vì vậy đây là một cách nhanh chóng
  and easy way to loop through items in 🍀 và cách dễ dàng để lặp qua các mục trong
  the array all right some other cool 🍀 các mảng đều ổn một số khác mát mẻ
  things I want to show you how to declare 🍀 những thứ tôi muốn chỉ cho bạn cách khai báo
  an empty array I think this is really 🍀 một mảng trống tôi nghĩ đây thực sự là
  important to know because right here we 🍀 điều quan trọng cần biết bởi vì ngay tại đây chúng ta
  are initializing this variable to this 🍀 đang khởi tạo biến này thành cái này
  oh right but what really is the datatype 🍀 ồ đúng rồi nhưng kiểu dữ liệu thực sự là gì
  for this array if you were to explicitly 🍀 cho mảng này nếu bạn rõ ràng
  write it well I'll tell you it is an 🍀 viết nó tốt tôi sẽ nói với bạn nó là một
  array so there's square brackets and 🍀 mảng để có dấu ngoặc vuông và
  inside you put the data type of the 🍀 bên trong bạn đặt kiểu dữ liệu của
  array 🍀 mảng
  so string this array can only contain 🍀 vì vậy chuỗi này chỉ có thể chứa
  string objects all right forgot to 🍀 các đối tượng chuỗi tất cả đều quên
  mention that part that your items in the 🍀 đề cập đến phần mà các mặt hàng của bạn trong
  array will be the same data type if you 🍀 mảng sẽ có cùng kiểu dữ liệu nếu bạn
  wanted to declare an array that is empty 🍀 muốn khai báo một mảng trống
  to start you could do something like 🍀 để bắt đầu bạn có thể làm một cái gì đó như
  this let's say empty array 🍀 điều này giả sử mảng trống
  [Applause] 🍀 [Vỗ tay]
  so you could just have an empty array 🍀 vì vậy bạn chỉ có thể có một mảng trống
  like that but you have to declare the 🍀 như vậy nhưng bạn phải khai báo
  datatype because there is no datatype 🍀 kiểu dữ liệu vì không có kiểu dữ liệu
  inside this empty array for Xcode to 🍀 bên trong mảng trống này để Xcode
  determine what data type that array 🍀 xác định kiểu dữ liệu của mảng đó
  should be that's why we have to 🍀 nên đó là lý do tại sao chúng ta phải
  explicitly specify that right here or if 🍀 chỉ định rõ ràng rằng ngay tại đây hoặc nếu
  you don't do this you can do something 🍀 bạn không làm điều này bạn có thể làm điều gì đó
  like this let's do MTR a2 is equal to 🍀 như thế này, hãy làm MTR a2 bằng
  you could do that as well so this is 🍀 bạn cũng có thể làm điều đó vì vậy đây là
  basically creating a new array object 🍀 về cơ bản tạo một đối tượng mảng mới
  right this is a type it's a string array 🍀 đúng đây là một loại nó là một mảng chuỗi
  and you're basically creating a new 🍀 và về cơ bản bạn đang tạo một cái mới
  object of that string array type and 🍀 đối tượng của kiểu mảng chuỗi đó và
  it's not going to contain anything by 🍀 nó sẽ không chứa bất cứ thứ gì bởi
  default all right now let me show you 🍀 mặc định tất cả ngay bây giờ để tôi chỉ cho bạn
  some ways to work with arrays in terms 🍀 một số cách để làm việc với mảng theo thuật ngữ
  of adding items and removing items so 🍀 của việc thêm các mục và loại bỏ các mục để
  you can let's sort of add items first so 🍀 bạn có thể sắp xếp thêm các mục trước để
  you can to my array there's methods like 🍀 bạn có thể vào mảng của tôi có các phương thức như
  append so you're gonna pend a new 🍀 nối thêm để bạn sẽ chờ một cái mới
  element or you can even insert so you 🍀 phần tử hoặc thậm chí bạn có thể chèn để bạn
  can insert a new element at a particular 🍀 có thể chèn một phần tử mới tại một cụ thể
  index and it's not going to overwrite it 🍀 index và nó sẽ không ghi đè lên nó
  it's just gonna push everything back so 🍀 nó sẽ đẩy mọi thứ trở lại như vậy
  let's say I wanted to insert a frog at 🍀 giả sử tôi muốn chèn một con ếch vào
  index zero then if I let's say I copy 🍀 chỉ mục bằng 0 thì nếu tôi giả sử tôi sao chép
  this down here and I print out the items 🍀 cái này xuống đây và tôi in ra các mục
  again you're gonna see that it starts 🍀 một lần nữa bạn sẽ thấy rằng nó bắt đầu
  with frog this time and then it goes dog 🍀 với con ếch lần này và sau đó nó đi con chó
  cat bird so it inserted frog at zero and 🍀 con mèo con chim vì vậy nó đã chèn con ếch ở số không và
  pushed everything else back now another 🍀 đẩy mọi thứ khác trở lại bây giờ khác
  way you can add things you can go plus 🍀 cách bạn có thể thêm những thứ bạn có thể thêm
  equals just like that and then you can 🍀 bằng như vậy và sau đó bạn có thể
  add a number of items to the back of the 🍀 thêm một số mục vào mặt sau của
  array so I can do frog there and why 🍀 mảng để tôi có thể làm ếch ở đó và tại sao
  don't we move this print statement 🍀 chúng ta không di chuyển tuyên bố in này
  down here and let's see what is in our 🍀 xuống đây và hãy xem những gì trong của chúng tôi
  array at this point so we have frog dog 🍀 mảng tại thời điểm này vì vậy chúng tôi có con chó ếch
  cat bird frog and bear oh and that was 🍀 mèo chim ếch và gấu oh và đó là
  that's because I inserted frog at the 🍀 đó là bởi vì tôi đã chèn con ếch vào
  beginning and then I appended frog and 🍀 bắt đầu và sau đó tôi nối thêm ếch và
  bear at the back so that's our resulting 🍀 chịu ở phía sau vì vậy đó là kết quả của chúng tôi
  array all right so let me just write it 🍀 mảng được rồi vì vậy hãy để tôi viết nó
  here in case you download the playground 🍀 ở đây trong trường hợp bạn tải xuống sân chơi
  it's another animal that I can use 🍀 đó là một con vật khác mà tôi có thể sử dụng
  there's so many animals out there 🍀 có rất nhiều động vật ngoài kia
  raccoon it's not like I saw a raccoon 🍀 gấu trúc nó không giống như tôi nhìn thấy một con gấu trúc
  out there but it just popped into my 🍀 ngoài đó nhưng nó chỉ xuất hiện trong tôi
  mind all right remove items so my array 🍀 nhớ xóa các mục để mảng của tôi
  you can remove a particular item at a 🍀 bạn có thể xóa một mục cụ thể tại một
  specific index like that it's gonna 🍀 chỉ số cụ thể như thế nó sẽ
  remove that item and everything is going 🍀 xóa mục đó và mọi thứ sẽ diễn ra
  to shift to fill its its place we can 🍀 để thay đổi để lấp đầy vị trí của nó, chúng ta có thể
  remove all right we can remove first or 🍀 xóa tất cả các quyền, chúng tôi có thể xóa trước hoặc
  remove last we could move the first 🍀 loại bỏ cuối cùng chúng ta có thể di chuyển đầu tiên
  number of items so there are a lot of 🍀 số lượng mặt hàng vì vậy có rất nhiều
  options here like I said these 🍀 các tùy chọn ở đây như tôi đã nói
  collection types are meant to make your 🍀 các loại bộ sưu tập có nghĩa là để làm cho bạn
  life easier to manage collections of 🍀 cuộc sống dễ dàng hơn để quản lý bộ sưu tập của
  data and that's why there are so many 🍀 dữ liệu và đó là lý do tại sao có rất nhiều
  handy methods for you to use another 🍀 phương pháp tiện dụng để bạn sử dụng khác
  thing that you might find yourself 🍀 điều mà bạn có thể tìm thấy chính mình
  wanting to do is searching for a 🍀 muốn làm là tìm kiếm một
  specific item in your array or maybe 🍀 mục cụ thể trong mảng của bạn hoặc có thể
  finding out if an item exists in your 🍀 tìm hiểu nếu một mục tồn tại trong của bạn
  array or not 🍀 mảng hay không
  search your a rate and the method to use 🍀 tìm kiếm tỷ lệ của bạn và phương pháp sử dụng
  for that is there are a couple of 🍀 vì đó là có một vài
  options there used to be one called 🍀 các tùy chọn đã từng được gọi là
  index of so you can it returns the index 🍀 chỉ mục để bạn có thể trả về chỉ mục
  of the item that you search for if it 🍀 của mục mà bạn tìm kiếm nếu nó
  doesn't exist in your array it would 🍀 không tồn tại trong mảng của bạn nó sẽ
  return negative one otherwise it will 🍀 trả lại giá trị âm nếu không nó sẽ
  return the actual index button now there 🍀 trả lại nút chỉ mục thực tế ngay bây giờ
  are methods like first index of which 🍀 là các phương thức như chỉ mục đầu tiên trong đó
  returns the first index where the 🍀 trả về chỉ mục đầu tiên nơi
  specified value appears because 🍀 giá trị được chỉ định xuất hiện vì
  theoretically like we saw before frog 🍀 về mặt lý thuyết như chúng ta đã thấy trước con ếch
  existed at index zero and existed at 🍀 tồn tại ở chỉ số 0 và tồn tại ở
  index maybe six or something like that 🍀 chỉ số có thể sáu hoặc một cái gì đó như thế
  in our array and then alternatively 🍀 trong mảng của chúng tôi và sau đó cách khác
  there 🍀 ở đó
  is also last index of so you're 🍀 cũng là chỉ số cuối cùng của bạn
  searching from the back towards the 🍀 tìm kiếm từ phía sau về phía
  front and it's going to return the last 🍀 phía trước và nó sẽ trở lại cuối cùng
  index of that item what you're looking 🍀 chỉ mục của mặt hàng đó những gì bạn đang tìm kiếm
  for so those are a couple of handy ways 🍀 vì vậy đó là một vài cách tiện dụng
  for you to do some searching within your 🍀 để bạn thực hiện một số tìm kiếm trong
  erase what I've covered in this lesson 🍀 xóa những gì tôi đã trình bày trong bài học này
  is enough for you to get the main 🍀 là đủ để bạn có được chính
  benefits out of using erase as we 🍀 lợi ích của việc sử dụng xóa khi chúng tôi
  continue to build apps together we're 🍀 tiếp tục xây dựng các ứng dụng cùng nhau, chúng ta
  going to learn new ways of using a race 🍀 sẽ học những cách mới để sử dụng một cuộc đua
  but for now this is more than enough hi 🍀 nhưng bây giờ điều này là quá đủ hi
  and welcome to my Swift tutorial for 🍀 và chào mừng đến với hướng dẫn Swift của tôi cho
  beginners in this video we're going to 🍀 người mới bắt đầu trong video này chúng ta sẽ
  go through another collection type 🍀 đi qua một loại bộ sưu tập khác
  called the dictionary now these are 🍀 được gọi là từ điển bây giờ đây là
  really common especially when you're 🍀 thực sự phổ biến đặc biệt là khi bạn
  working with data from a remote database 🍀 làm việc với dữ liệu từ cơ sở dữ liệu từ xa
  or from a third party API alright stay 🍀 hoặc từ API của bên thứ ba, không sao đâu
  tuned I'm looking at the Swift 🍀 điều chỉnh tôi đang nhìn vào Swift
  documentation here and they give a 🍀 tài liệu ở đây và họ đưa ra một
  really good example about the dictionary 🍀 ví dụ thực sự tốt về từ điển
  collection type and before we go into 🍀 loại bộ sưu tập và trước khi chúng tôi đi vào
  the actual example let's take a look at 🍀 ví dụ thực tế chúng ta hãy xem
  the differences between dictionaries and 🍀 sự khác biệt giữa từ điển và
  race which we went over in the previous 🍀 cuộc đua mà chúng tôi đã đi qua trong phần trước
  lesson and talked a little bit about 🍀 bài học và nói một chút về
  what makes them different and when you 🍀 điều gì làm cho chúng khác biệt và khi bạn
  would use one over the other so in the 🍀 sẽ sử dụng cái này hơn cái kia vì vậy trong
  previous lesson when we talked about 🍀 bài học trước khi chúng ta nói về
  arrays I said that it's kind of 🍀 mảng tôi đã nói rằng đó là loại
  essentially a list of your data with 🍀 về cơ bản là một danh sách dữ liệu của bạn với
  order 0 all the way down sequentially 🍀 đặt hàng 0 tất cả các cách xuống tuần tự
  now order matters write that data at 🍀 bây giờ các vấn đề đặt hàng ghi dữ liệu đó tại
  index 0 is different from the data at 🍀 chỉ số 0 khác với dữ liệu tại
  index 1 2 or 3 the dictionary on the 🍀 chỉ mục 1 2 hoặc 3 từ điển trên
  other hand is unsorted there is no order 🍀 mặt khác không được sắp xếp không có thứ tự
  now how do you put data into a 🍀 bây giờ làm thế nào để bạn đưa dữ liệu vào một
  dictionary 🍀 từ điển
  well data is put in as key value pairs 🍀 dữ liệu tốt được đưa vào dưới dạng các cặp giá trị chính
  so each piece of data that you put into 🍀 vì vậy mỗi phần dữ liệu mà bạn đưa vào
  the dictionary you have to give it an 🍀 từ điển bạn phải cung cấp cho nó một
  associated key to retrieve that piece of 🍀 khóa được liên kết để truy xuất phần đó
  data later on think of it as kind of 🍀 dữ liệu sau này nghĩ về nó như là loại
  like well a dictionary where you have 🍀 cũng giống như một cuốn từ điển nơi bạn có
  maybe the word being the key right when 🍀 có lẽ từ đó là chìa khóa ngay khi
  you're flipping through a dictionary or 🍀 bạn đang lật qua một cuốn từ điển hoặc
  you're looking for the word the value 🍀 bạn đang tìm kiếm từ giá trị
  that you get from finding that word is 🍀 mà bạn nhận được từ việc tìm kiếm từ đó là
  the definition so you can kind of think 🍀 định nghĩa để bạn có thể suy nghĩ
  of it like that or in this case the 🍀 của nó như thế hoặc trong trường hợp này
  example that they give 🍀 ví dụ mà họ đưa ra
  is that the value is the airport name 🍀 là giá trị là tên sân bay
  whereas the key is the airport code now 🍀 trong khi chìa khóa là mã sân bay bây giờ
  one very important thing that I need to 🍀 một điều rất quan trọng mà tôi cần
  stress is that the keys have to be 🍀 nhấn mạnh là các phím phải được
  unique right or else it's not gonna work 🍀 duy nhất đúng nếu không nó sẽ không hoạt động
  if you have two different pieces of data 🍀 nếu bạn có hai phần dữ liệu khác nhau
  with the same key how are you gonna 🍀 với cùng một chìa khóa, bạn sẽ như thế nào
  distinguish between the two when you 🍀 phân biệt giữa hai khi bạn
  look them up now why don't we jump into 🍀 tìm kiếm chúng bây giờ tại sao chúng ta không nhảy vào
  the playground and let me show you an 🍀 sân chơi và để tôi chỉ cho bạn một
  example of how to declare a dictionary 🍀 ví dụ về cách khai báo từ điển
  and some of the ways that we can use it 🍀 và một số cách mà chúng ta có thể sử dụng nó
  alright first let's declare a dictionary 🍀 được rồi, trước tiên hãy khai báo một từ điển
  so I'm gonna say var Mayan dictionary 🍀 vì vậy tôi sẽ nói từ điển var Maya
  equals and just like an array you start 🍀 bằng và giống như một mảng bạn bắt đầu
  with two square brackets like that and 🍀 với hai dấu ngoặc vuông như thế và
  then inside you specify the data type of 🍀 sau đó bên trong bạn chỉ định kiểu dữ liệu của
  the key followed by a colon and then the 🍀 phím theo sau là dấu hai chấm và sau đó là
  data type of the actual value that 🍀 kiểu dữ liệu của giá trị thực mà
  you're trying to store so in this case 🍀 bạn đang cố lưu trữ như vậy trong trường hợp này
  I'm gonna put string colon string which 🍀 Tôi sẽ đặt chuỗi dấu hai chấm chuỗi đó
  means that my keys are going to be 🍀 có nghĩa là chìa khóa của tôi sẽ được
  strings and my values are also going to 🍀 chuỗi và các giá trị của tôi cũng sẽ
  be strained and just like you saw in the 🍀 bị căng thẳng và giống như bạn đã thấy trong
  previous lesson about how to declare an 🍀 bài học trước về cách khai báo một
  empty array you can do the same thing 🍀 mảng trống, bạn có thể làm điều tương tự
  I'm gonna declare an empty dictionary 🍀 Tôi sẽ khai báo một từ điển rỗng
  just like this so essentially this is 🍀 giống như thế này nên về cơ bản đây là
  the type of the dictionary alright so 🍀 loại từ điển được rồi
  let's go ahead and put some data into 🍀 hãy tiếp tục và đưa một số dữ liệu vào
  our dictionary so we're gonna type my 🍀 từ điển của chúng tôi vì vậy chúng tôi sẽ gõ của tôi
  dictionary and then we're gonna have two 🍀 từ điển và sau đó chúng ta sẽ có hai
  square brackets in an index you would 🍀 dấu ngoặc vuông trong một chỉ mục bạn sẽ
  put the index in here right well for the 🍀 đặt chỉ mục ở đây ngay cho
  dictionary instead you put the key in 🍀 từ điển thay vì bạn đặt chìa khóa vào
  here now our keys are strings right so 🍀 ở đây bây giờ các phím của chúng tôi là các chuỗi đúng như vậy
  I'm gonna go ahead and put a new string 🍀 Tôi sẽ tiếp tục và đặt một chuỗi mới
  key in here and then assign it the value 🍀 nhập vào đây và sau đó gán cho nó giá trị
  that is going to be associated with that 🍀 điều đó sẽ được liên kết với điều đó
  key now the example that I want to use 🍀 nhập ngay ví dụ mà tôi muốn sử dụng
  is cars and license plates because the 🍀 là ô tô và biển số vì
  license plates are unique as well so why 🍀 biển số xe cũng là duy nhất vậy tại sao
  don't we just make one up so let's say 🍀 không phải chúng ta chỉ tạo nên một vì vậy hãy nói
  something like that and let's say that 🍀 một cái gì đó như thế và hãy nói rằng
  this is 🍀 đây là
  a red Ferrari 🍀 một chiếc Ferrari màu đỏ
  and just like that I've put in some data 🍀 và cứ như thế tôi đã đưa vào một số dữ liệu
  into my dictionary with this associated 🍀 vào từ điển của tôi với liên kết này
  key now how do we go ahead and retrieve 🍀 chìa khóa bây giờ làm thế nào để chúng ta tiếp tục và truy xuất
  that value well let's try and print that 🍀 giá trị đó tốt, hãy thử và in nó
  out first you go to my dictionary and 🍀 đầu tiên bạn vào từ điển của tôi và
  then you put in the square brackets and 🍀 sau đó bạn đặt trong ngoặc vuông và
  you pass in your key so ours would be 🍀 bạn chuyển chìa khóa của bạn để chúng tôi sẽ là
  SJD 2 9 3 so let's go ahead and print 🍀 SJD 2 9 3 vì vậy hãy tiếp tục và in
  that so you can see that it is a red 🍀 để bạn có thể thấy rằng nó có màu đỏ
  Ferrari but notice that it's wrapped in 🍀 Ferrari nhưng chú ý rằng nó được bọc trong
  here in an optional type the reason for 🍀 ở đây trong một loại tùy chọn lý do cho
  that is because if you try and access 🍀 đó là bởi vì nếu bạn thử và truy cập
  let's say a key that doesn't exist let 🍀 giả sử một khóa không tồn tại let
  me just make something up let's just say 🍀 tôi chỉ cần làm một cái gì đó lên hãy chỉ cần nói
  1 and there is no key in our dictionary 🍀 1 và không có từ khóa nào trong từ điển của chúng tôi
  with 1 you know as the key when you run 🍀 với 1 bạn biết là chìa khóa khi bạn chạy
  it you actually get nil so that's why 🍀 nó bạn thực sự nhận được con số không vì vậy đó là lý do tại sao
  what you get from this is an optional 🍀 những gì bạn nhận được từ điều này là một tùy chọn
  type it could be a string or it could be 🍀 gõ nó có thể là một chuỗi hoặc nó có thể là
  nil all right so I'm going to write down 🍀 không sao cả nên tôi sẽ viết ra
  some comments here assigning data into a 🍀 một số nhận xét ở đây gán dữ liệu vào một
  dictionary 🍀 từ điển
  this is declaring and Mt stroke stroke 🍀 đây là khai báo và Mt đột quỵ
  dictionary this would be retrieving a 🍀 từ điển này sẽ lấy một
  value 🍀 giá trị
  [Applause] 🍀 [Vỗ tay]
  as often all straight so typically when 🍀 như thường xuyên tất cả thẳng như vậy thông thường khi
  you try to retrieve the value for this 🍀 bạn cố gắng truy xuất giá trị cho cái này
  key you would assign it to something 🍀 chìa khóa bạn sẽ gán nó cho một cái gì đó
  like that let's say my car is equal to 🍀 như thế giả sử xe của tôi bằng
  this and then you would have to check 🍀 cái này và sau đó bạn sẽ phải kiểm tra
  using one of those methods we talked in 🍀 sử dụng một trong những phương pháp mà chúng ta đã nói trong
  the optionals lesson like checking it 🍀 bài học tùy chọn như kiểm tra nó
  against nil using equal equals or using 🍀 chống lại con số không bằng cách sử dụng bằng hoặc sử dụng
  optional binding or anything like that 🍀 ràng buộc tùy chọn hoặc bất cứ điều gì như thế
  okay so how about placing the value for 🍀 được rồi, vậy còn việc đặt giá trị cho
  a key so let's say we changed cars but 🍀 một chiếc chìa khóa, vì vậy hãy nói rằng chúng tôi đã đổi xe nhưng
  we kept the same license plate 🍀 chúng tôi giữ cùng biển số xe
  well in order to change the data for 🍀 tốt để thay đổi dữ liệu cho
  that key you would just assign it 🍀 chìa khóa đó bạn sẽ chỉ định nó
  something different so let's call it 🍀 một cái gì đó khác nhau vì vậy hãy gọi nó
  black Lambo all right so just like that 🍀 Lambo đen được rồi, cứ như vậy đi
  we've replaced the value for that 🍀 chúng tôi đã thay thế giá trị cho điều đó
  specific key now let's say that you've 🍀 khóa cụ thể bây giờ giả sử rằng bạn đã
  sold the car and you've kept the license 🍀 đã bán xe và bạn đã giữ giấy phép
  plate so here's how you remove a value 🍀 tấm vì vậy đây là cách bạn loại bỏ một giá trị
  for a key equals nil simply by assigning 🍀 cho một khóa bằng không đơn giản bằng cách chỉ định
  it now like that you're essentially 🍀 nó bây giờ giống như bạn về cơ bản
  removing the data for that key and the 🍀 xóa dữ liệu cho khóa đó và
  last thing I want to show you is how to 🍀 điều cuối cùng tôi muốn chỉ cho bạn là làm thế nào để
  iterate or go through the items of the 🍀 lặp lại hoặc đi qua các mục của
  dictionary and remember there is no 🍀 từ điển và nhớ rằng không có
  order but we can still loop through the 🍀 thứ tự nhưng chúng ta vẫn có thể lặp qua
  items of an of a dictionary by using the 🍀 các mục của một từ điển bằng cách sử dụng
  for loop so it would be for something 🍀 cho vòng lặp vì vậy nó sẽ là cho một cái gì đó
  right for something I'm not I don't want 🍀 đúng cho một cái gì đó tôi không tôi không muốn
  to write it right now I just want to 🍀 để viết nó ngay bây giờ tôi chỉ muốn
  fill in the other part for something in 🍀 điền vào phần khác cho một cái gì đó trong
  my dictionary and then in here do stuff 🍀 từ điển của tôi và sau đó ở đây làm công cụ
  for each item of the dictionary now what 🍀 cho mỗi mục của từ điển bây giờ những gì
  is this something in here 🍀 cái này có gì ở đây không
  well since dictionaries work in key 🍀 tốt vì từ điển hoạt động trong khóa
  value pairs right so we basically use 🍀 cặp giá trị đúng vì vậy về cơ bản chúng tôi sử dụng
  something called a tuple and a tuple you 🍀 một cái gì đó gọi là tuple và tuple bạn
  can think of it as like a collection of 🍀 có thể nghĩ về nó giống như một bộ sưu tập
  variables and what we're gonna put in 🍀 các biến và những gì chúng ta sẽ đưa vào
  here is let's say key and value so it's 🍀 đây là giả sử khóa và giá trị vì vậy nó là
  going to take each item out of the 🍀 sẽ lấy từng món đồ ra khỏi
  dictionary it's gonna put the key into 🍀 từ điển nó sẽ đưa chìa khóa vào
  this variable and it's gonna put the 🍀 biến này và nó sẽ đặt
  value into this variable all right so we 🍀 giá trị vào biến này được rồi vì vậy chúng tôi
  can do something like this print key 🍀 có thể làm một cái gì đó như phím in này
  let's say I'll see what that does we 🍀 giả sử tôi sẽ xem chúng ta làm gì
  should put another car in here just to 🍀 nên đặt một chiếc xe khác ở đây chỉ để
  make things a little more interesting 🍀 làm cho mọi thứ thú vị hơn một chút
  let's just use okay let's try to print 🍀 chúng ta hãy sử dụng được rồi, hãy thử in
  this now so we get our two keys but we 🍀 điều này ngay bây giờ để chúng tôi nhận được hai chìa khóa nhưng chúng tôi
  only have one ah that's because we're we 🍀 chỉ có một ah đó là bởi vì chúng ta là chúng ta
  removed this car for this key why don't 🍀 tháo xe này lấy chìa khóa này sao không
  we go ahead and comment that out so we 🍀 chúng tôi tiếp tục và nhận xét rằng vì vậy chúng tôi
  still have two cars in our dictionary 🍀 vẫn có hai chiếc xe trong từ điển của chúng tôi
  and why don't we run it now so now you 🍀 và tại sao chúng ta không chạy nó ngay bây giờ vậy bây giờ bạn
  can see the two keys we can also print 🍀 có thể thấy hai phím chúng ta cũng có thể in
  out the value instead you'll see our two 🍀 thay vào đó, bạn sẽ thấy hai giá trị của chúng tôi
  cars here now we can use them separately 🍀 ô tô ở đây bây giờ chúng ta có thể sử dụng chúng một cách riêng biệt
  we can insert the key say is a value 🍀 chúng ta có thể chèn khóa nói là một giá trị
  could do that 🍀 có thể làm điều đó
  so that's how you iterate through a 🍀 vì vậy đó là cách bạn lặp qua một
  dictionary so that pretty much wraps up 🍀 từ điển để kết thúc tốt đẹp
  using a dictionary and you will find 🍀 sử dụng một từ điển và bạn sẽ tìm thấy
  that it will come in handy alongside 🍀 rằng nó sẽ có ích cùng với
  using a race when it comes to organizing 🍀 sử dụng một cuộc đua khi tổ chức
  your data so if you liked this video 🍀 dữ liệu của bạn vì vậy nếu bạn thích video này
  please hit the thumbs up button and 🍀 vui lòng nhấn nút thích và
  please subscribe if you haven't already 🍀 hãy đăng ký nếu bạn chưa có
  now click on over to the next lesson and 🍀 bây giờ hãy nhấp vào bài học tiếp theo và
  we'll talk over there 🍀 chúng ta sẽ nói chuyện ở đó
  
