https://www.youtube.com/watch?v=QJHmhLGv-_0&t=130s

(49) COMPLETE User Login - Sign Up App - Swift UI + Firebase - Async
Await - YouTube
       🍀   
Main subtitle   🍀   Second subtitle
what's going on everybody Stefan here   🍀   chuyện gì đang xảy ra vậy mọi người Stefan
ở đây
from App stuff welcome back to the   🍀   từ Nội dung ứng dụng chào mừng các bạn
quay trở lại
channel hope you guys are doing well man   🍀   kênh, hy vọng các bạn đang làm tốt.
I had a lot going on the last couple   🍀   Tôi đã có rất nhiều
months it's been a while changed
Apartments changed jobs that's a video   🍀   việc phải làm trong vài tháng qua, đã lâu rồi
các căn hộ đã thay đổi.
for another time right now we got an
awesome video for you guys here today   🍀   video tuyệt vời dành cho các bạn ở đây hôm
nay,
where we're going to be building a full   🍀   nơi chúng ta sẽ xây dựng một
authentication Suite using Swift UI and   🍀   Bộ xác thực đầy đủ bằng cách sử dụng
Swift UI và
Firebase now this has all the latest and   🍀   Firebase, giờ đây, bộ này có tất cả những
Công nghệ mới nhất và
greatest Technologies man with async   🍀   tuyệt vời nhất với
await navigation Stacks the latest   🍀   điều hướng không đồng bộ. Xếp chồng
version of Swift UI and Firebase all of   🍀   phiên bản mới nhất của Swift UI và
Firebase, tất cả những thứ
that good stuff it's going to help you   🍀   đó thứ tốt nó sẽ giúp bạn
sign users up sign them in sign them out   🍀   đăng ký người dùng đăng ký họ đăng nhập
đăng xuất
we're going to have a custom user   🍀   chúng tôi sẽ có
profile all of that awesome stuff so   🍀   hồ sơ người dùng tùy chỉnh tất cả những
thứ tuyệt vời đó vì vậy
without any further Ado guys let's go   🍀   không cần thêm bất kỳ Ado nào nữa, hãy
ahead and check out what the app's going   🍀   tiếp tục và xem ứng dụng sẽ
to look like and see what you're going   🍀   trông như thế nào và xem những gì bạn sẽ
to be building before we jump into the   🍀   xây dựng trước khi chúng tôi bắt đầu viết
code   🍀   mã
[Music]   🍀   [Âm nhạc]
so we have our beautiful login page here   🍀   để chúng tôi có trang đăng nhập tuyệt đẹp
của chúng tôi ở đây,
you guys see we have an icon some custom   🍀   các bạn thấy chúng tôi có một biểu tượng,
một số




about:blank   🍀   1/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
input fields we also have some form   🍀   trường nhập tùy chỉnh, chúng tôi cũng có
một số
validation so this button is not   🍀   xác thực biểu mẫu nên nút này không thể
clickable right now until the user fills   🍀   nhấp được ngay bây giờ cho đến khi người
dùng điền
out the form here clicking this down at   🍀   vào biểu mẫu ở đây, nhấp vào biểu mẫu này
ở
the bottom we have our sign up page so   🍀   dưới cùng, chúng tôi có trang đăng ký của
mình, vì vậy
this is where a user would create their   🍀   đây là nơi người dùng sẽ tạo
account if they don't have one we also   🍀   tài khoản của họ nếu họ không có tài khoản,
chúng tôi cũng
have a really awesome feature here guys   🍀   có một tính năng thực sự tuyệt vời ở đây,
that I love which is confirming your   🍀   tôi love đang xác nhận mật khẩu của bạn
password
so you guys can see here that   🍀   để các bạn có thể thấy ở đây rằng
it will indicate to me whether or not my   🍀   nó sẽ cho tôi biết liệu
passwords match which I think is really   🍀   mật khẩu của tôi có khớp hay không, điều
mà tôi nghĩ là thực sự
cool and let's go ahead and take a look   🍀   tuyệt vời và hãy tiếp tục
and see what it looks like to log in so   🍀   và xem giao diện đăng nhập sẽ như thế nào
if we say test gmail.com this is just a   🍀   nếu chúng ta nói thử nghiệm gmail.com, đây
chỉ là
test account I created pay attention to   🍀   tài khoản thử nghiệm mà tôi đã tạo, hãy chú
ý đến
this button guys   🍀   nút này nhé các bạn
once the password has a certain amount   🍀   khi mật khẩu có một số lượng
of characters and both Fields have you   🍀   ký tự nhất định và cả hai Trường bạn đều
know the correct inputs our button   🍀   biết đầu vào chính xác, nút của chúng tôi
becomes validated and allows us to click   🍀   sẽ được xác thực và cho phép chúng tôi
nhấp
on that and then if we hit sign in it   🍀   vào đó và sau đó nếu chúng tôi nhấn đăng
nhập, nó
will log Us in and take us to our custom   🍀   sẽ đăng nhập Chúng tôi và đưa chúng tôi
đến trang hồ sơ tùy chỉnh của chúng tôi
profile page here so this is information   🍀   tại đây, vì vậy đây là thông tin
that is actually being fetched from   🍀   thực sự được tìm nạp từ
Firebase so Firebase is a back end   🍀   Firebase, vì vậy Firebase là
system that we're going to set up so   🍀   hệ thống phụ trợ mà chúng tôi sẽ thiết lập
để hệ thống




about:blank   🍀   2/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
this has full back-end support which is   🍀   này có đầy đủ hỗ trợ -end, đó là
what you want for an app like this you   🍀   những gì bạn muốn cho một ứng dụng như
thế này, bạn
want to be able to save users   🍀   muốn có thể lưu
information in a database and their   🍀   thông tin người dùng trong cơ sở dữ liệu và
authentication information like their   🍀   thông tin xác thực của họ như
user their their username and password   🍀   người dùng của họ, tên người dùng và mật
khẩu
and database and we're going to be doing   🍀   và cơ sở dữ liệu của họ và chúng tôi sẽ
thực hiện
all of that with Firebase which is   🍀   tất cả điều đó với Firebase, điều này
really awesome and you guys will see   🍀   thực sự tuyệt vời và các bạn sẽ thấy
here we also have the functionality to   🍀   ở đây, chúng tôi cũng có chức năng
be able to close out of the app and   🍀   có thể đóng ứng dụng và
relaunch it and it will keep us logged   🍀   khởi chạy lại ứng dụng và nó sẽ giữ cho
chúng tôi đăng
in unless we sign out which is what   🍀   nhập trừ khi chúng tôi đăng xuất, đó là điều
happens right here so that's just a   🍀   xảy ra ngay tại đây, vì vậy đó chỉ là một
brief rundown of the app guys you can   🍀   tóm tắt ngắn gọn về các ứng dụng,
once again drag and drop this into any   🍀   một lần nữa, bạn có thể kéo và thả ứng
dụng này vào bất
one of your apps that needs user   🍀   kỳ ứng dụng nào của bạn cần
authentication so with that being said   🍀   xác thực người dùng, vì vậy, như đã nói,
let's go ahead and hop into xcode now   🍀   hãy tiếp tục và chuyển sang xcode ngay bây
giờ
and get started with the code   🍀   và bắt đầu với mã
all right guys so let's get started by   🍀   nhé mọi người, vì vậy hãy bắt đầu bằng
cách
opening up xcode and creating a new   🍀   mở xcode và tạo một
project I'm going to hit next here I'm   🍀   dự án mới mà tôi sẽ thực hiện tiếp theo ở
đây, tôi
going to call this Swift UI   🍀   sẽ gọi đây là hướng dẫn xác thực giao diện
người dùng Swift
auth tutorial
and obviously make sure Swift UI is   🍀   và rõ ràng là đảm bảo rằng giao diện người
dùng Swift được
selected as your interface language is   🍀   chọn làm ngôn ngữ giao diện của bạn là
Swift and we don't need core data or   🍀   Swift và chúng tôi không cần dữ liệu cốt lõi
hoặc
tests uh let's go ahead and hit next   🍀   kiểm tra uh, hãy tiếp tục và nhấn tiếp theo


about:blank

3/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and go ahead and get started with   🍀   và tiếp tục và bắt đầu
setting up our project directory   🍀   thiết lập thư mục dự án của chúng ta
[Music]   🍀   [Âm nhạc]
so I'm going to go here and create a   🍀   vì vậy tôi sẽ đến đây và tạo một
couple groups if you guys have watched   🍀   vài nhóm nếu các bạn đã xem
my tutorials before you know I always   🍀   hướng dẫn của tôi trước khi bạn biết tôi
luôn
start every xcode project like this I   🍀   bắt đầu mọi dự án xcode như thế này, tôi
like to organize my files so you can   🍀   muốn sắp xếp các tệp của mình để bạn có
thể
right click here and select new group   🍀   nhấp chuột phải vào đây và chọn nhóm mới.
alternatively you can hit command option   🍀   Ngoài ra, bạn có thể nhấn tùy chọn lệnh
n and it will create some groups for you   🍀   n và nó sẽ tạo một số nhóm cho bạn,
so let's go ahead and create like five I   🍀   vì vậy hãy tiếp tục và tạo như năm nhóm.
Tôi
think we need   🍀   nghĩ chúng ta cần
so the first one is going to be called   🍀   cái đầu tiên sẽ được gọi là
app   🍀   ứng dụng,
the next one is going to be called   🍀   cái tiếp theo sẽ được gọi là
components   🍀   các thành phần
and this is where we're going to put all   🍀   và đây là nơi chúng ta sẽ đặt tất
of our reusable components   🍀   cả các thành phần có thể tái sử dụng của
mình, cái
um this next one is going to be called   🍀   tiếp theo này sẽ được gọi là
The Core   🍀   Cốt lõi
and this is where the majority of our   🍀   và đây là nơi chứa phần lớn chế độ
views and view models will live this   🍀   xem và chế độ xem của chúng tôi sẽ hoạt
động, chế độ xem
next one is going to be called   🍀   tiếp theo này sẽ được gọi là
uh let's see model I believe   🍀   uh hãy xem mô hình tôi tin
and I think that's all we need so let's   🍀   và tôi nghĩ đó là tất cả những gì chúng tôi
cần, vì vậy hãy
go ahead and just delete that last group   🍀   tiếp tục và chỉ cần xóa nhóm cuối cùng,
we only need four app components core   🍀   chúng tôi chỉ cần bốn thành phần ứng dụng
lõi
and model   🍀   và mô hình
and we are going to start by moving this   🍀   và chúng tôi là sẽ bắt đầu bằng cách di
chuyển




about:blank   🍀   4/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
app file up into our app folder   🍀   tệp ứng dụng này vào thư mục ứng dụng
của chúng tôi
and then we are going to uh   🍀   và sau đó chúng tôi sẽ vào uh
within our core folder guys we're going   🍀   trong thư mục lõi của chúng tôi, chúng tôi sẽ
to create another one   🍀   tạo một tệp khác
called root   🍀   có tên là root
and we are going to put our content view   🍀   và chúng tôi sẽ đặt chế độ xem nội dung
của mình
there so this is like the root view of   🍀   ở đó để đây giống như chế độ xem gốc của
our application okay so that's our   🍀   ứng dụng của chúng tôi được rồi, đó là Chế
content View   🍀   độ xem nội dung của chúng tôi
and now what I want us to do is also   🍀   và bây giờ, điều tôi muốn chúng tôi làm
cũng là
create another folder here   🍀   tạo một thư mục khác ở đây
called Authentication   🍀   có tên là Xác thực
and one more folder called profile   🍀   và một thư mục nữa có tên là hồ sơ
and let's adjust these so that they are   🍀   và hãy điều chỉnh chúng
in alphabetical order   🍀   theo thứ tự bảng chữ cái
uh yep that looks good so let me break   🍀   uh vâng trông ổn đấy Hãy để tôi phân
this down really quick all of our   🍀   tích vấn đề này thật nhanh, tất cả
authentication stuff like this login   🍀   nội dung xác thực của chúng tôi như chế
view sign up view or auth authentication   🍀   độ xem đăng nhập, chế độ xem đăng ký
hoặc
view model is all going to live here   🍀   mô hình chế độ xem xác thực xác thực đều
sẽ tồn tại ở đây,
um we're going to have a profile page as   🍀   chúng tôi sẽ có một trang hồ sơ như
you saw in the demo that's going to go   🍀   bạn đã thấy trong bản demo sắp ra mắt ở
here and then our content view is   🍀   đây và sau đó chế độ xem nội dung của
chúng tôi
obviously inside of our root and then   🍀   rõ ràng là bên trong thư mục gốc của chúng
tôi và sau đó
our model folder is going to have all   🍀   thư mục mô hình của chúng tôi sẽ có tất cả
our data models and stuff so now that   🍀   các mô hình dữ liệu và nội dung của chúng
tôi, vì vậy bây giờ
we've got our project directory   🍀   chúng tôi đã tổ chức thư mục dự án của
mình,
organized guys let's go ahead and get   🍀   hãy tiếp tục và bắt
started with actually creating some of   🍀   đầu thực sự tạo một số
the user interface components for our   🍀   các thành phần giao diện người dùng cho
ứng dụng của chúng ta

about:blank

5/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
app here we're going to start off with   🍀   ở đây, chúng ta sẽ bắt đầu với chế
this login view alright guys so let's   🍀   độ xem đăng nhập này nhé các bạn, vì vậy
hãy
hop up to our authentication folder and   🍀   chuyển đến thư mục xác thực của chúng ta
và
create a new file just hit command n   🍀   tạo một tệp mới chỉ cần nhấn lệnh và
it's going to be a swift UI View and   🍀   nó sẽ là một Chế độ xem giao diện người
dùng nhanh chóng và
we're going to hit next and we are going   🍀   chúng ta sẽ sẽ nhấn tiếp theo và chúng tôi
sẽ
to call this login View and you guys   🍀   gọi đây là Chế độ xem đăng nhập và các
bạn
might have guessed it this is going to   🍀   có thể đoán nó sẽ
be the file that we build our login view   🍀   là tệp mà chúng tôi xây dựng chế độ xem
đăng nhập của mình
with and let's go ahead and just get   🍀   và hãy tiếp tục và bắt
started right away so immediately guys   🍀   đầu ngay lập tức vì vậy chúng tôi muốn
ngay lập tức
we want to note that we want to wrap   🍀   lưu ý rằng chúng tôi muốn bọc
this inside of a navigation stack and   🍀   cái này bên trong ngăn xếp điều hướng và
that's because we want to be able to   🍀   đó là vì chúng tôi muốn có thể
move back and forth between our login   🍀   di chuyển qua lại giữa
and sign up views okay we need to use a   🍀   chế độ xem đăng nhập và đăng ký của
mình, được rồi, chúng tôi cần sử dụng
navigation stack to do that keep in mind   🍀   ngăn xếp điều hướng để thực hiện điều đó,
hãy nhớ rằng
I'm saying navigation stack not   🍀   tôi đang nói ngăn điều hướng không phải
chế độ xem điều hướng Giao
navigation view Swift UI recently   🍀   diện người dùng Swift gần đây
released a new API that replaced the old   🍀   đã phát hành một API mới thay thế
navigation views with something called a   🍀   chế độ xem điều hướng cũ bằng một thứ
gọi là
navigation stack if you guys want to   🍀   ngăn điều hướng nếu các bạn muốn
learn more about that I have a tutorial   🍀   tìm hiểu thêm về điều đó. Tôi có một hướng
dẫn
for that the link is in the description   🍀   về liên kết đó trong phần mô tả,
make sure you check that out now if you   🍀   hãy đảm bảo bạn kiểm tra điều đó ra ngay
bây giờ nếu bạn
want to learn more about it with a fun   🍀   muốn tìm hiểu thêm về nó với một hướng
dẫn thú vị,
tutorial


about:blank

6/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
so let's go ahead and get started by   🍀   vì vậy hãy tiếp tục và bắt đầu bằng cách
wrapping this inside of a navigation   🍀   gói phần này bên trong ngăn xếp điều
hướng
stack
and within that we are going to have a   🍀   và bên trong đó chúng ta sẽ có một
v-stack because obviously we have a   🍀   ngăn xếp v vì rõ ràng chúng ta có một
vertically stacked list of view   🍀   danh sách xếp chồng lên nhau theo chiều
dọc xem
components here so we're going to say   🍀   các thành phần ở đây, vì vậy chúng tôi sẽ
nói
v-stack and let's go ahead and just   🍀   v-stack và hãy tiếp tục và
create a quick outline for this so we're   🍀   tạo một phác thảo nhanh cho điều này, vì
vậy chúng tôi
going to say this is our image   🍀   sẽ nói đây là hình ảnh của chúng tôi,
here is where we're going to put our   🍀   đây là nơi chúng tôi sẽ đặt
form fields   🍀   các trường biểu mẫu của mình
and here's our sign in button   🍀   và đây là nút đăng nhập của chúng tôi
here's our sign up button   🍀   đây là nút đăng ký của chúng tôi,
so now let's go ahead and just get   🍀   vì vậy bây giờ hãy tiếp tục và bắt
started with what we need to do guys to   🍀   đầu với những gì chúng tôi cần làm để
start rendering this out so get started   🍀   bắt đầu kết xuất cái này, vì vậy hãy bắt đầu
with the code so before we do I'm going   🍀   với mã vì vậy trước khi chúng tôi thực hiện,
tôi sẽ
to drag an asset into my project you   🍀   kéo một nội dung vào dự án các
guys don't have this it's part of the   🍀   bạn không có, đây là một phần của
completed source code you don't need it   🍀   mã nguồn đã hoàn thành, bạn không cần
nó,
you could literally just go to Google   🍀   theo nghĩa đen, bạn có thể chỉ cần truy cập
Google để
download any image and drop it into your   🍀   tải xuống bất kỳ hình ảnh nào và thả nó vào
xcode project but if you guys do want   🍀   dự án xcode của mình nhưng nếu các bạn
muốn
access to the source code just head over   🍀   truy cập vào mã nguồn thì chỉ cần hãy truy
cập
to my website at stefancodes.com and   🍀   trang web của tôi tại stefancodes.com và
check out my pricing plan so any one of   🍀   xem gói giá của tôi để bất kỳ
these plans will get you access to the   🍀   gói nào trong số các gói này sẽ giúp bạn
truy cập vào
YouTube courses which this will be added   🍀   các khóa học YouTube mà gói này sẽ được
thêm




about:blank   🍀   7/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
to but the other plans give you upgraded   🍀   vào nhưng các gói khác cung cấp cho bạn
quyền lợi được nâng cấp,
benefits right so the diamond plan is   🍀   vì vậy gói kim cương là lựa chọn tốt nhất
the most popular right now it gives you   🍀   phổ biến nhất hiện nay, nó cho phép bạn
access to everything on the site for 40   🍀   truy cập vào mọi thứ trên trang web với giá
40
bucks a month that's YouTube courses Pro   🍀   đô la một tháng, đó là các khóa học
YouTube Các khóa học chuyên nghiệp
courses and all of the source codes so   🍀   và tất cả các mã nguồn, do
that's thousands of dollars worth of   🍀   đó, giá trị hàng nghìn đô la
value for just 40 bucks a month so make   🍀   chỉ với 40 đô la một tháng, vì vậy hãy
sure you guys go ahead and check that   🍀   đảm bảo rằng các bạn sẽ tiếp tục và kiểm
tra điều đó
out and sign up to become a member on   🍀   và đăng ký để trở thành thành viên trên
the site to get stuff for free and get   🍀   trang web để nhận nội dung miễn phí và
được
discounts on awesome stuff   🍀   giảm giá cho những nội dung tuyệt vời,
so let's go back to xcode and I'm going   🍀   vì vậy, hãy quay lại xcode và
to now create my image here let me   🍀   bây giờ tôi sẽ tạo hình ảnh của mình ở đây,
hãy để tôi
minimize this really quickly so let's   🍀   giảm thiểu điều này thật nhanh, vì vậy hãy
see we're going to create an image   🍀   hãy xem chúng tôi sẽ tạo một hình ảnh
Firebase Dash logo and guys for those of   🍀   logo Firebase Dash và các bạn dành cho
những người bạn
you who don't know this is obviously   🍀   chưa biết đây rõ ràng
just the name of whatever is in that   🍀   chỉ là tên của bất kỳ thứ gì có trong
your assets folder we need to make this   🍀   thư mục nội dung của bạn, chúng tôi cần
tạo tỷ lệ chấm
dot resizable   🍀   có thể thay đổi
dot scale to fill   🍀   kích thước dấu chấm này để lấp đầy
and that's still going to look terrible   🍀   và đó là vẫn sẽ trông rất tệ,
so we need to give it a frame of a width   🍀   vì vậy chúng tôi cần cung cấp cho nó một
khung có chiều rộng
and a height of a hundred by 120.   🍀   và chiều cao là 100 x 120.
and that looks great right and then   🍀   và điều đó trông rất tuyệt và sau đó
we're going to say dot padding   🍀   chúng tôi sẽ nói phần đệm chấm chấm
dot vertical   🍀   dọc
32 pixels okay   🍀   32 pixel được,
so awesome and at the bottom of all this   🍀   thật tuyệt vời và tại dưới cùng của tất cả




about:blank   🍀   8/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
guys in between sign in and sign up   🍀   những người này ở giữa đăng nhập và
đăng ký,
let's go ahead and add a spacer   🍀   hãy tiếp tục và thêm một dấu cách
and that's just going to move this up to   🍀   và điều đó sẽ di chuyển cái này lên
the top which is exactly what we want   🍀   trên cùng, đó chính xác là những gì chúng
ta muốn
now we're going to create these form   🍀   bây giờ chúng ta sẽ tạo các
Fields guys so typically what I do is I   🍀   Trường biểu mẫu này, những người này
thường như thế nào Tôi làm là tôi
will I would create this like the bad   🍀   sẽ Tôi sẽ tạo cái này giống như cách tệ hại
mà
way the Newbie way of like copy and   🍀   cách của Người mới giống như sao chép và
pasting pretty much the same code   🍀   dán gần như cùng một đoạn
um for these form fields and you guys   🍀   mã cho các trường biểu mẫu này và các
bạn
notice they're extremely similar the   🍀   để ý rằng chúng cực kỳ giống nhau,
only things that differ between them are   🍀   điều khác biệt duy nhất giữa chúng là
the titles and the actual text that gets   🍀   tiêu đề và văn bản thực tế được
passed in so instead of doing it the bad   🍀   chuyển vào nên thay vì thực hiện theo
way first and refactoring it I'm just   🍀   cách xấu trước và tái cấu trúc nó, tôi
going to skip straight to the good way   🍀   sẽ chuyển thẳng sang cách tốt, vì vậy
so we're going to create a reusable   🍀   chúng tôi sẽ tạo một thành phần có thể tái
sử dụng
component for these input views so we're   🍀   cho các chế độ xem đầu vào này, vì vậy
chúng tôi sẽ
going to go up to our components folder   🍀   sẽ đi tới thư mục thành phần của chúng tôi
here and create a new file and it's   🍀   ở đây và tạo một tệp mới và nó
going to be a swift UI View and we're   🍀   sẽ là Chế độ xem giao diện người dùng
nhanh và chúng tôi
going to call this input View   🍀   sẽ gọi Chế độ xem đầu vào này
and having this as a reusable component   🍀   và việc sử dụng tệp này như một thành
phần có thể tái sử dụng
is going to help us out a lot guys   🍀   sẽ giúp chúng tôi rất nhiều
because especially as we get to the   🍀   vì đặc biệt là khi chúng tôi đến
registration page and we see four of   🍀   trang đăng ký và chúng tôi thấy bốn trong số
these fields we don't want to copy and   🍀   các trường này mà chúng tôi không muốn
sao chép và
paste pretty much the same code four   🍀   dán khá nhiều mã giống nhau bốn
times we're going to be able to reuse   🍀   lần, chúng tôi sẽ có thể sử dụng lại Chế




about:blank   🍀   9/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
this input View and make our code way   🍀   độ xem đầu vào này và làm cho mã của
chúng tôi
more efficient and we're just going to   🍀   hiệu quả hơn và chúng tôi sẽ
set it up so that we can pass different   🍀   thiết lập nó để chúng tôi có thể chuyển
things into it when we create it you   🍀   những thứ khác nhau vào đó khi chúng tôi
tạo ra nó,
guys have probably probably seen me do   🍀   có lẽ các bạn đã từng thấy tôi làm
stuff like this before unless you're new   🍀   những việc như thế này trước đây trừ khi
bạn là người mới
to the channel so it's also going to   🍀   của kênh nên nó cũng sẽ
help us here so anyway let's go ahead   🍀   giúp ích cho chúng tôi ở đây, vì vậy, dù sao
đi nữa, hãy tiếp tục
and create this input view we need to   🍀   và tạo chế độ xem đầu vào này, trước tiên
chúng ta cần
add a couple input or initialization   🍀   thêm một vài thuộc tính đầu vào hoặc thuộc
tính khởi tạo,
properties first we need a binding   🍀   chúng ta cần một
VAR text which is oops   🍀   văn bản VAR ràng buộc, đó là rất tiếc, đó là
which is a string   🍀   một
title which is a string let placeholder   🍀   tiêu đề chuỗi là một trình giữ chỗ cho chuỗi
which is also a string   🍀   cũng là một chuỗi
and we're going to say VAR is secure   🍀   và chúng ta' Tôi sẽ nói VAR là trường an
toàn
field and default it to false so we're   🍀   và mặc định nó là sai, vì vậy chúng ta
going to see how we're going to use all   🍀   sẽ xem cách chúng ta sẽ sử dụng tất
of these in just a little bit let's go   🍀   cả những thứ này chỉ trong chốc lát, hãy bắt
đầu
and create the actual view now   🍀   và tạo chế độ xem thực tế ngay bây giờ
so we are going to have a v stack guys   🍀   để chúng ta sẽ có một v stack guys
and let's actually go ahead and give it   🍀   và chúng ta hãy thực sự tiếp tục và cung
cấp cho nó
the input parameters that it needs   🍀   các tham số đầu vào mà nó cần,
so just go down to your preview struct   🍀   vì vậy chỉ cần đi xuống cấu trúc xem trước
của bạn
and hit fix text you can say dot   🍀   và nhấn văn bản sửa lỗi, bạn có thể nói
hằng số dấu
constant and just make it blank   🍀   chấm và chỉ cần để trống tiêu
title is email address   🍀   đề là địa chỉ email
and placeholder can be name   🍀   và trình giữ chỗ có thể là tên
at example   🍀   chẳng hạn


about:blank

10/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
.com   🍀   . com
you spell that right okay so we got all   🍀   bạn đánh vần đúng rồi đó, vì vậy chúng tôi
có tất
of our input params there   🍀   cả các thông số đầu vào của mình ở đó,
so this is basically what it's going to   🍀   vì vậy về cơ bản, nó sẽ
look like when we create an input view   🍀   trông như thế nào khi chúng tôi tạo một chế
độ xem đầu vào,
guys we're going to pass in some text   🍀   chúng tôi sẽ chuyển một số
parameter in our case it'll be a state   🍀   tham số văn bản trong trường hợp của
chúng tôi, nó sẽ là một thuộc tính trạng thái
property later the title is what you see   🍀   sau đó, tiêu đề là những gì bạn thấy
here for the input View and the   🍀   ở đây cho Chế độ xem đầu vào và
placeholder is what you're going to see   🍀   trình giữ chỗ là những gì bạn sẽ thấy ở
here and we'll get into this is secure   🍀   đây và chúng ta sẽ tìm hiểu về anh chàng
an toàn này
guy in a little bit so we're going to   🍀   một chút vì vậy chúng ta sẽ
say text   🍀   nói văn bản
and we're just going to pass in the   🍀   và chúng ta 'Chúng tôi sẽ chuyển vào
title   🍀   tiêu đề
so in this case it would be email   🍀   vì vậy trong trường hợp này nó sẽ là email
in this case it would be password   🍀   trong trường hợp này nó sẽ là mật khẩu
and we're going to say dot foreground   🍀   và chúng tôi sẽ nói màu nền trước của dấu
chấm
color is color   🍀   là màu chấm màu
dot dark gray   🍀   xám đậm dấu
dot font weight dot
semibolds.font is dot footnote okay   🍀   chấm phông chữ trọng lượng dấu chấm
phẩy.
and here's where we create the actual   🍀   và đây là nơi chúng tôi tạo
text field so we're going to say if is   🍀   trường văn bản thực tế, vì vậy chúng tôi sẽ
nói liệu có phải là
secure fields and else   🍀   trường bảo mật hay không và
so basically guys we want to be able to   🍀   về cơ bản, chúng tôi muốn có thể
use this for a password field as well so   🍀   sử dụng trường này cho trường mật khẩu,
vì vậy
if we have this secure Field property   🍀   nếu chúng tôi đặt thuộc tính Trường bảo
mật này
set to true it's going to create a   🍀   thành true nó sẽ tạo một
password or secure field for us if not   🍀   mật khẩu hoặc trường bảo mật cho chúng
tôi nếu không


about:blank

11/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
it's just going to be a regular old text   🍀   nó sẽ chỉ là một trường văn bản cũ thông
thường,
field so we're going to say secure field   🍀   vì vậy chúng tôi sẽ nói rằng trường bảo mật,
this is going to be our placeholder   🍀   đây sẽ là trình giữ chỗ của chúng tôi
and this is going to be our text   🍀   và đây sẽ là văn bản của chúng tôi
and we're going to say dot font dot   🍀   và chúng tôi' sẽ nói
system size of 14.   🍀   kích thước hệ thống chấm phông chữ chấm
là 14.
and we can pretty much copy and paste   🍀   và chúng ta có thể sao chép và dán
this down in the else block and just   🍀   phần này xuống khối khác và chỉ cần
make it a text field and these   🍀   biến nó thành trường văn bản và
properties are going to be the exact   🍀   các thuộc tính này sẽ giống hệt
same   🍀   nhau
and lastly we need a divider   🍀   và cuối cùng chúng ta cần một dấu phân
cách
and then we need to adjust some   🍀   và sau đó, chúng tôi cần điều chỉnh một số
things about our v-stack we need to make   🍀   thứ về ngăn xếp v của mình, chúng tôi cần
tạo
the alignment dot leading to align this   🍀   dấu chấm căn chỉnh dẫn đến căn chỉnh tất
cả những thứ này
all to the Leading Edge and we are also   🍀   với Cạnh hàng đầu và chúng tôi cũng
going to make the spacing 12 pixels okay   🍀   sẽ tạo khoảng cách 12 pixel ổn
so that looks really good right there   🍀   để nó trông thực sự đẹp phải
don't worry about the padding just yet   🍀   không lo lắng về phần đệm nhưng
we're going to handle all of that in the   🍀   chúng tôi sẽ xử lý tất cả những thứ đó trong
chế độ
implementation view or the login view so   🍀   xem triển khai hoặc chế độ xem đăng nhập
để
now that we have this awesome reusable   🍀   bây giờ chúng tôi có thành phần có thể tái
sử dụng tuyệt vời này
component and I reuse this all the time   🍀   và tôi luôn sử dụng lại thành phần này
in my projects guys it's a really nice   🍀   trong các dự án của mình, đó là một
clean input field with a title so we can   🍀   trường nhập liệu sạch đẹp thực sự với một
tiêu đề để chúng tôi có thể
go back to login View   🍀   quay lại Chế độ xem đăng nhập
and we can now   🍀   và bây giờ chúng tôi có thể
um first off let's create two State   🍀   ừm, trước tiên hãy tạo hai Thuộc tính trạng
thái
Properties
for email and password   🍀   cho email và mật khẩu,


about:blank

12/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
cool now we are going to on this form   🍀   bây giờ chúng tôi sẽ chuyển sang phần
Trường của biểu mẫu này
Field section create a v-stack   🍀   tạo một ngăn xếp v
with spacing of 24 pixels and we're   🍀   với khoảng cách là 24 pixel và chúng tôi 'sẽ
going to say input View   🍀   nói đầu vào Chế độ xem
text is going to be dollar sign email   🍀   văn bản sẽ là ký hiệu đô la,
title is going to be email address   🍀   tiêu đề email sẽ là địa chỉ email
and the placeholder is going to be name   🍀   và trình giữ chỗ sẽ là tên
at example.com   🍀   tại example.com
and let me clean this up a little bit   🍀   và hãy để tôi làm sạch điều này một chút
cool
and we're also going to set another   🍀   và chúng ta cũng sẽ để đặt một
property here guys we're going to say   🍀   thuộc tính khác ở đây các bạn, chúng tôi sẽ
nói
dot Auto capitalization   🍀   dấu chấm Viết hoa tự động
is going to be dot none   🍀   sẽ là dấu chấm không
and that's because it's an email field   🍀   và đó là vì đó là trường email
and we don't want it to automatically   🍀   và chúng tôi không muốn nó tự động
capitalize things because email   🍀   viết hoa mọi thứ vì
addresses shouldn't have capital letters   🍀   địa chỉ email không được viết
okay so once again don't worry about the   🍀   hoa. một lần nữa, đừng lo lắng về
padding just yet we're going to fix that   🍀   phần đệm, chúng tôi sẽ khắc phục điều đó
in just a second now I'm going to create   🍀   chỉ trong giây lát, tôi sẽ tạo
my input View   🍀   Chế độ xem đầu vào
for my password field so the text is   🍀   cho trường mật khẩu của mình để văn bản
going to be dollar sign password so I   🍀   sẽ là mật khẩu ký hiệu đô la, vì vậy tôi
hope it's clear how that's working with   🍀   hy vọng nó làm rõ cách nó hoạt động với
các
the state and binding properties guys if   🍀   thuộc tính trạng thái và ràng buộc nếu
that's confusing to you once again guess   🍀   điều đó làm bạn khó hiểu một lần nữa hãy
đoán xem
what I got a tutorial for that the link   🍀   tôi có hướng dẫn gì về liên kết đó
is going to be in the description if you   🍀   sẽ có trong phần mô tả nếu bạn
are confused about the differences   🍀   bối rối về sự khác biệt
between State properties and binding   🍀   giữa các thuộc tính Trạng thái và thuộc tính
ràng buộc,
properties so we have a state property   🍀   vì vậy chúng tôi có một thuộc tính trạng thái
in the main View and a binding property   🍀   trong Chế độ xem chính và một thuộc tính




about:blank



13/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
ràng buộc
on the child view I'm going to call it   🍀   trên chế độ xem con. Tôi sẽ gọi nó
or the the custom view that we just   🍀   hoặc chế độ xem tùy chỉnh mà chúng tôi
vừa
created and we pass those along from the   🍀   tạo và chúng tôi chuyển những thuộc tính
đó từ
main view here which is our login view   🍀   chế độ xem chính ở đây là chế độ xem đăng
nhập của chúng tôi
as State Properties into the input view   🍀   dưới dạng Thuộc tính trạng thái vào chế độ
xem đầu vào,
which is a binding property   🍀   đây là một thuộc tính ràng buộc
uh so now our Pat our title is going to   🍀   uh, vậy bây giờ Pat của chúng ta, tiêu đề
của chúng ta sẽ
be password   🍀   là mật khẩu
and this guy is going to say enter your   🍀   và anh chàng này sẽ nói nhập mật khẩu của
bạn
password
so we can see how this nice reusable   🍀   để chúng ta có thể thấy thành phần có thể
tái sử dụng tuyệt vời này
component makes our life way easier   🍀   giúp cuộc sống của chúng ta dễ dàng hơn
right instead of copy and pasting all of   🍀   thay vì sao chép và dán tất cả
this code that we see here   🍀   mã này mà chúng ta thấy ở đây
because all of this is pretty much going   🍀   bởi vì tất cả những thứ này gần như
to be the same the only thing that's   🍀   giống nhau, điều duy nhất
going to be different is the title and   🍀   sẽ khác là tiêu đề và
the text parameter and whether or not   🍀   tham số văn bản và liệu
it's it's a secure field speaking of we   🍀   đó có phải là trường bảo mật hay không mà
chúng ta
need to go ahead and add that here so   🍀   cần hãy tiếp tục và thêm nó vào đây để
you guys will notice that it comes up   🍀   các bạn sẽ nhận thấy rằng nó xuất hiện
and we can say true and the reason that   🍀   và chúng ta có thể nói đúng và lý do mà
we don't need to pass it in here is   🍀   chúng ta không cần chuyển nó vào đây là
because we gave it a default value of   🍀   vì chúng ta đã đặt cho nó một giá trị mặc
định là
false which is a nice little trick right   🍀   sai, đây là một mẹo nhỏ hay đúng
because you don't want to have to say   🍀   vì bạn không muốn phải nói
false every time you just want to create   🍀   sai mỗi khi bạn chỉ muốn tạo
a text field so we're just defaulting it   🍀   một trường văn bản, vì vậy chúng tôi chỉ đặt
mặc định
to false and then if we ever want it to   🍀   là sai và sau đó nếu chúng tôi muốn nó


about:blank

14/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
be a secure field in the case of   🍀   là một trường an toàn trong trường hợp
creating a password field we can then   🍀   tạo mật khẩu Sau đó, chúng tôi có thể
specify that we want it to be true   🍀   chỉ định rằng chúng tôi muốn nó là đúng,
that's a nice trick about having default   🍀   đó là một mẹo hay về việc có
values and what I mean by default value   🍀   các giá trị mặc định và ý tôi là theo giá trị
mặc định,
guys is we said equals false so it's   🍀   chúng tôi đã nói bằng sai, vì vậy nó
always going to default to false unless   🍀   luôn luôn mặc định là sai trừ khi
we set we specify otherwise okay   🍀   chúng tôi đặt chúng tôi chỉ định khác,
so now we need to adjust the padding so   🍀   vậy bây giờ chúng ta cần điều chỉnh phần
đệm, vì vậy
I'm going to say dot padding   🍀   tôi sẽ nói rằng phần đệm chấm
is dot horizontal   🍀   là chấm nằm ngang
so that looks really good and then we   🍀   để nó trông thực sự đẹp và sau đó chúng tôi
are also going to give it dot padding of   🍀   cũng sẽ cung cấp cho nó phần đệm chấm
của
dot top of like 12 pixels just to get a   🍀   đỉnh có kích thước 12 pixel chỉ để có
little bit more space between that and   🍀   thêm một chút khoảng trống giữa cái đó và
our logo image we are not going to be   🍀   hình ảnh biểu trưng của chúng tôi, chúng tôi
sẽ không
doing the forgot password option here   🍀   thực hiện tùy chọn quên mật khẩu ở đây,
guys that will be a part of the   🍀   đây sẽ là một phần của
completed source code we are just going   🍀   mã nguồn đã hoàn thành, chúng tôi sẽ
to skip straight to the sign in and sign   🍀   chuyển thẳng đến các nút đăng nhập và
đăng
up buttons so   🍀   ký, vì vậy,
uh let's go ahead and create this button   🍀   hãy tiếp tục và tạo nút này
now   🍀   ngay bây giờ
so I'm going to create a button   🍀   vì vậy tôi sẽ tạo một nút
and it's going to be action and label   🍀   và nó sẽ là hành động và nhãn
so here we could say print   🍀   nên ở đây chúng tôi có thể nói rằng
log user in   🍀   người dùng đăng nhập bản in
and my label   🍀   và nhãn của tôi
is going to be an H stack and it's going   🍀   sẽ là một ngăn xếp H và nó sẽ
to have text sign in   🍀   có ký hiệu văn bản ở phông chữ dấu chấm.
dot font weight dot semi bold   🍀   chấm nửa đậm
and an image of system name   🍀   và một hình ảnh của tên hệ thống
arrow.right   🍀   arrow.right




about:blank



15/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and on this guy we are going to give   🍀   và trên anh chàng này, chúng ta sẽ cung
cấp cho
our let's see yeah the button itself   🍀   chúng ta hãy xem vâng, chính nút
we're going to say dot foreground color   🍀   chúng ta sẽ nói màu nền trước của chấm
is dot White   🍀   là chấm Trắng
and Dot frame is   🍀   và Khung chấm là chiều
width and height of UI screen   🍀   rộng và chiều cao của màn hình giao diện
người dùng
dot main dot bounds   🍀   dot chính dot giới hạn
dot width   🍀   dot width
minus 32 so that's just going to make it   🍀   trừ 32, vì vậy điều đó sẽ làm cho nó
whatever the width of the screen is   🍀   bất kể chiều rộng của màn hình là
minus 32 pixels so it'll have 16 pixels   🍀   trừ 32 pixel, vì vậy nó sẽ có 16 pixel
of padding on both sides and the height   🍀   đệm ở cả hai bên và chiều cao
is going to be 48.   🍀   sẽ là 48.
um sorry guys this I think is going to   🍀   ừm, xin lỗi các bạn điều này Tôi nghĩ rằng
nó sẽ
go on to the H stack itself yeah and   🍀   tự chuyển sang ngăn xếp H vâng và
then the button here is going to have a   🍀   sau đó nút ở đây sẽ có
background of color   🍀   nền là
dot system blue   🍀   hệ thống chấm màu xanh lam
and then a corner radius of 10.   🍀   và sau đó là bán kính góc là 10.
and let me just okay so something is   🍀   và hãy để tôi ổn vì vậy đã xảy ra sự
wrong   🍀   cố rất tiếc
oop I forgot a parenthesis there we go   🍀   Tôi đã quên dấu ngoặc đơn ở đó, chúng ta
sẽ ổn thôi
okay so that looks good we just need   🍀   vì vậy có vẻ tốt, chúng ta chỉ cần
some padding now right   🍀   một số phần đệm ngay bây giờ, vì vậy
so let's see
um
how are we going to do that padding I
think we can just say padding dot top
and let's make it like 24 pixels   🍀   hãy xem chúng ta sẽ thực hiện phần đệm
yep that looks good   🍀   đó như thế nào.
and now we need to blow our spacer   🍀   chúng ta cần thổi miếng đệm
create our sign up button so this is   🍀   tạo nút đăng ký để đây
actually going to be a navigation link   🍀   thực sự sẽ là một liên kết điều hướng nhé
guys   🍀   các bạn


about:blank

16/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and let's see navigation link and which   🍀   và hãy xem liên kết điều hướng và
option are we going to use I think we're   🍀   chúng ta sẽ sử dụng tùy chọn nào. Tôi nghĩ
chúng ta
going to just use destination and label   🍀   sẽ chỉ sử dụng điểm đến và nhãn
and   🍀   và
you guys might be saying like hey this   🍀   các bạn có thể nói như này, điều này
doesn't follow along with the new   🍀   không tuân theo
navigation stack API and that's because   🍀   API ngăn xếp điều hướng mới và đó là bởi
vì
this is not this doesn't need to be a   🍀   đây không phải là điều này không cần phải
là một
value-based navigation setup right it's   🍀   thiết lập điều hướng dựa trên giá trị,
just we're just going from one place to   🍀   chỉ là chúng ta chỉ đi từ nơi này sang nơi
another we're not clicking on like an   🍀   khác mà thôi. 'không nhấp vào giống như
một
object that we need to create a   🍀   đối tượng mà chúng tôi cần tạo đích
navigation destination for so navigation   🍀   điều hướng cho nên
view has been deprecated but this is not   🍀   chế độ xem điều hướng không được dùng
nữa nhưng đây không
so there's a reason Swift UI left this   🍀   phải là lý do Swift UI để nguyên điều này
in place and if that's because it's   🍀   và nếu đó là vì
still viable to use this as an option   🍀   vẫn có thể sử dụng điều này như một tùy
chọn
so before anybody starts freaking out   🍀   Vì vậy, trước khi bất kỳ ai bắt đầu lo lắng
and saying that I'm not doing this the   🍀   và nói rằng tôi đang làm điều này không
right way this is totally okay to do it   🍀   đúng cách thì bạn hoàn toàn có thể làm
theo
this way so we haven't set up our   🍀   cách này vì vậy chúng tôi chưa thiết lập
registration view yet but we are going   🍀   chế độ xem đăng ký của mình nhưng chúng
tôi sẽ
to create this label here   🍀   tạo nhãn này ở đây,
so let's see it's going to be don't have   🍀   vì vậy hãy cùng xem nó sẽ không có
an account sign up so we're going to say   🍀   tài khoản đăng ký, vì vậy chúng tôi sẽ nói
h stack   🍀   h ngăn xếp
texts don't   🍀   văn bản không
have an account   🍀   có tài khoản
and then it's just going to be text   🍀   và sau đó nó sẽ chỉ là văn bản
after that sign up   🍀   sau khi đăng ký được rồi
okay and it's going to be dot font   🍀   và nó sẽ là




about:blank



17/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
weight dot bold   🍀   dấu chấm phông chữ dấu chấm in đậm
and it's going to be dot font   🍀   và nó sẽ là phông chữ chấm
of dot system size 14.   🍀   có kích thước hệ thống chấm 14.
so that looks pretty good right   🍀   Vì vậy, nó trông khá đẹp phải không
and we can actually make you see that   🍀   và chúng tôi thực sự có thể làm cho bạn
thấy rằng
that's a little bit too much spacing   🍀   khoảng cách hơi quá nhiều
there guys we can adjust the spacing of   🍀   ở đó, các bạn, chúng tôi có thể điều chỉnh
khoảng cách của
our components to two pixels and it's   🍀   các thành phần thành hai pixel và đó là
going to bring that in nicely you could   🍀   sẽ mang nó vào một cách độc đáo, bạn
even make it like three   🍀   thậm chí có thể làm cho nó giống như ba
just to play around with it   🍀   chỉ để chơi với nó
and my previews now being mean to me   🍀   và các bản xem trước của tôi bây giờ có ý
nghĩa với tôi,
let's see if it loads   🍀   hãy xem nó có tải
yep so that looks pretty good three   🍀   không, vâng, vì vậy trông khá tốt.
Paces uh yep okay cool
all right so now you guys will notice   🍀   sẽ nhận thấy
that that will allow me to go to a new   🍀   rằng điều đó sẽ cho phép tôi chuyển sang
một
screen and in a little bit we're going   🍀   màn hình mới và một chút nữa chúng ta sẽ
to implement that registration view that   🍀   triển khai chế độ xem đăng ký mà
we see right here but this is looking   🍀   chúng ta thấy ngay tại đây nhưng điều này
trông
really really good guys   🍀   thực sự rất tuyệt đấy các bạn
um we're also going to implement this   🍀   ừm chúng ta cũng sẽ triển khai
form validation functionality guys so   🍀   biểu mẫu này những người có chức năng
xác nhận giống
like   🍀   như
you'll see test gmail.com   🍀   bạn sẽ thấy gmail.com thử nghiệm
and then when my form becomes valid it's   🍀   và sau đó khi biểu mẫu của tôi trở nên hợp
lệ, nó
going to actually enable the button and   🍀   sẽ thực sự kích hoạt nút và
change the color of it we're going to do   🍀   thay đổi màu sắc của nút, chúng tôi cũng sẽ
thực hiện
all that stuff as well but next up we   🍀   tất cả những nội dung đó nhưng tiếp theo
chúng tôi
are going to get started with uh writing   🍀   sẽ thực hiện để bắt đầu với việc viết




about:blank   🍀   18/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
out the code to build our registration   🍀   mã để xây dựng Chế độ xem đăng ký của
chúng ta
View and this is going to go really   🍀   và quá trình này sẽ diễn ra rất
really quick so let's just go ahead and   🍀   nhanh, vì vậy hãy tiếp tục và
get it done now   🍀   hoàn thành nó ngay bây giờ
and the reason that's going to go really   🍀   và lý do sẽ diễn ra rất
quick is because we pretty much have the   🍀   nhanh là vì chúng ta có khá nhiều thứ
same view that this is in our login page   🍀   giống nhau xem rằng đây là trang đăng
nhập của chúng tôi
and we built it so that it's scalable so   🍀   và chúng tôi đã xây dựng nó sao cho nó có
thể mở rộng để
that it's easier it's easy for us to   🍀   chúng tôi dễ dàng
make that with not a lot of code it's   🍀   thực hiện điều đó mà không cần nhiều mã,
nó
really efficient right so we're going to   🍀   thực sự hiệu quả, vì vậy chúng tôi sẽ
say   🍀   nói
registration View   🍀   đăng ký Xem
and we are just going to copy over this   🍀   và chúng tôi chỉ sẽ sao chép
image   🍀   hình ảnh này,
so grab the v-stack as well or let's   🍀   vì vậy hãy lấy cả v-stack hoặc
actually just place it in a v-stack   🍀   thực sự chúng ta chỉ cần đặt nó vào một v-
stack
and   🍀   và
grab the image   🍀   lấy hình ảnh
paste that right there   🍀   dán ngay tại đó,
let's go ahead and grab this v-stack   🍀   hãy tiếp tục và lấy v-stack
paste that there   🍀   paste này để
create our properties so we're going to   🍀   tạo các thuộc tính của chúng ta để chúng ta
'sẽ
say State private VAR email equals that   🍀   nói rằng email VAR riêng tư của Bang
tương đương với
just an empty string two three four   🍀   chỉ một chuỗi trống hai ba bốn
we're going to do full name   🍀   chúng ta sẽ thực hiện tên đầy đủ
full name   🍀   tên đầy đủ
password and then we are also going to   🍀   mật khẩu và sau đó chúng ta cũng sẽ
do this awesome confirm password feature   🍀   thực hiện tính năng xác nhận mật khẩu
tuyệt vời này
okay and then   🍀   được rồi
we can copy this guy   🍀   chúng ta có thể sao chép anh chàng này




about:blank



19/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
place it   🍀   đặt nó
right here   🍀   ngay tại đây,
this is going to say   🍀   điều này sẽ cho biết
full name
placeholder is going to be enter   🍀   trình giữ chỗ tên đầy đủ sẽ được nhập
your name   🍀   tên của bạn
and we definitely want Auto   🍀   và chúng tôi chắc chắn muốn
capitalization for that right guys   🍀   Viết hoa tự động cho những người phù hợp
đó
unlike email right because we want the   🍀   không giống như email bên phải vì chúng tôi
muốn
person's name to be capitalized   🍀   tên của người đó được viết hoa
correctly so we're going to delete that   🍀   chính xác nên chúng tôi sẽ xóa nó
and then here we're just going to copy   🍀   và sau đó ở đây, chúng tôi sẽ sao chép
our password guy   🍀   anh chàng mật khẩu của mình
and we are going to change this to   🍀   và chúng tôi sẽ thay đổi điều này để
confirm password   🍀   xác nhận mật khẩu
still going to be a secure field this is   🍀   vẫn sẽ là một trường an toàn, điều này sẽ
going to say confirm your password and   🍀   nói xác nhận mật khẩu của bạn và
this is going to be confirm password   🍀   đây sẽ là xác nhận mật khẩu
yep and we just need to also change this   🍀   vâng và chúng tôi chỉ cũng cần thay đổi
guy to full name right so just take a   🍀   anh chàng này thành tên đầy đủ, vì vậy chỉ
cần dành một
second and make sure that your field   🍀   chút thời gian và đảm bảo rằng trường của
bạn
looks like this input view email input   🍀   trông giống như thế này.
view full name input view password input
view dollar sign confirm password
beautiful and then guess what we can
copy and paste this button   🍀   nút này
and you guys could make this button   🍀   và các bạn có thể làm cho nút này
reusable as well you could create like a   🍀   có thể tái sử dụng cũng như bạn có thể tạo
giống như một
subclass for this button like much like   🍀   lớp con cho nút này giống như
you did with the input view   🍀   bạn đã làm với chế độ xem đầu vào
um I'm just not going to do that in the   🍀   ừm. Tôi sẽ không làm điều đó vì
interest of time I've already showed you   🍀   lợi ích của thời gian mà tôi đã trình bày các
guys how to create a reusable component   🍀   bạn làm thế nào để tạo một thành phần có




about:blank



20/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
thể tái sử dụng
but and honestly this isn't too bad to   🍀   nhưng thành thật mà nói, điều này không
quá tệ khi
to just copy and paste it's not a lot of   🍀   chỉ sao chép và dán nó không có nhiều
code whereas this would have been way   🍀   mã trong khi điều này sẽ có
too much code to copy and paste so   🍀   quá nhiều mã để sao chép và dán nên
having this input view is really nice   🍀   có chế độ xem đầu vào này thực sự rất
tuyệt
but anyway this is going to say sign   🍀   nhưng dù sao thì điều này sẽ nói người
dùng đăng ký
user
up
and then   🍀   và sau đó
this guy is going to say sign up   🍀   anh chàng này sẽ nói đăng ký
uh frame and everything is the same   🍀   uh khung và mọi thứ đều giống nhau
background and everything is the same   🍀   và mọi thứ đều giống nhau
uh let's see go ahead and rebuild that   🍀   uh chúng ta hãy tiếp tục và xây dựng lại
điều đó
just to make sure we're good to go here   🍀   chỉ để đảm bảo rằng chúng ta ổn hãy vào
đây
and yep sign up then we add our spacer   🍀   và vâng, đăng ký, sau đó chúng tôi thêm
miếng đệm của mình
and this guy down here at the bottom   🍀   và anh chàng này ở dưới đây, ở phía dưới,
guys this is not going to be a   🍀   đây sẽ không phải là một
navigation link we just need to make   🍀   liên kết điều hướng, chúng tôi chỉ cần
sure that this pops our navigation back   🍀   đảm bảo rằng điều này sẽ bật điều hướng
của chúng tôi trở
to the original screen so what we can do   🍀   lại màn hình ban đầu để chúng tôi có thể
làm gì
for that is use this handy environment   🍀   vì đó là sử dụng thuộc tính môi trường tiện
dụng này
property
so you say backslash dot dismiss VAR   🍀   để bạn nói dấu gạch chéo ngược dấu chấm
loại bỏ VAR loại
dismiss   🍀   bỏ
and then we can go down here and create   🍀   và sau đó chúng ta có thể đi xuống đây và
tạo
a button   🍀   một nút
with an action and a label   🍀   có hành động và nhãn mà
the action is going to be dismiss   🍀   hành động sẽ bị loại bỏ




about:blank



21/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and the label we can copy and paste from   🍀   và nhãn chúng ta có thể sao chép và dán từ
our login View   🍀   đăng nhập Xem
right here   🍀   ngay tại đây
and this is going to say already   🍀   và điều này có nghĩa là đã
have an account sign in   🍀   có tài khoản đăng nhập được,
okay so now let's actually just go ahead   🍀   vì vậy bây giờ chúng ta hãy thực sự tiếp tục
and test this out let's see if we can   🍀   và kiểm tra điều này, hãy xem liệu chúng ta
có thể
move back and forth between our views so   🍀   di chuyển qua lại giữa các chế độ xem của
mình không vì vậy
here in my navigation link we want the   🍀   ở đây trong liên kết điều hướng của tôi,
chúng ta muốn
destination to be my registration view   🍀   điểm đến là chế độ xem đăng ký của tôi,
so let's let our preview load and wait   🍀   vì vậy hãy để bản xem trước của chúng tôi
tải và đợi
for the Moment of Truth so we're going   🍀   Khoảnh khắc của sự thật, vì vậy chúng tôi
sẽ
to hit sign up and check that out guys   🍀   nhấn đăng ký và kiểm tra xem các bạn,
it goes right over to our registration   🍀   nó sẽ chuyển ngay đến Chế độ xem đăng
ký của chúng tôi
View and then we can hit sign in here to   🍀   và sau đó chúng tôi có thể nhấn đăng nhập
tại đây để
go back to our login view there is one   🍀   tiếp tục quay lại chế độ xem đăng nhập của
chúng tôi, có một
cleanup we have to make though I don't   🍀   công việc dọn dẹp mà chúng tôi phải thực
hiện mặc dù tôi không
like this back button here because I   🍀   thích nút quay lại này ở đây vì tôi
like the navigation bar to be hidden as   🍀   muốn ẩn thanh điều hướng như
we can see in the completed app here so   🍀   chúng ta có thể thấy trong ứng dụng đã
hoàn thành ở đây
that the transition looks smoother right   🍀   để quá trình chuyển đổi trông mượt mà hơn
ngay
the logo image is in the exact same   🍀   trên logo hình ảnh ở cùng một
place on both screens and our back   🍀   vị trí trên cả hai màn hình và nút quay lại
của chúng tôi
button serves as this little footer   🍀   đóng vai trò là nút chân trang nhỏ này
button down here whereas if you have   🍀   ở đây trong khi nếu bạn có
that back button it shoves everything   🍀   nút quay lại đó, nó sẽ đẩy mọi thứ
down we don't really need the navigation   🍀   xuống, chúng tôi không thực sự cần thanh
điều hướng




about:blank   🍀   22/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
bar up at the top   🍀   ở trên cùng
so you can just go here   🍀   nên bạn có thể chỉ cần vào đây
inside of your login view when we create   🍀   bên trong chế độ xem đăng nhập của bạn
khi chúng tôi tạo chế
the registration view as the destination   🍀   độ xem đăng ký làm đích
and say dot navigation   🍀   và nói rằng
bar back button hidden   🍀   nút quay lại của thanh điều hướng dấu
chấm bị ẩn
and does that require an input parameter   🍀   và điều đó có yêu cầu
back button hidden   🍀   nút quay lại thông số đầu vào bị ẩn
um I don't know if we have to pass in   🍀   không tôi không biết liệu chúng tôi có phải
chuyển vào
like true or something there yes we do   🍀   như đúng hay không vâng, chúng tôi làm
so yes we want to say true   🍀   như vậy, vâng, chúng tôi muốn nói sự thật
and now let's let this build   🍀   và bây giờ hãy để bản dựng này
and you guys notice that that looks way   🍀   và các bạn lưu ý rằng nó trông
cleaner to me at least you guys can keep   🍀   gọn gàng hơn đối với tôi ít nhất các bạn có
thể giữ
the back button in there if you want I   🍀   nút quay lại ở đó nếu bạn muốn. Tôi
just prefer it like this so that pretty   🍀   chỉ thích nó như thế này để
much wraps it up for the authentication
flow UI next up I want us to get started   🍀   Tôi muốn chúng ta bắt đầu
with creating this profile user   🍀   với việc tạo giao diện người dùng hồ sơ này
interface and actually populating it   🍀   và thực sự phổ biến nó
with like some user data so we're going   🍀   giống như một số dữ liệu người dùng, vì vậy
chúng tôi sẽ
to create a user model create our   🍀   tạo một mô hình người dùng, tạo chế độ
profile view and then we're going to   🍀   xem hồ sơ của chúng tôi và sau đó chúng
tôi Chúng ta sẽ
move on to all of the networking stuff   🍀   chuyển sang tất cả nội dung mạng
with our view model and all that so   🍀   với mô hình chế độ xem của chúng ta và tất
cả những thứ đó, vì vậy
let's go ahead and jump right into it   🍀   hãy tiếp tục và bắt đầu ngay với nó.
guys let's go ahead and go to this   🍀   Hãy tiếp tục và chuyển đến
profile folder and create a swift UI   🍀   thư mục hồ sơ này và tạo chế độ xem giao
diện người dùng nhanh chóng mà
view we're just going to call this   🍀   chúng ta sẽ thực hiện gọi chế độ
profile view   🍀   xem hồ sơ này




about:blank   🍀   23/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and let's get our preview up and running   🍀   và hãy thiết lập và chạy bản xem trước của
chúng tôi
and take a look at how we're going to do   🍀   và xem cách chúng tôi sẽ thực hiện
this so let's wait for our preview to   🍀   điều này, vì vậy hãy đợi bản xem trước của
chúng tôi
load but pretty much guys this is all   🍀   tải nhưng hầu hết mọi người, tất cả điều này
just going to be inside of a list and   🍀   sẽ nằm trong một danh sách và
each one of these is going to be its own   🍀   mỗi một trong số này sẽ là
individual section with its own   🍀   phần riêng lẻ với
individual set of options so let's go   🍀   bộ tùy chọn riêng, vì vậy hãy tiếp
ahead and just start with the header   🍀   tục và chỉ bắt đầu với tiêu đề,
so I'm going to say this is going to be   🍀   vì vậy tôi sẽ nói đây sẽ là
a list   🍀   một danh sách
and we are going to create a section   🍀   và chúng ta sẽ tạo một phần
here   🍀   ở đây
and we're going to actually create two   🍀   và chúng ta sẽ thực sự tạo thêm hai
more sections so this one is going to be   🍀   phần nữa, vì vậy phần này sẽ được
called General   🍀   gọi là Chung
oops   🍀   Rất tiếc
and another section for accounts   🍀   và một phần khác dành cho tài khoản
okay so this one does not have a title   🍀   được rồi, vì vậy phần này không có tiêu đề
because it's just like the user info   🍀   vì nó giống như chế độ xem thông tin người
dùng,
view so let's go ahead and see if we can   🍀   vì vậy hãy tiếp tục và xem nếu chúng tôi có
thể
create that now and then we'll create   🍀   tạo nó ngay bây giờ và sau đó chúng tôi sẽ
tạo
each one of these individual settings   🍀   từng mục trong số các mục cài đặt riêng lẻ
này,
items so we're going to say text and we   🍀   vì vậy chúng tôi sẽ nói văn bản và chúng tôi
can say MJ for Michael Jordan   🍀   có thể nói MJ cho Michael Jordan
Undisputed goat if you ask me   🍀   Con dê không thể tranh cãi nếu bạn hỏi tôi
and then we'll say dot font is dot title   🍀   và sau đó chúng tôi sẽ nói phông chữ dấu
chấm là chấm tiêu đề chấm
dot font weight Dot semibolds   🍀   trọng lượng phông chữ Dấu chấm phẩy
chấm
dot foreground colors dot White   🍀   màu nền trước chấm Khung chấm trắng
dot frame of a width and height of 72 by   🍀   có chiều rộng và chiều cao là 72 x
72   🍀   72




about:blank



24/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and then we're going to give it a   🍀   và sau đó chúng ta sẽ cung cấp cho nó
background color   🍀   màu nền
of dot system gray three   🍀   của hệ thống chấm ba màu xám
and then   🍀   và sau đó
just give it a clip shape guys of a   🍀   chỉ cần tạo cho nó một hình dạng chiếc kẹp.
một
circle   🍀   vòng tròn
and that's pretty clean right there yeah   🍀   và khá rõ ràng ngay tại đó, vâng,
that looks awesome and then   🍀   nó trông tuyệt vời và
so this actually needs to be inside of   🍀   vì vậy, cái này thực sự cần phải ở bên trong
an H stack guys   🍀   ngăn xếp H
because we see here that we have this   🍀   bởi vì chúng tôi thấy ở đây rằng chúng tôi
có
horizontally stacked set of components   🍀   tập hợp các thành phần được xếp chồng lên
nhau theo chiều ngang này,
so let's just go ahead and command click   🍀   vì vậy hãy tiếp tục và ra lệnh nhấp
on that hold down command   🍀   vào nút giữ đó lệnh down
and click on it and say embed in h-stack   🍀   và nhấp vào nó và nói embed in h-stack
and next up we are going to create a   🍀   và tiếp theo chúng ta sẽ tạo một
v-stack and that's because these two   🍀   v-stack và đó là vì hai
text components are stacked vertically   🍀   thành phần văn bản này được xếp chồng
lên nhau theo chiều dọc
so we have an H stack and within that we   🍀   nên chúng ta có một ngăn xếp H và bên
trong đó chúng ta
have a v-stack   🍀   có một ngăn xếp v
so I'm going to say uh text   🍀   Vì vậy, tôi sẽ nói uh, hãy nhắn tin cho
Michael Jordan   🍀   Michael Jordan
and it's going to be dot font weight dot   🍀   và nó sẽ là dấu chấm, trọng lượng, dấu
chấm, dấu nửa
semi bold dot padding   🍀   đậm, dấu chấm, dấu chấm,
dot top of four   🍀   trên cùng là bốn,
cool and then text   🍀   tuyệt vời và sau đó
test at gmail.com   🍀   kiểm tra văn bản tại gmail.com
.font.footnote   🍀   .font.footnote
let me see and then we can say dot   🍀   để tôi xem và sau đó chúng ta có thể nói
dấu chấm
accent color   🍀   màu nhấn
is dot gray and once again guys you have   🍀   là chấm xám và một lần nữa, các bạn
to specify that because when Swift UI is   🍀   phải chỉ định điều đó bởi vì khi Swift UI


about:blank

25/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
actually smart enough to recognize   🍀   thực sự đủ thông minh để nhận ra
emails which is pretty cool and it will   🍀   email, điều này khá tuyệt và nó sẽ
default it to the accent color of your   🍀   mặc định nó là màu nhấn của
application so   🍀   ứng dụng của bạn, vì vậy
right now the accent color I think   🍀   ngay bây giờ tôi nghĩ màu nhấn là
defaults to that blue color   🍀   mặc định thành màu xanh lam đó,
so if you want to modify that or   🍀   vì vậy nếu bạn muốn sửa đổi hoặc
override it you have to use this accent   🍀   ghi đè lên màu đó, bạn phải sử dụng công
color modifier that might confuse some   🍀   cụ sửa đổi màu nhấn này có thể khiến một
số người nhầm lẫn,
people you might think it has to be   🍀   bạn có thể nghĩ rằng đó phải là
foreground color which is what I thought   🍀   màu nền trước, đó là điều tôi nghĩ cho
until I Googled it   🍀   đến khi tôi tìm kiếm nó trên Google
but that's why we use accent color there   🍀   nhưng đó là lý do tại sao chúng tôi sử dụng
màu nhấn ở đó
on this v-stack guys we need an   🍀   trên v-stack này các bạn, chúng ta cần
alignment   🍀   căn chỉnh các
of dot leading and a spacing of four   🍀   dấu chấm ở đầu và khoảng cách bốn
pixels so let's go ahead and see how   🍀   pixel, vì vậy hãy tiếp tục và xem
that looks   🍀   nó trông
awesome and I think I want to give this   🍀   tuyệt vời như thế nào và tôi nghĩ rằng tôi
muốn đặt phông chữ này cho
a font of Dot subheadline   🍀   dòng tiêu đề phụ Dot,
yeah that looks better   🍀   vâng, nó trông
cool and yeah so that's our sort of our   🍀   đẹp hơn. và vâng, đó là loại
user profile header uh we'll go over how   🍀   tiêu đề hồ sơ người dùng của chúng tôi, uh
chúng ta sẽ tìm hiểu cách
to actually like   🍀   thực sự thích
um populate this with user data in a   🍀   um điền dữ liệu người dùng này vào một
little bit we haven't created like a   🍀   chút, chúng tôi chưa tạo giống như một
data model for that yet we're going to   🍀   mô hình dữ liệu cho điều đó nhưng chúng
tôi sẽ
get there later   🍀   đạt được điều đó sau,
um now we are going to go down here and   🍀   ừm, bây giờ chúng ta sẽ đi xuống đây và
create these settings row views so uh   🍀   tạo các chế độ xem hàng cài đặt này, vì vậy,
once again guys we're going to create a   🍀   một lần nữa, chúng ta sẽ tạo một
reusable component for this so we're   🍀   thành phần có thể tái sử dụng cho việc này,
vì vậy chúng ta




about:blank   🍀   26/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
going to go up to our components folder   🍀   sẽ đi tới thư mục thành phần của mình
and once again that's because these are   🍀   và một lần nữa đó là vì những về
basically the same thing it's got an   🍀   cơ bản là giống nhau, nó có một
icon a title and an optional like thing   🍀   biểu tượng, một tiêu đề và một thứ tương tự
tùy chọn
at the end of it like some sort of   🍀   ở cuối giống như một số loại tham số
description parameter so we're going to   🍀   mô tả, vì vậy chúng tôi sẽ
create a reusable component for that   🍀   tạo một thành phần có thể tái sử dụng cho
Chế
Swift UI view settings row View and once   🍀   độ xem giao diện người dùng Swift
again that's in your components folder   🍀   đó. thư mục thành phần của bạn
and this is going to be pretty simple   🍀   và điều này sẽ khá đơn giản,
right so let's start with our input   🍀   vì vậy hãy bắt đầu với các tham số đầu vào
của chúng ta,
params we're going to say let image name   🍀   chúng ta sẽ nói tên hình ảnh
is a string   🍀   là một chuỗi
title is a string   🍀   tiêu đề là một chuỗi,
let tint color   🍀   hãy để màu sắc là
be a color   🍀   một màu
okay and   🍀   được rồi
let's go ahead and pass these in here so   🍀   hãy tiếp tục và chuyển những thứ này vào
đây, vì vậy
this is what it's going to look like   🍀   đây là giao diện
when we create it so this one we can   🍀   khi chúng ta tạo nó, vì vậy cái này chúng ta
có thể
literally just say like gear title   🍀   nói theo nghĩa đen như tiêu đề bánh răng
uh version tint color   🍀   uh phiên bản màu sắc
uh color dot system gray or something   🍀   uh màu hệ thống chấm màu xám hoặc đại
like that   🍀   loại như thế
and let's just go ahead and wait for our   🍀   và hãy tiếp tục và đợi
preview to load   🍀   tải bản xem trước của chúng ta
cool   🍀   tuyệt vời,
um now we can create our actual row View   🍀   bây giờ chúng ta có thể tạo Chế độ xem
hàng thực tế của mình
and use these input params to populate   🍀   và sử dụng các tham số đầu vào này để
điền vào
it with what we want   🍀   đó những gì chúng ta muốn,
so it's going to be an age stack spacing   🍀   vì vậy nó sẽ là khoảng cách ngăn xếp tuổi
of 12 pixels   🍀   của


about:blank

27/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
image with a system name   🍀   hình ảnh 12 pixel với tên hệ thống
of our image name so this is really just   🍀   của tên hình ảnh của chúng ta, vì vậy điều
này thực sự chỉ được
made to work with the xcode system   🍀   thực hiện để làm việc với
images guys if you want to work with   🍀   các hình ảnh hệ thống xcode nếu bạn muốn
làm việc với
custom images you'd have to implement   🍀   các hình ảnh tùy chỉnh, bạn phải tự triển
khai
that functionality yourself but pretty   🍀   chức năng đó nhưng đối
much for all these little like icons the   🍀   với tất cả các biểu tượng nhỏ giống như các
biểu tượng này,
xcode system images that you get from   🍀   hình ảnh hệ thống xcode mà bạn nhận
được từ
that SF symbols app are pretty   🍀   ứng dụng biểu tượng SF đó khá
comprehensive and I haven't found the   🍀   toàn diện và tôi đã lâu rồi không thấy
need to download outside things for a   🍀   cần phải tải xuống những thứ bên ngoài
while so and they keep on adding to it   🍀   nên họ tiếp tục thêm vào đó,
which is great so we're going to say dot   🍀   điều này thật tuyệt vì vậy chúng tôi sẽ nói
image scale is dot small.font is dot   🍀   tỷ lệ hình ảnh chấm là chấm nhỏ. Phông
chữ là chấm tiêu đề
title
dot foreground color is dot is uh the   🍀   chấm màu nền trước là chấm uh
tint color   🍀   màu sắc
okay cool and then next to that we're   🍀   ổn và sau đó bên cạnh đó chúng ta
going to say text   🍀   sẽ nói tiêu đề văn bản phông chữ chấm Dấu
chấm
title
dot font Dot subheadline   🍀   dòng tiêu đề phụ
dot foreground color of dot black   🍀   màu nền trước của chấm đen
cool   🍀   tuyệt vời
um and that's it right we just didn't   🍀   ừm và đúng vậy, chúng ta không
want to have to copy and paste this a   🍀   muốn phải sao chép và dán cái này
bunch of times and you know obviously as   🍀   nhiều lần và bạn biết rõ ràng vì
your settings page your profile page has   🍀   trang cài đặt của bạn, trang hồ sơ của bạn
có
a bunch of actual like real options it's   🍀   rất nhiều tùy chọn giống như thực, nó
going to be a lot more than this you   🍀   sẽ còn nhiều hơn thế này, bạn
would get really tired of copy and   🍀   sẽ thực sự mệt mỏi với việc sao chép và
pasting this constantly   🍀   dán liên tục,




about:blank



28/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
um so let's go back to our profile view   🍀   ừm, vì vậy, hãy quay lại chế độ xem hồ sơ
của chúng ta
and Implement that so here we're going   🍀   và Thực hiện Vì vậy, ở đây chúng ta sẽ
to pass it or create a settings row View   🍀   chuyển nó hoặc tạo một hàng cài đặt Xem
gear
version   🍀   phiên bản bánh răng
and then it's going to be color dot   🍀   và sau đó nó sẽ là
system Gray   🍀   hệ thống chấm màu Xám
and let's clean that up a little bit   🍀   và hãy làm sạch nó một chút
and then the other two   🍀   và sau đó hai cái còn lại
are going to be our account options   🍀   sẽ là tùy chọn tài khoản của chúng ta.
so
oh and guys to get that uh 1.0 oh on the   🍀   và các bạn để có được điều đó uh 1.0 ồ
right here's what we can do for that   🍀   bên phải đây là những gì chúng ta có thể
làm cho điều đó. Điều
right this is pretty smooth we can   🍀   này khá suôn sẻ, chúng ta
actually just create an H stack   🍀   thực sự có thể tạo một ngăn xếp H dán
paste that there   🍀   ở đó
put a spacer here and say text 1.0.0   🍀   đặt một dấu cách ở đây và nói văn bản
1.0.0
and we can make that dot font Dot   🍀   và chúng ta có thể tạo dấu chấm đó phông
chữ Dấu chấm
subheadline   🍀   dòng tiêu đề phụ
dot foreground color of dot Gray   🍀   dấu chấm màu nền trước của dấu chấm
Xám
all right so that looks pretty good   🍀   được rồi trông khá đẹp
and next up the account options so   🍀   và tiếp theo là các tùy chọn tài khoản, vì vậy
we're going to want a button here   🍀   chúng tôi sẽ muốn có một nút ở đây
because this sign out guy is an actual   🍀   vì anh chàng đăng xuất này là một
button and clicking it would sign me out   🍀   nút thực và nhấp vào nó sẽ đăng xuất cho
tôi,
we can see that in just a little bit   🍀   chúng tôi có thể hãy xem điều đó chỉ trong
chốc lát,
so we're going to want an action and a   🍀   vì vậy chúng tôi sẽ muốn có một hành động
và một
label   🍀   nhãn mà
you can just say print sign out   🍀   bạn có thể chỉ cần nói nhãn đăng xuất in
label is going to be a settings row View   🍀   sẽ là một hàng cài đặt Xem
and   🍀   và




about:blank



29/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
let me just uh copy this name really   🍀   để tôi sao chép tên này thật
quickly   🍀   nhanh
oops gotta put quotes around that   🍀   Rất tiếc, phải đặt dấu ngoặc kép xung
quanh Vì
so it's arrow.left.circle.fill   🍀   vậy, đó là
title is sign out tint color is dot red   🍀   tiêu đề arrow.left.circle.fill đang đăng xuất có
màu sắc chấm đỏ
cool right and   🍀   mát mẻ bên phải và
let's get that there   🍀   hãy đến đó
and then one more button   🍀   và sau đó thêm một nút nữa
for deleting our accounts   🍀   để xóa tài khoản của chúng ta
and I believe this is going to be   🍀   và tôi tin rằng đây sẽ là
xmark.circle.fill   🍀   xmark.circle.fill
and this is going to say   🍀   và nút này sẽ nói
delete account   🍀   xóa tài khoản,
so let's see let's let this load   🍀   vì vậy hãy xem nào, hãy để cái này tải
and yeah that looks really good right   🍀   và vâng, nó trông rất đẹp phải không
guys so that's our profile page   🍀   các bạn, vậy đó là trang hồ sơ của chúng ta,
um next up guys uh what I want us to do   🍀   tiếp theo các bạn uh, điều tôi muốn chúng ta
làm
is create like a user data model so that   🍀   là tạo ra một mô hình dữ liệu người dùng để
we can actually populate this with a   🍀   chúng ta có thể thực sự điền vào điều này
với một
user and then we're going to get into   🍀   người dùng và sau đó chúng tôi sẽ
the sign in and sign up stuff and we're   🍀   đăng nhập và đăng ký nội dung và chúng tôi
going to need that user object to do   🍀   sẽ cần đối tượng người dùng đó để thực
hiện
that stuff as well so that's what's   🍀   công việc đó, vì vậy đó là những gì
coming next   🍀   sắp tới,
so let's hop into our model folder guys   🍀   vì vậy hãy nhảy vào thư mục mô hình của
chúng tôi
and once again this is going to be our   🍀   và một lần nữa, đây sẽ là
data model for our user that we're going   🍀   mô hình dữ liệu của chúng tôi dành cho
người dùng mà chúng tôi sẽ
to be signing in and out of our app and   🍀   đăng nhập và đăng xuất khỏi ứng dụng của
mình, đồng thời
creating and all of that good stuff so   🍀   tạo và tất cả những nội dung hay đó, vì vậy
this is just going to be a regular Swift   🍀   đây sẽ chỉ là một tệp Swift thông thường
file and we're just going to call this   🍀   và chúng tôi sẽ chỉ cần gọi




about:blank



30/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
user   🍀   người dùng này
and for any app that you guys create   🍀   và đối với bất kỳ ứng dụng nào mà các bạn
tạo yêu cầu
that requires authentication you're   🍀   xác thực, bạn
going to need to create a user object   🍀   sẽ cần tạo một đối tượng người dùng
like this it's how you represent your   🍀   như thế này, đó là cách bạn đại diện cho
user programmatically in your code as a   🍀   người dùng của mình theo chương trình
trong mã của bạn
data object right you're signing someone   🍀   dưới dạng đối tượng dữ liệu.
up that person is referred to as a user   🍀   lên người đó được gọi là người dùng
and you're going to need to refer to   🍀   và bạn sẽ cần đề cập đến
that user in probably almost every   🍀   người dùng đó ở hầu hết mọi
surface of your application right so in   🍀   bề mặt của ứng dụng của bạn, vì vậy trong
this example it's just going to be   🍀   ví dụ này, nó sẽ
populating this profile with the user's   🍀   điền vào hồ sơ này với dữ liệu của người
dùng
data so that when you log in as   🍀   để khi bạn đăng nhập với tư cách
different users it displays the correct   🍀   những người dùng khác nhau, nó sẽ hiển thị
user data but yeah let's go ahead and   🍀   dữ liệu người dùng chính xác nhưng vâng,
hãy tiếp tục và
just create this struct   🍀   chỉ cần tạo cấu trúc này
so it's going to be a called user and   🍀   để nó trở thành người dùng được gọi và
it's going to conform to the   🍀   nó sẽ tuân theo
identifiable protocol and the codable   🍀   giao thức có thể nhận dạng và giao thức có
thể mã hóa
protocol okay and we're going to say let   🍀   được và chúng tôi sẽ nói let
ID and that's going to be a string   🍀   ID và đó sẽ là một chuỗi
let full name   🍀   let full name
that's going to be a string and let   🍀   sẽ là một string và let
email which is also a string   🍀   email cũng là một string
and we're also going to have this   🍀   và chúng ta cũng sẽ có
initials property guys so we're going to   🍀   thuộc tính chữ cái đầu này nhé các bạn, vì
vậy chúng ta sẽ
write or create a computed property here   🍀   viết hoặc tạo một thuộc tính được tính toán
ở đây
to get the user's initials so that you   🍀   để lấy tên viết tắt của người dùng để bạn
see Michael Jordan is going to display   🍀   thấy Michael Jordan sẽ hiển thị
MJ Steph and Dallas would display SD so   🍀   MJ Steph và Dallas sẽ hiển thị SD,
on and so forth so we're going to create   🍀   v.v. vì vậy chúng tôi sẽ tạo


about:blank

31/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
an initials guy here   🍀   một tên viết tắt ở đây,
it's going to be a string apple or Swift   🍀   nó sẽ là một chuỗi apple hoặc Swift
actually has a component to help us with   🍀   thực sự có một thành phần để giúp chúng
tôi với
this we're going to say let formatter   🍀   điều này, chúng tôi sẽ nói hãy để bộ định
dạng
equals person name components   🍀   bằng tên người, bộ định dạng thành phần
components   🍀   tên người, bộ định dạng thành phần,
formatter
we're going to say if let components   🍀   chúng tôi sẽ nói nếu để thành phần bằng bộ
định dạng,
equals formatter dot person name   🍀   dấu chấm thành phần tên người
components from full name okay so it's   🍀   từ tên đầy đủ, vì vậy nó
going to look at the full name and this   🍀   sẽ xem xét tên đầy đủ và
object here can divide it up into   🍀   đối tượng này ở đây có thể chia nó thành
components and give us back what we need   🍀   các thành phần và trả lại cho chúng tôi
những gì chúng tôi cần
from the user's full name which is   🍀   từ tên đầy đủ của người dùng, điều này
really really nice right saves us a lot   🍀   thực sự rất hay giúp chúng tôi tiết kiệm rất
of trouble from having to do it we're   🍀   nhiều rắc rối khi phải làm điều đó, chúng tôi
going to say formatter.style equals dot   🍀   sẽ nói formatter.style bằng dấu
abbreviated   🍀   chấm viết tắt
and we're going to say return formatter   🍀   và chúng tôi sẽ nói rằng trình định dạng trả
về
dot string from components   🍀   chuỗi dấu chấm từ các thành phần
and if it's nothing we're just going to   🍀   và nếu không có gì, chúng tôi sẽ
return a blank string   🍀   trả về một chuỗi trống
in a real app you guys might want to   🍀   trong một ứng dụng thực, các bạn có thể
muốn
return like an image or something like   🍀   trả về dưới dạng hình ảnh hoặc thứ gì đó
tương
that but we're not going to be doing   🍀   tự nhưng chúng tôi sẽ không để làm
that here where it would be like a blank   🍀   điều đó ở đây, nơi nó sẽ giống như một chế
độ
profile image view but you know   🍀   xem ảnh hồ sơ trống nhưng bạn biết đấy
everything goes according to plan the   🍀   mọi thứ diễn ra theo đúng kế hoạch,
user has to submit a full name when they   🍀   người dùng phải gửi tên đầy đủ khi họ
sign up even if it's just like one   🍀   đăng ký ngay cả khi nó chỉ giống như một
character   🍀   ký tự,




about:blank   🍀   32/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
um you know we're going to do some form   🍀   bạn biết đấy, chúng tôi sẽ thực hiện một số
validation as well then this won't be a   🍀   xác thực biểu mẫu thì điều này sẽ không
thành
problem so now that we have this user   🍀   vấn đề vì vậy bây giờ chúng ta có đối tượng
người dùng này,
object let's go ahead and just create   🍀   hãy tiếp tục và chỉ cần tạo
like a mock user so I can say extension   🍀   giống như một người dùng giả để tôi có thể
nói người dùng tiện ích mở rộng
user
static VAR mock
underscore user   🍀   người dùng dấu gạch dưới VAR tĩnh bằng
equals user   🍀   người dùng
and the ID is just going to be an NS   🍀   và ID chỉ là sẽ là một
uuid dot uuid string full name   🍀   chuỗi NS uuid dot uuid tên đầy đủ,
let's make it Kobe Bryant   🍀   hãy biến nó thành
test at   🍀   bài kiểm tra Kobe Bryant tại
gmail.com okay so this is our mock user   🍀   gmail.com nhé, vì vậy đây là người dùng giả
của chúng ta
right guys   🍀   phải không các bạn,
so now let's go ahead and see if we can   🍀   vì vậy bây giờ hãy tiếp tục và xem liệu
chúng ta có thể
just populate this profile page with   🍀   điền trang hồ sơ này với
like actual user data so let's go back   🍀   dữ liệu người dùng thực tế không vì vậy,
hãy quay lại
to our profile view   🍀   chế độ xem hồ sơ của chúng ta
and here instead of MJ we can say like   🍀   và ở đây thay vì MJ, chúng ta có thể nói
thích
mock user   🍀   người dùng giả
or sorry we would say user dot mock user   🍀   hoặc xin lỗi, chúng tôi sẽ nói người dùng
chấm người dùng giả lập
Dot   🍀   Dấu chấm
initials just like that   🍀   viết tắt giống như vậy
so you see now it's KB for Kobe Bryant   🍀   để bạn thấy bây giờ đó là KB cho Kobe
Bryant,
which is really cool   🍀   điều này thực sự tuyệt vời
now we're going to go here and say user   🍀   bây giờ chúng tôi sẽ đi đến đây và nói
người dùng
dot mock user dot full name   🍀   dấu chấm mô phỏng tên đầy đủ của người
dùng
and we can copy and paste this   🍀   và chúng tôi có thể sao chép và dán


about:blank

33/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
make this email   🍀   email này để tạo email này
so the test guy is going to just be   🍀   để người kiểm tra sẽ
right you know it's uh   🍀   chính xác, bạn biết đấy, uh,
it's the same between the two things you   🍀   hai thứ giống nhau mà bạn
can change it back in the mock user   🍀   có thể thay đổi lại trong hướng dẫn sử dụng
mô phỏng
guide doesn't really matter   🍀   không thực sự quan trọng
um you guys will notice now that because   🍀   ừm, bây giờ các bạn sẽ nhận thấy rằng bởi
vì
this is weird because it's this is a   🍀   điều này thật kỳ lạ bởi vì đây là một
property that's coming from somewhere   🍀   thuộc tính đến từ một nơi
else now it's just not a raw string   🍀   khác, bây giờ nó không phải là một chuỗi
thô
right here the accent color guide   🍀   ngay tại đây, hướng dẫn màu nhấn
doesn't work so here is where you could   🍀   không hoạt động nên ở đây là nơi bây giờ
bạn có thể
now change the foreground color to dot   🍀   thay đổi màu nền trước thành chấm
gray I just wanted to go over that   🍀   xám. Tôi chỉ muốn xem qua
technicality it is pretty confusing and   🍀   tính kỹ thuật đó, nó khá khó hiểu và
I think it's a bug with uh in Swift that   🍀   tôi nghĩ đó là một lỗi với uh trong Swift mà
Apple needs to fix I'm not sure if they   🍀   Apple cần sửa. Tôi không chắc liệu họ
ever will it's pretty small and it is   🍀   có sửa được không. nhỏ và
kind of annoying so hopefully they do   🍀   khá phiền phức, vì vậy hy vọng họ sẽ
fix that   🍀   khắc phục điều đó
uh somebody submitted a complaint to   🍀   uh ai đó đã gửi khiếu nại cho
them for me please because I don't feel   🍀   họ giúp tôi vì
like dealing with them anyway   🍀   dù sao thì
um so that looks really good so now we   🍀   tôi cũng không muốn
have a user object we are populating our   🍀   giao dịch với họ.
profile page with actual user data so   🍀   trang hồ sơ của chúng tôi với dữ liệu người
dùng thực tế, vì vậy
now it's time for the big boy stuff   🍀   bây giờ đã đến lúc dành cho công cụ quan
trọng,
right we need to set up Firebase so that   🍀   chúng tôi cần thiết lập Firebase để
we can have a service that authenticates   🍀   chúng tôi có thể có dịch vụ xác thực
users for us creates them we can log in   🍀   người dùng để chúng tôi tạo ra họ, chúng tôi
có thể đăng nhập
with that if you guys get the completed   🍀   bằng dịch vụ đó nếu các bạn nhận được
nguồn hoàn chỉnh




about:blank   🍀   34/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
source code you have options like for   🍀   mã, bạn có các tùy chọn như
getting a password and all that stuff so   🍀   lấy mật khẩu và tất cả những thứ đó, vì vậy
đó là
that's what we're going to be doing next   🍀   những gì chúng tôi sẽ làm tiếp theo,
we're going to be setting up Firebase   🍀   chúng tôi sẽ thiết lập Firebase
and then we're going to create an   🍀   và sau đó chúng tôi sẽ tạo một
authentication view model to house all   🍀   mô hình chế độ xem xác thực để chứa tất
of the functionality for logging a user   🍀   cả chức năng ghi nhật ký người dùng
in signing them up signing them out   🍀   đăng ký họ đăng xuất
deleting their account and all of that   🍀   xóa tài khoản của họ và tất cả
good stuff and then we also need to do   🍀   những nội dung hay đó, sau đó chúng tôi
cũng cần thực hiện
some presentation logic in the app so   🍀   một số logic trình bày trong ứng dụng
that you know if I hit sign out   🍀   để bạn biết nếu tôi nhấn đăng xuất thì
it goes back to my login page and if I   🍀   nó sẽ quay lại trang đăng nhập của tôi và
nếu tôi
were to close the app and relaunch it   🍀   đóng ứng dụng và khởi chạy lại,
you know we wanted to open the Curt to   🍀   bạn biết đấy, chúng tôi cũng muốn mở Curt
đến
the correct page as well right I'm going   🍀   đúng trang. Tôi sẽ chỉ
to show you guys how to make it so that   🍀   cho các bạn cách tạo ứng dụng đó để
if the user signs into the app one time   🍀   nếu người dùng đăng nhập vào ứng dụng
một lần
unless they sign out it will always   🍀   trừ khi họ đăng xuất, nó sẽ luôn
direct them to the main interface of the   🍀   hướng họ đến giao diện chính của
app or that profile view which is really   🍀   ứng dụng hoặc chế độ xem hồ sơ đó, điều
này thực sự
cool unless you're building an app like   🍀   thú vị trừ khi bạn đang xây dựng một ứng
dụng như
a banking app or something where you   🍀   ứng dụng ngân hàng hoặc thứ gì đó mà bạn
want the user to have to log in every   🍀   muốn người dùng phải đăng nhập mọi
time typically most apps don't do that   🍀   lúc. các ứng dụng không làm điều đó,
so we're going to be showing you how to   🍀   vì vậy chúng tôi cũng sẽ chỉ cho bạn cách
thực
do that here as well so next up we're   🍀   hiện điều đó ở đây, vì vậy, tiếp theo chúng
ta
going to set up Firebase guys let's do   🍀   sẽ thiết lập Firebase. Hãy
it so really quickly before we set up   🍀   thực hiện thật nhanh trước khi chúng ta thiết
lập
our own Firebase project I just want to   🍀   dự án Firebase của riêng mình. muốn


about:blank

35/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
show you guys what the completed one   🍀   cho các bạn thấy cái đã hoàn thành trông
looks like so you have a better idea of   🍀   như thế nào để bạn có ý tưởng tốt hơn về
việc
what we're going to be using this for if   🍀   chúng tôi sẽ sử dụng cái này để làm gì nếu
you're not familiar with Firebase so we   🍀   bạn không quen thuộc với Firebase nên
chúng tôi
have this authentication section and   🍀   có phần xác thực này và
this is where all of our user   🍀   đây là nơi mà tất cả người dùng của chúng
tôi
authentication is going to exist we can   🍀   xác thực sẽ tồn tại, chúng tôi có thể
see that we signed up with email and   🍀   thấy rằng chúng tôi đã đăng ký bằng email
và
this is our user ID when they signed in   🍀   đây là ID người dùng của chúng tôi khi họ
đăng nhập
and when they created their account and   🍀   và khi họ tạo tài khoản và
then our database is where we're going   🍀   sau đó cơ sở dữ liệu của chúng tôi là nơi
chúng tôi sẽ
to actually store all of the users   🍀   thực sự lưu trữ tất cả
information so you can see here that   🍀   thông tin người dùng, vì vậy bạn có thể thấy
ở đây
this
Kobe Bryant's information and then this   🍀   thông tin này của Kobe Bryant và sau đó
is Michael Jordan's information so that   🍀   là thông tin của Michael Jordan để
we are actually going to be able to   🍀   chúng tôi thực sự có thể
store this information in Firebase and   🍀   lưu trữ thông tin này trong Firebase và
retrieve it when a user logs in and   🍀   truy xuất thông tin đó khi người dùng đăng
nhập và
display it in the application this is   🍀   hiển thị thông tin đó trong ứng dụng, đây là
the foundation of any application that   🍀   nền tảng của bất kỳ ứng dụng
stores uh or creates user profiles and   🍀   lưu trữ uh hoặc tạo hồ sơ người dùng và
authenticates users so once again you   🍀   xác thực người dùng, vì vậy, một lần nữa,
các
guys are going to just be able to drag   🍀   bạn sẽ có thể kéo
and drop this whole feature into any app   🍀   và thả toàn bộ tính năng này vào bất kỳ ứng
dụng
that you create that requires user   🍀   nào mà bạn tạo yêu cầu
profiles accounts or user authentication   🍀   tài khoản hồ sơ người dùng hoặc xác thực
người dùng,
whatever it may be so let's go over to   🍀   bất kể đó là gì. chuyển sang
Firebase if you guys have never done   🍀   Firebase nếu các bạn chưa từng làm


about:blank

36/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
this before go to   🍀   điều này trước đây, hãy truy cập
console.firebase.google.com you do need   🍀   console.firebase.google.com, bạn cần phải
to be signed into a Google account to   🍀   đăng nhập vào tài khoản Google để
create or use Firebase and create a   🍀   tạo hoặc sử dụng Firebase và tạo một
project so here I'm going to call this   🍀   dự án, vì vậy ở đây tôi sẽ gọi đây là
Swift UI auth tutorial   🍀   Giao diện người dùng Swift hướng dẫn xác
thực,
let's continue we do not need analytics   🍀   hãy tiếp tục, chúng tôi không cần phân tích,
let's go ahead and create our project   🍀   hãy tiếp tục và tạo dự án của chúng tôi
and let's just go ahead and let it do   🍀   và hãy tiếp tục và để nó thực hiện
its thing here it   🍀   công việc của mình ở đây, nó
um
moves pretty quickly   🍀   di chuyển khá nhanh
and what it's doing right now is   🍀   và những gì nó đang làm hiện tại
literally just creating our Firebase   🍀   thực sự chỉ là tạo dự án Firebase của chúng
tôi
project and then we're going to set up   🍀   và sau đó chúng tôi' chúng ta sẽ thiết lập
authentication and our database   🍀   xác thực và cơ sở dữ liệu của chúng ta
awesome we're ready to go   🍀   thật tuyệt vời, chúng ta đã sẵn sàng
hit continue and now guys what we're   🍀   nhấn tiếp tục và bây giờ, những gì chúng ta
going to do is   🍀   sẽ làm là
go to build and go to Authentication   🍀   xây dựng và đi đến Xác thực,
so on this left menu here go to build   🍀   vì vậy, trên menu bên trái này, hãy đi đến
xây dựng
and then go to authentication and hit   🍀   và sau đó đến xác thực và nhấn bắt
get started   🍀   đầu
and this is where we're going to sign up   🍀   và đây là nơi chúng tôi sẽ đăng ký
or deal with handling our user   🍀   hoặc xử lý việc xử lý xác thực người dùng
của chúng tôi
authentication so you can see we have a   🍀   để bạn có thể thấy chúng tôi có một
bunch of different providers   🍀   loạt các nhà cung cấp khác nhau.
I'm going to be adding functionality to   🍀   Tôi sẽ thêm chức năng
this uh so if you guys you know get the   🍀   này uh vì vậy nếu các bạn biết lấy
source code you will get access to   🍀   mã nguồn, bạn sẽ có quyền truy cập vào
updates   🍀   các bản cập nhật
um if you are a gold member and above I   🍀   ừm nếu bạn là thành viên vàng trở lên, tôi
believe so you get added to the GitHub   🍀   tin rằng vì vậy bạn được thêm vào




about:blank   🍀   37/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
repository of this so you get access to   🍀   kho GitHub của cái này để bạn có quyền
truy cập vào
updates as they come where I'm going to   🍀   các bản cập nhật khi chúng đến nơi tôi sẽ
be adding stuff like Google sign in   🍀   thêm những thứ như Đăng nhập Google
Facebook sign in and all that but we are   🍀   Đăng nhập Facebook và tất cả những thứ
đó nhưng hiện tại chúng tôi
for now just going to be dealing with   🍀   sẽ xử lý đăng
email and password sign in so go to   🍀   nhập email và mật khẩu, vì vậy hãy bật
enable and hit save   🍀   và nhấn lưu
and let's see we're good to go there and   🍀   và hãy xem chúng tôi ổn để đến đó và
then we're going to go back to build and   🍀   sau đó chúng tôi sẽ bắt đầu quay lại xây
dựng và
you're going to go to firestore database   🍀   bạn sẽ truy cập cơ sở dữ liệu firestore
and we're going to set this up as well   🍀   và chúng tôi cũng sẽ thiết lập
so hit create database   🍀   cơ sở dữ liệu này, vì vậy hãy nhấn tạo cơ
sở dữ liệu
and we're going to start in test mode   🍀   và chúng tôi sẽ bắt đầu ở chế độ thử
nghiệm,
hit next   🍀   nhấn tiếp theo
and hit enable   🍀   và nhấn bật
the location that it defaults to should   🍀   vị trí mà nó mặc định.
be fine   🍀   được rồi
and this is creating our databases so   🍀   và điều này đang tạo cơ sở dữ liệu của
chúng tôi, vì vậy
the difference between the two things is   🍀   sự khác biệt giữa hai điều là
one of these components the   🍀   một trong những thành phần này,
authentication guy handles user   🍀   anh chàng xác thực xử lý
authentication it creates a user account   🍀   xác thực người dùng, nó tạo tài khoản
người dùng,
the database actually stores the user's   🍀   cơ sở dữ liệu thực sự lưu trữ thông tin của
người dùng
information like their the other   🍀   giống như
metadata corresponding to a user like   🍀   siêu dữ liệu khác của họ tương ứng với
người dùng như thông tin
their full name their user identifier   🍀   đầy đủ của họ đặt tên cho số nhận dạng
người dùng của họ
and whatever else a user account is   🍀   và bất kỳ thứ gì khác mà tài khoản người
dùng
going to have in your application this   🍀   sẽ có trong ứng dụng của bạn, điều này
is obviously very basic some users   🍀   rõ ràng là rất cơ bản, một số


about:blank

38/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
objects can get very complex like an   🍀   đối tượng người dùng có thể trở nên rất
phức tạp, chẳng hạn như
Instagram user for example has like   🍀   người dùng Instagram có
hundreds and hundreds of properties   🍀   hàng trăm và hàng trăm thuộc tính
associated with it   🍀   được liên kết với nó,
um you know so this is just a very basic   🍀   bạn biết điều này chỉ là một loại vỏ rất cơ
bản
sort of shell for what a user is going   🍀   cho
to look like and now our database is set   🍀   giao diện của người dùng và bây giờ cơ sở
dữ liệu của chúng tôi cũng đã được thiết
up as well so now guys   🍀   lập, vì vậy bây giờ các bạn,
um let's go back to our Swift UI auth   🍀   hãy quay lại hướng dẫn xác thực giao diện
người dùng Swift của chúng tôi
tutorial here and we are going to add   🍀   tại đây và chúng tôi sẽ thêm
Firebase to our app now so let's go and   🍀   Firebase vào ứng dụng của mình bây giờ,
hãy bắt đầu và
hit iOS there and we need to get the   🍀   nhấn iOS ở đó và chúng tôi cần lấy
bundle identifier from our application   🍀   số nhận dạng gói từ ứng dụng của mình,
so let's go back here select your   🍀   vì vậy hãy quay lại đây, chọn
project name all the way up at the top   🍀   tên dự án của bạn ở trên cùng
in the directory and grab this bundle   🍀   trong thư mục và lấy số
identifier you're going to hit the arrow   🍀   nhận dạng gói này mà bạn sẽ nhấn mũi tên,
sao
and copy and paste this   🍀   chép và dán cái này
into here and then hit Register App   🍀   vào đây, sau đó nhấn Đăng ký ứng dụng
and now we need to download this Google   🍀   và bây giờ chúng tôi cần tải xuống
service info Dash plist file   🍀   tệp plist Dash thông tin dịch vụ Google này.
I'm going to go to my downloads   🍀   Tôi sẽ chuyển đến phần tải xuống của mình
and as you guys can see I have it right   🍀   và như các bạn có thể thấy, tôi có nó ngay
here   🍀   tại đây,
um what I like to do guys is if you see   🍀   um những gì tôi thích điều cần làm là nếu
bạn thấy
a dash in a number like this you can't   🍀   một dấu gạch ngang trong một số như thế
này, bạn không thể
use this info plist file you have to   🍀   sử dụng tệp plist thông tin này, bạn phải
delete that but if you TR if you have   🍀   xóa tệp đó nhưng nếu bạn TR nếu bạn
like a Google info p list somewhere else   🍀   thích danh sách thông tin p của Google ở
một nơi khác
in here it's not going to allow you to   🍀   ở đây thì điều đó sẽ không được phép bạn




about:blank   🍀   39/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
do that so what I like to do is create   🍀   làm điều đó vì vậy những gì tôi muốn làm là
tạo
like a new   🍀   giống như một
instance of my finder by hitting command   🍀   phiên bản mới của công cụ tìm kiếm của tôi
bằng cách nhấn
option n   🍀   tùy chọn lệnh n
go to the location of your project so   🍀   đi đến vị trí dự án của bạn, vì vậy
let's see where is my desktop   🍀   hãy xem hướng dẫn xác thực Swift UI lập
trình máy tính để bàn của tôi ở đâu
programming
Swift UI auth tutorial and just drag   🍀   và chỉ cần kéo
this guy into there   🍀   anh chàng này vào đó
and now we can change the name of it   🍀   và bây giờ chúng tôi có thể thay đổi tên của
nó, điều
this is thrown a lot of people off this   🍀   này đã khiến rất nhiều người loại bỏ tệp
này.
file has to say Google service Dash info
plist it can't say anything else so now
that we've done that let's go ahead and
hit next and we need to sorry actually   🍀   thực sự xin lỗi, hãy
drag and drop this into our Firebase   🍀   kéo và thả cái này vào dự án Firebase của
chúng tôi,
project
excuse me for bouncing around a little   🍀   xin lỗi vì đã nhảy lung tung một
bit here guys there we go   🍀   chút ở đây, chúng ta đi đây,
so now   🍀   vì vậy bây giờ
just drag and drop it there   🍀   chỉ cần kéo và thả nó ở đó,
make sure you have copy items if needed   🍀   đảm bảo rằng bạn đã kiểm tra các mục sao
chép nếu cần
checked
and now we have our Google service info   🍀   và bây giờ chúng tôi có thông tin dịch vụ
Google của chúng tôi
p list so for those of you wondering   🍀   p vì vậy đối với những bạn đang thắc mắc
what this is for this is just how   🍀   đây là gì thì đây chỉ là cách
our app is going to communicate with the   🍀   ứng dụng của chúng tôi sẽ giao tiếp với
Firebase server that we just set up   🍀   máy chủ Firebase mà chúng tôi vừa thiết lập
right so it has things like our client   🍀   để nó có những thứ như ID ứng dụng khách
của chúng tôi
ID or reverse client ID or API key all   🍀   hoặc ID ứng dụng ngược hoặc khóa API tất




about:blank   🍀   40/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
of the things we need to securely   🍀   cả những thứ chúng tôi cần để
communicate with our Firebase server so   🍀   liên lạc an toàn với máy chủ Firebase của
mình để
you know not just anybody can access   🍀   bạn biết rằng không phải ai cũng có thể truy
cập
that information so guys make sure you   🍀   thông tin đó, vì vậy mọi người hãy đảm bảo
rằng bạn
keep this information secret obviously I   🍀   giữ bí mật thông tin này rõ ràng là tôi
don't care if you see mine because this   🍀   không quan tâm nếu bạn thấy thông tin của
tôi vì đây
is just a test project now what we need   🍀   chỉ là một dự án thử nghiệm. việc cần làm
to do is install the Swift package into   🍀   là cài đặt gói Swift vào
our xcode project so that we can   🍀   dự án xcode của chúng tôi để chúng tôi
actually utilize the Firebase code so   🍀   thực sự có thể sử dụng mã Firebase, vì vậy
basically Firebase has written a bunch   🍀   về cơ bản Firebase đã viết một loạt
of code that we can use we just have to   🍀   mã mà chúng tôi có thể sử dụng, chúng tôi
chỉ cần
integrate or download their code into   🍀   tích hợp hoặc tải mã của họ vào
our code base and we're going to do that   🍀   cơ sở mã của chúng tôi và chúng tôi sẽ làm
điều đó
using the Swift package manager so guys   🍀   bằng cách sử dụng trình quản lý gói Swift, vì
vậy mọi người
go ahead and copy this   🍀   hãy tiếp tục và sao chép tệp này
and let's go back to xcode file and we   🍀   và hãy quay lại tệp xcode và chúng tôi
are going to say add packages   🍀   sẽ nói thêm các gói, hãy
go ahead and paste that in there   🍀   tiếp tục và dán gói đó vào
Firebase iOS SDK and select add package   🍀   SDK iOS Firebase và chọn thêm gói
and this might take a second to do its   🍀   và việc này có thể mất một khoảng thời gian
thứ hai để thực hiện
thing so we're going to get presented   🍀   công việc của nó, vì vậy chúng tôi sẽ trình
bày
with a checklist here in just a second   🍀   một danh sách kiểm tra ở đây chỉ sau một
giây,
so   🍀   vì vậy
let's see   🍀   hãy xem
um and I'll tell you guys which modules   🍀   ừm và tôi sẽ cho các bạn biết
that we want to select for our project   🍀   chúng tôi muốn chọn mô-đun nào cho dự án
của mình
here   🍀   ở đây




about:blank   🍀   41/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
so we see this checklist here guys I'm   🍀   để chúng tôi xem danh sách kiểm tra này ở
đây các bạn Tôi
going to go ahead and expand it just a   🍀   sẽ tiếp tục và mở rộng nó một
little bit let's see which ones we need   🍀   chút, hãy xem cái nào chúng tôi cần
so we don't need analytics or any of   🍀   vì vậy chúng tôi không cần phân tích hoặc
bất kỳ cái nào trong số đó
that we do need Firebase auth for sure   🍀   chúng tôi cần xác thực Firebase chắc chắn
um we are going to also use Firebase   🍀   chúng tôi cũng sẽ sử dụng Firebase
firestore that's how we communicate with   🍀   firestore đó là cách chúng tôi giao tiếp với
our database and Firebase firestore   🍀   cơ sở dữ liệu của chúng tôi và Firebase
Firestore
Swift as well this enables us to   🍀   Swift cũng như điều này cho phép chúng tôi
actually encode and decode Firebase data   🍀   thực sự mã hóa và giải mã dữ liệu Firebase
that comes back   🍀   quay trở lại
from uh the Firebase servers so I think   🍀   từ các máy chủ Firebase, vì vậy tôi nghĩ
that's good if you guys want to work   🍀   điều đó thật tốt nếu các bạn cũng muốn làm
việc
with images do Firebase storage as well   🍀   với hình ảnh để lưu trữ Firebase.
we're not doing anything with profile   🍀   làm bất cứ điều gì với
images here but I'll check it anyway   🍀   hình ảnh hồ sơ ở đây nhưng dù sao thì tôi
cũng sẽ kiểm tra nó
um and then we just need to let all of   🍀   và sau đó chúng ta chỉ cần
these package dependencies install   🍀   cài đặt tất cả các phụ thuộc gói này
so for those of you who don't know   🍀   để những người chưa biết
Swift package manager is a much better   🍀   Swift package manager là một
better alternative to cocoapods because   🍀   giải pháp thay thế tốt hơn nhiều cho
cacaopods vì
it enables us to not have to use an XC   🍀   nó cho phép chúng tôi không phải sử dụng
workspace or download cocoapods from the   🍀   không gian làm việc XC hoặc tải xuống
cacaopods từ
terminal and all that this is a much   🍀   thiết bị đầu cuối và tất cả điều này là một
better alternative as I'm sure you guys   🍀   giải pháp thay thế tốt hơn nhiều vì tôi chắc
rằng các bạn
already know but there are some people   🍀   đã biết nhưng có một số người
who are new to this and new to the   🍀   mới biết điều này và mới biết
channel   🍀   kênh
um so you know I got to explain all   🍀   ừm vì vậy bạn biết đấy, tôi phải giải thích tất
cả
those little things like that   🍀   những điều nhỏ nhặt như vậy




about:blank   🍀   42/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
but anyway   🍀   nhưng dù
um now that we have Firebase set up guys   🍀   sao thì bây giờ chúng tôi đã thiết lập
Firebase,
we're actually going to be able to now   🍀   chúng tôi thực sự sẽ có thể bắt
start communicating with our Firebase   🍀   đầu giao tiếp với
servers to register users and log them   🍀   các máy chủ Firebase của mình để đăng ký
người dùng và đăng
in and sign them out and all that stuff   🍀   nhập và đăng nhập cho họ out và tất cả
những thứ đó,
so that's what's coming next we're going   🍀   vì vậy đó là những gì sắp tới, chúng tôi sẽ
to be creating and setting up our   🍀   tạo và thiết lập
authentication view model so get excited   🍀   mô hình chế độ xem xác thực của chúng tôi,
vì vậy hãy hào hứng
for that guys   🍀   với những người đó, vì vậy
so let's hop up into our authentication   🍀   hãy truy cập vào thư mục xác thực của
chúng tôi
folder and we're going to create two   🍀   và chúng tôi sẽ tạo hai
groups here one for views   🍀   nhóm ở đây, một cho các khung nhìn
and one for view models guys just to   🍀   và một cho các mô hình xem chỉ để
keep this organized   🍀   giữ cho nó có tổ chức,
so obviously these two guys   🍀   vì vậy rõ ràng hai người này
will go into our view folder   🍀   sẽ vào thư mục xem của chúng ta
and let's put that there and now we're   🍀   và hãy đặt nó ở đó và bây giờ chúng ta
going to go here into our viewmodel   🍀   sẽ vào đây trong thư mục viewmodel của
chúng ta
folder and create this auth view model   🍀   và tạo mô hình xem auth này
so really quickly let's talk about what   🍀   thật nhanh hãy nói về những gì
the auth view model is going to be   🍀   mô hình chế độ xem xác thực sẽ
responsible for I believe there was an   🍀   chịu trách nhiệm. Tôi tin rằng đã xảy ra
error back there   🍀   lỗi ở đó,
okay yeah that's good to go   🍀   vâng, tốt thôi,
um so our authentication view model is   🍀   ừm, vì vậy mô hình chế độ xem xác thực
của chúng tôi
going to be responsible for a couple   🍀   sẽ chịu trách nhiệm về một số
things it's going to be responsible for   🍀   điều mà nó sẽ chịu trách nhiệm về
having all the functionality associated   🍀   việc có tất cả các chức năng liên quan
with authenticating our user right   🍀   đến việc xác thực người dùng của chúng tôi
có quyền




about:blank   🍀   43/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
making all those Network calls and stuff   🍀   thực hiện tất cả các cuộc gọi và nội dung
trên Mạng đó
and ultimately being in charge of   🍀   và cuối cùng chịu trách nhiệm
updating our UI or sending notifications   🍀   cập nhật giao diện người dùng của chúng
tôi hoặc gửi thông báo
to our UI when we need to update it so   🍀   tới giao diện người dùng của chúng tôi khi
chúng tôi cần cập nhật
basically what that's going to look like
is like when I type in test gmail.com   🍀   giao diện người dùng đó. trong thử nghiệm
gmail.com
and one in my password   🍀   và một trong mật khẩu của tôi,
um my off view model is going to handle   🍀   ừm, mô hình tắt chế độ xem của tôi sẽ xử lý
the form validation but it's also going   🍀   xác thực biểu mẫu nhưng nó cũng sẽ
to handle the networking for actually   🍀   xử lý mạng để thực sự
signing my user in right and then it's   🍀   đăng nhập đúng người dùng của tôi và sau
đó nó
also going to send updates to my view   🍀   cũng sẽ gửi các bản cập nhật cho chế độ
xem của tôi
so that it can present me with the Right   🍀   để nó có thể hiển thị cho tôi Chánh
View when you know things successfully   🍀   kiến  khi bạn biết mọi thứ đã thành công, vì
go through so another thing it's going   🍀   vậy, một điều khác mà nó sẽ
to do is for example if I said test like   🍀   làm là ví dụ nếu tôi nói kiểm tra như
one two three four gmail.com   🍀   một hai ba bốn gmail.com
and try to sign in I get an error   🍀   và thử đăng nhập, tôi nhận được
message it looks like there's no account   🍀   thông báo lỗi, có vẻ như vậy không có tài
khoản nào
associated with this email create an   🍀   được liên kết với email này, hãy tạo một
account to continue that's because   🍀   tài khoản để tiếp tục bởi vì
there's no account registered with this   🍀   không có tài khoản nào được đăng ký với
our authentication view model is going   🍀   mô hình chế độ xem xác thực của chúng tôi
cũng sẽ
to handle all of the errors as well so   🍀   xử lý tất cả các lỗi nên
it's got some pretty like pretty big   🍀   nó có một số
responsibilities behind it so let's go   🍀   trách nhiệm khá lớn đằng sau nó, vì vậy hãy
ahead and get started with it guys so   🍀   tiếp tục và bắt đầu nào các bạn, vì vậy
I'm going to create a class here called   🍀   tôi sẽ tạo một lớp ở đây có tên là
auth viewmodel   🍀   auth viewmodel
and it's going to confirm to conform to   🍀   và nó sẽ xác nhận việc tuân thủ
the observable object protocol   🍀   giao thức đối tượng quan sát được,




about:blank



44/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
so basically our view is going to be   🍀   vì vậy về cơ bản, chế độ xem của chúng tôi
sẽ có
able to observe changes on our auth view   🍀   thể quan sát các thay đổi trên mô hình chế
độ xem xác thực
model
I'm going to create a couple published   🍀   của chúng tôi. sẽ tạo một vài thuộc tính đã
xuất bản
properties here as well one is going to   🍀   ở đây cũng như một thuộc tính sẽ được
be called user session   🍀   gọi là phiên người dùng
and let's actually go up to the top here   🍀   và chúng ta hãy thực sự đi lên trên cùng ở
đây
and import   🍀   và nhập
Firebase   🍀   Firebase
and this is going to be Firebase auth   🍀   và đây sẽ là
dot user   🍀   người dùng dấu chấm xác thực Firebase
and it's going to be optional so we're   🍀   và nó sẽ là tùy chọn vì vậy chúng ta
going to go over what this is going to   🍀   sẽ xem xét những gì nó sẽ được
be used or how it's going to be used in   🍀   sử dụng hoặc cách nó sẽ được sử dụng
more detail in a second but it's   🍀   chi tiết hơn trong một giây nhưng
basically going to tell us whether or   🍀   về cơ bản, nó sẽ cho chúng tôi biết liệu
not we have a user logged in so then   🍀   chúng tôi có người dùng đăng nhập hay
không để
when we open our app it knows whether or   🍀   khi chúng tôi mở ứng dụng của mình, nó sẽ
biết liệu hoặc
not to Route us to the login flow or the   🍀   không Định tuyến chúng tôi đến luồng đăng
nhập hoặc chế
profile view   🍀   độ xem hồ sơ
um   🍀   ,
then we're also going to have a   🍀   thì chúng tôi cũng sẽ có một
published variable for our current user   🍀   biến được xuất bản cho người dùng hiện tại
của mình
and this is going to be our user object   🍀   và đây sẽ là đối tượng người dùng của
chúng tôi
so these two things are different this   🍀   nên hai điều này khác nhau, đây
is a Firebase auth user and this is our   🍀   là người dùng xác thực Firebase và đây là
user that we created here so we're going   🍀   người dùng của chúng tôi mà chúng tôi đã
tạo ở đây vì vậy chúng tôi sẽ
to need both of these things and we'll   🍀   cần cả hai thứ này và chúng tôi sẽ
go over that in more detail in a little   🍀   xem xét chi tiết hơn một chút ừm,
bit


about:blank

45/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
um now we're going to have an   🍀   bây giờ chúng tôi sẽ có một
initializer   🍀   trình khởi tạo
and we'll go over what this is going to   🍀   và chúng tôi sẽ xem qua cái này sẽ được
be filled with I just want to fill out   🍀   lấp đầy bằng gì Tôi chỉ muốn điền vào
all of the functions that we're going to   🍀   tất cả các chức năng mà chúng ta sẽ
have in here guys so first off we're   🍀   có ở đây, vì vậy trước tiên chúng ta
going to have a function to sign in   🍀   sẽ có một chức năng để đăng nhập
with email email which is a string   🍀   bằng email email là một chuỗi
password which is a string and it's   🍀   mật khẩu đó là một chuỗi và nó
going to say async throws   🍀   sẽ nói lệnh ném async
and if you guys have never seen this   🍀   và nếu các bạn chưa bao giờ thấy
async throws that's because Swift you uh   🍀   lệnh ném async này thì đó là bởi vì Swift,
bạn uh
Swift released this new async await   🍀   Swift đã phát hành chức năng chờ async
mới này
functionality that allows us to network   🍀   cho phép chúng tôi kết nối mạng
in a much much better way than using URL   🍀   theo cách tốt hơn nhiều so với sử dụng
sessions and a bunch of nasty completion   🍀   các phiên URL và một một loạt các khối
hoàn thành khó chịu
blocks and you guys might have guessed   🍀   và các bạn có thể đoán ra.
it I got a tutorial for it the link in   🍀   Tôi có một hướng dẫn cho nó, liên kết trong
the description or the link is in the   🍀   phần mô tả hoặc liên kết có trong
description to this video if you want to   🍀   phần mô tả của video này nếu bạn muốn
learn more about how async throws work   🍀   tìm hiểu thêm về cách thức hoạt động của
async throws
or async await works I'm really excited   🍀   hoặc async await hoạt động. Tôi' Tôi thực
sự hào hứng
about it I love using it I've been   🍀   với nó. Tôi thích sử dụng nó. Tôi đã
refactoring all my old projects to use   🍀   tái cấu trúc tất cả các dự án cũ của mình để
sử dụng
it so this is sort of the future guys   🍀   nó, vì vậy đây là một loại tương lai,
um so let's go ahead and continue on   🍀   ừm, vì vậy hãy tiếp tục và tiếp tục
with what we need from this auth view   🍀   với những gì chúng ta cần từ mô hình chế
độ xem xác thực này.
model we're going to have another   🍀   để có một
function to create a user   🍀   chức năng khác để tạo người dùng
with email email string   🍀   với email chuỗi email
password string full name String   🍀   chuỗi mật khẩu tên đầy đủ Chuỗi
and once again we're going to say async   🍀   và một lần nữa chúng ta sẽ nói async


about:blank

46/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
throws   🍀   ném
just like that   🍀   giống như vậy
and then we're going to have a function   🍀   và sau đó chúng ta sẽ có một chức năng
to sign out   🍀   để đăng xuất
and we're going to have a function to   🍀   và chúng ta sẽ có chức năng
delete our account   🍀   xóa tài khoản của chúng tôi
and then we're also going to have a   🍀   và sau đó chúng tôi cũng sẽ có
function to fetch our user data   🍀   chức năng tìm nạp dữ liệu người dùng của
chúng tôi
okay and this is just going to be async   🍀   và điều này sẽ không đồng bộ,
we don't need to have a throws here and   🍀   chúng tôi không cần phải cố gắng ở đây và
we'll talk more about that later what I   🍀   chúng tôi sẽ nói thêm về điều đó sau đó,
những gì tôi
want us to do now is go ahead and see   🍀   muốn chúng ta làm bây giờ là tiếp tục và
xem
how we're going to implement this Osby   🍀   cách chúng ta sẽ triển khai
model and the way we need to implement   🍀   mô hình Osby này và cách chúng ta cần
triển khai
it and all of the different places that   🍀   nó cũng như tất cả những nơi khác nhau
mà
we need to implement it as well so   🍀   chúng ta cũng cần triển khai để
you know obviously we're going to need   🍀   bạn biết rõ ràng là chúng tôi 'Tôi sẽ cần
it why is this yelling at me I don't get   🍀   nó tại sao điều này lại hét vào mặt tôi Tôi
không hiểu,
it
yeah there we go okay so we're going to   🍀   vâng, chúng tôi sẽ ổn thôi, vì vậy chúng tôi
sẽ
need it inside of our login view right   🍀   cần nó bên trong chế độ xem đăng nhập
của mình
because when we hit this button we want   🍀   vì khi chúng tôi nhấn nút này, chúng tôi
muốn
it to log our user in so what we would   🍀   nó ghi nhật ký người dùng của mình Vì vậy,
những gì chúng tôi sẽ
do is create an instance of our view   🍀   làm là tạo một phiên bản của mô hình chế
độ xem của chúng tôi
model up at the top so we could say like   🍀   ở trên cùng để chúng tôi có thể nói như
at State object VAR view model   🍀   ở Đối tượng trạng thái VAR, mô hình chế độ
xem
equals auth viewmodel right   🍀   bằng auth chế độ xem đúng
and then we could go down here   🍀   và sau đó chúng tôi có thể đi xuống đây




about:blank   🍀   47/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and where did that go right here   🍀   và nơi đã làm điều đó ngay tại đây
and say   🍀   và nói
viewmodel DOT sign in with email and   🍀   chế độ xem DOT đăng nhập bằng email và
password   🍀   mật khẩu
and because this is using async await   🍀   và bởi vì điều này đang sử dụng async đang
chờ
guys we actually need to wrap this in a   🍀   các bạn, chúng tôi thực sự cần phải thực
hiện điều này trong một
task and say try a weight   🍀   nhiệm vụ và nói thử trọng số
viewmodel.signin with email and password   🍀   viewmodel.signin bằng email và mật khẩu
so that's one way of doing it   🍀   vì vậy đó là một cách để thực hiện điều đó
uh in terms of how we implement the view   🍀   uh về cách chúng tôi thực hiện
model like this functionality is is good   🍀   mô hình chế độ xem như chức năng này rất
tốt
here when we click the button we want   🍀   ở đây khi chúng tôi nhấp vào nút mà chúng
tôi muốn, chúng
our we want to you know call this sign   🍀   tôi muốn bạn biết gọi
in function that's on our viewmodel but   🍀   chức năng đăng nhập này trên chế độ xem
của chúng tôi nhưng
this is going to get annoying because   🍀   điều này sẽ gây khó chịu vì
the if you initialize it as a state   🍀   nếu bạn khởi tạo nó như một đối tượng
trạng thái
object
because we also need this in our   🍀   bởi vì chúng tôi cũng cần điều này trong
registration view right and what you   🍀   chế độ xem đăng ký của chúng tôi và những
gì bạn
don't want to do is create another   🍀   không muốn làm là tạo một
instance of the view model here and just   🍀   phiên bản khác của mô hình chế độ xem tại
đây và chỉ
have a bunch of different instances of   🍀   có một loạt các phiên bản khác nhau của
your view model all across the app so   🍀   mô hình chế độ xem của bạn trên tất cả ứng
dụng, vì vậy
you say okay maybe you could create an   🍀   bạn có thể đồng ý tạo một
observed object
auth view model but then when we create   🍀   mô hình xem xác thực đối tượng được quan
sát nhưng sau đó khi chúng tôi tạo chế
the registration view we need to   🍀   độ xem đăng ký, chúng tôi cần
initialize it with the view model   🍀   khởi tạo nó với mô hình xem
and that gets annoying as well so the   🍀   và điều đó cũng gây khó chịu vì vậy
best thing to do guys is create an   🍀   điều tốt nhất nên làm là tạo một


about:blank

48/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
environment object here and essentially   🍀   đối tượng môi trường ở đây và về cơ bản là
an environment object gets initialized   🍀   một đối tượng môi trường được khởi tạo
in one place and can be used in multiple   🍀   ở một nơi và có thể được sử dụng trong
nhiều
search or across multiple surfaces in   🍀   tìm kiếm hoặc trên nhiều bề mặt trong
the application which is what we want   🍀   ứng dụng, đó là điều chúng tôi muốn
here because we also need to use this   🍀   ở đây vì chúng tôi cũng cần sử dụng điều
này
inside of our profile view as well and   🍀   bên trong chế độ xem hồ sơ của mình và
we're also going to see that we want to   🍀   chúng tôi cũng sẽ thấy rằng chúng tôi muốn
use it in our content view as well and   🍀   sử dụng nó cũng trong chế độ xem nội dung
của chúng tôi và
we'll go we'll go over how exactly but   🍀   chúng tôi sẽ tiếp tục, chúng tôi sẽ xem xét
chính xác cách thức nhưng chúng tôi
we're using we need access to stuff   🍀   đang sử dụng, chúng tôi cần quyền truy cập
vào nội dung
about the user in every single surface   🍀   về người dùng trong mọi bề mặt
of our app right now the authentication   🍀   của ứng dụng của chúng tôi ngay bây giờ
luồng xác thực chế
flow the profile view and the main root   🍀   độ xem hồ sơ và giao diện chính gốc
view the content View   🍀   xem nội dung Xem
so the best thing to do is to create an   🍀   vì vậy điều tốt nhất cần làm là tạo một
environment object which is what we're   🍀   đối tượng môi trường, đó là những gì chúng
ta
going to do we're going to say at State   🍀   sẽ làm, chúng ta sẽ nói ở Đối tượng trạng
thái
object VAR view model equals auth view   🍀   Mô hình chế độ xem VAR bằng mô hình chế
độ xem auth
model
and here we are going to set it as an   🍀   và ở đây chúng ta sẽ thiết lập nó như một
environment object on   🍀   đối tượng môi trường trên Chế độ
our content View   🍀   xem nội dung của chúng tôi
and this way it's only initialized in   🍀   và theo cách này, nó chỉ được khởi tạo ở
one place   🍀   một nơi
and guys I do also have tutorials on the   🍀   và các bạn, tôi cũng có hướng dẫn về sự
differences between State objects and   🍀   khác biệt giữa các đối tượng Trạng thái và
observed objects and environment objects   🍀   các đối tượng được quan sát và các đối
tượng môi trường,
so make sure you check that out the link   🍀   vì vậy hãy đảm bảo bạn kiểm tra xem liên
kết




about:blank   🍀   49/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
is in the description for all of that as   🍀   có trong phần mô tả cho tất cả những điều
đó
well it's very important to understand   🍀   cũng rất quan trọng để hiểu
the differences between these things if   🍀   sự khác biệt giữa những điều này nếu
you're going to build apps using Swift   🍀   bạn định xây dựng ứng dụng bằng Swift
UI one of the main issues I see with new   🍀   UI, một trong những vấn đề chính mà tôi
thấy với
Swift UI developers is they don't   🍀   các nhà phát triển Swift UI mới là họ không
understand how swift UI works as a whole   🍀   hiểu Swift UI hoạt động như thế nào Vì
so when it comes to building a complex   🍀   vậy, khi nói đến việc xây dựng một
application they have no idea what   🍀   ứng dụng phức tạp, họ không biết
they're doing you can build out little   🍀   họ đang làm gì, bạn có thể tạo ra
screens like this but when it comes to   🍀   những màn hình nhỏ như thế này nhưng khi
nói đến việc
navigating between a bunch of different   🍀   điều hướng giữa một loạt
views and how everything works at a high   🍀   các chế độ xem khác nhau và cách mọi thứ
hoạt động ở
level people get very confused and they   🍀   cấp độ cao, mọi người sẽ rất lo lắng. bối rối
và họ
get lost in the saw so it's very   🍀   bị lạc trong cái cưa, vì vậy điều rất
important to understand this stuff but   🍀   quan trọng là phải hiểu nội dung này nhưng
anyway   🍀   dù sao đi nữa,
now let's go back to our login View and   🍀   bây giờ chúng ta hãy quay lại Chế độ xem
đăng nhập của chúng ta và
we're going to replace this guy with   🍀   chúng ta sẽ thay thế anh chàng này bằng
environment objects   🍀   các đối tượng môi trường
and you guys will notice that you can't   🍀   và các bạn sẽ nhận thấy rằng bạn không thể
initialize an environment object right   🍀   khởi tạo một đúng đối tượng môi trường,
you can only cast it and that's because   🍀   bạn chỉ có thể sử dụng nó và đó là bởi vì
once again environment objects only get   🍀   một lần nữa các đối tượng môi trường chỉ
được
initialized once   🍀   khởi tạo một lần
so this is all good and you guys will   🍀   nên điều này rất tốt và các bạn sẽ
notice here with the way that we had   🍀   chú ý ở đây với cách chúng tôi đã
this set up previously it would ask us   🍀   thiết lập điều này trước đó, nó sẽ yêu cầu
chúng tôi
to patch that view model in which is   🍀   vá mô hình chế độ xem đó trong điều này
sort of annoying so once again we can   🍀   hơi khó chịu nên một lần nữa chúng ta có
thể




about:blank   🍀   50/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
just go here and say at environment   🍀   vào đây và nói
object VAR oops   🍀   đối tượng môi trường VAR oops
G model auth view model and now it just   🍀   G model auth view model và bây giờ nó chỉ
reads it from the environment that we're   🍀   đọc nó từ môi trường mà chúng ta đang
in right so we only initialized it in   🍀   ở nên chúng ta chỉ khởi tạo nó ở
this one place and now both of these   🍀   một nơi này và bây giờ cả hai
views can use that view model   🍀   chế độ xem này đều có thể sử dụng mô
hình chế độ xem đó
accordingly and it's also using the same   🍀   tương ứng và nó cũng đang sử dụng cùng
một
instance of that so it's only a single   🍀   phiên bản của chế độ xem đó vì vậy nó chỉ
là một
instance of the view model created I   🍀   phiên bản duy nhất của mô hình chế độ xem
được tạo. Tôi
know I'm harping on this but it's very   🍀   biết tôi đang nói về điều này nhưng điều rất
important to understand and as opposed   🍀   quan trọng là phải hiểu và trái ngược
to creating multiple instances of the   🍀   với việc tạo nhiều phiên bản của
view model and if you guys are having   🍀   mô hình khung nhìn và nếu các bạn gặp
trouble understanding what I mean there   🍀   khó khăn trong việc hiểu ý của tôi ở đó
like I said go watch the videos   🍀   như tôi đã nói, hãy xem video
um did I mention about the difference   🍀   ừm, tôi đã đề cập đến sự khác biệt
between State objects and observed   🍀   giữa các đối tượng Trạng thái và
objects and also brush up on your uh   🍀   các đối tượng được quan sát và cũng xem
lại
object oriented programming principles   🍀   các nguyên tắc lập trình hướng đối tượng
của bạn
um all that stuff is hard but it's   🍀   ừm tất cả những thứ đó đều khó nhưng nó
necessary if you want to be a good coder   🍀   cần thiết nếu bạn muốn trở thành một lập
trình viên
okay so now back here   🍀   giỏi, vì vậy bây giờ hãy quay lại đây
when we want to sign our user up we're   🍀   khi chúng tôi muốn đăng ký người dùng của
mình, chúng tôi
going to say task   🍀   sẽ nói nhiệm vụ hãy
try await view model   🍀   thử chờ xem
DOT sign or create user sorry   🍀   dấu DOT của mô hình hoặc tạo người dùng
xin lỗi
with email   🍀   bằng email
sorry guys email   🍀   xin lỗi các bạn
password is our password   🍀   mật khẩu email là mật khẩu




about:blank   🍀   51/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
full name is our full name for some   🍀   tên đầy đủ của chúng tôi là tên đầy đủ của
chúng tôi vì một
reason with the try away stuff the Swift   🍀   lý do nào đó với việc dùng thử công cụ
UI autocomplete with functions sucks and   🍀   tự động hoàn thành giao diện người dùng
Swift với các chức năng tệ hại và
it kind of sticks you like that
sometimes but not a big deal we got it   🍀   đôi khi bạn thích điều đó nhưng không phải
là vấn đề lớn, chúng tôi đã
done and now let me go and just add some   🍀   hoàn thành và bây giờ hãy để tôi đi và chỉ
cần thêm một số
print statements   🍀   câu lệnh in
to these functions in our auth view   🍀   vào các chức năng này trong mô hình chế
độ xem xác thực của chúng tôi
model
so that we can make sure that this is   🍀   để chúng tôi có thể đảm bảo rằng tất cả
điều này
all working correctly   🍀   đang hoạt động chính xác
and let's actually run our app guys so   🍀   và hãy thực sự chạy ứng dụng của chúng
tôi, vì
we haven't done that yet   🍀   chúng tôi chưa thực hiện điều đó
so I'm going to select iPhone 14 I have   🍀   nên tôi sẽ chọn iPhone 14 I có
the completed app on the iPhone 14 pro   🍀   ứng dụng hoàn chỉnh trên iPhone 14 pro
and let's just make sure all this stuff   🍀   và hãy đảm bảo rằng tất cả những thứ này
is working   🍀   đang hoạt động.
I actually think   🍀   Tôi thực sự nghĩ rằng
it's going to open up to just our   🍀   nó sẽ chỉ mở ra cho
content view which is this which we   🍀   chế độ xem nội dung của chúng tôi, đây là
điều mà chúng tôi
don't want right   🍀   không muốn đúng không,
um
so I'm going to actually go over with   🍀   vì vậy tôi sẽ thực sự Hãy cùng
you guys how we want to set this content   🍀   các bạn xem chúng tôi muốn thiết lập chế
độ xem nội dung này như thế nào
view up now because we've built out this   🍀   vì chúng tôi đã xây dựng
login view in our profile view and stuff   🍀   chế độ xem đăng nhập này trong chế độ
xem hồ sơ và nội dung của chúng tôi
but our app is launching the content   🍀   nhưng ứng dụng của chúng tôi đang khởi
chạy
view on initialization as we see here if   🍀   chế độ xem nội dung khi khởi tạo như
chúng tôi thấy ở đây nếu




about:blank   🍀   52/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
we go to the app file so basically we   🍀   chúng tôi truy cập ứng dụng vì vậy về cơ
bản, chúng tôi
want to just add some presentation logic   🍀   chỉ muốn thêm một số logic trình bày mà
I like to call it to help us figure out   🍀   tôi muốn gọi nó để giúp chúng tôi tìm ra
where we want to go and basically the   🍀   nơi chúng tôi muốn đến và về cơ bản
logic behind that is if we have a user   🍀   logic đằng sau đó là nếu chúng tôi có người
dùng
logged in we take them to the profile   🍀   đăng nhập, chúng tôi sẽ đưa họ đến chế độ
xem hồ sơ
view if we don't we take them to the   🍀   nếu chúng tôi không Chúng ta không đưa
chúng đến
authentication flow or the login View   🍀   luồng xác thực hoặc Chế độ xem đăng nhập
and we are going to use our   🍀   và chúng tôi sẽ sử dụng
authentication view model to help us do   🍀   mô hình chế độ xem xác thực của mình để
giúp chúng tôi làm
that so this is literally just going to   🍀   điều đó, vì vậy điều này thực sự sẽ
open up to this Hello World stuff so   🍀   mở ra nội dung Hello World này, vì vậy
let's go back and go environment object   🍀   hãy quay lại và chuyển sang đối tượng môi
trường
of our viewmodel   🍀   của chế độ xem của chúng tôi,
which is our auth view model   🍀   đây là mô hình chế độ xem xác thực của
chúng tôi
and we're going to replace all this   🍀   và chúng tôi sẽ thay thế tất cả
stuff we're going to say group   🍀   những thứ này mà chúng tôi sẽ nói là nhóm
because we're going to have a group of   🍀   vì chúng tôi sẽ có một nhóm chế
views here we're going to say if   🍀   độ xem ở đây chúng tôi sẽ nói nếu chế độ
view model   🍀   xem mô hình
dot user session   🍀   chấm phiên người dùng
is not equal to nil   🍀   không bằng 0
and else   🍀   và khác,
so see if you guys can figure out how to   🍀   vì vậy hãy xem liệu các bạn có thể tìm ra
cách
fill this in right and we'll talk about   🍀   điền đúng không và chúng ta sẽ nói về
this property in a second   🍀   thuộc tính này sau một giây
but basically if there is a user session   🍀   nhưng về cơ bản nếu có một phiên người
dùng
there right if it's not equal to nil   🍀   ở đó ngay nếu nó không bằng 0 thì
we're going to send them to the profile   🍀   chúng ta' chúng ta sẽ gửi chúng đến chế độ
xem hồ sơ
view


about:blank

53/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and if it is equal to nil we're going to   🍀   và nếu nó bằng không, chúng tôi sẽ
send them to the login View   🍀   gửi chúng đến chế độ xem đăng nhập,
so now let's run the app again and see   🍀   vì vậy bây giờ hãy chạy lại ứng dụng và
xem
where it takes us so we obviously   🍀   nó sẽ đưa chúng ta đến đâu vì vậy rõ ràng
là chúng ta
haven't signed anyone up yet so this   🍀   chưa đăng ký bất kỳ ai vì vậy
user session property should be nil   🍀   thuộc tính phiên người dùng này phải bằng
không
and it's going to take us right to the   🍀   và nó sẽ đưa chúng ta đến ngay
login view which looks great and if we   🍀   chế độ xem đăng nhập trông rất tuyệt và
nếu chúng ta
hit that sign in button guys we notice   🍀   nhấn vào nút đăng nhập đó, chúng ta sẽ
nhận thấy
that we're getting our print statement   🍀   rằng chúng ta sẽ nhận lại được câu lệnh in
back which is coming from our view model   🍀   đến từ mô hình chế độ xem của chúng ta.
which is looking really good and we can   🍀   trông rất đẹp và chúng tôi cũng có thể
also hop over to our sign up page and if   🍀   chuyển đến trang đăng ký của mình và nếu
we hit that it says create user so this   🍀   chúng tôi nhấn vào đó, nó sẽ báo tạo người
dùng, vì vậy trang này
is looking awesome so far   🍀   trông thật tuyệt vời cho đến nay,
um now we're going to actually get into   🍀   ừm, bây giờ chúng tôi sẽ thực sự bắt tay
vào
the implementation of these functions   🍀   triển khai các chức năng này
and how to use the Firebase code to   🍀   và cách sử dụng mã Firebase để
actually you know create our users and   🍀   thực sự bạn biết tạo người dùng của chúng
tôi và
sign them up and also then go over how   🍀   đăng ký họ, sau đó xem xét cách
we need to make things work within our   🍀   chúng tôi cần làm cho mọi thứ hoạt động
trong
app so that the navigation works   🍀   ứng dụng của mình để điều hướng hoạt
động
correctly for example after I log in   🍀   chính xác, chẳng hạn như sau khi tôi đăng
nhập,
I want it to take me to the profile view   🍀   tôi muốn nó đưa tôi đến hồ sơ chế độ xem
I wanted to fetch my user's information   🍀   Tôi muốn lấy thông tin người dùng của mình
and display it on my in my profile and   🍀   và hiển thị thông tin đó trên hồ sơ của tôi và
all that good stuff so that's the next   🍀   tất cả những nội dung hay đó, vì vậy đó là
bước tiếp theo
step guys this is really going to start   🍀   các bạn, điều này thực sự sẽ bắt đầu




about:blank   🍀   54/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
coming together really really soon after   🍀   kết hợp với nhau thực sự ngay sau
that we're going to do all the nice   🍀   đó chúng ta sẽ làm tất cả những điều thú vị
fancy form validation stuff and you guys   🍀   công cụ xác thực biểu mẫu và các bạn
will have a complete authentication   🍀   sẽ có một hệ thống xác thực hoàn chỉnh
system for your app whenever you want to   🍀   cho ứng dụng của mình bất cứ khi nào bạn
muốn
drop it in there which is absolutely   🍀   thả nó vào đó, điều này hoàn toàn
awesome so let's continue   🍀   tuyệt vời, vì vậy hãy tiếp tục, vì vậy
so let's get started with filling out   🍀   hãy bắt đầu điền vào
this create user function guys so   🍀   chức năng tạo người dùng này, vì vậy
basically we want we want to fill this   🍀   về cơ bản chúng tôi muốn chúng tôi muốn
điền
field out here hit sign up have it   🍀   trường này ở đây nhấn đăng ký để nó
create a user for us in the back end   🍀   tạo người dùng cho chúng tôi ở phần cuối
with Firebase and then have it navigate   🍀   với Firebase và sau đó để nó điều hướng
to our profile view once we create that   🍀   đến chế độ xem hồ sơ của chúng tôi sau khi
chúng tôi tạo
user so here's what this is going to   🍀   người dùng đó, vì vậy, đây là giao diện
look like we are going to start this off   🍀   chúng tôi sẽ bắt đầu
by writing a do block   🍀   bằng cách viết một khối do
and a catch block as well   🍀   và một khối catch
and what we're going to say here is let   🍀   và những gì chúng ta sẽ nói ở đây là để kết
result equal try await   🍀   quả bằng try await
um auth   🍀   um auth
.auth dot create user   🍀   .auth dot tạo người dùng
with email and password and you guys   🍀   bằng email và mật khẩu và các bạn
will see that this   🍀   sẽ thấy rằng điều này
utilizes the async throws functionality   🍀   sử dụng chức năng ném async
and gives us back some sort of auth data   🍀   và trả lại cho chúng tôi một số loại kết quả
dữ liệu xác thực
result if you guys have done this before   🍀   nếu các bạn đã thực hiện điều này trước
đây
with the previous API   🍀   với API trước đó, tất cả
it was all using completion handlers and   🍀   đều sử dụng trình xử lý hoàn thành và
as you can see those get really messy   🍀   như bạn có thể thấy chúng thực sự lộn xộn,
which is why we're using async await   🍀   đó là lý do tại sao chúng tôi sử dụng async
đang chờ
here and once again if this is totally   🍀   ở đây và một lần nữa nếu điều này hoàn
toàn


about:blank

55/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
confusing to you make sure you check out   🍀   khó hiểu với bạn, hãy chắc chắn rằng bạn
đã xem
my async await tutorial and the link is   🍀   hướng dẫn chờ async của tôi và liên kết
nằm
in the description for that so we're   🍀   trong phần mô tả cho điều đó, vì vậy chúng
tôi
going to say create user with email and   🍀   sẽ nói tạo người dùng bằng email và
password so basically what this allows   🍀   mật khẩu, vì vậy về cơ bản điều này cho
phép
us to do guys is await the result that   🍀   chúng tôi làm là chờ kết quả
gives that this gives us back so we   🍀   cho rằng điều này mang lại cho chúng tôi vì
vậy chúng tôi
don't need to use completion blocks it's   🍀   không cần sử dụng các khối hoàn thành, nó
just going to get stored in this result   🍀   sẽ được lưu trữ trong hằng số kết quả
constant that we created there and this   🍀   mà chúng tôi đã tạo ở đó và điều này
allows us to write asynchronous code in   🍀   cho phép chúng tôi viết mã không đồng bộ
theo
a synchronous way right we can just do   🍀   cách đồng bộ, chúng tôi có thể
it line by line without the use of   🍀   thực hiện theo dòng mà không cần sử dụng
completion blocks and handlers which is   🍀   các khối hoàn thành và trình xử lý, điều này
really really nice so now what we're   🍀   thực sự rất hay, vì vậy bây giờ những gì
chúng ta
going to do is set this user session   🍀   sẽ làm là thiết lập thuộc tính phiên người
dùng này
property and we'll talk about how this   🍀   và chúng ta sẽ nói về cách nó
is going to come into play in a little   🍀   sẽ hoạt động trong một thời
bit so we're going to say self.user   🍀   gian ngắn vì vậy chúng ta' sẽ nói phiên
self.user
session
equals results dot user and you guys   🍀   bằng kết quả dot user và các bạn
will see that this is a user object that   🍀   sẽ thấy rằng đây là một đối tượng người
dùng
comes back from this result and that's   🍀   quay lại từ kết quả này và đó là
where we're going to set our user   🍀   nơi chúng ta sẽ đặt phiên người dùng của
mình,
session to be
now we need to create our actual user   🍀   bây giờ chúng ta cần tạo thực tế của mình
data model and once again those are   🍀   mô hình dữ liệu người dùng và một lần nữa,
chúng
different right so this is our user data   🍀   khác nhau đúng không, vì vậy đây là mô




about:blank   🍀   56/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
hình dữ liệu người dùng của chúng tôi
model and this is the Firebase user   🍀   và đây là đối tượng người dùng Firebase,
object so we'll go over a little bit   🍀   vì vậy chúng tôi sẽ tìm hiểu
more in detail how they're different for   🍀   chi tiết hơn một chút về sự khác biệt của
chúng
now let's just go ahead and get this   🍀   bây giờ, hãy tiếp tục và hiểu điều này
created we're going to say let user   🍀   được tạo, chúng tôi sẽ nói rằng hãy để
người dùng
equal user and the ID is going to be the   🍀   bình đẳng với người dùng và ID sẽ là
result   🍀   kết quả
Dot user.uid   🍀   Dot user.uid
so this comes from Firebase so when we   🍀   vì vậy cái này đến từ Firebase nên khi
chúng tôi
create a user in the back end with   🍀   tạo người dùng ở mặt sau với
Firebase we get this uid property back   🍀   Firebase, chúng tôi sẽ lấy lại thuộc tính uid
này
and then we're going to use the full   🍀   và sau đó chúng tôi Chúng tôi sẽ sử dụng
tên đầy đủ
name and email that we get from   🍀   và email mà chúng tôi nhận được từ
um our form here to actually create our   🍀   biểu mẫu của chúng tôi ở đây để thực sự
tạo
user object so as you guys can see here   🍀   đối tượng người dùng của chúng tôi để các
bạn có thể thấy ở đây
that this user object the one that we   🍀   rằng đối tượng người dùng này đối tượng
mà chúng tôi đã
created has additional properties like   🍀   tạo có các thuộc tính bổ sung như
the user's full name their email address   🍀   tên đầy đủ của người dùng email của họ địa
chỉ
and all that good stuff whereas the   🍀   và tất cả nội dung hay đó trong khi
Firebase user object is just like a   🍀   đối tượng người dùng Firebase giống như
generic user object that Firebase   🍀   đối tượng người dùng chung mà Firebase
creates for us on their back end that   🍀   tạo cho chúng tôi ở mặt sau
gives us things like the uid and all of   🍀   cung cấp cho chúng tôi những thứ như uid
và tất cả những thứ đó để
that so the user object that you that   🍀   đối tượng người dùng mà chúng
we've built in our model folder is where   🍀   tôi đã xây dựng thư mục mô hình của chúng
tôi là nơi
you would put all of the other fields   🍀   bạn sẽ đặt tất cả các trường khác
that you want associated with a user   🍀   mà bạn muốn liên kết với người dùng,
like maybe their phone number or their   🍀   chẳng hạn như số điện thoại hoặc




about:blank



57/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
username or you know whatever their date   🍀   tên người dùng của họ hoặc bạn biết bất kể
ngày sinh của họ,
of birth whatever it may be all of that   🍀   bất kể đó có thể là tất cả
stuff that's not encompassed in the   🍀   những nội dung đó không có trong
Firebase user object this is just what   🍀   Firebase đối tượng người dùng, đây chỉ là
những gì
we get back when we create a user on the   🍀   chúng tôi nhận được khi chúng tôi tạo người
dùng trên
Firebase backend so that's the   🍀   phần phụ trợ của Firebase, vì vậy đó là
difference between those two things so   🍀   sự khác biệt giữa hai thứ đó, vì vậy
then we're going to encode this user so   🍀   chúng tôi sẽ mã hóa người dùng này, vì vậy
we're going to say guard let encoded   🍀   chúng tôi sẽ nói rằng bảo vệ hãy để người
dùng được mã hóa bằng
user equal
firestore.encoder and I think we need to   🍀   firestore. bộ mã hóa và tôi nghĩ rằng chúng
ta cần phải
go up here   🍀   lên đây
and import   🍀   và nhập
Firebase firestore Swift so now we can   🍀   Firebase firestore Swift để bây giờ chúng ta
có thể
go here and say encoder   🍀   vào đây và nói người dùng mã
dot encode   🍀   hóa dấu chấm mã hóa
user and this is just helping us utilize   🍀   và điều này chỉ giúp chúng ta sử dụng
the uh codable protocol guys so we're   🍀   các giao thức có thể mã hóa uh, vì vậy
chúng ta
going to say else return   🍀   sẽ nói khác trở lại
and then we're going to say   🍀   và sau đó chúng tôi sẽ nói
try await   🍀   hãy thử chờ
firestore
.firestore.collection
users dot document   🍀   người dùng firestore .firestore.collection
chấm tài liệu
user.uid or dot ID   🍀   user.uid hoặc chấm ID
dot set data and then we can set that   🍀   chấm dữ liệu và sau đó chúng tôi có thể đặt
encoded user there   🍀   người dùng được mã hóa đó ở đó
so that's looking good and then in our   🍀   sao cho trông ổn và sau đó trong khối bắt
của chúng tôi,
catch block we can just say for now   🍀   chúng tôi chỉ có thể nói ngay bây giờ
print debug   🍀   gỡ lỗi in




about:blank   🍀   58/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
failed to create user with error   🍀   không tạo được người dùng có lỗi
error.localize description   🍀   error.localize description
okay   🍀   okay
I think we need to add a try to this   🍀   Tôi nghĩ chúng ta cần thêm một bản thử vào
cái này,
let's see yep   🍀   hãy xem yep, hãy
stick a try in there   🍀   thử vào đó
and actually delete that guys   🍀   và thực sự xóa những người đó
so   🍀   để
let's see if that works out for us   🍀   xem liệu điều đó có phù hợp với chúng ta
okay so really quickly just to go over   🍀   không, hãy thực sự nhanh chóng. để xem
lại
this function one more time guys it's an   🍀   chức năng này một lần nữa nhé các bạn,
đây là một
asynchronous function that can   🍀   chức năng không đồng bộ có khả năng
potentially throw an error that's what's   🍀   gây ra lỗi, đó là điều
going to happen in the catch block if   🍀   sẽ xảy ra trong khối catch nếu có
anything goes wrong so here we try to   🍀   bất kỳ sự cố nào, vì vậy ở đây chúng tôi cố
gắng
create a user using the Firebase code   🍀   tạo một người dùng bằng mã Firebase,
this is what we get back from the   🍀   đây là những gì chúng tôi nhận được từ
Firebase package manager we installed   🍀   trình quản lý gói Firebase mà chúng tôi đã
cài đặt
and we're going to await the result of   🍀   và chúng tôi sẽ chờ kết quả của
that and store it in this property once   🍀   việc đó và lưu trữ nó trong thuộc tính này
sau khi
we get it back   🍀   chúng tôi lấy lại
if we get a successful result back we're   🍀   nếu chúng tôi nhận được kết quả thành
công, chúng tôi
going to set our user session property   🍀   sẽ đặt thuộc tính phiên người dùng của
mình
and then we're going to create our user   🍀   và sau đó chúng tôi' chúng ta sẽ tạo
object and then encode that object   🍀   đối tượng người dùng và sau đó mã hóa đối
tượng đó
through the codable protocol and then   🍀   thông qua giao thức có thể mã hóa, sau đó
upload that data to firestore so then if   🍀   tải dữ liệu đó lên firestore, vì vậy nếu có
anything goes wrong we're going to hit   🍀   bất kỳ sự cố nào xảy ra, chúng ta sẽ nhấn
this catch block here and it will print   🍀   khối bắt này ở đây và nó sẽ in
out an error description for us so let's   🍀   ra mô tả lỗi cho chúng ta. hãy




about:blank   🍀   59/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
go ahead and run our app again and if   🍀   tiếp tục và chạy lại ứng dụng của chúng ta
và nếu
you guys remember we are already calling   🍀   các bạn còn nhớ thì chúng ta đã gọi
this function back inside of our   🍀   hàm này trở lại bên trong
registration view so we are good to go   🍀   chế độ xem đăng ký của chúng ta, vì vậy
chúng ta có thể tiếp tục ngay
here right so let's go ahead and just   🍀   tại đây, vì vậy hãy tiếp tục và chỉ
run this and see if we can actually   🍀   chạy ứng dụng này và xem liệu chúng ta có
thể thực sự
create a user   🍀   tạo một người dùng hay không
and now I also want to explain what's   🍀   và bây giờ tôi cũng muốn giải thích điều gì
going to happen with this user session   🍀   sẽ xảy ra với thuộc tính phiên người dùng
này
property and we'll see what happens once   🍀   và chúng ta sẽ xem điều gì sẽ xảy ra sau khi
we actually successfully sign a user up   🍀   chúng tôi thực sự đăng ký thành công một
người dùng.
I just want to see if some of our error   🍀   Tôi chỉ muốn xem liệu một số thông báo lỗi
của chúng tôi
messages are working and stuff like that   🍀   có hoạt động không và những thứ tương tự
như vậy
okay so let's go and try to sign up   🍀   có ổn không. chúng ta hãy đi và cố gắng
đăng ký
ooh uh we actually need to configure   🍀   ooh uh chúng ta thực sự cần định cấu hình
Firebase guys so we forgot to do that   🍀   Firebase các bạn nên chúng ta quên làm
điều đó
um   🍀   ừm để
so let's see we I believe need to go to   🍀   xem chúng ta tôi tin rằng cần phải truy cập
the app file   🍀   tệp ứng dụng
and here we need to say init   🍀   và ở đây chúng ta cần nói init
and go up to the top and import Firebase   🍀   và đi lên trên cùng và nhập Firebase
and we're going to say Firebase app   🍀   và chúng tôi sẽ nói
dot configure   🍀   cấu hình dấu chấm ứng dụng Firebase
and let's run our project again   🍀   và hãy chạy lại dự án của chúng tôi,
so this is something that we have to do   🍀   vì vậy đây là điều chúng tôi phải làm
when our app launches we have to call   🍀   khi ứng dụng của chúng tôi khởi chạy,
chúng tôi phải gọi
this configure function from Firebase   🍀   chức năng cấu hình này từ Firebase,
that's why it crashed just now and uh   🍀   đó là lý do tại sao nó bị sập ngay bây giờ và
uh
this should all be good to go now so   🍀   cái này bây giờ tất cả sẽ ổn thôi, vì vậy


about:blank

60/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
let's hit sign up and look at that we're   🍀   hãy nhấn đăng ký và xem xét rằng chúng tôi
đang
getting an error message here fail to   🍀   nhận được thông báo lỗi ở đây không thể
create user with error the password must   🍀   tạo người dùng có lỗi, mật khẩu phải
be six characters long or more right so   🍀   dài sáu ký tự trở lên, vì vậy
now let's actually try to create a user   🍀   bây giờ chúng ta hãy thử tạo một người
dùng.
I'll just say test gmail.com   🍀   Tôi sẽ chỉ nói kiểm tra
test password is one two three four five   🍀   mật khẩu kiểm tra gmail.com là một hai ba
bốn năm
six I usually just do six lowercase cues   🍀   sáu Tôi thường chỉ thực hiện sáu dấu hiệu
viết thường
guys it's the easiest thing to remember   🍀   các bạn, đó là điều dễ nhớ nhất,
we don't have to do anything with this   🍀   chúng ta không phải làm bất cứ điều gì với
confirmed password field just yet let's   🍀   trường mật khẩu đã xác nhận này, hãy
just go ahead and see if what happens   🍀   tiếp tục và xem điều gì xảy ra
when we hit sign up   🍀   khi chúng tôi nhấn đăng ký
ooh okay so one we notice that it takes   🍀   ooh được rồi, vì vậy chúng tôi nhận thấy
rằng nó đưa
us to our profile view right away   🍀   chúng tôi đến chế độ xem hồ sơ của chúng
tôi ngay lập tức, vì
um so I want us to go over how that is   🍀   vậy tôi muốn chúng tôi xem điều đó đang
xảy ra như thế nào
happening
so if we go to our content view we   🍀   vì vậy nếu chúng tôi chuyển sang chế độ
xem nội dung của mình, chúng tôi sẽ
notice that the view that gets presented   🍀   nhận thấy rằng Chế độ xem được trình bày
here is based on this user session   🍀   ở đây dựa trên quyền thuộc tính phiên
người dùng này,
property right so if it's not nil it   🍀   vì vậy nếu không phải là số không, chế độ
xem
shows the profile view so back in the   🍀   hồ sơ sẽ hiển thị
auth view model because this is a   🍀   chế độ xem hồ sơ, vì vậy hãy quay lại mô
hình chế độ xem xác thực vì đây là
published property right and we'll fix   🍀   quyền thuộc tính đã xuất bản và chúng tôi
sẽ khắc phục
this error that you see in purple here   🍀   lỗi này mà bạn thấy bằng màu tím tại đây
in just a second guys because this is a   🍀   chỉ trong một giây vì đây là
published property whenever this user   🍀   thuộc tính được xuất bản bất cứ khi nào
phiên người dùng này




about:blank   🍀   61/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
session guy gets set it's going to send   🍀   được thiết lập, nó sẽ gửi
a notification to my content view to   🍀   thông báo đến chế độ xem nội dung của tôi
để
reconfigure itself with this new user   🍀   tự cấu hình lại với giá trị phiên người dùng
mới này,
session value so at first it was showing   🍀   vì vậy lúc đầu, nó hiển thị
the login view because this was nil then   🍀   chế độ xem đăng nhập vì đây là con số
không sau đó,
once we sign our user up we set that   🍀   khi chúng tôi đăng ký người dùng của mình,
chúng tôi đặt
user session property right here so now   🍀   thuộc tính phiên người dùng đó ngay tại đây
để bây giờ
it has a value so then that gets   🍀   nó có giá trị, sau đó được
published to our content view it sends   🍀   xuất bản lên chế độ xem nội dung của
chúng tôi, nó sẽ gửi
that notification over saying hey some   🍀   thông báo đó nói rằng này, một
some property changed on The View model   🍀   số thuộc tính đã thay đổi trên mô hình Chế
độ xem,
right we are listening for changes on   🍀   chúng tôi đang lắng nghe thay đổi trên
The View model something has changed   🍀   Mô hình Chế độ xem, có gì đó đã thay đổi,
you   🍀   bạn
need to redraw the view or reconfigure   🍀   cần vẽ lại chế độ xem hoặc định cấu hình lại
the view and now the user session is not   🍀   chế độ xem và bây giờ phiên người dùng
không phải là
nil so it shows the profile view meaning   🍀   số không nên nó hiển thị chế độ xem hồ sơ,
nghĩa là
we have a user that that is actually   🍀   chúng tôi có một người dùng thực sự
logged in now so let's go back to our   🍀   đã đăng nhập ngay bây giờ, vì vậy hãy quay
lại trang của chúng tôi
auth view model guys and we actually   🍀   auth view model guys và chúng tôi thực sự
need to go ahead and add something   🍀   cần phải tiếp tục và thêm một cái gì đó
called at main actor here and this is   🍀   được gọi là diễn viên chính ở đây và điều
này là
because we need to publish all UI   🍀   do chúng tôi cần xuất bản tất cả
updates back on the main thread so by   🍀   các bản cập nhật giao diện người dùng trở
lại trên luồng chính để theo
default all of this asynchronous   🍀   mặc định, tất cả mạng không đồng bộ này
networking happens on a background   🍀   xảy ra trên một
thread and we want to make sure that we   🍀   luồng nền và chúng tôi muốn đảm bảo rằng
chúng tôi




about:blank   🍀   62/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
are publishing our UI changes back on   🍀   đang xuất bản các thay đổi giao diện người
dùng của mình trở lại
the main thread and that's what this   🍀   luồng chính và đó là điều mà
main actor declaration does up there so   🍀   phần khai báo diễn viên chính này thực hiện
ở đó, vì vậy
now let's run our app again and let's uh   🍀   bây giờ hãy chạy lại ứng dụng của chúng tôi
và hãy
take a look and see what happens here   🍀   xem điều gì sẽ xảy ra ở đây
so it should go back to our login page   🍀   để nó quay lại trang đăng nhập của chúng
tôi
which is not the functionality we want   🍀   không phải là chức năng mà chúng tôi muốn
right because we created an account and   🍀   vì chúng tôi đã tạo một tài khoản và
what we want to happen is unless we sign   🍀   những gì chúng tôi muốn xảy ra là trừ khi
chúng tôi đăng
out we want it to keep us logged in   🍀   xuất, chúng tôi muốn nó giữ cho chúng tôi
đăng nhập
there so here's what we're going to do   🍀   ở đó, vì vậy đây là những gì chúng tôi sẽ
làm
we're going to say self.user session   🍀   chúng tôi sẽ làm giả sử phiên self.user bằng
equals auth.auth dot current user so   🍀   auth.auth chấm người dùng hiện tại, vì vậy
when our auth viewmodel initializes it's   🍀   khi chế độ xem auth của chúng tôi khởi
chạy, nó
going to check and see if there is a   🍀   sẽ kiểm tra và xem liệu có
current user so this is functionality we   🍀   người dùng hiện tại hay không, vì vậy đây là
chức năng chúng tôi
get from Firebase they actually if   🍀   nhận được từ Firebase, họ thực sự lưu trữ
nếu
there's a current user logged in they   🍀   có người dùng hiện tại đăng nhập
store that locally on the device they   🍀   cục bộ trên thiết bị, họ
cache that information so if we have   🍀   lưu trữ thông tin đó vào bộ đệm, vì vậy nếu
chúng tôi có
someone logged in guess what it's going   🍀   ai đó đăng nhập, hãy đoán xem nó sẽ
to say hey this user session has a value   🍀   nói gì, phiên người dùng này có giá trị
and because that has a value based on   🍀   và vì phiên đó có giá trị dựa trên
our presentation logic in the content   🍀   logic trình bày của chúng tôi trong
view it's going to show us the profile   🍀   chế độ xem nội dung, nó sẽ hiển thị cho
chúng tôi hồ sơ
view so now that we've done that let's   🍀   xem vì vậy bây giờ chúng ta đã hoàn thành
việc đó, hãy
go ahead and see what that looks like   🍀   tiếp tục và xem nó trông như thế nào




about:blank   🍀   63/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
this should open up back to the profile   🍀   sẽ mở trở lại chế độ xem hồ sơ
view
and we notice that that's exactly what   🍀   và chúng tôi nhận thấy rằng đó chính xác là
những gì
we would expect right so the next step   🍀   chúng ta mong đợi, vì vậy bước tiếp theo
that I want us to go over guys is how to   🍀   mà tôi muốn chúng ta thực hiện qua các
bạn là cách
actually fetch the user's information   🍀   thực sự tìm nạp thông tin của người dùng
because this is still just displaying   🍀   vì điều này vẫn chỉ hiển thị
static information from our mock user   🍀   thông tin tĩnh từ dữ liệu người dùng giả của
chúng tôi,
data so   🍀   vì vậy,
um next up in the auth view model   🍀   tiếp theo trong mô hình chế độ xem xác
thực,
what I want us to do is go over how   🍀   điều tôi muốn chúng tôi làm là tìm hiểu cách
we're going to fetch this user right   🍀   chúng tôi sẽ tìm nạp người dùng này ngay
here and then we're going to go over how   🍀   tại đây và sau đó chúng ta sẽ tìm hiểu cách
to sign our user out and how to log our   🍀   đăng xuất người dùng và cách đăng nhập
user in so we'll have that full   🍀   người dùng để chúng ta sẽ
authentication flow set up in this   🍀   thiết lập luồng xác thực đầy đủ trong
application here so fetching the user is   🍀   ứng dụng này tại đây để việc tìm nạp người
dùng
going to be pretty simple we're going to   🍀   sẽ khá đơn giản, chúng ta sẽ
say guard let uid equal   🍀   nói guard hãy để uid bằng
auth.auth.currentuser.uid else return   🍀   auth.auth.currentuser.uid khác quay lại
so this is just going to get the current   🍀   vì vậy điều này sẽ lấy
user's ID and let me actually go ahead   🍀   ID của người dùng hiện tại và để tôi thực sự
tiếp tục
and pull up   🍀   và mở
um
our Firebase app really quickly   🍀   ứng dụng Firebase của chúng tôi lên thật
nhanh vâng,
yeah see this is the step we had forgot   🍀   hãy xem đây là bước chúng ta đã làm quên
to do   🍀   làm
and let's go to authentication I just   🍀   và hãy chuyển sang phần xác thực. Tôi chỉ
want to show you guys that that test at   🍀   muốn cho các bạn thấy rằng bài kiểm tra tại
gmail.com is actually registered here's   🍀   gmail.com thực sự đã được đăng ký, đây là
the user ID and then if we go to our   🍀   ID người dùng và sau đó nếu chúng ta truy
cập




about:blank   🍀   64/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
firestore database we can see that here   🍀   cơ sở dữ liệu firestore của mình, chúng ta
có thể thấy rằng ở đây
we have a user's collection and this is   🍀   chúng ta có bộ sưu tập của người dùng và
cái này là
where all of the user's metadata is   🍀   nơi lưu trữ tất cả siêu dữ liệu của người
dùng
stored so their email their full name   🍀   để email của họ có tên đầy đủ
their ID and once again you can store as   🍀   ID của họ và một lần nữa, bạn có thể lưu trữ
many properties you want about your user   🍀   bao nhiêu thuộc tính bạn muốn về người
dùng của mình,
it's all relative to what you need for   🍀   tất cả đều liên quan đến những gì bạn cần
cho
your individual application so this is   🍀   ứng dụng cá nhân của mình, vì vậy đây là
the information that we need to fetch   🍀   thông tin mà chúng tôi cần để tìm nạp ngay
now guys we need to reach out to   🍀   bây giờ, các bạn, chúng tôi cần liên hệ với
Firebase go and find our user ID and   🍀   Firebase và tìm ID người dùng của mình,
then get all of this information and map   🍀   sau đó lấy tất cả thông tin này và ánh xạ
thông tin
that into our user object so that we can   🍀   đó vào đối tượng người dùng của chúng tôi
để chúng tôi có thể
display it on this screen here so that's   🍀   hiển thị nó trên màn hình này tại đây, vì vậy
đó là
what the purpose of this fetch user   🍀   mục đích của việc tìm nạp người dùng này
function is and   🍀   chức năng là và
um   🍀   ừm,
I want to explain this line of code here   🍀   tôi muốn giải thích dòng mã này ở đây
as well on line 31 this is how we got   🍀   cũng như trên dòng 31, đây là cách chúng
tôi
that information uploaded to Firebase we   🍀   tải thông tin đó lên Firebase, chúng tôi đã
said   🍀   nói
firestore.firestore.collectionusers and   🍀   firestore.firestore.collectionusers và
that takes us to this spot right here   🍀   điều đó đưa chúng tôi đến vị trí này ngay tại
đây,
where we create this user's collection   🍀   nơi chúng tôi tạo bộ sưu tập của người
dùng này
then we create this document with the   🍀   sau đó chúng tôi tạo tài liệu này với
user's ID so you guys notice that that's   🍀   ID của người dùng để các bạn lưu ý rằng
the user ID it matches up directly with   🍀   ID người dùng đó khớp trực tiếp với
what we see here here and in our   🍀   những gì chúng tôi thấy ở đây và trong
authentication section as well and then   🍀   phần xác thực của chúng tôi, sau đó


about:blank

65/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
we set the user's data and this is our   🍀   chúng tôi đặt dữ liệu của người dùng và đây
là
user object we encoded it right here and   🍀   đối tượng người dùng mà chúng tôi đã mã
hóa nó ngay tại đây và
then uploaded that information to   🍀   sau đó tải thông tin đó lên
Firebase so we've successfully saved our   🍀   Firebase, vì vậy chúng tôi đã lưu thành công
users information in a back end so   🍀   thông tin người dùng của mình vào phần
phụ trợ, vì
that's awesome now we want to retrieve   🍀   vậy thật tuyệt vời khi bây giờ chúng tôi
muốn truy xuất
that information I just wanted to make   🍀   thông tin đó. Tôi chỉ muốn
it clear that that's what we're doing   🍀   làm rõ rằng đó là những gì chúng tôi đang
làm
here I've done this so many times guys   🍀   ở đây tôi' Tôi đã làm điều này rất nhiều lần
that this is just second nature to me so   🍀   và đây chỉ là bản chất thứ hai đối với tôi, vì
vậy
I'm really trying to break it down as   🍀   tôi thực sự đang cố gắng chia nhỏ nó
with as much detail as possible for you   🍀   càng chi tiết càng tốt cho các bạn,
so let's go ahead and see what we need   🍀   vì vậy hãy tiếp tục và xem chúng ta cần
to do now we're going to say   🍀   làm gì bây giờ. để nói
firestore.firestore.collection
users Dot document   🍀   người dùng firestore.firestore.collection
Chấm tài liệu
uid and then we're going to say dot get   🍀   uid và sau đó chúng ta sẽ nói dấu chấm lấy
document   🍀   tài liệu
and you guys will notice this returns a   🍀   và các bạn sẽ nhận thấy điều này trả về một
snapshot so we're going to say let   🍀   ảnh chụp nhanh, vì vậy chúng ta sẽ nói hãy
để
snapshot equal   🍀   ảnh chụp nhanh bằng
this guy and we also need to say uh   🍀   anh chàng này và chúng ta cũng cần nói uh
await   🍀   đang chờ
and I believe we need to say try as well   🍀   và tôi tin rằng chúng ta cũng cần phải nói
thử,
so let's add a try with a question mark   🍀   vì vậy hãy thêm từ thử với một dấu chấm
hỏi
and I personally don't care to handle   🍀   và cá nhân tôi không quan tâm đến việc xử
lý
the error here   🍀   lỗi ở đây
um for fetching the user I just try to   🍀   ừm để tìm nạp người dùng. Tôi chỉ cố gắng
go and get it you can handle the error   🍀   truy cập và nhận lỗi, bạn có thể xử lý lỗi


about:blank

66/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
if you want and implement this do catch   🍀   nếu bạn muốn và thực hiện điều này, hãy
bắt
style block there but typically things   🍀   kiểu chặn ở đó nhưng thông thường mọi
thứ
don't go wrong here so I typically don't   🍀   sẽ không sai ở đây nên tôi thường không
bother with it but now what we need to   🍀   bận tâm đến nó nhưng bây giờ điều chúng
ta cần
do is write a guard statement   🍀   làm là viết một tuyên bố bảo vệ
because this is an optional try we're   🍀   vì đây là tùy chọn, chúng tôi sẽ thử
not wrapping it within a catch so that's   🍀   không gói nó trong một lần bắt, vì vậy đó là
the difference here   🍀   sự khác biệt ở đây
and then because we conform to the   🍀   và sau đó bởi vì chúng tôi tuân thủ
codable protocol here we can say let   🍀   giao thức có thể mã hóa ở đây, chúng tôi có
thể nói hãy để
user equal
snapshot dot data and you guys will see   🍀   dữ liệu dấu chấm chụp nhanh bằng nhau
của người dùng và các bạn sẽ thấy
this data as option user.self   🍀   dữ liệu này dưới dạng tùy chọn user.self
and we can actually go here and say   🍀   và chúng tôi thực sự có thể đến đây và nói
self.current   🍀   self.current
user equals that   🍀   user bằng với nó
so now we are setting this current user   🍀   nên bây giờ chúng ta đang thiết lập thuộc
tính user hiện tại
property here   🍀   ở đây
with the information that we get back   🍀   với thông tin mà chúng ta lấy lại được.
from let's see why is that yelling at me   🍀   Hãy xem tại sao điều đó lại mắng tôi
but the error is not handled let me see   🍀   nhưng lỗi không được xử lý. Hãy
what I have in my code really quickly   🍀   nhanh chóng xem tôi có gì trong mã của
mình.
oh we need to add a try there as well   🍀   chúng tôi cũng cần thêm một thử nghiệm ở
đó
and actually yep that should work   🍀   và thực sự vâng, nó sẽ hoạt động
cool so now we have to talk about when   🍀   tốt, vì vậy bây giờ chúng tôi phải nói về thời
điểm
we want to fetch this user data so it's   🍀   chúng tôi muốn tìm nạp dữ liệu người dùng
này vì vậy nó
going to be in a couple places guys   🍀   sẽ ở một vài nơi
first off it's going to be in our init   🍀   trước tiên mọi người sẽ ở trong init của
chúng tôi
function up here so we're going to say   🍀   chức năng ở đây, vì vậy chúng tôi sẽ nói


about:blank

67/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
task   🍀   tác vụ
fetch user or we would say try nope just   🍀   tìm nạp người dùng hoặc chúng tôi sẽ nói
thử không, chỉ
await   🍀   chờ
fetch user   🍀   tìm nạp người dùng
so basically we're going to go and try   🍀   nên về cơ bản, chúng tôi sẽ cố gắng
to fetch that user data right away and   🍀   tìm nạp dữ liệu người dùng đó ngay lập tức
và
let's just go down here and add a print   🍀   chúng ta hãy đi xuống đây và thêm bản in
statement for that so we're going to say   🍀   tuyên bố cho điều đó, vì vậy chúng tôi sẽ nói
print debug current user is   🍀   người dùng hiện tại gỡ lỗi in
and we would say self dot current user   🍀   và chúng tôi sẽ nói người dùng hiện tại tự
chấm,
so let's go ahead and run the app now to   🍀   vì vậy, hãy tiếp tục và chạy ứng dụng ngay
bây giờ để
see if we're actually successfully   🍀   xem liệu chúng tôi có thực sự
getting this data back from Firebase and   🍀   lấy lại thành công dữ liệu này từ Firebase
hay không và
if it's successfully decoding into our   🍀   liệu nó có thành công không giải mã thành
user object and I'll just briefly   🍀   đối tượng người dùng của chúng tôi và tôi
sẽ chỉ
explain what I mean by that in a second   🍀   giải thích ngắn gọn ý của tôi về điều đó
trong một giây
here so you guys see that we get back   🍀   ở đây để các bạn thấy rằng chúng tôi lấy lại
our print statement here current user is   🍀   câu lệnh in của mình ở đây người dùng hiện
tại là
optional and we notice that it comes   🍀   tùy chọn và chúng tôi nhận thấy rằng nó
quay
back or it's printing out as our actual   🍀   lại hoặc nó được in ra dưới dạng của chúng
tôi
user object it says Swift UI off   🍀   đối tượng người dùng thực tế nó nói Swift
UI tắt
tutorial dot user so that's not just   🍀   hướng dẫn người dùng dấu chấm để không
chỉ
coming back as like raw data we're   🍀   quay lại giống như dữ liệu thô mà chúng tôi
actually successfully mapping the data   🍀   thực sự đang ánh xạ thành công dữ liệu
we get back from Firebase into our user   🍀   chúng tôi nhận được từ Firebase vào
object or user model that we have right   🍀   đối tượng người dùng hoặc mô hình người
dùng mà chúng tôi có ở
here   🍀   đây




about:blank   🍀   68/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
so basically that's because we conform   🍀   nên về cơ bản đó là vì chúng tôi tuân
to this codable protocol if you guys are   🍀   thủ giao thức có thể mã hóa này nếu các
bạn
confused about that highly recommend   🍀   bối rối về điều đó, chúng tôi khuyên bạn
just going on YouTube and searching up a   🍀   chỉ nên truy cập YouTube và tìm kiếm một
quick uh codable protocol tutorial   🍀   hướng dẫn về giao thức có thể mã hóa
nhanh,
basically it allows us to take incoming   🍀   về cơ bản, nó cho phép chúng tôi lấy
raw data or raw Json data and map it   🍀   dữ liệu thô hoặc dữ liệu Json thô và ánh xạ
nó
into a data object like we see here with   🍀   vào một đối tượng dữ liệu như chúng tôi
hãy xem ở đây với
our user that's what's known as decoding   🍀   người dùng của chúng tôi, đó là cái được
gọi là giải mã
and then we saw what encoding was when   🍀   và sau đó chúng tôi đã xem mã hóa là gì khi
we did this when we encoded our user   🍀   chúng tôi thực hiện việc này khi chúng tôi
mã hóa đối tượng người dùng của mình,
object so this is the opposite process   🍀   vì vậy đây là quy trình ngược lại với
of that right it takes a user object and   🍀   quyền đó, nó lấy một đối tượng người dùng
và
encodes it into Json data so that we can   🍀   mã hóa nó thành dữ liệu Json để chúng tôi
có thể
upload it to Firebase you can't just   🍀   tải nó lên Firebase, bạn không thể chỉ
upload a user object like this to   🍀   tải một đối tượng người dùng như thế này
lên
Firebase it has to be in a raw data   🍀   Firebase, nó phải ở định dạng dữ liệu thô
format like a key value system or a   🍀   như hệ thống giá trị khóa hoặc
dictionary system   🍀   hệ thống từ điển
so we're successfully getting that   🍀   để chúng tôi lấy lại thành công
information back which is awesome we're   🍀   thông tin đó, điều đó thật tuyệt vời, chúng
tôi' đang
calling that on fetch so if there is a   🍀   gọi nó khi tìm nạp, vì vậy nếu có một
currently logged in user it will go   🍀   người dùng hiện đang đăng nhập, nó sẽ
ahead and fetch this stuff if there's   🍀   tiếp tục và tìm nạp nội dung này nếu
not it'll hit this guard statement and   🍀   không, nó sẽ chạm vào câu lệnh bảo vệ này
và
it'll stop right there so we won't waste   🍀   nó sẽ dừng ngay tại đó, vì vậy chúng tôi sẽ
không lãng phí
an API call which is also awesome and   🍀   lệnh gọi API, đó là cũng rất tuyệt và
now I want us to talk really quickly   🍀   bây giờ tôi muốn chúng ta nói thật nhanh




about:blank   🍀   69/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
about where else we need to put this so   🍀   về nơi nào khác mà chúng ta cần đặt cái
này thật
really quickly guys you're going to want   🍀   nhanh các bạn sẽ muốn
to put it at the end of your create user   🍀   đặt nó ở cuối chức năng tạo người dùng
của mình
function okay and let me explain why   🍀   được không và để tôi giải thích tại sao
here let me just take a look at my code   🍀   ở đây để tôi chỉ hãy xem mã của tôi
to make sure everything is   🍀   để đảm bảo mọi thứ đều
looking good yep okay so after we upload   🍀   ổn, vâng, được rồi, vì vậy sau khi chúng tôi
tải
the data to Firebase right it won't go   🍀   dữ liệu lên Firebase ngay, nó sẽ không
chuyển
into the next line until that process is   🍀   sang dòng tiếp theo cho đến khi quá trình
đó
done and then we're just going to say   🍀   hoàn tất và sau đó chúng tôi sẽ nói
await   🍀   đang chờ
fetch user just like that   🍀   tìm nạp người dùng chỉ như vậy
and why is that so   🍀   và tại sao lại như
the reason for that is because once we   🍀   vậy lý do là bởi vì khi chúng tôi
create our user we're going to set this   🍀   tạo người dùng của mình, chúng tôi sẽ đặt
user session property right so that's   🍀   đúng thuộc tính phiên người dùng này để
điều đó
going to help us navigate to the profile   🍀   sẽ giúp chúng tôi điều hướng đến
screen but we actually need to fetch the   🍀   màn hình hồ sơ nhưng chúng tôi thực sự
cần tìm nạp
data that we just uploaded to Firebase   🍀   dữ liệu đó chúng tôi vừa tải lên Firebase
so that it can be properly displayed on   🍀   để nó có thể hiển thị chính xác trên
the screen and that has to happen when   🍀   màn hình và điều đó phải xảy ra khi
we create our user so we'll create   🍀   chúng tôi tạo người dùng của mình, vì vậy
chúng tôi sẽ tạo một
another account in a little bit I want   🍀   tài khoản khác trong giây lát. Tôi muốn
us to go over now so we can see that   🍀   chúng tôi xem qua ngay bây giờ để chúng
tôi có thể thấy tài khoản đó
working but what I want us to do is now   🍀   đang hoạt động nhưng những gì tôi muốn
chúng tôi làm bây giờ là
go over how to actually inject our user   🍀   tìm hiểu cách thực sự đưa dữ liệu người
dùng của chúng tôi
data into this profile screen so let's   🍀   vào màn hình hồ sơ này, vì vậy hãy
go back to our profile view   🍀   quay lại chế độ xem hồ sơ của chúng tôi




about:blank   🍀   70/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and here you guys can see we're just   🍀   và ở đây các bạn có thể thấy chúng tôi chỉ
đang
using this mock user right here so what   🍀   sử dụng người dùng giả này ngay tại đây, vì
vậy những gì
we need to do is add another instance of   🍀   chúng tôi cần làm việc cần làm là thêm một
thể hiện khác của
our environment object   🍀   đối tượng môi trường của chúng ta
and what we're going to do is wrap this   🍀   và những gì chúng ta sẽ làm là bao bọc
entire thing in an if let statement   🍀   toàn bộ điều này trong một câu lệnh if let,
so let me just cut this with command X   🍀   vậy hãy để tôi cắt phần này bằng lệnh X
and say if let user equals viewmodel dot   🍀   và nói if let user equals viewmodel dot
current user   🍀   user hiện tại
and then paste it all in there   🍀   và sau đó dán nó tất cả trong đó
and here we just replace user.mock user   🍀   và ở đây chúng tôi chỉ thay thế người dùng
user.mock
with user   🍀   bằng người dùng
so that's going to be our user initials   🍀   để người dùng của chúng tôi viết tắt
user.full name   🍀   tên người dùng.tên đầy đủ
user.email   🍀   user.email
and that looks good and really quickly   🍀   và điều đó có vẻ tốt và thực sự nhanh
chóng.
guys I think I want to change the full   🍀   Tôi nghĩ tôi muốn thay đổi tên đầy đủ
name here from test let's change it to   🍀   ở đây từ thử nghiệm. thay đổi nó thành
Michael Jordan   🍀   Michael Jordan,
you guys might have done something more   🍀   các bạn có thể đã làm điều gì đó
descriptive when we signed up the user   🍀   mô tả hơn khi chúng tôi đăng ký người dùng
but you know I just want to make sure   🍀   nhưng bạn biết đấy, tôi chỉ muốn đảm bảo
rằng
the initials show up correctly and all   🍀   những chữ cái đầu tiên hiển thị chính xác và
tất cả
that stuff and it's not just tests so I   🍀   những thứ đó và đó không chỉ là các bài
kiểm tra nên tôi đã thực sự
just really quickly directly modified   🍀   nhanh chóng sửa đổi trực tiếp
the data in Firebase you want to try to   🍀   dữ liệu trong Firebase, bạn muốn cố gắng
avoid that if possible but sometimes if   🍀   tránh điều đó nếu có thể nhưng đôi khi nếu
you just need to test some things like   🍀   bạn chỉ cần kiểm tra một số thứ như
we're doing here it's okay   🍀   chúng tôi đang làm ở đây thì không sao
but now let's go ahead and run this   🍀   nhưng bây giờ hãy tiếp tục và chạy lại phần
này




about:blank   🍀   71/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
again
and we should notice that once we get   🍀   và chúng tôi sẽ lưu ý rằng khi chúng tôi có
được
this current user guy it'll populate our   🍀   người dùng hiện tại anh bạn, nó sẽ điền vào
entire profile screen with the user's   🍀   toàn bộ màn hình hồ sơ của chúng ta với
dữ liệu của người dùng
data that's coming back from Firebase   🍀   đến từ Firebase
and you guys notice that that's exactly   🍀   và các bạn lưu ý rằng đó chính xác là
what's happening there right the user's   🍀   những gì đang xảy ra ở đó, tên người dùng
name in Firebase is Michael Jordan   🍀   trong Firebase là Michael Jordan,
that's the test the email and then these   🍀   đó là email kiểm tra và sau đó đây
are his initials so that's looking   🍀   là tên viết tắt của anh ấy, vậy trông
really really good next up what I want   🍀   thực sự rất tốt, tiếp theo, điều tôi muốn
us to do is go over how to sign a user   🍀   chúng ta làm là tìm hiểu cách đăng xuất
người dùng,
out
so we're going to go back to our auth   🍀   vì vậy chúng ta sẽ quay lại mô hình xem xác
thực của mình
view model now and implement this sign   🍀   ngay bây giờ và triển khai
out function and this should trigger two   🍀   chức năng đăng xuất này và điều này sẽ
kích hoạt hai
events right it should make it so that   🍀   sự kiện đúng như vậy làm cho nó
it takes us back to our login screen   🍀   đưa chúng ta trở lại màn hình đăng nhập
within the app so that's like what   🍀   trong ứng dụng để nó giống như những gì
should happen client side and on the   🍀   sẽ xảy ra ở phía máy khách và ở
back end it should also execute that   🍀   mặt sau, nó cũng sẽ thực thi
sign out functionality so it actually   🍀   chức năng đăng xuất đó để nó cũng thực sự
signs us out with the Firebase servers   🍀   đăng xuất chúng ta bằng máy chủ Firebase,
as well so there's two things we want to   🍀   vì vậy, có hai điều chúng tôi muốn
happen there one thing on client side   🍀   xảy ra ở đó, một điều ở phía khách hàng,
which is the actual navigation we wanted   🍀   đó là điều hướng thực tế mà chúng tôi
muốn
to take us back to our login screen and   🍀   đưa chúng tôi trở lại màn hình đăng nhập và
then we also wanted to sign us out on   🍀   sau đó chúng tôi cũng muốn đăng xuất
chúng tôi ở
the back end so this is actually really   🍀   mặt sau, vì vậy điều này thực sự rất
simple guys we're just going to say do   🍀   đơn giản, chúng tôi chỉ cần nói hãy
try   🍀   thử
auth.auth DOT sign out   🍀   đăng xuất auth.auth DOT


about:blank

72/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and we're going to say self.user session   🍀   và chúng tôi sẽ nói rằng phiên self.user
equals nil self.current user equals nil   🍀   bằng 0. self. user hiện tại bằng 0
and   🍀   và
here's our catch block   🍀   đây là khối catch của chúng tôi
failed to sign out with error   🍀   không đăng xuất được với
dot localized description I've never had   🍀   mô tả được bản địa hóa về dấu chấm lỗi mà
tôi chưa từng có
an error happen on sign out but you know   🍀   đã xảy ra lỗi khi đăng xuất nhưng bạn biết
it is recommended to put it there but   🍀   rằng nên đặt nó ở đó nhưng hãy
let me just talk briefly about what   🍀   để tôi nói ngắn gọn về những gì
these three lines of code are doing so   🍀   ba dòng mã này đang làm để
this line here   🍀   dòng này ở đây
signs out user on back end   🍀   đăng xuất người dùng ở mặt sau,
this uh   🍀   uh,
wipes out user session   🍀   phiên người dùng này sẽ bị xóa
and takes us back to login screen so if   🍀   và đưa chúng ta quay lại màn hình đăng
nhập, vì vậy nếu
you guys remember our presentation Logic   🍀   các bạn nhớ Logic trình bày của chúng tôi
for our content view is all based on   🍀   cho chế độ xem nội dung của chúng tôi đều
dựa trên
this user session property so if we wipe   🍀   thuộc tính phiên người dùng này, vì vậy nếu
chúng tôi
it out or set it to nil then it's going   🍀   xóa nó hoặc đặt nó thành không thì nó sẽ
to take us back to our login screen so   🍀   đưa chúng tôi trở lại màn hình đăng nhập
nên về
basically it's going to say hey   🍀   cơ bản, nó sẽ hoạt động nói này, một
something updated on The auth View model   🍀   cái gì đó được cập nhật trên Mô hình Chế
độ xem xác thực,
my user session is now Nils therefore I   🍀   phiên người dùng của tôi hiện là Nils, do đó
tôi
will show the login View   🍀   sẽ hiển thị Chế độ xem đăng nhập
and then we also want to wipe out our   🍀   và sau đó chúng tôi cũng muốn xóa
current user object which is our data   🍀   đối tượng người dùng hiện tại, đó là mô
hình dữ liệu của chúng tôi
model right because we don't want to   🍀   vì chúng tôi không muốn
hold on to that in any way because then   🍀   giữ theo bất kỳ cách nào bởi vì sau đó
you might see a potential error happen   🍀   bạn có thể thấy một lỗi tiềm ẩn xảy ra
where you log out as one user log back   🍀   khi bạn đăng xuất khi một người dùng đăng
nhập lại với




about:blank   🍀   73/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
in as another and you might see the old   🍀   tư cách người khác và bạn có thể thấy
data still presented there which you   🍀   dữ liệu cũ vẫn được hiển thị ở đó mà bạn
don't want so you want to wipe this guy   🍀   không muốn, vì vậy bạn muốn xóa sạch anh
chàng này
out as well
so let me say wipes out   🍀   đồng thời, hãy để tôi nói xóa sạch
current user data model   🍀   mô hình dữ liệu người dùng hiện tại,
so that's what these three lines of code   🍀   vì vậy đó là những gì ba dòng mã này
are doing now we just need to go ahead   🍀   đang làm bây giờ, chúng tôi chỉ cần tiếp tục
and implement this   🍀   và triển khai điều này
um as in our profile view so we'll go to   🍀   ừm như trong chế độ xem hồ sơ của chúng
tôi, vì vậy chúng tôi sẽ chuyển sang chế
profile view   🍀   độ xem hồ sơ,
we have print sign out   🍀   chúng tôi có dấu hiệu in out
so here we're just going to say   🍀   nên ở đây chúng ta sẽ nói
viewmodel DOT sign out   🍀   viewmodel DOT đăng xuất
and if we run our app   🍀   và nếu chúng ta chạy ứng dụng của mình,
we should notice that when we click on   🍀   chúng ta sẽ nhận thấy rằng khi chúng ta
nhấp vào
that button it signs us out   🍀   nút đó, nó sẽ đăng xuất chúng ta
so we're still logged in that's great it   🍀   vì vậy chúng ta vẫn đăng nhập, điều đó thật
tuyệt, nó
fetched our user information that's   🍀   đã tải thông tin người dùng của chúng ta,
điều đó thật
great we hit sign out perfect it logs us   🍀   tuyệt chúng tôi nhấn đăng xuất hoàn hảo,
nó sẽ đăng xuất chúng tôi
out and takes us back to our login   🍀   và đưa chúng tôi trở lại
screen now to test and see if we are   🍀   màn hình đăng nhập ngay bây giờ để kiểm
tra và xem liệu chúng tôi có
really logged out then what we're going   🍀   thực sự đăng xuất hay không, điều chúng
tôi sẽ
to want to do is launch the app again   🍀   muốn làm là khởi chạy lại ứng dụng
and verify that it takes us to our login   🍀   và xác minh rằng nó sẽ đưa chúng tôi đến
màn hình đăng nhập của chúng tôi
screen and that's exactly what it's   🍀   và đó chính xác là những gì nó đang
doing so this is working beautifully   🍀   làm, vì vậy màn hình này đang hoạt động
rất tốt,
guys next up we're going to go over how   🍀   tiếp theo chúng ta sẽ tìm hiểu cách
to log our user in   🍀   đăng nhập người dùng của mình,




about:blank   🍀   74/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
so we are going to head back to our auth   🍀   vì vậy chúng ta sẽ quay lại mô hình xem xác
thực của mình
view model
and we are going to fill in this sign in   🍀   và chúng ta sẽ điền thông tin này
function so this one's pretty simple   🍀   chức năng đăng nhập vì vậy chức năng này
khá đơn giản,
we're gonna once again wrap this up in a   🍀   một lần nữa chúng tôi sẽ kết thúc việc này
trong
do catch block   🍀   khối do catch. Hãy
let me fix that really quick so we're   🍀   để tôi khắc phục điều đó thật nhanh vì vậy
chúng tôi
going to say do   🍀   sẽ nói do
catch and we are going to say let result   🍀   catch và chúng tôi sẽ nói let result
equal try await   🍀   equal try await
auth.auth DOT sign in with email oops   🍀   auth. auth DOT đăng nhập bằng email Rất
tiếc
email and password so we're going to say   🍀   email và mật khẩu vì vậy chúng tôi sẽ nói
pass in that email password and it's   🍀   vượt qua mật khẩu email đó và điều
important to note guys that we are   🍀   quan trọng cần lưu ý là chúng tôi đang
getting those from our input parameters   🍀   lấy những thông số đó từ các tham số đầu
vào của mình
so we pass these parameters in when we   🍀   vì vậy chúng tôi chuyển các tham số này
vào khi chúng tôi
call this function back in the login   🍀   gọi lại chức năng này chế
view because that's where that   🍀   độ xem đăng nhập vì đó là nơi
information is coming from the user has   🍀   thông tin đến từ người dùng
to fill in this form we pass those   🍀   phải điền vào biểu mẫu này, chúng tôi
chuyển
values in when we call this function   🍀   các giá trị đó vào khi chúng tôi gọi chức
năng này
so that looks good then we're going to   🍀   để có vẻ tốt, sau đó chúng tôi sẽ
say self.user session equals result dot   🍀   nói phiên self.user bằng kết quả
user and then we're going to say await   🍀   người dùng dấu chấm và sau đó chúng tôi
sẽ nói đang chờ
fetch user so I'm actually going to   🍀   tìm nạp người dùng vì vậy tôi thực sự sẽ
comment this out really quickly   🍀   bình luận điều này thật nhanh
uh just so you guys can see what happens   🍀   uh để các bạn có thể thấy điều gì sẽ xảy ra
if we don't call that function and then   🍀   nếu chúng tôi không gọi chức năng đó và
sau đó
here guys we're going to say print debug   🍀   ở đây chúng tôi sẽ nói là in gỡ lỗi


about:blank

75/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
failed to log in with error   🍀   không thể đăng nhập với lỗi
dot localize description cool   🍀   mô tả bản địa hóa dấu chấm rất tuyệt
so we've already called this function   🍀   vì vậy chúng tôi đã gọi lại chức năng này
back inside of our login view so let's   🍀   bên trong chế độ xem đăng nhập của mình,
vì vậy hãy
go ahead and run this and see if we can   🍀   tiếp tục và chạy chức năng này và xem liệu
chúng tôi có thể
log into our app   🍀   đăng nhập vào ứng dụng của mình
so because we're setting the user   🍀   không vì chúng tôi đang đặt thuộc
session property it is going to take us   🍀   tính phiên người dùng nó sẽ đưa chúng tôi
to our profile   🍀   đến hồ sơ của chúng tôi
but   🍀   nhưng
since we're not fetching the user I'm   🍀   vì chúng tôi không tìm nạp người dùng nên
tôi
pretty sure that profile is going to be   🍀   khá chắc chắn rằng hồ sơ đó sẽ
blank so   🍀   trống nên
that's what's going to happen here so   🍀   đó là điều sẽ xảy ra ở đây, vì vậy
let's log in   🍀   hãy đăng nhập
with the account that we created test   🍀   bằng tài khoản mà chúng tôi đã tạo gmail
thử nghiệm
gmail.com   🍀   . com
hit sign in   🍀   nhấn đăng nhập
and yep so it logs Us in right the   🍀   và vâng để nó đăng nhập Chúng tôi ở bên
phải
screen changes but because there's no   🍀   màn hình thay đổi nhưng vì không có
user
right this whole profile view is wrapped   🍀   quyền người dùng nên toàn bộ chế độ xem
hồ sơ này được bao bọc
inside of this if let statement right so   🍀   bên trong câu lệnh if let này vì vậy
the user has to be there in order for   🍀   người dùng phải ở đó để chế
this view to render so in order for that   🍀   độ xem này hiển thị như vậy trong để điều
đó
to
happen we do have to call this fetch   🍀   xảy ra, chúng tôi phải gọi
user function so that it goes and gets   🍀   chức năng tìm nạp người dùng này để nó đi
và nhận
that logged in user from Firebase and   🍀   người dùng đã đăng nhập đó từ Firebase và
guys it's very important that you wait   🍀   các bạn, điều rất quan trọng là bạn phải đợi
to call that function until after you   🍀   để gọi chức năng đó cho đến sau khi bạn




about:blank



76/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
call the sign in function because if you   🍀   gọi chức năng đăng nhập bởi vì nếu
you have to sign in first as the you   🍀   bạn phải đăng nhập trước vì bạn
know the user that you're trying to log   🍀   biết người dùng mà bạn đang cố đăng
in with so that   🍀   nhập để
this uid guy exists and we can fetch the   🍀   anh chàng uid này tồn tại và chúng tôi có
thể tìm nạp
correct user information and display it   🍀   thông tin người dùng chính xác và hiển thị
thông tin đó
in our profile view so that's why we   🍀   trong chế độ xem hồ sơ của chúng tôi, vì
vậy đó là lý do tại sao chúng tôi
have to have that there in the login   🍀   phải có thông tin đó ở đó trong
function but if we were to run the app   🍀   chức năng đăng nhập nhưng nếu chúng tôi
chạy lại ứng dụng,
again you'll notice that on the on the   🍀   bạn sẽ nhận thấy rằng khi
initialization of our off view model   🍀   khởi tạo mô hình tắt chế độ xem của chúng
tôi,
it's going to call fetch user and we're   🍀   nó sẽ gọi người dùng tìm nạp và chúng tôi
going to be good to go   🍀   sẽ ổn thôi,
so yep Michael Jordan so what I want us   🍀   vâng Michael Jordan vậy thì sao Tôi muốn
chúng ta
to do now guys is let's just go ahead   🍀   làm ngay bây giờ, mọi người hãy tiếp tục
and create another account so let's say   🍀   và tạo một tài khoản khác, vì vậy hãy nói
test2 gmail.com for make one for Kobe   🍀   test2 gmail.com để tạo một tài khoản cho
Kobe
Bryant   🍀   Bryant
and hit sign up and we should notice   🍀   và nhấn đăng ký và chúng ta nên lưu ý
that once we sign up it goes and takes   🍀   rằng sau khi chúng ta đăng ký, nó sẽ đưa
us to the profile infectious Kobe's   🍀   chúng ta đến hồ sơ thông tin lây nhiễm của
Kobe
information from the back end so that's   🍀   từ phía sau, vì vậy điều đó
looking absolutely amazing that's the   🍀   trông cực kỳ tuyệt vời, đó là
bulk of the functionality here guys what   🍀   phần lớn chức năng ở đây, những gì
we're going to do to finish this video   🍀   chúng ta sẽ làm để hoàn thành video này
up is ADD our form validation stuff   🍀   là THÊM công cụ xác thực biểu mẫu của
chúng tôi
that's just going to make it so you know   🍀   sẽ tạo ra nó để bạn biết
the button is only enabled under certain   🍀   nút là chỉ được kích hoạt trong một số
conditions and stuff and that's going to   🍀   điều kiện và nội dung nhất định và điều đó
sẽ
look really good so what I mean by that   🍀   trông thực sự tốt, vì vậy ý  tôi là ví


about:blank

77/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
for example
is like if there's no password filled in   🍀   dụ như nếu không có mật khẩu điền vào
here   🍀   đây thì
the sign in button is not enabled right   🍀   nút đăng nhập không được bật đúng
and it actually has to be greater than   🍀   và nó thực sự phải lớn hơn
six characters and all of that stuff you   🍀   sáu ký tự và tất cả những thứ đó các
guys can even Implement stuff where it   🍀   bạn thậm chí có thể Triển khai những thứ
mà nó
has to have a capital letter and blah   🍀   phải có chữ in hoa và blah blah
blah blah but we're not going to worry   🍀   blah nhưng chúng ta sẽ không lo lắng
about that now I'm just going to show   🍀   về điều đó bây giờ tôi sẽ chỉ cho
you the basic functionality of it you   🍀   các bạn chức năng cơ bản của nó mà các
guys can add to it as you see fit so   🍀   bạn có thể thêm vào với nó khi bạn thấy phù
hợp, vì vậy
that's what we're going to do next   🍀   đó là những gì chúng ta sẽ làm tiếp theo
so what we're going to do guys is in our   🍀   vì vậy những gì chúng ta sẽ làm là trong
auth viewmodel file we're going to   🍀   tệp auth viewmodel của chúng ta, chúng ta
sẽ
create a protocol   🍀   tạo một giao thức
and we're going to call it   🍀   và chúng ta sẽ gọi nó là
authentication form protocol   🍀   giao thức biểu mẫu xác thực
and we're going to have one property in   🍀   và chúng tôi sẽ có một thuộc tính ở
here it's going to be called form is   🍀   đây, nó sẽ được gọi là biểu mẫu
valid it's going to be a Boolean and   🍀   hợp lệ, nó sẽ là Boolean và
it's going to require us to get that   🍀   nó sẽ yêu cầu chúng tôi lấy
value so what we're going to do is   🍀   giá trị đó, vì vậy những gì chúng tôi sẽ làm
là ở
everywhere we have a form we are going   🍀   mọi nơi chúng tôi có biểu mẫu. sẽ
to conform to or implement this   🍀   tuân thủ hoặc triển khai
authentication form protocol and   🍀   giao thức biểu mẫu xác thực này và
determine the logic that will tell us   🍀   xác định logic sẽ cho chúng tôi biết
whether or not the form is valid so   🍀   biểu mẫu có hợp lệ hay không, vì vậy, hãy
let's just go ahead and take a look at   🍀   tiếp tục và xem
what that's going to look like so in   🍀   giao diện sẽ như thế nào trong chế độ
your login view scroll down to the   🍀   xem đăng nhập của bạn, hãy cuộn xuống
bottom and let's create an extension   🍀   dưới cùng và hãy tạo một tiện ích mở rộng
here so we're going to say login View   🍀   ở đây để chúng tôi sẽ nói Chế độ xem đăng
nhập




about:blank   🍀   78/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and we're going to conform to this   🍀   và chúng tôi sẽ tuân thủ
authentication form protocol   🍀   giao thức biểu mẫu xác thực này
and because we have that property there   🍀   và vì chúng tôi có thuộc tính đó nên biểu
mẫu
form is valid it's going to require that   🍀   hợp lệ nên chúng tôi sẽ yêu cầu
we implemented right so if you hit fix   🍀   triển khai đúng như vậy nếu bạn nhấn sửa
it's going to say Hey you because we   🍀   nó sẽ nói Này bạn vì chúng tôi
have to follow the rules of this   🍀   phải tuân theo các quy tắc của
protocol so we have to have this form as   🍀   giao thức này nên chúng tôi phải có biểu
mẫu này làm thuộc
valid property here   🍀   tính hợp lệ ở đây
so we are going to want to you know add   🍀   vì vậy chúng tôi sẽ muốn bạn biết thêm
some simple logic to detect whether or   🍀   một số logic đơn giản để phát hiện xem
not our form is valid so let me just go   🍀   biểu mẫu của chúng tôi có phải là hợp lệ, vì
vậy hãy để tôi tiếp
ahead and show you guys what it is so we   🍀   tục và cho các bạn thấy nó là gì để chúng ta
có
can talk about it once we're done we are   🍀   thể nói về nó sau khi hoàn thành, chúng ta
going to say return   🍀   sẽ nói dấu chấm than trả về
exclamation point email dot is empty   🍀   dấu chấm email trống
and email dot contains   🍀   và dấu chấm email chứa
an at symbol   🍀   ký hiệu at
and   🍀   và
password is not empty   🍀   mật khẩu không trống
and password dot count   🍀   và số dấu chấm mật khẩu
is greater than five so Firebase has   🍀   lớn hơn năm, vì vậy Firebase có
some password rules the password has to   🍀   một số quy tắc mật khẩu, mật khẩu phải
be at least six characters you guys   🍀   có ít nhất sáu ký tự, các bạn
could make this password logic whatever   🍀   có thể đặt logic mật khẩu này theo bất kỳ
cách nào
you want but essentially we now have   🍀   bạn muốn nhưng về cơ bản, chúng tôi hiện
có
this form is valid property that's going   🍀   biểu mẫu này là thuộc tính hợp lệ sẽ
to be determined based on all of these   🍀   được xác định dựa trên tất cả trong số
conditions right we have to have an   🍀   các điều kiện này, chúng tôi phải có một
email in there we have to have a   🍀   email trong đó, chúng tôi phải có
password in there the email has to   🍀   mật khẩu trong đó, email phải
contain an at symbol and the password   🍀   chứa ký hiệu at và




about:blank   🍀   79/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
count has to be greater than five so now   🍀   số lượng mật khẩu phải lớn hơn năm, vì vậy
bây giờ
the question becomes okay how are we   🍀   câu hỏi trở nên ổn, chúng tôi
going to use this form as valid property   🍀   sẽ sử dụng như thế nào biểu mẫu này là
thuộc tính hợp lệ,
so basically it's all just going to be   🍀   vì vậy về cơ bản, tất cả sẽ được
implemented on this sign in button here   🍀   triển khai trên nút đăng nhập này, vì vậy
guys so
right here we are going to say on the   🍀   ngay tại đây, chúng tôi sẽ nói về
sign in button this guy right here and   🍀   nút đăng nhập, anh chàng này ngay tại đây
và
once again that's where it's nice to   🍀   một lần nữa, thật tuyệt khi
have these comments it makes it easier   🍀   có những nhận xét này giúp dễ dàng
to find things we're going to say dot   🍀   tìm thấy những thứ mà chúng tôi sẽ nói rằng
disabled
form is valid and we want to negate that   🍀   biểu mẫu vô hiệu hóa dấu chấm là hợp lệ và
chúng tôi muốn phủ nhận điều đó
and then we are going to give the button   🍀   và sau đó chúng tôi sẽ cung cấp cho nút
an opacity   🍀   một độ mờ
based on whether or not the form is   🍀   dựa trên việc biểu mẫu có
valid so this is what it's going to look   🍀   hợp lệ hay không, vì vậy đây là những gì nó
sẽ làm có vẻ
like we're going to say dot opacity   🍀   như chúng ta sẽ nói độ mờ của dấu chấm
and if the form is valid   🍀   và nếu biểu mẫu hợp lệ thì
yes it's going to be 1.0 no it's going   🍀   có, nó sẽ là 1,0, không, nó sẽ
to be 0.5 so that's going to give it   🍀   là 0,5, vì vậy điều đó sẽ làm cho nó
that faded look if the opacity is I mean   🍀   trông mờ nhạt nếu độ mờ là ý tôi,
sorry if the form isn't valid so let's   🍀   xin lỗi nếu biểu mẫu không phải là hợp lệ, vì
vậy hãy
go ahead and just run this really   🍀   tiếp tục và chạy thật
quickly guys to take a look at what that   🍀   nhanh để xem nó
looks like   🍀   trông như thế nào
and then we are going to implement that   🍀   và sau đó chúng tôi cũng sẽ triển khai điều
đó
in our registration view as well so you   🍀   trong chế độ xem đăng ký của mình để các
guys can see that the button is faded   🍀   bạn có thể thấy rằng nút bị mờ
out   🍀   đi
and let's try a couple different test   🍀   và hãy thử một một vài trường hợp thử
nghiệm khác nhau




about:blank   🍀   80/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
cases here so let's see if I just put   🍀   ở đây, vì vậy hãy xem liệu tôi có đặt
test   🍀   thử nghiệm
in there and test   🍀   vào đó và thử nghiệm
and like make my password a bunch of   🍀   và thích đặt mật khẩu của mình thành một
loạt
characters because the email field   🍀   ký tự vì trường email
doesn't have this at symbol it's not   🍀   không có ký hiệu này không, nó sẽ không
going to work but you notice as soon as   🍀   hoạt động nhưng bạn sẽ chú ý ngay khi
I put that at symbol in there it's going   🍀   tôi đặt rằng tại biểu tượng trong đó sẽ
to be good to go   🍀   rất tốt nếu bạn truy cập
um you know then you could say like   🍀   ừm, bạn biết đấy, sau đó bạn có thể nói như
gmail.com or something and you guys   🍀   gmail.com hoặc một cái gì đó và các bạn
could Implement some further validation   🍀   có thể Thực hiện một số xác nhận bổ sung
if you want   🍀   nếu bạn muốn
um and then that's good to go and   🍀   và sau đó thật tuyệt khi tiếp tục và
obviously if we try to sign in with that   🍀   rõ ràng là nếu chúng tôi cố gắng ký với
account it's we're going to get an error   🍀   tài khoản đó, chúng tôi sẽ nhận được một
message   🍀   thông báo lỗi,
um   🍀   ừm,
so let me just do this and you see if I   🍀   vậy hãy để tôi làm điều này và bạn xem nếu
tôi
delete the password right it fades the   🍀   xóa đúng mật khẩu,
button out   🍀   nút sẽ mờ dần
and it doesn't fade it back in or make   🍀   và không mờ trở lại hoặc
it come to life with that color until   🍀   hoạt động trở lại với màu đó cho đến khi
the password goes over six characters so   🍀   mật khẩu vượt quá sáu ký tự để
the form validation is working nicely   🍀   xác thực biểu mẫu hoạt động tốt
there   🍀   ở đó,
um let me just go ahead and add   🍀   hãy để tôi tiếp tục và thêm
something called a Mark here   🍀   một thứ gọi là Đánh dấu vào đây
in the code   🍀   trong mã
so that we know exactly what this is   🍀   để chúng tôi biết chính xác đây là gì
and we can actually copy and paste this   🍀   và chúng tôi thực sự có thể sao chép và dán
mã này
guys and go to our registration View and   🍀   các bạn và đi tới phần đăng ký của chúng
tôi Xem và
do the same thing   🍀   làm điều tương tự




about:blank   🍀   81/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
so email blah blah password yep and we   🍀   để gửi email blah blah mật khẩu yep và
chúng tôi
want to also make sure   🍀   cũng muốn đảm bảo họ và
full name
oops this needs to be extension
registration view sorry
so now full name Doc is empty   🍀   tên Rất tiếc,
and we want to negate that   🍀   đây cần phải là tiện ích mở rộng
and lastly we are going to want to make   🍀   . cuối cùng, chúng tôi sẽ muốn
sure that the password is equal to   🍀   đảm bảo rằng mật khẩu bằng với
confirm password so let's go here with   🍀   mật khẩu xác nhận, vì vậy hãy đến đây để
for our password validation and say and   🍀   xác thực mật khẩu của chúng tôi và nói và
confirm password equals password   🍀   xác nhận mật khẩu bằng mật khẩu,
right so this is going to make sure the   🍀   vì vậy điều này sẽ đảm bảo
passwords match   🍀   mật khẩu khớp
before we validate this form and then we   🍀   trước khi chúng tôi xác thực biểu mẫu này
và sau đó chúng ta
can literally just go back here   🍀   có thể thực sự chỉ cần quay lại đây
copy and paste these two lines of code   🍀   sao chép và dán hai dòng mã này
and put it back on this button   🍀   và đặt lại vào nút này.
let's run our code and check this out   🍀   Hãy chạy mã của chúng ta và kiểm tra điều
này
and then we are going to do some UI   🍀   và sau đó chúng ta sẽ thực hiện một số triển
khai giao diện người dùng
implementation as well to show like a   🍀   để hiển thị như một
check mark to make sure or an x mark to   🍀   dấu kiểm cho đảm bảo hoặc dấu x để
make sure those passwords match and   🍀   đảm bảo rằng các mật khẩu đó khớp và
that'll be the final feature of this   🍀   đó sẽ là tính năng cuối cùng của
YouTube tutorial so let's see we'll have   🍀   hướng dẫn YouTube này, vì vậy hãy xem
chúng tôi sẽ có
test gmail.com
full name is test   🍀   tên đầy đủ là gmail.com thử nghiệm
ah man I hate it when it does this   🍀   ah, tôi ghét nó khi
sometimes it like Auto fills that with a   🍀   đôi khi nó làm điều này giống như Tự động
điền
strong password and it's really annoying   🍀   mật khẩu mạnh và nó thực sự khó chịu
on the simulator so let's just see tests   🍀   trên trình giả lập, vì vậy hãy xem các bài
kiểm tra mà
you guys see it's still not enabled   🍀   các bạn thấy nó vẫn chưa được bật


about:blank

82/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
still not enabled   🍀   vẫn chưa được bật
but as soon as those two things equal   🍀   nhưng ngay sau khi hai thứ đó bằng
each other then the button becomes   🍀   nhau thì nút sẽ được
enabled so that is looking really really   🍀   bật nên trông thực sự
good guys so that's our form validation   🍀   các bạn thực sự tốt, vậy đó là phần xác
thực biểu mẫu của chúng tôi,
uh next up I do want to give you guys a   🍀   uh tiếp theo tôi muốn cung cấp cho các bạn
một
nice little bonus feature where we are   🍀   tính năng phần thưởng nhỏ thú vị, nơi
chúng tôi
going to show some sort of UI indicator   🍀   sẽ hiển thị một số loại chỉ báo giao diện
that will let the user know that the   🍀   người dùng sẽ cho người dùng biết rằng
passwords either match or don't match so   🍀   mật khẩu khớp hoặc không khớp Vì vậy,
let's go ahead and get started with that   🍀   hãy tiếp tục và bắt đầu với điều đó
but really quickly before we do that   🍀   nhưng thực sự nhanh chóng trước khi
chúng ta thực hiện điều đó.
guys I do want to talk briefly about   🍀   Tôi thực sự muốn nói ngắn gọn về
this protocol so back in the auth view   🍀   giao thức này, vì vậy, trong mô hình chế độ
xem xác thực,
model we created this protocol and we   🍀   chúng tôi đã tạo giao thức này và chúng tôi
use this so that both of these two   🍀   sử dụng giao thức này để cả hai
things can Implement that protocol and   🍀   điều này có thể Thực hiện giao thức đó và
notice that we require some sort of   🍀   lưu ý rằng chúng tôi yêu cầu một số loại
logic to tell us whether or not the form   🍀   logic để cho chúng tôi biết biểu mẫu
is valid so obviously that's not   🍀   có hợp lệ hay không nên rõ ràng là không
required but it is considered like good   🍀   bắt buộc nhưng nó được coi là
programming and best practices to do   🍀   lập trình tốt và các phương pháp hay nhất
để làm
that because now anytime you have   🍀   điều đó bởi vì bây giờ bất cứ khi nào bạn có
một
another form you will see that all of   🍀   biểu mẫu khác, bạn sẽ thấy điều đó tất cả
the existing forms like this login View   🍀   các biểu mẫu hiện có như Chế độ xem đăng
nhập
and registration view conform to this   🍀   và Chế độ xem đăng ký này đều tuân theo
protocol so that when if you ever create   🍀   giao thức này để khi bạn tạo một biểu
another one or if another person works   🍀   mẫu khác hoặc nếu một người khác làm
việc
on your code whatever it may be they   🍀   trên mã của bạn, họ có thể
know that a form will have to conform to   🍀   biết rằng một biểu mẫu sẽ phải tuân theo




about:blank   🍀   83/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
this protocol and implement this form as   🍀   giao thức này và triển khai biểu mẫu này
làm thuộc
valid property and use the logic like   🍀   tính hợp lệ và sử dụng logic như
this to enable or disable your button so   🍀   thế này để bật hoặc tắt nút của bạn, đó
that's why we use a protocol there and   🍀   là lý do tại sao chúng tôi sử dụng một giao
thức ở đó và
Implement that across our two different   🍀   Triển khai giao thức đó trên hai lớp khác
nhau của chúng tôi,
class
so now let's go back to our registration   🍀   vì vậy bây giờ hãy quay lại phần đăng ký
của chúng tôi
View and implement this fund confirm   🍀   Xem và triển khai
password feature so we are going to uh   🍀   tính năng mật khẩu xác nhận quỹ này Vì
vậy, chúng tôi sẽ
take this input view here for the   🍀   lấy chế độ xem đầu vào này ở đây cho
confirm password field and wrap it into   🍀   trường mật khẩu xác nhận và đưa nó vào
Z stack so cut that out really quickly   🍀   ngăn xếp Z để cắt nó ra thật nhanh, chúng
tôi sẽ
we're going to say the alignment is dot   🍀   nói rằng căn chỉnh là dấu chấm
trailing
and we're going to put that guy right   🍀   và chúng tôi sẽ đặt anh chàng đó ngay
there   🍀   tại đó
just like before   🍀   giống như trước đây
and we are going to add a little check   🍀   và chúng tôi sẽ thêm một dấu kiểm nhỏ
mark or x mark at the end of the field   🍀   hoặc dấu x ở cuối trường
right here based on whether or not the   🍀   ngay tại đây dựa trên việc
passwords are equal to each other so we   🍀   các mật khẩu có bằng nhau hay không, vì
vậy chúng tôi
want to say if   🍀   muốn nói nếu
password dot is empty   🍀   dấu chấm mật khẩu trống
and   🍀   và
confirm password   🍀   xác nhận
dot is empty so we want to make sure   🍀   dấu chấm mật khẩu trống nên chúng tôi
muốn đảm bảo
both of them have what's it called text   🍀   cả hai đều có cái được gọi là văn bản
before we start showing it and then   🍀   trước khi chúng tôi bắt đầu hiển thị văn bản
và sau đó
we're also going to check if password   🍀   chúng tôi cũng sẽ kiểm tra xem mật khẩu
equals confirm password   🍀   có bằng xác nhận mật khẩu




about:blank   🍀   84/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
and say else there   🍀   và nói khác ở đó
so here   🍀   vì vậy ở đây
we are going to say image system name   🍀   chúng tôi sẽ nói dấu kiểm tên hệ thống hình
ảnh
checkmark dot Circle   🍀   dấu chấm Hình tròn dấu chấm
dot fill   🍀   lấp đầy hình ảnh dấu chấm Tỷ
dot image scale is dot large dot font   🍀   lệ hình ảnh là dấu chấm lớn.
weight is Dot bolds dot foreground color   🍀   Trọng lượng phông chữ là Dấu chấm đậm.
Màu nền trước
is color   🍀   là màu của
dot system green oops   🍀   hệ thống dấu chấm màu xanh lá cây.
okay and then we can just copy and paste   🍀   Rất tiếc, sau đó chúng ta chỉ cần sao chép
và dán
this and in this elk sorry else block   🍀   cái này và trong khối nai sừng tấm này, xin
lỗi,
we're going to say   🍀   chúng ta sẽ nói
xmark.circle.fill and make the color   🍀   xmark. circle.fill và làm cho
system red   🍀   hệ thống màu có màu đỏ
okay so basically guys the logic here is   🍀   là được, vì vậy về cơ bản, logic ở đây
saying that hey make sure both of these   🍀   nói rằng hãy đảm bảo rằng cả
two Fields have text that's what this is   🍀   hai Trường này đều có văn bản, đó là
những gì nó đang
doing because as you're filling out the   🍀   làm bởi vì khi bạn điền vào
form you don't want that to show up   🍀   biểu mẫu, bạn không muốn điều đó hiển thị
right you only want it to show up once   🍀   đúng, bạn chỉ muốn nó hiển thị khi
the user has typed stuff into both of   🍀   người dùng đã nhập nội dung vào cả hai
these fields   🍀   trường này
and then it's going to say if the two   🍀   và sau đó sẽ cho biết liệu hai
things are equal show a check mark right   🍀   nội dung có bằng nhau hay không, hãy hiển
thị dấu kiểm ngay
here if they're not show an x mark and   🍀   tại đây nếu chúng không hiển thị dấu x và
the tint will be red so let's go ahead   🍀   dấu kiểm tông màu sẽ có màu đỏ, vì vậy
hãy tiếp tục
and run this now   🍀   và chạy ứng dụng này ngay bây giờ
and see if that works and that's just a   🍀   và xem tính năng đó có hoạt động không và
đó chỉ là một
nice little bonus feature for you guys   🍀   tính năng bổ sung nhỏ thú vị dành cho các
bạn
there to really improve the user   🍀   ở đó để thực sự cải thiện




about:blank   🍀   85/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
interface and user experience of this   🍀   giao diện người dùng và trải nghiệm người
dùng của
app   🍀   ứng dụng này,
so we're going to go sign up   🍀   vì vậy chúng ta sẽ đăng ký
test gmail.com   🍀   kiểm tra gmail.com
test   🍀   kiểm tra
so you guys will notice that if I start   🍀   để các bạn sẽ nhận thấy rằng nếu tôi bắt
đầu
typing into this password field nothing   🍀   nhập vào trường mật khẩu này thì không có
gì
shows up here right because we're   🍀   hiển thị ở đây vì chúng tôi
requiring that both of the fields have   🍀   yêu cầu cả hai trường phải có
text so that's by Design   🍀   văn bản, do đó, đó là do Thiết kế
and then you see here that now the x   🍀   và sau đó bạn thấy ở đây bây giờ là
button starts showing up right because   🍀   nút x bắt đầu hiển thị đúng vì
they're not equal   🍀   chúng không bằng nhau
and as soon as they are equal that green   🍀   và ngay khi chúng bằng nhau, dấu kiểm
màu xanh lá cây đó sẽ
check mark shows up to say hey your   🍀   hiển thị để nói rằng: này,
passwords match if we change it it goes   🍀   mật khẩu của bạn khớp nếu chúng tôi thay
đổi, nó sẽ quay
back to X and it invalidates our form   🍀   lại X và nó sẽ làm mất hiệu lực biểu mẫu
của chúng tôi
and if we they match then this is green   🍀   và nếu chúng khớp nhau thì điều này có
màu xanh lá cây
and everything is good to go and that is   🍀   và mọi thứ đều hoạt động tốt và điều đó
pretty much going to wrap it up for the   🍀   gần như sẽ hoàn tất cho
YouTube version of this app guys we have   🍀   phiên bản YouTube của ứng dụng này,
chúng tôi có
a full authentication set up here where   🍀   một xác thực đầy đủ được thiết lập tại đây,
nơi
we can log users in sign them up fetch   🍀   chúng tôi có thể đăng nhập người dùng
đăng ký, lấy
their information from Firebase and all   🍀   thông tin của họ từ Firebase và tất cả
that awesome stuff this can be dragged   🍀   thứ tuyệt vời đó có thể được kéo
and dropped into literally any single   🍀   và thả vào bất kỳ
project you have that requires user   🍀   dự án đơn lẻ nào mà bạn có yêu cầu
authentication or user profiles the   🍀   xác thực người dùng hoặc hồ sơ người
dùng,




about:blank   🍀   86/876/7/23, 1:47 AM   🍀   about:blank
Main subtitle   🍀   Second subtitle
completed version of these this app is   🍀   phiên bản hoàn chỉnh của những ứng dụng
này
going to have a couple extra features   🍀   sẽ có một vài tính năng bổ sung rất
that are nice to haves so for example   🍀   hay, chẳng hạn như
it's going to have a custom error   🍀   nó sẽ có xử lý lỗi tùy chỉnh,
handling it'll also have this forgot   🍀   nó cũng sẽ có
password feature so that users can reset   🍀   tính năng quên mật khẩu này để người
dùng có thể đặt lại
their password via email and in the   🍀   mật khẩu của họ qua email và trong
future I'm going to be adding social   🍀   tương lai tôi sẽ thêm
sign-ins like Google and Facebook and   🍀   các đăng nhập xã hội như Google và
Facebook và
all of that stuff and we also see here   🍀   tất cả những thứ đó và chúng tôi cũng thấy
ở
that we have like a custom loading   🍀   đây, chúng tôi cũng có một chỉ báo tải tùy
chỉnh
indicator there as well so once again   🍀   ở đó, vì vậy một lần nữa,
guys if you want that source code it is   🍀   nếu bạn muốn mã nguồn đó, nó
available on my website at   🍀   có sẵn trên trang web của tôi tại
stefancodes.com sign up for any one of   🍀   stefancodes.com, hãy đăng ký bất kỳ
these membership plans to get access to   🍀   gói thành viên nào trong số này để có quyền
truy cập vào
the YouTube courses so that's everything   🍀   các khóa học YouTube, vì vậy đó là mọi thứ
you see here I'll be adding this one   🍀   bạn thấy ở đây, tôi sẽ thêm cái này
right now and signing up like I said   🍀   ngay bây giờ và đăng ký như tôi đã nói sẽ
gets you access to all of this stuff and   🍀   giúp bạn truy cập vào tất cả những thứ này
và
make sure you check out all of the other   🍀   đảm bảo rằng bạn xem tất cả
courses I have in the description to   🍀   các khóa học khác mà tôi có trong phần mô
tả của
this video so thanks so much for   🍀   video này, cảm ơn rất nhiều vì
watching guys we'll see you in the next   🍀   đã theo dõi các bạn, chúng tôi sẽ gặp lại các
bạn trong phần tiếp theo.
one peace out




about:blank   🍀   87/87
