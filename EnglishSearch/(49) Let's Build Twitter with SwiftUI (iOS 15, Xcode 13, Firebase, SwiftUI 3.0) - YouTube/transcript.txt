6/7/23, 1:25 AM    about:blank




(49)      Let's Build Twitter with SwiftUI (iOS 15, Xcode 13, Firebase, SwiftUI
3.0) - YouTube




Main subtitle    Second subtitle
what's going on youtube welcome back to    chuyện gì đang xảy ra trên youtube chào
mừng bạn quay trở lại
the channel it's stefan here from app    kênh đó là stefan ở đây từ ứng dụng
stuff and i have some absolutely    công cụ và tôi có một số hoàn toàn
mind-blowing content for you guys today    nội dung hấp dẫn cho các bạn ngày hôm
nay
and i hope you're as excited about it as    và tôi hy vọng bạn cũng hào hứng với nó
như
i am man i'm excited to bring this to    tôi là đàn ông, tôi rất vui khi mang cái này
đến
you guys we are going to be building a    các bạn, chúng ta sẽ xây dựng một
twitter clone from scratch that's front    twitter sao chép từ đầu đó là phía trước
end back end design everything you name    kết thúc thiết kế kết thúc mọi thứ bạn đặt tên
it we're building it today we got six    nó chúng tôi đang xây dựng nó hôm nay
chúng tôi có sáu
plus hours of content we're building it    cộng với hàng giờ nội dung chúng tôi đang
xây dựng nó
with swift ui and ios 15. it's going to    với swift ui và ios 15. nó sẽ
be a lot of fun you guys are going to    vui vẻ nhé các bạn
learn a lot and it's coming your way    học hỏi rất nhiều và nó sẽ đến theo cách
của bạn
from me 100    từ tôi 100
free so i hope you guys are pumped up    miễn phí vì vậy tôi hy vọng các bạn được
bơm lên
let's go ahead and check out what we're    hãy tiếp tục và kiểm tra những gì chúng ta
going to be building on that screen    sẽ được xây dựng trên màn hình đó
right there    ngay tại đó
so let's just go through a quick demo of    vì vậy chúng ta hãy đi qua một bản demo
nhanh
the application before we get started    ứng dụng trước khi chúng tôi bắt đầu
guys you notice that we open up to this    các bạn chú ý rằng chúng tôi cởi mở với
điều này
absolutely gorgeous user feed it    người dùng hoàn toàn tuyệt đẹp cho nó ăn
displays a list of all the tweets that    hiển thị danh sách tất cả các tweet mà
users have made on the application we're    người dùng đã thực hiện trên ứng dụng
chúng tôi
pulling this information in from a real    lấy thông tin này từ một thực tế


about:blank

    1/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
back end and we're going to be going    kết thúc và chúng ta sẽ đi
over how to do all of that stuff in the    về cách làm tất cả những thứ đó trong
course we can also like tweets or    tất nhiên chúng ta cũng có thể thích các
tweet hoặc
interact with them really so you notice    tương tác với họ thực sự để bạn chú ý
i can like a tweet here you notice that    tôi có thể thích một tweet ở đây bạn chú ý
rằng
these tweets were previously liked so    những tweet này trước đây đã được thích
như vậy
we're saving that information in the    chúng tôi đang lưu thông tin đó trong
database which is awesome i can also    cơ sở dữ liệu thật tuyệt vời tôi cũng có thể
unlike my tweet and it updates my ui    không giống như tweet của tôi và nó cập
nhật giao diện người dùng của tôi
very smoothly    rất suôn sẻ
and that is looking absolutely    và đó là tìm kiếm hoàn toàn
incredible and you guys will notice that    đáng kinh ngạc và các bạn sẽ nhận thấy
rằng
i also have this beautiful side menu    tôi cũng có menu bên đẹp này
here that is identical to what you see    ở đây giống hệt với những gì bạn thấy
in the twitter app i have a couple    trong ứng dụng twitter tôi có một vài
different options that i can click on i    các tùy chọn khác nhau mà tôi có thể nhấp
vào tôi
also display some real life user data    cũng hiển thị một số dữ liệu người dùng
thực tế
about the currently logged in user so    về người dùng hiện đang đăng nhập
let's just go ahead and check out the    chúng ta hãy tiếp tục và kiểm tra
user profile now you notice that this    hồ sơ người dùng bây giờ bạn nhận thấy
rằng điều này
once again looks exactly like twitter it    một lần nữa trông giống hệt như twitter nó
displays some real life data that's    hiển thị một số dữ liệu thực tế cuộc sống đó
là
coming from a back end about the    đến từ một back-end về
currently logged in user as we saw    người dùng hiện đang đăng nhập như
chúng ta đã thấy
before and what's my favorite part about    trước đây và phần yêu thích của tôi là gì
this profile is guys is this awesome    hồ sơ này là mọi người thật tuyệt vời
like filter bar that we see here that    giống như thanh bộ lọc mà chúng ta thấy ở
đây
displays different types of tweets the    hiển thị các loại tweet khác nhau




about:blank    2/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
user has made or interacted with so for    người dùng đã thực hiện hoặc tương tác với
như vậy cho
example clicking on this likes tab    ví dụ nhấp vào tab thích này
displays tweets that this user has liked    hiển thị các tweet mà người dùng này đã
thích
going back to tweets just displays the    quay lại tweet chỉ hiển thị
list of tweets this user has made    danh sách các tweet mà người dùng này đã
thực hiện
themselves so that looks incredible    chính họ để trông đáng kinh ngạc
we also have this beautiful search page    chúng tôi cũng có trang tìm kiếm tuyệt đẹp
này
that allows us to search for different    cho phép chúng tôi tìm kiếm các
users on the app so for example i can    người dùng trên ứng dụng, ví dụ như tôi có
thể
filter my users down just like that    lọc người dùng của tôi xuống giống như vậy
click on it and it takes me over to that    nhấp vào nó và nó sẽ đưa tôi đến đó
user's profile and then i can also you    hồ sơ của người dùng và sau đó tôi cũng có
thể bạn
know let's go over like lewis hamilton's    biết chúng ta hãy đi qua như lewis
hamilton's
page and it displays real data about    trang và nó hiển thị dữ liệu thực về
lewis hamilton his unique tweets the    lewis hamilton những dòng tweet độc đáo
của anh ấy
tweets that he has liked and this is all    tweet mà anh ấy đã thích và đây là tất cả
looking absolutely phenomenal and the    trông hoàn toàn phi thường và
last piece of the main interface guys is    phần cuối cùng của giao diện chính là
going to be our ability to click on this    sẽ là khả năng của chúng tôi để nhấp vào
đây
like floating button here you'll notice    như nút nổi ở đây bạn sẽ nhận thấy
that it's um    đó là ừm
what's it called it doesn't move as we    nó được gọi là gì nó không di chuyển khi
chúng ta
scroll through this list so i click on    cuộn qua danh sách này để tôi nhấp vào
it and it takes me to this page where i    nó và nó đưa tôi đến trang này, nơi tôi
can actually upload a tweet and have    thực sự có thể tải lên một tweet và có
that get displayed in my user feed so    được hiển thị trong nguồn cấp dữ liệu người
dùng của tôi để
last up is we can log out of the app    cuối cùng là chúng ta có thể đăng xuất khỏi
ứng dụng
and it will log us out and take us to    và nó sẽ đăng xuất chúng tôi và đưa chúng




about:blank    3/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
tôi đến
this beautiful login page where we can    trang đăng nhập tuyệt đẹp này, nơi chúng ta
có thể
actually log in as different users and    thực sự đăng nhập với tư cách người dùng
khác nhau và
also we have this registration page    chúng tôi cũng có trang đăng ký này
where we can sign different users up and    nơi chúng tôi có thể đăng ký những người
dùng khác nhau và
upload information about you know    tải lên thông tin về bạn biết
creating a user that's what we're going    tạo một người dùng đó là những gì chúng ta
sẽ làm
to be building guys i'm super pumped i    để được xây dựng guys tôi siêu bơm tôi
know you're super pumped let's go ahead    biết bạn siêu bơm, hãy tiếp tục
and get started make sure you like and    và bắt đầu đảm bảo bạn thích và
subscribe to the channel if you want to    đăng ký kênh nếu bạn muốn
see more content like this and check out    xem thêm nội dung như thế này và kiểm tra
the links in the description for the    các liên kết trong phần mô tả cho
source code to this application and    mã nguồn cho ứng dụng này và
other courses that i have online so    các khóa học khác mà tôi có trực tuyến vì
vậy
let's go ahead and now finally get    hãy tiếp tục và bây giờ cuối cùng cũng có
được
started with xcode guys    bắt đầu với xcode guys
okay guys so i have xcode opened up in    được rồi các bạn vì vậy tôi đã mở xcode
trong
front of me here and i created a new    trước mặt tôi ở đây và tôi đã tạo một cái
mới
project if you guys don't know how to do    dự án nếu các bạn không biết làm
that open up xcode go to file new and    mở xcode đi tới tệp mới và
select project and it should bring you    chọn dự án và nó sẽ mang lại cho bạn
to the screen anyway we're going to    lên màn hình dù sao chúng ta cũng sẽ
create this app here so make sure you    tạo ứng dụng này ở đây để chắc chắn rằng
bạn
have ios selected as your tab and then    có ios được chọn làm tab của bạn và sau đó
we're going to select this app option    chúng tôi sẽ chọn tùy chọn ứng dụng này
and i'm going to name this    và tôi sẽ đặt tên cho cái này
twitter swift    twitter nhanh
ui    giao diện người dùng
youtube    youtube




about:blank    4/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
okay and name this whatever you guys    được rồi và đặt tên cái này là gì các bạn
want and make sure that you have swift    muốn và đảm bảo rằng bạn có nhanh chóng
ui selected as the user interface and    ui được chọn làm giao diện người dùng và
swift as the language and this stuff    nhanh như ngôn ngữ và những thứ này
should be fine    sẽ ổn thôi
we don't need core data and we don't    chúng tôi không cần dữ liệu cốt lõi và chúng
tôi không
need to include tests so we should be    cần bao gồm các bài kiểm tra vì vậy chúng
ta nên
good there just hit next and go ahead    tốt ở đó chỉ cần nhấn tiếp theo và tiếp tục
and create your project    và tạo dự án của bạn
and to start this off guys before we    và để bắt đầu điều này trước khi chúng tôi
actually get started with any code i    thực sự bắt đầu với bất kỳ mã nào tôi
actually like to organize my project    thực sự muốn tổ chức dự án của tôi
directory here so it makes navigating    thư mục ở đây để nó điều hướng
through my code a lot easier so we're    thông qua mã của tôi dễ dàng hơn rất nhiều
vì vậy chúng tôi
going to create some folders over in    sẽ tạo một số thư mục trong
this project directory here to get    thư mục dự án này ở đây để có được
started so go ahead and select the first    đã bắt đầu, vì vậy hãy tiếp tục và chọn cái
đầu tiên
folder in your project not the app    thư mục trong dự án của bạn không phải
ứng dụng
project name but this folder name    tên dự án nhưng tên thư mục này
and we're going to create a new group so    và chúng tôi sẽ tạo một nhóm mới để
go ahead just select new group and you    tiếp tục chỉ cần chọn nhóm mới và bạn
guys will notice it creates a folder for    mọi người sẽ nhận thấy nó tạo một thư mục
cho
you there we're actually going to do    bạn ở đó chúng tôi thực sự sẽ làm
this four times a shortcut to do it is    điều này bốn lần một phím tắt để làm điều
đó là
holding down command option and hitting    giữ tùy chọn lệnh và nhấn
n    N
and then just select your project folder    và sau đó chỉ cần chọn thư mục dự án của
bạn
again and just do that a couple more    một lần nữa và chỉ cần làm điều đó một vài
lần nữa
times so you should have these four    lần vì vậy bạn nên có bốn
groups we're gonna name the first one    nhóm chúng ta sẽ đặt tên cho nhóm đầu
tiên


about:blank

    5/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
extensions    phần mở rộng
we're gonna name the second one model    chúng ta sẽ đặt tên cho mô hình thứ hai
the third one we're going to call it    cái thứ ba chúng ta sẽ gọi nó là
service    dịch vụ
and the fourth one we're going to call    và cái thứ tư chúng ta sẽ gọi
core    cốt lõi
and within the core folder we're going    và trong thư mục lõi, chúng ta sẽ
to create two groups there as well so    để tạo hai nhóm ở đó cũng như vậy
once again you can right click and hit    một lần nữa bạn có thể nhấp chuột phải và
nhấn
new group    nhóm mới
and this one is going to be called    và cái này sẽ được gọi là
components    các thành phần
and then right click on core again and    và sau đó nhấp chuột phải vào lõi một lần
nữa và
create another group and we're going to    tạo một nhóm khác và chúng tôi sẽ
call this guy feed    gọi anh chàng này thức ăn
okay and i actually like to drag    được rồi và tôi thực sự thích kéo
feed    cho ăn
let's see    hãy xem nào
i like that to be below um the    tôi thích điều đó ở dưới um
components guy so let's talk about this    anh chàng thành phần vì vậy hãy nói về
điều này
structure really quick before we get    cấu trúc thực sự nhanh chóng trước khi
chúng tôi nhận được
started with the code guys you guys are    bắt đầu với mã các bạn
probably used to seeing me organize this    có lẽ đã từng thấy tôi tổ chức việc này
as model view view model    dưới dạng xem mô hình xem mô hình
but i recently started uh changing the    nhưng gần đây tôi đã bắt đầu thay đổi
way i organize my directory to organize    cách tôi tổ chức thư mục của mình để tổ
chức
it by feature instead of like    nó theo tính năng thay vì thích
architecture components so    thành phần kiến   trúc như vậy
now this this folder for the feed will    bây giờ thư mục này cho nguồn cấp dữ liệu
sẽ
contain everything about the feed    chứa mọi thứ về nguồn cấp dữ liệu
whereas before i would you know create a    trong khi trước đây tôi muốn bạn biết tạo
một




about:blank    6/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
folder for models view models and views    thư mục cho các mô hình xem mô hình và
chế độ xem
and once your app gets a lot of features    và một khi ứng dụng của bạn có nhiều tính
năng
in it it actually gets kind of annoying    trong đó nó thực sự gây phiền nhiễu
to navigate through all that stuff so    để điều hướng qua tất cả những thứ đó
this is a little bit more efficient to    đây là một chút hiệu quả hơn để
organize your folder structure by    tổ chức cấu trúc thư mục của bạn bằng
cách
feature instead of architecture    tính năng thay vì kiến   trúc
component like model view view model    thành phần như chế độ xem mô hình chế độ
xem mô hình
anyway within feed we're going to create    dù sao trong nguồn cấp dữ liệu, chúng tôi
sẽ tạo
another folder or two more folders    một thư mục khác hoặc hai thư mục nữa
actually    Thực ra
so we're going to call this guy view    vì vậy chúng ta sẽ gọi anh chàng này là
view
models and then we're going to call this    mô hình và sau đó chúng ta sẽ gọi đây là
guy    chàng trai
view    xem
so    Vì thế
this is what i was talking about right    đây là những gì tôi đã nói về đúng
now every time we want to go to    bây giờ mỗi khi chúng tôi muốn đi đến
something associated with the feed we    một cái gì đó liên quan đến nguồn cấp dữ
liệu chúng tôi
know we just go to this feed folder and    biết rằng chúng tôi chỉ cần vào thư mục
nguồn cấp dữ liệu này và
it will be right there okay so let's    nó sẽ ở ngay đó được thôi, vì vậy hãy
actually get started with some code now    thực sự bắt đầu với một số mã bây giờ
so we're going to go    vì vậy chúng ta sẽ đi
into this feed view folder and we're    vào thư mục xem nguồn cấp dữ liệu này và
chúng tôi
going to create a new file it's going to    sẽ tạo một tệp mới, nó sẽ
be a swift ui view and we're going to    là một chế độ xem ui nhanh chóng và chúng
tôi sẽ
hit next and we're going to call this    nhấn tiếp theo và chúng tôi sẽ gọi đây là
feed    cho ăn
view awesome    xem tuyệt vời




about:blank    7/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
okay so now let's just go ahead and hit    được rồi, bây giờ chúng ta hãy tiếp tục và
đánh
resume guys i actually like to build    sơ yếu lý lịch các bạn tôi thực sự thích xây
dựng
this on an iphone 11 pro    cái này trên iphone 11 pro
and    Và
let's just wait for this project to show    chúng ta hãy chờ đợi cho dự án này để hiển
thị
up awesome so now we're seeing our    lên tuyệt vời vì vậy bây giờ chúng tôi đang
nhìn thấy của chúng tôi
preview showing up here and it has this    bản xem trước hiển thị ở đây và nó có cái
này
text called uh that says hello world    tin nhắn có tên uh nói xin chào thế giới
um just to make sure everything's    ừm chỉ để đảm bảo mọi thứ
updating let's just delete this and say    đang cập nhật, hãy xóa cái này và nói
hello    Xin chào
and we should notice our preview updates    và chúng tôi sẽ nhận thấy các bản cập nhật
xem trước của chúng tôi
as well    cũng
awesome so we're good to go so let's    tuyệt vời vì vậy chúng tôi rất tốt để đi vì vậy
hãy
actually start creating this feed view    thực sự bắt đầu tạo chế độ xem nguồn cấp
dữ liệu này
so we notice here guys that we have a    vì vậy chúng tôi nhận thấy ở đây các bạn
rằng chúng tôi có một
list of information so this is actually    danh sách thông tin vì vậy đây thực sự là
going to be a list of tweets    sẽ là một danh sách các tweet
so    Vì thế
we're going to replace this text that we    chúng tôi sẽ thay thế văn bản này mà chúng
tôi
see here with something called a scroll    xem ở đây với một thứ gọi là cuộn
view    xem
and within that scroll view we're going    và trong chế độ xem cuộn đó, chúng tôi sẽ
to have something called a lazy v stack    để có một thứ gọi là lazy v stack
and let's just add some text sorry we're    và chúng ta hãy thêm một số văn bản xin
lỗi, chúng tôi
going to add a for each loop here    sẽ thêm một cho mỗi vòng lặp ở đây
and let's just go like zero    và chúng ta hãy đi như số không
up to 20    lên đến 20




about:blank    8/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
id backslash dot self and then we're    id dấu gạch chéo ngược dấu chấm tự và
sau đó chúng tôi
going to open up our brackets and    sẽ mở dấu ngoặc của chúng tôi và
we are just going to say underscore in    chúng ta sẽ chỉ nói gạch dưới trong
and now let's just go ahead and add some    và bây giờ chúng ta hãy tiếp tục và thêm
một số
text here that says like tweet    văn bản ở đây có nội dung như tweet
row view    xem hàng
and we should see a bunch of these    và chúng ta sẽ thấy một loạt những thứ này
options or these text components coming    tùy chọn hoặc các thành phần văn bản sắp
tới
up so that looks pretty good um    lên trông khá đẹp ừm
we noticed that if we were to hit play    chúng tôi nhận thấy rằng nếu chúng tôi
nhấn play
on the preview that we could actually    trên bản xem trước mà chúng tôi thực sự có
thể
like scroll this stuff so this is the    như cuộn những thứ này vì vậy đây là
beginnings of what our feed view is    khởi đầu của chế độ xem nguồn cấp dữ liệu
của chúng tôi là gì
going to look like we just have to    sẽ có vẻ như chúng ta chỉ cần phải
replace    thay thế
um this text component with an actual    ừm thành phần văn bản này với một thực tế
tweet row view so let's go ahead and    chế độ xem hàng tweet, vì vậy hãy tiếp tục
và
start by creating that now so in your    bắt đầu bằng cách tạo nó ngay bây giờ để
trong của bạn
components folder guys go ahead and    thư mục thành phần đi trước và
create another folder and we're going to    tạo một thư mục khác và chúng tôi sẽ
call this tweets    gọi đây là tweet
and the reason we're creating or adding    và lý do chúng tôi đang tạo hoặc thêm
this tweet stuff into the components    nội dung tweet này vào các thành phần
folder is because we're going to be    thư mục là bởi vì chúng ta sẽ trở thành
reusing this tweet cell in a couple    sử dụng lại tế bào tweet này trong một vài
different places in our app and that's    những nơi khác nhau trong ứng dụng của
chúng tôi và đó là
what the components folder is going to    thư mục thành phần sẽ là gì
be for so for example    ví dụ như vậy
i could go to my profile and notice that    tôi có thể vào hồ sơ của mình và nhận thấy
rằng
i'm reusing these tweet cells here    tôi đang sử dụng lại các ô tweet này ở đây


about:blank

    9/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
right and it also gets reused in this    đúng và nó cũng được sử dụng lại trong này
like section this tweet section so we    thích phần này phần tweet này vì vậy chúng
tôi
definitely want this to be a reusable    chắc chắn muốn cái này có thể tái sử dụng
component    thành phần
so in tweets go ahead and create    vì vậy trong các tweet, hãy tiếp tục và tạo
something called it's a swift ui view    một cái gì đó được gọi là một giao diện
người dùng nhanh chóng
and we're going to call this tweet row    và chúng ta sẽ gọi dòng tweet này
view    xem
and let's start by    và hãy bắt đầu bằng cách
resuming on our preview    đang tiếp tục trên bản xem trước của chúng
tôi
just to make sure that we can see this    chỉ để đảm bảo rằng chúng ta có thể thấy
điều này
stuff showing up as we build it looks    những thứ hiển thị khi chúng tôi xây dựng
good    Tốt
now uh let's go back to this to make    bây giờ chúng ta hãy quay trở lại vấn đề
này để thực hiện
sure we can see what we want it to look    chắc chắn chúng ta có thể thấy những gì
chúng ta muốn
like okay so    thích được vậy
we're gonna have like an image uh some    chúng ta sẽ có một hình ảnh uh some
text about the user the text that    văn bản về người dùng văn bản đó
represents the tweet caption and then    đại diện cho chú thích tweet và sau đó
we're gonna have this like row of action    chúng ta sẽ có điều này giống như hàng
hành động
buttons so let's just go ahead and get    các nút vì vậy hãy tiếp tục và nhận
started so this is all gonna be    bắt đầu vì vậy đây là tất cả sẽ được
contained within a v stack here guys so    chứa trong ngăn xếp v ở đây các bạn
within that v stack we're going to    trong ngăn xếp v đó, chúng ta sẽ
create an h stack    tạo ngăn xếp h
the alignment is going to be dot top    sự liên kết sẽ là dot top
spacing is going to be 12.    khoảng cách sẽ là 12.
and then we're going to have    và sau đó chúng ta sẽ có
just like a circle    giống như một vòng tròn
we're going to replace the circle with    chúng ta sẽ thay thế vòng tròn bằng
an actual image later on    một hình ảnh thực tế sau này
we're going to say dot frame    chúng ta sẽ nói khung chấm


about:blank

    10/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
width and height is 56 by 56 we don't    chiều rộng và chiều cao là 56 x 56 chúng tôi
không
need the alignment    cần sự liên kết
so that looks better    như vậy trông đẹp hơn
and then we're just going to say we    và sau đó chúng ta sẽ nói rằng chúng ta
could give it a foreground color of like    có thể cho nó một màu nền trước giống như
color    màu sắc
dot    dấu chấm
system    hệ thống
blue okay    màu xanh được
and then after that guys we're gonna    và sau đó các bạn chúng ta sẽ
have a v stack within this h stack so    có một ngăn xếp v trong ngăn xếp h này vì
vậy
let me explain what's going on here so    hãy để tôi giải thích những gì đang xảy ra ở
đây
the overall like parent container is a v    tổng thể giống như vùng chứa chính là một
v
stack because we have things vertically    ngăn xếp vì chúng ta có những thứ theo
chiều dọc
stacked on top of each other and then    xếp chồng lên nhau rồi
here in this h stack    ở đây trong ngăn xếp h này
we are going to have the image and then    chúng ta sẽ có hình ảnh và sau đó
all of this stuff over here    tất cả những thứ này ở đây
but this these components here the user    nhưng đây là những thành phần ở đây
người dùng
info and the caption that's its own    thông tin và chú thích đó là của riêng mình
vertical stack so let me just go ahead    ngăn xếp dọc vì vậy hãy để tôi tiếp tục
and add some comments here    và thêm một số ý kiến     ở đây
so we can sort of    vì vậy chúng ta có thể sắp xếp
make this clear so this is going to be    làm cho điều này rõ ràng vì vậy điều này sẽ
được
user info    thông tin người dùng
and tweet    và tweet
caption    đầu đề
and this h stack is going to be    và ngăn xếp h này sẽ là
uh    uh
profile image    hình ảnh hồ sơ cá nhân
plus    thêm
user info    thông tin người dùng


about:blank

    11/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
plus tweet    cộng với tweet
okay    được rồi
so now let's go into this v stack we're    Vì vậy, bây giờ chúng ta hãy đi vào ngăn
xếp v này, chúng ta
going to have a text component it's    nó sẽ có một thành phần văn bản
going to just say bruce wayne    sẽ chỉ nói bruce wayne
and we're going to give it a font of    và chúng tôi sẽ cung cấp cho nó một phông
chữ
let's see dot sub headline and then dot    xem chấm sub tiêu đề rồi chấm
bold and then the    in đậm và sau đó là
foreground color we don't need to change    màu nền trước chúng ta không cần thay đổi
and then we're just going to say we want    và sau đó chúng ta sẽ nói rằng chúng ta
muốn
a text    một văn bản
and that's going to be at    và đó sẽ là lúc
batman    người dơi
oh wait this is actually an h stack    chờ đã, đây thực sự là một ngăn xếp h
sorry guys so    xin lỗi các bạn vì vậy
cut that out and this is going to be in    cắt cái đó ra và cái này sẽ ở trong
an h stack    một ngăn xếp h
and this is the user info    và đây là thông tin người dùng
and then below that is going to be tweet    và sau đó bên dưới sẽ là dòng tweet
caption    đầu đề
so paste that back in there    vì vậy hãy dán lại vào đó
okay so that's looking pretty good then    được rồi vậy là trông khá ổn rồi
on batman you're going to say foreground    trên batman bạn sẽ nói tiền cảnh
color is dot gray    màu sắc là chấm xám
and then the font is dot caption    và sau đó phông chữ là chú thích dấu chấm
and you notice that makes it nice and    và bạn nhận thấy điều đó làm cho nó đẹp và
small there    nhỏ ở đó
and then we are going to have another    và sau đó chúng ta sẽ có một cái khác
text component that is going to say uh    thành phần văn bản sẽ nói uh
just like    giống như
49    49
weeks or like we could say 2w for two    tuần hoặc giống như chúng ta có thể nói 2w
cho hai
weeks    tuần
and then we're just gonna copy and paste    và sau đó chúng ta sẽ sao chép và dán


about:blank

    12/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
these two things    hai điều này
um    ô
to modify    để sửa đổi
our font right there and that looks    phông chữ của chúng tôi ngay tại đó và có
vẻ như
pretty good and then here we're gonna go    khá tốt và sau đó chúng ta sẽ đi
outside of this h stack okay    bên ngoài ngăn xếp h này được
and that's because now    và đó là bởi vì bây giờ
we're we're outside of this horizontal    chúng ta ở ngoài chiều ngang này
horizontally stacked group of components    nhóm các thành phần xếp chồng lên nhau
theo chiều ngang
and now we want to add the tweet caption    và bây giờ chúng tôi muốn thêm chú thích
tweet
so    Vì thế
let me go below my tweet caption comment    hãy để tôi đi bên dưới bình luận chú thích
tweet của tôi
and just say text    và chỉ nói văn bản
i    Tôi
believe    tin tưởng
in harvey dent    trong harvey
and then we're going to say font dot sub    và sau đó chúng ta sẽ nói font dot sub
headline    tiêu đề
dot multi-line text alignment    chấm căn chỉnh văn bản nhiều dòng
is that leading so what this    đó có phải là hàng đầu vậy cái này là gì
line of code is going to do guys is make    dòng mã sẽ làm mọi người đang làm
it so that if our tweet is multiple    nó để nếu tweet của chúng tôi là nhiều
lines    dòng
then it's going to make sure that it    sau đó nó sẽ đảm bảo rằng nó
aligns to the leading edge    thẳng hàng với cạnh hàng đầu
in as opposed to being centered or    trái ngược với việc tập trung hoặc
trailing    dấu vết
okay but we have an issue here we notice    được rồi nhưng chúng tôi có một vấn đề ở
đây chúng tôi nhận thấy
that this does not line up where we want    rằng điều này không xếp hàng ở nơi chúng
tôi muốn
it to    nó để
so on this v stack    vì vậy trên ngăn xếp v này
we're going to go uh and say alignment    chúng ta sẽ đi uh và nói thẳng hàng




about:blank    13/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
is dot leading    đang dẫn đầu
and we're going to give it some spacing    và chúng tôi sẽ cung cấp cho nó một số
khoảng cách
of 4 pixels as well    của 4 pixel là tốt
okay so that looks pretty good guys    được rồi, trông khá ổn đấy các bạn
it's looking just like we have in our    nó trông giống như chúng ta có trong
completed application    Đơn hoàn thành
then we just need this uh    sau đó chúng ta chỉ cần điều này uh
group of buttons down below    nhóm nút bên dưới
okay so    được thôi, nếu vậy
let's go ahead and create that now and    hãy tiếp tục và tạo ra nó ngay bây giờ và
let me just put a comment here for    hãy để tôi chỉ cần đặt một bình luận ở đây
cho
action buttons and we can see here that    các nút hành động và chúng ta có thể thấy
ở đây
this is    đây là
contained within that overall sort of    chứa trong loại tổng thể của
parent v stack so it's going to go below    cha mẹ v stack vì vậy nó sẽ đi bên dưới
all of this stuff right so this is this    tất cả những thứ này đúng vì vậy đây là cái
này
h stack here    h ngăn xếp ở đây
let's see that's our h stack yeah so    hãy xem đó là ngăn xếp h của chúng ta
that would have been a mistake we want    đó sẽ là một sai lầm chúng ta muốn
to make sure we're outside the h stack    để đảm bảo rằng chúng tôi ở bên ngoài
ngăn xếp h
right    Phải
and that we're in the parent v stack so    và rằng chúng tôi đang ở trong ngăn xếp
cha v
that it goes below this stuff so you    rằng nó đi bên dưới những thứ này để bạn
guys would notice if you highlight the h    mọi người sẽ chú ý nếu bạn làm nổi bật h
stack there it's all this and then the v    ngăn xếp ở đó là tất cả những thứ này và
sau đó là v
stack    cây rơm
is going to be something else so    sẽ là một cái gì đó khác vì vậy
we could just go here and say like text    chúng ta chỉ có thể vào đây và nói thích văn
bản
action buttons and we notice that it    các nút hành động và chúng tôi nhận thấy
rằng nó
shows up below all of that stuff which    hiển thị bên dưới tất cả những thứ mà




about:blank    14/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
is great    tuyệt
but okay let's create this uh    nhưng được rồi, hãy tạo cái này uh
group of action buttons now    nhóm các nút hành động bây giờ
so this is going to be you guys might    vì vậy đây sẽ là các bạn có thể
have guessed it an h stack    đã đoán nó là một ngăn xếp h
because it's horizontally stacked as a    bởi vì nó được xếp chồng lên nhau theo
chiều ngang như một
group of buttons    nhóm nút
and we're going to create a button    và chúng ta sẽ tạo một nút
and it's going to be action and label    và nó sẽ là hành động và nhãn
just go ahead and hit enter there    chỉ cần tiếp tục và nhấn enter ở đó
action we're not going to have anything    hành động chúng ta sẽ không có gì
just yet    vừa mới
we can say action goes here    chúng ta có thể nói hành động diễn ra ở đây
and then the label is just going to be a    và sau đó nhãn sẽ chỉ là một
pretty simple button    nút khá đơn giản
so i'm going to say or we can just make    vì vậy tôi sẽ nói hoặc chúng ta có thể làm
it an image actually    nó là một hình ảnh thực sự
it's going to be system name    nó sẽ là tên hệ thống
and the first one is going to be bubble    và cái đầu tiên sẽ là bong bóng
dot left    chấm trái
then we're going to say dot font    sau đó chúng ta sẽ nói phông chữ dấu
chấm
dot sub headline    chấm tiêu đề phụ
dot    dấu chấm
and that should be good    và điều đó sẽ tốt
cool    mát mẻ
and then we're gonna copy and paste this    và sau đó chúng ta sẽ sao chép và dán cái
này
a couple times guys    vài lần nhé mọi người
uh so we should have four buttons right    uh vậy chúng ta nên có bốn nút phải không
and after the first button we're gonna    và sau cái nút đầu tiên, chúng ta sẽ
add a spacer    thêm một miếng đệm
after the next one we're going to add a    sau cái tiếp theo, chúng ta sẽ thêm một
spacer    miếng đệm
after the next one we're going to add a    sau cái tiếp theo, chúng ta sẽ thêm một
spacer    miếng đệm




about:blank    15/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and you guys will notice that that    và các bạn sẽ nhận thấy rằng
equally spaces out all of our buttons so    cách đều nhau ra khỏi tất cả các nút của
chúng tôi để
that looks really good now we just need    trông thực sự tốt bây giờ chúng ta chỉ cần
to change the image names and adjust our    để thay đổi tên hình ảnh và điều chỉnh của
chúng tôi
spacing here    khoảng cách ở đây
so    Vì thế
the second one is going to be    cái thứ hai sẽ là
arrow.2.square path    mũi tên.2.đường dẫn hình vuông
and if you guys are wondering where i'm    và nếu các bạn đang thắc mắc tôi đang ở
đâu
getting these images from it's from this    lấy những hình ảnh này từ nó là từ cái này
app called sf symbols if you just google    ứng dụng được gọi là biểu tượng sf nếu bạn
chỉ google
it you should be able to download it and    nó bạn sẽ có thể tải về nó và
it just gives you an awesome    nó chỉ mang đến cho bạn một điều tuyệt vời
set of icons that you can access through    tập hợp các biểu tượng mà bạn có thể truy
cập thông qua
xcode    xcode
so all these names that you're seeing    vì vậy tất cả những cái tên mà bạn đang
nhìn thấy
here so like if i typed in arrow.2    ở đây giống như nếu tôi gõ vào mũi tên.2
that's where i get this    đó là nơi tôi nhận được điều này
arrow.2.squarepath which is what we see    arrow.2.squarepath đó là những gì chúng ta
thấy
right here as like a retweet button so    ngay tại đây giống như một nút retweet vậy
that's pretty cool definitely recommend    điều đó khá tuyệt, chắc chắn khuyên bạn
nên
getting that app it's super helpful    nhận được ứng dụng đó, nó rất hữu ích
anyway let's keep going    dù sao chúng ta hãy tiếp tục đi
the next one is going to be heart    cái tiếp theo sẽ là trái tim
and the next one is going to be    và cái tiếp theo sẽ là
a bookmark    một dấu trang
awesome    tuyệt vời
okay so now we're just going to want to    được rồi, bây giờ chúng ta sẽ chỉ muốn
give this uh let's see this v stack i    đưa cái này uh chúng ta hãy xem cái v stack
này
believe    tin tưởng




about:blank    16/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so i'm actually going to fold this up    vì vậy tôi thực sự sẽ gấp cái này lại
guys because it's pretty    mọi người vì nó đẹp
uh it's a lot of code    uh nó rất nhiều mã
so just go you can double click on this    vì vậy chỉ cần đi, bạn có thể nhấp đúp chuột
vào đây
h stack    ngăn xếp h
and command click on that last bracket    và lệnh nhấp vào dấu ngoặc cuối cùng đó
and just hit fold and it'll fold it up    và chỉ cần nhấn gấp và nó sẽ gấp lại
nicely there so that your codes a little    độc đáo ở đó để mã của bạn một chút
bit more readable    dễ đọc hơn một chút
and on this v stack let's see i just    và trên ngăn xếp v này, hãy xem tôi chỉ
want to add some padding    muốn thêm một số phần đệm
and that looks pretty good    và điều đó có vẻ khá tốt
we do want more space there though    mặc dù chúng tôi muốn có nhiều không gian
hơn ở đó
so let's add some padding on this h    vì vậy hãy thêm một số phần đệm vào h này
stack    cây rơm
right that looks way better and then we    đúng là có vẻ tốt hơn và sau đó chúng tôi
want this guy right here to be aligned    muốn anh chàng này ngay tại đây được liên
kết
to the left    Qua bên trái
so on my v stack my parent v stack here    vì vậy trên ngăn xếp v của tôi, ngăn xếp v
của cha mẹ tôi ở đây
um let's see if we can just go up to the    ừm, hãy xem liệu chúng ta có thể đi lên
top and make the alignment.leading    top và căn chỉnh.leading
and awesome that looks great so    và tuyệt vời trông thật tuyệt
this is uh pretty much it for our tweet    uh đây là khá nhiều cho tweet của chúng tôi
cell guys so now we should be able to go    các bạn di động vì vậy bây giờ chúng ta sẽ
có thể đi
back to our feed view    quay lại chế độ xem nguồn cấp dữ liệu của
chúng tôi
and drop this tweet cell into or sorry    và thả ô tweet này vào hoặc xin lỗi
tweet row view    chế độ xem hàng tweet
into    vào trong
our feed and then hit resume    nguồn cấp dữ liệu của chúng tôi và sau đó
nhấn tiếp tục
and let's see how that looks    và hãy xem nó trông như thế nào
uh sometimes you gotta hit resume a    uh đôi khi bạn phải nhấn tiếp tục một
couple times okay so that's looking    vài lần được rồi vì vậy đó là tìm kiếm


about:blank

    17/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
pretty pretty pretty good uh we just    khá khá khá tốt uh chúng tôi chỉ
need a divider back in that view so    cần một dải phân cách trở lại trong chế độ
xem đó
let's go ahead and add that back in our    hãy tiếp tục và thêm nó trở lại vào
tweet row view    chế độ xem hàng tweet
um at the bottom    ừm ở phía dưới
of your v stack just go here and say    ngăn xếp v của bạn chỉ cần vào đây và nói
divider    dải phân cách
and nice that has a divider showing up    và thật tuyệt khi có một dải phân cách hiển
thị
um something about dividers that i don't    ừm có điều gì đó về dải phân cách mà tôi
không biết
like is that    giống như vậy
like    giống
they um    họ ừm
get cut off like with the padding    bị cắt như với phần đệm
so let's see if we take that padding off    vì vậy hãy xem liệu chúng ta có bỏ phần
đệm đó ra không
yeah that looks a little better so we're    vâng, điều đó có vẻ tốt hơn một chút vì vậy
chúng tôi
gonna take the padding off of    sẽ lấy phần đệm ra
the the end there and just add our    kết thúc ở đó và chỉ cần thêm của chúng tôi
divider and back in our feed view    bộ chia và quay lại chế độ xem nguồn cấp
dữ liệu của chúng tôi
we can go here and say dot padding and i    chúng ta có thể vào đây và nói dấu chấm
đệm và tôi
think that should    nghĩ rằng nên
fix our problem    khắc phục sự cố của chúng tôi
so resume it one more time    vì vậy hãy tiếp tục nó một lần nữa
okay it does the same thing    được rồi nó làm điều tương tự
which isn't the worst thing in the world    đó không phải là điều tồi tệ nhất trên thế
giới
right it doesn't look terrible    đúng là nó không có vẻ khủng khiếp
if it's really bothersome we can come    nếu nó thực sự khó chịu chúng ta có thể
đến
back and fix that but this is looking    quay lại và sửa lỗi đó nhưng điều này đang
tìm kiếm
pretty good guys so let's actually go    các bạn khá tốt vì vậy chúng ta hãy thực sự
đi
ahead and run this    trước và chạy cái này


about:blank

    18/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and see what it's looking like on the    và xem nó trông như thế nào trên
simulator    giả lập
build succeeded so we're looking good    xây dựng thành công vì vậy chúng tôi đang
tìm kiếm tốt
and    Và
after this if this is looking good oh we    sau này nếu điều này đang tìm kiếm tốt oh
chúng tôi
actually need to drop our feed view in    thực sự cần bỏ chế độ xem nguồn cấp dữ
liệu của chúng tôi trong
to the content view    đến chế độ xem nội dung
so let's go to our twitter swift ui    Vì vậy, hãy truy cập twitter nhanh chóng của
chúng tôi ui
youtube app file right right this is    tập tin ứng dụng youtube đúng rồi đây là
where uh the app actually launches    ứng dụng thực sự khởi chạy ở đâu
replace content view with feed view    thay thế chế độ xem nội dung bằng chế độ
xem nguồn cấp dữ liệu
and we're going to build our tab view    và chúng tôi sẽ xây dựng chế độ xem tab
của chúng tôi
after this guys okay so this is looking    sau những người này được rồi vì vậy đây là
tìm kiếm
awesome right    đúng tuyệt vời
we have this nice scrollable list of    chúng tôi có danh sách có thể cuộn đẹp này
tweets we don't have it populated with    tweet chúng tôi không có nó phổ biến với
actual data yet and something i noticed    dữ liệu thực tế chưa và một cái gì đó tôi
nhận thấy
is we actually want these buttons to be    là chúng tôi thực sự muốn các nút này được
gray so let's go back to our tweets view    màu xám, vì vậy hãy quay lại chế độ xem
tweet của chúng tôi
or tweet row view    hoặc chế độ xem hàng tweet
let's re-expand this guy or sorry    hãy mở rộng lại anh chàng này hoặc xin lỗi
whoa where did my    ai đã làm của tôi ở đâu
okay    được rồi
so    Vì thế
here we're just going to add a    ở đây chúng ta sẽ chỉ thêm một
foreground color    màu nền
of dot gray    chấm xám
and then we can fold it back up    và sau đó chúng ta có thể gấp nó lại
oops that was the z stack    rất tiếc đó là ngăn xếp z
so foreground color is dot gray    vì vậy màu nền trước là chấm xám




about:blank    19/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and let's fold it back up    và hãy gấp nó lại
and delete that padding comment    và xóa bình luận đệm đó
run it one more time    chạy nó một lần nữa
and that's looking really really good    và điều đó trông thực sự rất tốt
guys    các bạn
so    Vì thế
next thing i want to do is actually get    điều tiếp theo tôi muốn làm là thực sự có
được
um this tab view showing up    ừm, chế độ xem tab này đang hiển thị
so that this is like a lot more like the    để điều này giống như nhiều hơn nữa giống
như
main twitter interface that you're going    giao diện twitter chính mà bạn đang sử
dụng
to see where you have this tab component    để xem nơi bạn có thành phần tab này
down at the bottom that allows you to    xuống ở phía dưới cho phép bạn
navigate between different views so    điều hướng giữa các chế độ xem khác nhau
để
that's what we're going to be doing next    đó là những gì chúng ta sẽ làm tiếp theo
all right guys so let's create another    được rồi các bạn, vậy hãy tạo một cái khác
folder inside of our core folder so i'm    thư mục bên trong thư mục cốt lõi của
chúng tôi vì vậy tôi
just going to right click hit new group    chỉ cần nhấp chuột phải vào nhóm mới
and then i'm going to call this    và sau đó tôi sẽ gọi cái này
main tab    tab chính
and i'm going to put the components    và tôi sẽ đặt các thành phần
folder above that and inside main tab    thư mục phía trên đó và bên trong tab chính
we're going to create a new swift ui    chúng ta sẽ tạo một Swift ui mới
view    xem
and that is going to be called main tab    và đó sẽ được gọi là tab chính
view    xem
and this is where we're going to create    và đây là nơi chúng ta sẽ tạo
our main tab so let's just go ahead and    tab chính của chúng tôi, vì vậy hãy tiếp tục
và
get right into it we're going to replace    đi thẳng vào nó, chúng ta sẽ thay thế
text with a tab view    văn bản với chế độ xem tab
and we're going to select this option    và chúng tôi sẽ chọn tùy chọn này
that has a selection component or input    có một thành phần lựa chọn hoặc đầu vào
parameter    tham số




about:blank    20/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and this is going to help us keep track    và điều này sẽ giúp chúng tôi theo dõi
of our selected tab index so for example    của chỉ mục tab đã chọn của chúng tôi
chẳng hạn
if i if i select home    nếu tôi nếu tôi chọn nhà
my selected tab index is the home tab or    chỉ mục tab đã chọn của tôi là tab trang chủ
hoặc
the first tab    tab đầu tiên
if i select my notifications tab    nếu tôi chọn tab thông báo của mình
then that is going to be my new    thì đó sẽ là cái mới của tôi
selective tab so we're going to have to    tab chọn lọc vì vậy chúng ta sẽ phải
create a state property to keep track of    tạo một tài sản nhà nước để theo dõi
that selected index so we're going to    chỉ mục đã chọn đó, vì vậy chúng tôi sẽ
say at state    nói ở trạng thái
private var selected index which is an    private var đã chọn chỉ mục đó là một
integer    số nguyên
equals zero and we actually don't need    bằng không và chúng tôi thực sự không cần
to cast it we can just say equals zero    để truyền nó, chúng ta chỉ có thể nói bằng
không
and we're going to pass in that dollar    và chúng ta sẽ chuyển số đô la đó
sign selected index here and then hit    ký chỉ mục đã chọn ở đây và sau đó nhấn
enter on the content    nhập vào nội dung
and the first thing we're going to    và điều đầu tiên chúng ta sẽ làm
create is our feed view    tạo là chế độ xem nguồn cấp dữ liệu của
chúng tôi
and then we're going to say dot on tap    và sau đó chúng ta sẽ nói dot on tap
gesture    cử chỉ
perform    trình diễn
self dot selected index equals zero    tự chấm chỉ số đã chọn bằng không
and then we're going to give it a dot    và sau đó chúng ta sẽ cho nó một dấu chấm
tab item    mục tab
and the label is just going to be an    và nhãn sẽ chỉ là một
image with system name which is house    hình ảnh với tên hệ thống là nhà
and then we're going to give it a tag of    và sau đó chúng tôi sẽ cho nó một thẻ
0 as well    0 cũng vậy
and then we can just copy and paste this    và sau đó chúng ta chỉ cần sao chép và dán
cái này
a couple times guys    vài lần nhé mọi người
and we're just going to change the index    và chúng ta sẽ thay đổi chỉ số




about:blank



    21/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
property so it's going to be    tài sản vì vậy nó sẽ là
self.selected self.selectedindexes1 tag    thẻ self.selected self.sselectedindexes1
is one    là một
two    hai
two    hai
three    ba
three    ba
and let's just go ahead and create our    và chúng ta hãy tiếp tục và tạo ra
other uh tab views so right now we're    các lượt xem tab uh khác vì vậy ngay bây
giờ chúng tôi
just reusing the feed view a bunch of    chỉ sử dụng lại chế độ xem nguồn cấp dữ
liệu
times we don't really want to do that we    lần chúng tôi không thực sự muốn làm điều
đó chúng tôi
want to create our other views so    muốn tạo các chế độ xem khác của chúng
tôi vì vậy
let's hop up into our core folder and    hãy nhảy vào thư mục cốt lõi của chúng tôi
và
create some new folders for that so    tạo một số thư mục mới cho điều đó
we're going to do command shift n    chúng ta sẽ thực hiện lệnh shift n
command shift n command shift n    lệnh shift n lệnh shift n
and get your components folder above all    và lấy thư mục thành phần của bạn trên tất
cả
that    cái đó
okay so this first group is going to be    được rồi, nhóm đầu tiên này sẽ là
called uh we can call this explore    được gọi là uh chúng ta có thể gọi đây là
khám phá
this next one is going to be called    cái tiếp theo này sẽ được gọi là
notifications    thông báo
and this next one    và cái tiếp theo này
is going to be called uh messages    sẽ được gọi là tin nhắn uh
and let's actually just go ahead and    và chúng ta hãy thực sự tiếp tục và
make one more guys and we're going to    kiếm thêm một người nữa và chúng ta sẽ
call it profile    gọi nó là hồ sơ
so let me get that above there    vì vậy hãy để tôi lấy nó ở trên đó
and that looks pretty good    và điều đó có vẻ khá tốt
so    Vì thế
um    ô
inside of these guys uh we're the    bên trong những kẻ này uh chúng ta là


about:blank

    22/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
profile is not going to be a tab    hồ sơ sẽ không phải là một tab
we're going to get to the profile a    chúng ta sẽ đến hồ sơ a
different way we're just going to have    theo cách khác chúng ta sẽ có
these four so let's go to explore    bốn điều này vì vậy chúng ta hãy đi khám
phá
and we're going to create a new file    và chúng ta sẽ tạo một tệp mới
it's going to be a swift ui view and    nó sẽ là một giao diện người dùng nhanh
chóng và
we're going to call this explorer view    chúng ta sẽ gọi đây là chế độ xem thám
hiểm
and we can replace this text with like    và chúng ta có thể thay thế văn bản này
bằng like
uh    uh
explore view    khám phá xem
and let's do the same thing in    và hãy làm điều tương tự trong
notification so    thông báo như vậy
swift ui view    giao diện người dùng nhanh
notifications view    xem thông báo
replace this with    thay thế cái này bằng
notifications    thông báo
and then our messages guy we're going to    và sau đó anh chàng tin nhắn của chúng tôi,
chúng tôi sẽ
create a new view for that as well swift    tạo một chế độ xem mới cho điều đó cũng
nhanh chóng
ui view    giao diện người dùng
messages view    tin nhắn xem
we're going to call this messages    chúng ta sẽ gọi đây là tin nhắn
now let's go back to our main tab folder    bây giờ hãy quay lại thư mục tab chính của
chúng tôi
and we're going to replace this with    và chúng ta sẽ thay thế cái này bằng
explorer view    chế độ xem thám hiểm
we're going to replace this with    chúng ta sẽ thay thế cái này bằng
notifications view    xem thông báo
and we're going to replace this last guy    và chúng ta sẽ thay thế người cuối cùng này
with messages view    với chế độ xem tin nhắn
so let's go ahead and hit resume    vì vậy hãy tiếp tục và nhấn tiếp tục
just to see if our tab    chỉ để xem nếu tab của chúng tôi
view is showing up    chế độ xem đang hiển thị
the way we want it to    theo cách chúng ta muốn


about:blank

    23/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and that should be it okay so that's    và điều đó sẽ ổn thôi vì vậy đó là
looking really good we just need to    trông thực sự tốt, chúng ta chỉ cần
adjust our images so this one is going    điều chỉnh hình ảnh của chúng tôi để hình
ảnh này sẽ diễn ra
to be for the explorer it's going to be    dành cho nhà thám hiểm nó sẽ là
a magnifying glass    kính lúp
this guy is going to be a bell and this    anh chàng này sẽ là một cái chuông và cái
này
guy is going to be an envelope    chàng trai sẽ trở thành một phong bì
so that's it um you guys notice that    vậy là xong ừm các bạn để ý đó
it's pretty easy to create your tab view    thật dễ dàng để tạo chế độ xem tab của bạn
there um and let's go ahead and hit play    có um và chúng ta hãy tiếp tục và nhấn play
on the simulator and let's select a new    trên trình giả lập và hãy chọn một cái mới
tab and we can see that it's linked to a    tab và chúng ta có thể thấy rằng nó được
liên kết với một
different view    góc nhìn khác
so that's looking really really good    vì vậy điều đó trông thực sự rất tốt
guys    các bạn
um    ô
once again    một lần nữa
that selection happens based on when we    sự lựa chọn đó xảy ra dựa trên thời điểm
chúng ta
change this selected index property so    thay đổi thuộc tính chỉ mục đã chọn này để
it's a state property so when our when    đó là tài sản của nhà nước vì vậy khi chúng
tôi
that property changes it reconfigures    thuộc tính đó thay đổi nó cấu hình lại
our view with the updated state and that    quan điểm của chúng tôi với trạng thái được
cập nhật và điều đó
updated state is going to be a new index    trạng thái được cập nhật sẽ là một chỉ mục
mới
so when i select the search item    vì vậy khi tôi chọn mục tìm kiếm
selected index is now going to be    chỉ mục đã chọn bây giờ sẽ là
changed to one and then it's going to go    thay đổi thành một và sau đó nó sẽ đi
okay hey explore view is the in is the    được rồi, khám phá chế độ xem là trong là
view that you have linked to index one    chế độ xem mà bạn đã liên kết với chỉ mục
một
and then if i select notifications the    và sau đó nếu tôi chọn thông báo
selected index property is now two and    thuộc tính chỉ mục đã chọn hiện là hai và




about:blank    24/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
then it's like okay in your tab view    sau đó mọi thứ sẽ ổn trong chế độ xem tab
của bạn
what view is linked to the index of two    chế độ xem nào được liên kết với chỉ mục
của hai
and then it says hey that's your    và sau đó nó nói này, đó là của bạn
notifications view that's why we see    chế độ xem thông báo đó là lý do tại sao
chúng tôi thấy
notifications popping up there so the    thông báo bật lên ở đó để
last thing for us to do    điều cuối cùng để chúng ta làm
in uh this chapter    trong chương này
is to go ahead and make the    là đi trước và làm cho
main view of our app this main tab view    chế độ xem chính của ứng dụng của chúng
tôi, chế độ xem tab chính này
so so let's just go ahead and replace    Vì vậy, hãy tiếp tục và thay thế
this with main tab view    cái này với chế độ xem tab chính
and run the application to make sure    và chạy ứng dụng để đảm bảo
that it's looking good on our simulator    rằng nó trông đẹp trên trình mô phỏng của
chúng tôi
and we can see here that this is looking    và chúng ta có thể thấy ở đây rằng điều này
đang tìm kiếm
great so that's going to wrap it up for    tuyệt vời vì vậy sẽ kết thúc nó cho
this    cái này
section of the course guys in the next    phần tiếp theo của khóa học
one we are going to    một trong những chúng ta sẽ
go ahead and um get started with    tiếp tục và um bắt đầu với
building out the profile so get excited    xây dựng hồ sơ rất phấn khích
for that    vì điều đó
all right guys so this is the profile    được rồi các bạn, đây là hồ sơ
view that we see in front of us here    quan điểm mà chúng ta thấy trước mặt
chúng ta ở đây
it's pretty much an exact replica of the    nó gần như là một bản sao chính xác của
actual twitter application we're going    ứng dụng twitter thực tế chúng ta sẽ
to start building this now so let's go    để bắt đầu xây dựng cái này ngay bây giờ vì
vậy hãy bắt đầu
ahead and jump right into it hop up to    phía trước và nhảy ngay vào nó nhảy lên tới
this profile folder that's within our    thư mục hồ sơ này nằm trong chúng tôi
core folder and let's actually go ahead    thư mục lõi và hãy thực sự tiếp tục
and create two folders in here guys    và tạo hai thư mục ở đây nhé các bạn
we're going to create one for view    chúng ta sẽ tạo một cái để xem




about:blank



    25/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
models    người mẫu
and one for    và một cho
views    lượt xem
so within the views folder we're going    vì vậy trong thư mục lượt xem, chúng ta sẽ
to create a swift ui view and it's going    để tạo chế độ xem giao diện người dùng
nhanh chóng và nó sẽ hoạt động
to be called profile view    được gọi là xem hồ sơ
and let's go ahead and start building it    và hãy tiếp tục và bắt đầu xây dựng nó
now first let's make sure our preview is    bây giờ, trước tiên hãy đảm bảo rằng bản
xem trước của chúng tôi là
connected    kết nối
and it's looking good so we see here    và nó có vẻ tốt nên chúng tôi thấy ở đây
guys that we're going to have just one    các bạn rằng chúng ta sẽ chỉ có một
big v stack okay it's a bunch of    ngăn xếp v lớn được rồi, đó là một loạt
vertically stacked components    thành phần xếp chồng lên nhau theo chiều
dọc
so we're going to make the parent    vì vậy chúng tôi sẽ làm cho cha mẹ
container i like to call it a v stack    container tôi muốn gọi nó là ngăn xếp v
and the first thing that we're going to    và điều đầu tiên mà chúng ta sẽ làm
have in this v stack is something called    có trong ngăn xếp v này là một thứ gọi là
a z stack    một ngăn xếp z
so we have this background and on that    vì vậy chúng tôi có nền này và trên đó
background we have some things on top of    nền tảng chúng tôi có một số thứ trên đầu
trang
it so whenever you have things stacked    nó vì vậy bất cứ khi nào bạn có những thứ
xếp chồng lên nhau
on top of each other you use a z stack    chồng lên nhau, bạn sử dụng ngăn xếp z
for that so let's go ahead and create    vì điều đó, hãy tiếp tục và tạo ra
this z stack    ngăn xếp z này
we're going to say the alignment is dot    chúng ta sẽ nói căn chỉnh là dấu chấm
bottom    đáy
leading    hàng đầu
and here's our content we'll see where    và đây là nội dung của chúng tôi, chúng tôi
sẽ thấy nơi
this comes into play in a little bit    điều này đi vào chơi trong một chút
okay    được rồi
so we're going to say color    vì vậy chúng ta sẽ nói màu sắc
dot system blue and then we're going to    hệ thống chấm màu xanh lam và sau đó
chúng ta sẽ


about:blank

    26/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
say dot ignores safe area    nói dấu chấm bỏ qua khu vực an toàn
so    Vì thế
that's going to make this whole    điều đó sẽ làm cho toàn bộ điều này
background blue we don't exactly want    nền màu xanh chúng tôi không thực sự
muốn
that right so we're going to give our z    đúng vậy vì vậy chúng tôi sẽ cung cấp cho z
của chúng tôi
stack a frame    xếp một khung
so we're going to say frame we don't    vì vậy chúng tôi sẽ nói khung chúng tôi
không
need to give it a width    cần phải cung cấp cho nó một chiều rộng
and the height is just going to be i    và chiều cao sẽ là tôi
think it's like let me check    nghĩ rằng nó giống như để tôi kiểm tra
um    ô
oops    Ối
our height let's make it like 88    chiều cao của chúng ta hãy làm cho nó
giống như 88
and we don't need the alignment    và chúng ta không cần căn chỉnh
okay so you notice that it's all the way    được rồi để bạn nhận thấy rằng đó là tất cả
các cách
down at the bottom here let's actually    ở dưới cùng ở đây chúng ta hãy thực sự
make it like 96 or something    làm cho nó giống như 96 hoặc một cái gì đó
um so    ừm vậy
within this v stack just go ahead and    trong ngăn xếp v này, hãy tiếp tục và
add a spacer guys    thêm miếng đệm nhé mọi người
and you guys can see that it pushes that    và các bạn có thể thấy rằng nó đẩy điều đó
up to the top and that's looking pretty    lên đến đỉnh và trông thật đẹp
good so that's like the background image    tốt vì vậy nó giống như hình nền
of the twitter profile    của hồ sơ twitter
okay so within this z stack we're going    được rồi, trong ngăn xếp z này, chúng ta sẽ
to have a circle we're going to replace    để có một vòng tròn chúng ta sẽ thay thế
this with an image later    cái này với một hình ảnh sau
and    Và
we're going to say dot frame    chúng ta sẽ nói khung chấm
width and height of let's see    chiều rộng và chiều cao của hãy xem
uh 72 by 72    uh 72 x 72
and you guys notice that it gets shoved    và các bạn chú ý rằng nó bị đẩy
over to the bottom leading edge and    qua cạnh dưới cùng và




about:blank



    27/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
that's because of how we set our z stack    đó là do cách chúng tôi thiết lập ngăn xếp z
của mình
up so for example i could say dot top    up nên ví dụ tôi có thể nói dot top
trailing and it would put that guy over    dấu vết và nó sẽ đưa anh chàng đó qua
here right so we want that on the bottom    ở ngay đây vì vậy chúng tôi muốn điều đó ở
phía dưới
leading edge    cạnh hàng đầu
and that image is going to have some    và hình ảnh đó sẽ có một số
offset or    bù đắp hoặc
the circle rather so we're going to say    vòng tròn thay vì vậy chúng ta sẽ nói
offset and we're going to give it 16 by    bù đắp và chúng tôi sẽ cung cấp cho nó 16
bởi
12 of an offset    12 của một bù đắp
um    ô
so that looks pretty good let's actually    Vì vậy, điều đó có vẻ khá tốt, hãy thực sự
make this offset like 24 and that's how    thực hiện phần bù này như 24 và đó là cách
we can sort of get this profile image to    chúng ta có thể lấy hình ảnh hồ sơ này để
be halfway in the background and halfway    được một nửa trong nền và một nửa
in the rest of the view right there so    trong phần còn lại của chế độ xem ngay tại
đó
that looks pretty good    trông khá tốt
um you guys notice we have this back    ừm các bạn để ý chúng tôi có cái này trở lại
button though    nút mặc dù
so we're actually going to wrap this    vì vậy chúng tôi thực sự sẽ bọc cái này
circle within a v stack so command click    khoanh tròn trong ngăn xếp v để nhấp vào
lệnh
on that say embed in v stack    trên đó nói nhúng vào ngăn xếp v
and we're going to have a button here    và chúng ta sẽ có một nút ở đây
action label    nhãn hành động
and our label is going to be an image    và nhãn của chúng tôi sẽ là một hình ảnh
with system name arrow dot left    với tên hệ thống dấu chấm mũi tên bên trái
it's going to be dot resizable dot frame    nó sẽ là khung chấm có thể thay đổi kích
thước
width 20    chiều rộng 20
by 16    bởi 16
no alignment    không căn chỉnh
dot foreground color    chấm màu nền trước
dot white    chấm trắng




about:blank    28/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot offset and then we're gonna say 16    dấu chấm bù và sau đó chúng ta sẽ nói 16
by 12.    bởi 12.
and you guys will notice that that puts    và các bạn sẽ nhận thấy rằng điều đó đặt
that arrow right there for us so that    mũi tên đó ngay tại đó cho chúng tôi để
looks pretty good and that's just our    trông khá tốt và đó chỉ là của chúng tôi
back button right there um    nút quay lại ngay đó um
so you guys can see here that we can    vì vậy các bạn có thể thấy ở đây chúng ta
có thể
just get go back to you know whatever    chỉ cần quay trở lại với bạn biết bất cứ điều
gì
view we came from    xem chúng tôi đến từ
so that looks pretty good right    vì vậy có vẻ khá tốt phải không
all right so    được rồi
um    ô
let's go ahead and continue guys so that    hãy tiếp tục và tiếp tục các bạn để
this is our header    đây là tiêu đề của chúng tôi
so i'm actually going to extract this    vì vậy tôi thực sự sẽ giải nén cái này
view here    xem ở đây
so i'm going to go down below and create    vì vậy tôi sẽ đi xuống bên dưới và tạo
an extension    một phần mở rộng
for profile view    để xem hồ sơ
and i'm going to say var header view    và tôi sẽ nói chế độ xem tiêu đề var
sum view    xem tổng
and then i'm going to just take this z    và sau đó tôi sẽ lấy cái z này
stack and put it in there    ngăn xếp và đặt nó ở đó
so cut it put it there and then we're    vì vậy hãy cắt nó đặt nó ở đó và sau đó
chúng tôi
just going to replace that with our    chỉ cần thay thế nó bằng của chúng tôi
header view component and the reason we    thành phần xem tiêu đề và lý do chúng tôi
do this guys    làm điều này các bạn
is because    là vì
uh this view contains a lot of different    uh chế độ xem này chứa rất nhiều thứ khác
nhau
components and you don't want this like    các thành phần và bạn không muốn điều
này giống như
main sort of body to get too crowded    loại cơ thể chính để trở nên quá đông đúc
um so i like to whenever that's    ừm vì vậy tôi thích bất cứ khi nào đó là
happening just create an extension here    xảy ra chỉ cần tạo một phần mở rộng ở đây




about:blank



    29/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and extract some of those components to    và trích xuất một số thành phần đó để
like variables    giống như các biến
and just to keep the the main body nice    và chỉ để giữ cho thân chính đẹp
and clean    và sạch sẽ
okay so that looks good so far    được rồi vì vậy có vẻ tốt cho đến nay
next we're going to build these action    tiếp theo chúng ta sẽ xây dựng những hành
động này
buttons    nút
so    Vì thế
those are going to be an h stack    chúng sẽ là một ngăn xếp h
and in order to get it all the way to    và để có được nó tất cả các cách để
the right of the screen we're just going    bên phải màn hình chúng ta sẽ đi
to add a spacer here from the get go    để thêm một miếng đệm ở đây ngay từ đầu
we're going to say image system name    chúng ta sẽ nói tên hệ thống hình ảnh
bell.badge and then we're going to give    bell.badge và sau đó chúng tôi sẽ đưa ra
it a font of title 3.    nó là một phông chữ của tiêu đề 3.
we're going to say dot padding is 6    chúng ta sẽ nói phần đệm dấu chấm là 6
and then we're going to give it an    và sau đó chúng tôi sẽ cung cấp cho nó một
overlay of a circle    lớp phủ của một vòng tròn
dot stroke which is color dot gray and    nét chấm có màu chấm xám và
then comma line with    sau đó dấu phẩy với
0.75    0,75
so let's just go ahead and hit resume    vì vậy hãy tiếp tục và nhấn tiếp tục
and that's going to give us this nice    và điều đó sẽ mang lại cho chúng ta điều tốt
đẹp này
notification bell image right there so    hình chuông thông báo ngay đó
that's looking pretty good now we just    điều đó trông khá tốt bây giờ chúng tôi chỉ
need to add this uh other button here    cần thêm nút uh other này vào đây
so within our h stack we're gonna add    vì vậy trong ngăn xếp h của chúng tôi,
chúng tôi sẽ thêm
another button or just    một nút khác hoặc chỉ
the first one was an image    cái đầu tiên là một hình ảnh
we're not actually going to be doing    chúng ta sẽ không thực sự làm
anything with this    bất cứ điều gì với điều này
this next one is going to be a tappable    cái tiếp theo này sẽ có thể gõ được
button in this course so we're going to    nút trong khóa học này vì vậy chúng tôi sẽ
say    nói




about:blank    30/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot    dấu chấm
button which is action and label    nút đó là hành động và nhãn
and    Và
leave the action blank for now then    để trống hành động bây giờ sau đó
we're just going to go here and say text    chúng ta sẽ đi đến đây và nói văn bản
edit profile    chỉnh sửa hồ sơ
dot font dot sub headline    chấm phông chữ chấm tiêu đề phụ
and then we're going to make it bold    và sau đó chúng ta sẽ làm cho nó đậm
and you guys can see here that our edit    và các bạn có thể thấy ở đây chỉnh sửa của
chúng tôi
profile button is starting to show up we    nút hồ sơ đang bắt đầu hiển thị, chúng tôi
just need to get the uh    chỉ cần nhận được uh
like the modifiers right to get the    giống như công cụ sửa đổi quyền để có
được
shape okay so we're going to say dot    hình dạng ổn vì vậy chúng ta sẽ nói dấu
chấm
frame width is 120    chiều rộng khung là 120
height is going to be 32    chiều cao sẽ là 32
and then we're going to give it a    và sau đó chúng tôi sẽ cung cấp cho nó một
background i don't think we need to give    bối cảnh tôi không nghĩ chúng ta cần phải
đưa ra
it a background actually we're going to    nó là một nền tảng thực sự chúng ta sẽ
say dot overlay    nói lớp phủ dấu chấm
and this is going to be a rounded    và đây sẽ là một vòng tròn
rectangle    hình chữ nhật
and we want to open it up    và chúng tôi muốn mở nó ra
and give it a    và cho nó một
corner radius of 20    bán kính góc 20
and then we're going to give it a stroke    và sau đó chúng tôi sẽ cho nó một đột quỵ
of color.gray    màu sắc. màu xám
lined with    thẳng đường với
0.75    0,75
okay so that's looking pretty good and    được rồi, điều đó trông khá tốt và
then we just need to give it a    sau đó chúng ta chỉ cần cung cấp cho nó
một
foreground color of dot black    màu nền trước của chấm đen
okay so that's looking pretty good right    được rồi vì vậy điều đó trông khá tốt phải
không




about:blank    31/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
there guys    có các bạn
um we just need to give it some padding    ừm, chúng ta chỉ cần cho nó một chút đệm
and give this h stack some spacing right    và cung cấp cho ngăn xếp h này một số
khoảng cách ngay
so    Vì thế
up at the top go ahead and give your h    lên đầu hãy tiếp tục và cho h của bạn
stack some spacing make it like 12 and    xếp chồng một số khoảng cách làm cho nó
giống như 12 và
that just gives some more space between    điều đó chỉ mang lại thêm không gian giữa
these buttons and then    các nút này và sau đó
on this guy you can say    về anh chàng này bạn có thể nói
uh    uh
dot padding is dot trailing    đệm dấu chấm là dấu chấm
and that'll just give it some padding on    và điều đó sẽ chỉ cung cấp cho nó một số
phần đệm trên
that trailing edge right there so this    cạnh sau đó ngay tại đó nên cái này
is starting to come together pretty    đang bắt đầu đến với nhau khá đẹp
nicely    độc đáo
once again let's extract this view    một lần nữa hãy trích xuất chế độ xem này
component so let's just cut it    thành phần vì vậy chúng ta hãy cắt nó
and below our header view    và bên dưới chế độ xem tiêu đề của chúng
tôi
variable we're going to make a variable    biến chúng ta sẽ tạo một biến
called action buttons    được gọi là các nút hành động
some view and just paste that stuff in    một số chế độ xem và chỉ cần dán nội dung
đó vào
there    ở đó
and then here we're going to just say    và sau đó ở đây chúng ta sẽ chỉ nói
action buttons    nút hành động
cool    mát mẻ
okay so the next thing we need is this    được rồi, điều tiếp theo chúng ta cần là cái
này
like user info view right    thích xem thông tin người dùng ngay
so it's gonna be the user's username    vì vậy nó sẽ là tên người dùng của người
dùng
or sorry their full name their username    hoặc xin lỗi tên đầy đủ của họ tên người
dùng của họ
and their bio    và sinh học của họ
so    Vì thế




about:blank



    32/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
let's go here    chúng ta hãy đi đây
and create a v stack for that    và tạo một ngăn xếp v cho điều đó
um first of all hit resume    ừm trước hết hãy nhấn vào sơ yếu lý lịch
and okay so our preview is still looking    và được rồi, bản xem trước của chúng tôi
vẫn đang tìm kiếm
good    Tốt
and this v stack is going to have an    và ngăn xếp v này sẽ có một
alignment guys    kẻ thẳng hàng
of dot leading    của dấu chấm hàng đầu
the spacing is going to be 4 and then    khoảng cách sẽ là 4 và sau đó
just hit enter on the content oops    chỉ cần nhấn enter vào nội dung rất tiếc
let me just delete that content guy    để tôi xóa thằng nội dung đó đi
actually okay    thực sự ổn
all right so now let's add our text it's    được rồi, bây giờ hãy thêm văn bản của
chúng ta
going to say heath ledger    sẽ nói sổ cái sức khỏe
and okay so we see that it's showing up    và được rồi, vì vậy chúng tôi thấy rằng nó
đang hiển thị
right there so let's actually go to the    ngay tại đó, vì vậy chúng ta hãy thực sự đi
đến
parent v stack    ngăn xếp cha mẹ v
and make the alignment    và thực hiện căn chỉnh
dot leading there as well    dấu chấm dẫn đến đó là tốt
and we'll notice that it gets shoved all    và chúng tôi sẽ nhận thấy rằng nó bị đẩy tất
cả
the way over to the left which is great    con đường bên trái thật tuyệt
so let's actually wrap this text in an h    vì vậy chúng ta hãy thực sự bọc văn bản
này trong một h
stack because we want to be able to have    ngăn xếp vì chúng tôi muốn có thể có
this nice like verified badge there as    điều này tốt đẹp như huy hiệu đã được xác
minh ở đó như
well so command click on the text    cũng vậy lệnh bấm vào văn bản
properties say embed in h stack    thuộc tính nói nhúng trong ngăn xếp h
and then we're going to first give this    và sau đó trước tiên chúng ta sẽ đưa cái
này
a font of title 2 dot bold    một phông chữ của tiêu đề đậm 2 chấm
and then we're going to say image system    và sau đó chúng ta sẽ nói hệ thống hình ảnh
name    tên
check mark dot seal dot fill    dấu kiểm dấu chấm dấu chấm điền




about:blank



    33/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot font    phông chữ chấm
or sorry about foreground color    hoặc xin lỗi về màu nền trước
of color parentheses dot system blue    dấu ngoặc đơn màu xanh lam
okay so that's looking good now below    được rồi, bây giờ nó trông ổn bên dưới
that h stack guys we're going to create    chúng ta sẽ tạo ra ngăn xếp h đó
a text component and we're going to just    một thành phần văn bản và chúng ta sẽ chỉ
say at joker it's going to be font    nói tại joker nó sẽ là phông chữ
dot sub headline    chấm tiêu đề phụ
dot foregroundcolor.gray    dấu chấm foregroundcolor.grey
so that looks good as well and then we    vì vậy có vẻ tốt là tốt và sau đó chúng tôi
need the bio so we're going to say text    cần tiểu sử vì vậy chúng tôi sẽ nói văn bản
your mom's favorite    yêu thích của mẹ bạn
villain    nhân vật phản diện
knee slapper    cái tát đầu gối
all right so we got your mom's favorite    được rồi vì vậy chúng tôi đã có yêu thích
của mẹ bạn
villain    nhân vật phản diện
and then we're going to say    và sau đó chúng ta sẽ nói
font.subheadline.padding    font.subheadline.padding
is    là
dot vertical    chấm dọc
okay so that looks pretty good    được rồi vì vậy trông khá tốt
now uh on this whole v stack guys we    bây giờ uh trên toàn bộ ngăn xếp v này,
chúng tôi
just want to give it a um    chỉ muốn cho nó một um
a padding of leading or sorry dot    một phần đệm của dấu chấm hàng đầu
hoặc xin lỗi
horizontal    nằm ngang
so now it's going to give it some nice    vì vậy bây giờ nó sẽ cho nó một số tốt đẹp
padding on the edges there    đệm trên các cạnh ở đó
and that's looking pretty good    và điều đó trông khá tốt
so now we want these two components here    vì vậy bây giờ chúng tôi muốn hai thành
phần này ở đây
so we can keep that within this v stack    vì vậy chúng tôi có thể giữ nó trong ngăn
xếp v này
um we can just say    ừm chúng ta chỉ có thể nói
h stack    ngăn xếp h
and    Và




about:blank



    34/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
each one of these guys it's going to be    mỗi người trong số những người này nó sẽ
được
its own h stack right so this is like an    ngăn xếp h của chính nó, vì vậy đây giống
như một
image with text and then image with text    hình ảnh với văn bản và sau đó hình ảnh
với văn bản
so within that h stack we're going to    vì vậy trong ngăn xếp h đó, chúng ta sẽ
have two h stacks    có hai ngăn xếp h
and then i'm going to say image system    và sau đó tôi sẽ nói hệ thống hình ảnh
name    tên
think that's matte pin    nghĩ rằng đó là pin mờ
dot and dot ellipse    dấu chấm và dấu chấm elip
so that looks good and then we're gonna    vì vậy điều đó có vẻ tốt và sau đó chúng ta
sẽ
say    nói
text    chữ
and we could say gotham    và chúng ta có thể nói gotham
comma new york    dấu phẩy new york
and then we actually want to give this a    và sau đó chúng tôi thực sự muốn cung cấp
cho điều này một
foreground color of gray    màu nền trước của màu xám
so let's just go do that on the whole    vì vậy chúng ta hãy làm điều đó trên toàn bộ
age stack.foregroundcolors.com    ngăn xếp tuổi.foregroundcolors.com
and then i believe we're going to want    và sau đó tôi tin rằng chúng ta sẽ muốn
to give it a font of dot caption    để cung cấp cho nó một phông chữ của chú
thích dấu chấm
yeah so that looks pretty good    vâng vì vậy nó có vẻ khá tốt
and then this h stack is going to be    và sau đó ngăn xếp h này sẽ là
pretty much the same the image name is    khá giống với tên hình ảnh
just going to be link    chỉ là liên kết
and then here we can just replace this    và sau đó ở đây chúng ta chỉ có thể thay thế
cái này
with like you know    với như bạn biết
like    giống
www.thejoker.com or something    www.thejoker.com hay gì đó
and it recognizes that as a link which    và nó nhận ra đó là một liên kết
is pretty cool then we can say spacer to    khá tuyệt thì chúng ta có thể nói miếng đệm
cho
spread them out    trải chúng ra




about:blank



    35/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and that's looking pretty good right    và điều đó trông khá tốt phải không
there guys    có các bạn
um    ô
but we actually don't know if we want    nhưng chúng tôi thực sự không biết nếu
chúng tôi muốn
that to be a spacer we can just go here    đó là một miếng đệm chúng ta chỉ có thể đi
đến đây
and say spacing is like 32 or something    và nói khoảng cách giống như 32 hoặc một
cái gì đó
and then on each of these the spacing    và sau đó trên mỗi khoảng cách này
looks good    có vẻ tốt
um let's actually make that like 24.    ừm, hãy thực sự làm cho nó giống như 24.
right so that's our little um    đúng vậy đó là um nhỏ của chúng ta
like location and link view and then we    như vị trí và xem liên kết và sau đó chúng
tôi
need this like user stats view right    cần cái này như chế độ xem thống kê người
dùng đúng không
here    đây
so once again we can stay within this    vì vậy một lần nữa chúng ta có thể ở trong
này
v stack that we're working within    ngăn xếp v mà chúng tôi đang làm việc
trong đó
right    Phải
and we're going to have another h stack    và chúng ta sẽ có một ngăn xếp h khác
very similar to this    rất giống với điều này
so it's going to be an h stack with two    vì vậy nó sẽ là một ngăn xếp h với hai
h stacks inside of it    h ngăn xếp bên trong nó
so the first one is they're just gonna    vì vậy điều đầu tiên là họ sẽ chỉ
be two text components we're gonna say    là hai thành phần văn bản chúng ta sẽ nói
text    chữ
and we could say like you know like uh    và chúng ta có thể nói như bạn biết như uh
this is going to be    đây sẽ là
following we could say like 807    sau chúng ta có thể nói như 807
and then we're going to give that a font    và sau đó chúng tôi sẽ cung cấp cho phông
chữ đó
of weight of bold    trọng lượng đậm
so you can see here that it bolds the    vì vậy bạn có thể thấy ở đây nó in đậm
first thing and then here we can go here    điều đầu tiên và sau đó ở đây chúng ta có
thể đi ở đây




about:blank    36/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and say    và nói
following    tiếp theo
and give this a font of dot caption    và cung cấp cho phông chữ này chú thích
dấu chấm
and we could give this a font of let me    và chúng ta có thể cung cấp cho tôi một
phông chữ let me
see when i made the font really quickly    xem khi tôi tạo phông chữ thực sự nhanh
chóng
one second guys    một giây các bạn
okay this is going to be dot font of    được rồi, đây sẽ là phông chữ chấm của
dot sub headline    chấm tiêu đề phụ
bold and the h stack is going to have a    in đậm và ngăn xếp h sẽ có một
spacing of four    khoảng cách của bốn
and then it's going to have    và sau đó nó sẽ có
this guy is going to be dot    anh chàng này sẽ được chấm
foregroundcolor.gray that following text    foregroundcolor.gray văn bản theo sau
is going to be gray so that looks pretty    sẽ có màu xám nên trông rất đẹp
good let's copy and paste that to the    tốt, hãy sao chép và dán nó vào
next age stack and here let's do like    ngăn xếp tuổi tiếp theo và ở đây chúng ta
hãy làm như thế nào
you know 6.9 million followers or    bạn biết 6,9 triệu người theo dõi hoặc
something    thứ gì đó
and change this to    và thay đổi điều này để
followers    người theo dõi
right so that looks pretty good and then    đúng như vậy trông khá tốt và sau đó
we're going to want to give this guy    chúng tôi sẽ muốn cho anh chàng này
some vertical padding as well    một số đệm dọc là tốt
just to spread that out nicely so that's    chỉ để lan truyền nó ra một cách độc đáo để
đó là
looking pretty darn good    trông khá darn tốt
the next part is going to be this fancy    phần tiếp theo sẽ rất thú vị
little    nhỏ bé
tweet    tiếng riu ríu
filter view    chế độ xem bộ lọc
so let's go ahead and see if we can get    vì vậy hãy tiếp tục và xem liệu chúng ta có
thể nhận được
that built and then we're going to be    được xây dựng và sau đó chúng ta sẽ trở
thành




about:blank    37/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
able to reuse our tweet cells to drop    có thể sử dụng lại các ô tweet của chúng tôi
để thả
them into this guy right here so that's    họ vào anh chàng này ngay tại đây vì vậy
đó là
going to be pretty cool    sẽ khá tuyệt
and then we're going to use a view model    và sau đó chúng ta sẽ sử dụng một mô hình
xem
eventually to be able to switch between    cuối cùng để có thể chuyển đổi giữa
the different types of tweets so that's    các loại tweet khác nhau vì vậy đó là
going to be pretty cool as well    cũng sẽ khá tuyệt
all right    được rồi
so really quickly    rất nhanh
let's clean this up a little bit more    hãy làm sạch cái này thêm một chút nữa
we are going to    chúng ta sắp
go here and take this whole z stat or v    vào đây và lấy toàn bộ z stat hoặc v
stack sorry    ngăn xếp xin lỗi
cut it and let's go down here and call    cắt nó và chúng ta hãy đi xuống đây và gọi
that var user    người dùng var đó
info details    thông tin chi tiết
some view    một số xem
paste it in there    dán nó vào đó
user info details    chi tiết thông tin người dùng
and you guys will notice that nothing    và các bạn sẽ nhận thấy rằng không có gì
should change about your    nên thay đổi về bạn
your previewer the way it looks right so    trình xem trước của bạn đúng như vậy
this is looking pretty clean right you    cái này trông khá sạch phải không bạn
guys can see how much easier it is to    mọi người có thể thấy nó dễ dàng hơn bao
nhiêu
work within your body when you don't    làm việc trong cơ thể của bạn khi bạn không
have all this massive amount of code in    có tất cả số lượng mã khổng lồ này trong
there    ở đó
right    Phải
okay so anyway let's just keep going    được rồi, dù sao thì chúng ta hãy tiếp tục
guys uh this    các bạn uh cái này
this filter bar view is somewhat complex    chế độ xem thanh bộ lọc này hơi phức tạp
but it's not too bad it's actually going    nhưng nó không quá tệ, nó thực sự đang
diễn ra
to be based off of like a data model    được dựa trên giống như một mô hình dữ




about:blank



    38/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
liệu
though so i want to create that first    mặc dù vậy tôi muốn tạo cái đó trước
before we go any for any further so in    trước khi chúng ta đi xa hơn nữa vì vậy
trong
this view models    mô hình xem này
um folder let's go ahead and create a    thư mục um hãy tiếp tục và tạo một
new file it's just going to be a swift    tập tin mới sẽ diễn ra nhanh chóng
file and we're going to call this tweet    tập tin và chúng tôi sẽ gọi tweet này
filter view model    mô hình chế độ xem bộ lọc
and this is actually going to be an    và đây thực sự sẽ là một
enumeration guys so we're gonna say enum    kẻ liệt kê vì vậy chúng ta sẽ nói enum
tweet filter viewmodel    chế độ xem bộ lọc tweet
it's gonna be an integer type enum and    nó sẽ là một kiểu số nguyên enum và
it's gonna conform to this case iterable    nó sẽ phù hợp với trường hợp này iterable
protocol i always have so much trouble    giao thức tôi luôn gặp rất nhiều rắc rối
saying that i'll explain why in a little    nói rằng tôi sẽ giải thích tại sao trong một
chút
bit but we're going to use this enum to    một chút nhưng chúng ta sẽ sử dụng enum
này để
create all of these    tạo ra tất cả những thứ này
cases for our tweet filter bar so we're    các trường hợp cho thanh bộ lọc tweet của
chúng tôi, vì vậy chúng tôi
going to say case tweets case replies    sẽ nói trường hợp tweets trường hợp trả lời
case likes    trường hợp thích
and then i want to create a title    và sau đó tôi muốn tạo một tiêu đề
property for this so i'm going to say    tài sản cho điều này vì vậy tôi sẽ nói
var    var
title which is a string just say switch    tiêu đề là một chuỗi chỉ cần nói switch
self    bản thân
we're going to say case.tweets return    chúng ta sẽ nói case.tweets trở lại
tweets    tweet
case    trường hợp
dot replies return    câu trả lời chấm trở lại
oops    Ối
replies    trả lời
case dot likes return    trường hợp chấm thích trở lại
likes    thích




about:blank    39/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
okay so this is our view model here now    được rồi, đây là mô hình xem của chúng tôi
ở đây bây giờ
let's go ahead and see how we're going    chúng ta hãy tiếp tục và xem chúng ta đang
đi như thế nào
to use this view model inside of the    để sử dụng mô hình xem này bên trong
profile view to actually create this    chế độ xem hồ sơ để thực sự tạo cái này
view here    xem ở đây
and some of the logic that's associated    và một số logic liên quan
with it    với nó
so we're going to create an h stack guys    vì vậy chúng ta sẽ tạo một ngăn xếp h nhé
các bạn
and then we're going to use a for each    và sau đó chúng ta sẽ sử dụng a cho mỗi
loop    vòng
and we're going to select this option    và chúng tôi sẽ chọn tùy chọn này
that says data and content    nói rằng dữ liệu và nội dung
and we're actually going to be able to    và chúng tôi thực sự sẽ có thể
use this view model to loop through all    sử dụng mô hình xem này để lặp qua tất cả
of the cases of our enum    trong số các trường hợp của enum của
chúng tôi
to then create a view for each one of    để sau đó tạo chế độ xem cho từng người
trong số
those cases so i'm going to say    những trường hợp đó vì vậy tôi sẽ nói
tweet filter viewmodel.all cases and the    tweet bộ lọc viewmodel.all trường hợp và
reason i can say all cases is because i    lý do tôi có thể nói tất cả các trường hợp là
bởi vì tôi
conformed to that case iterable iterable    phù hợp với trường hợp đó iterable iterable
protocol    giao thức
so what this does is it allows me to    vì vậy những gì nó làm là nó cho phép tôi
tweet or treat    tweet hoặc điều trị
all of my enum cases like an array so    tất cả các trường hợp enum của tôi giống
như một mảng
you can actually do a for loop on it    bạn thực sự có thể thực hiện một vòng lặp
for trên đó
which is pretty cool i love this feature    nó khá tuyệt, tôi thích tính năng này
so we're going to say all cases    vì vậy chúng ta sẽ nói tất cả các trường hợp
comma    dấu phẩy
oh just hit enter on the content and we    oh chỉ cần nhấn enter vào nội dung và
chúng tôi
actually need to give this an id so    thực sự cần phải cung cấp cho cái này một
id để


about:blank

    40/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
we're going to say id backslash dot raw    chúng ta sẽ nói id dấu gạch chéo ngược dot
raw
value    giá trị
and then within this guy we're going to    và sau đó trong anh chàng này, chúng ta sẽ
create a v stack we're going to have    tạo một ngăn xếp v chúng ta sẽ có
text    chữ
and we actually need to after these    và chúng ta thực sự cần phải sau những
điều này
brackets say option    dấu ngoặc đơn tùy chọn
or let's go ahead and say view model in    hoặc hãy tiếp tục và nói xem mô hình trong
or i would let's just say option    hoặc tôi sẽ chỉ nói tùy chọn
actually    Thực ra
or item rather so say item in and then    hoặc mục đúng hơn là nói mục trong và sau
đó
for this text component we can just say    đối với thành phần văn bản này, chúng ta
chỉ có thể nói
item.title    danh mục
so now    vậy bây giờ
it's going to go through each of the    nó sẽ đi qua từng
cases and give us back the title for    các trường hợp và trả lại cho chúng tôi tiêu
đề cho
each one of those cases so it should be    mỗi một trong những trường hợp đó nên nó
phải là
tweet replies and likes so let's go    trả lời tweet và lượt thích, vậy hãy bắt đầu
ahead and hit resume    phía trước và nhấn tiếp tục
just to see if that's actually working    chỉ để xem nếu nó thực sự làm việc
and we can see that that's uh actually    và chúng ta có thể thấy rằng đó thực sự là
uh
using our data model that we created to    sử dụng mô hình dữ liệu của chúng tôi mà
chúng tôi đã tạo để
create those options for us which is    tạo các tùy chọn đó cho chúng tôi, đó là
pretty cool so far    khá mát mẻ cho đến nay
so uh i'm not going to go too heavy into    vì vậy uh tôi sẽ không đi sâu vào
this concept here    khái niệm này ở đây
i want to just keep going with the ui i    tôi chỉ muốn tiếp tục với ui tôi
will do a brief explanation of it after    sẽ làm một lời giải thích ngắn gọn về nó sau
we're done though with this section    chúng tôi đã hoàn thành mặc dù với phần
này
so    Vì thế




about:blank    41/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
up at the top guys i'm actually going to    lên ở trên cùng, tôi thực sự sẽ
want to keep track of a state property    muốn theo dõi một tài sản nhà nước
so state private var    vì vậy nhà nước tư nhân var
selected    đã chọn
option or filter rather and it's going    tùy chọn hoặc bộ lọc thay vào đó và nó sẽ
diễn ra
to equal    bằng nhau
or sorry be of type tweet filter view    hoặc xin lỗi thuộc loại chế độ xem bộ lọc
tweet
model and we're going to default it to    mô hình và chúng tôi sẽ mặc định nó để
tweets    tweet
so this state property is going to keep    vì vậy tài sản nhà nước này sẽ giữ
track of my selected filter    theo dõi bộ lọc đã chọn của tôi
just like that    cứ thế
so every time i tap on one it's going to    vì vậy mỗi khi tôi nhấn vào một cái thì nó sẽ
update that state property and then    cập nhật thuộc tính trạng thái đó và sau đó
ultimately will change like the tweets    cuối cùng sẽ thay đổi như các tweet
that i'm looking at but we're going to    mà tôi đang xem nhưng chúng ta sẽ
do that later    làm điều đó sau
and then there's some logic based on    và sau đó có một số logic dựa trên
what the selected property is right so    tài sản được chọn là gì vậy
like the selected one you guys notice    like cái đã chọn các bạn để ý
that it's a bolded text it has this    rằng đó là một văn bản in đậm nó có cái này
underlined view and the other guys are    gạch dưới xem và những kẻ khác là
like grayed out and they don't have this    như chuyển sang màu xám và họ không có
cái này
selector view but then if i select it    chế độ xem bộ chọn nhưng sau đó nếu tôi
chọn nó
then that changes and this changes to    sau đó điều đó thay đổi và điều này thay đổi
thành
the selected uh like view components or    uh đã chọn như các thành phần xem hoặc
modifiers    sửa đổi
so let's go ahead and do that we're    vì vậy hãy tiếp tục và làm điều đó chúng ta
going to say font dot sub headline    sẽ nói phông chữ chấm tiêu đề phụ
dot font weight    trọng lượng phông chữ chấm
and then we're going to say selected    và sau đó chúng ta sẽ nói đã chọn
filter equals item    bộ lọc bằng mục
yes    Đúng




about:blank



    42/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot semi bold no dot regular    chấm nửa đậm không chấm thường
so this is some logic here that's going    vì vậy đây là một số logic ở đây sẽ diễn ra
to determine our    để xác định của chúng tôi
um    ô
font weight right so you guys notice    font chữ cân phải nên các bạn để ý
that the selected font weight is bold    rằng trọng lượng phông chữ đã chọn là đậm
the rest of them are not so this is    phần còn lại của họ thì không nên đây là
saying hey    nói xin chào
if the selected filter is equal to the    nếu bộ lọc đã chọn bằng với
particular item that we're looking at in    mục cụ thể mà chúng tôi đang xem xét trong
the for loop then yes we're going to    vòng lặp for thì vâng, chúng ta sẽ
make it bold no we're going to make it    làm cho nó đậm không, chúng tôi sẽ làm
cho nó
regular so that's pretty cool right    thường xuyên nên điều đó khá tuyệt phải
không
there    ở đó
then we're going to say dot    sau đó chúng ta sẽ nói dấu chấm
foreground color and this is also going    màu nền trước và điều này cũng đang diễn
ra
to be based on the selected filter    dựa trên bộ lọc đã chọn
selected filter equals item yes dot    bộ lọc đã chọn bằng mục có dấu chấm
black    đen
oops    Ối
no dot gray    không có chấm xám
okay then on this v stack guys we're    được rồi, trên ngăn xếp v này, chúng ta
going to say on tap gesture perform    sẽ nói khi nhấn cử chỉ thực hiện
with animation    với hoạt hình
dot ease in out    chấm dễ dàng trong ra
self dot selected filter equals item    tự chấm bộ lọc được chọn bằng mục
so just go ahead and build that    vì vậy hãy tiếp tục và xây dựng nó
and make sure your build succeeds so    và đảm bảo quá trình xây dựng của bạn
thành công
we're looking good now let's go ahead    Bây giờ chúng tôi đang tìm kiếm tốt, hãy
tiếp tục
and add the rest of the stuff to this so    và thêm phần còn lại của những thứ này để
we're going to say if selected filter    chúng ta sẽ nói nếu bộ lọc được chọn
equals item    bằng mục
then we're gonna have a capsule    sau đó chúng ta sẽ có một viên nang




about:blank



    43/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot foreground color    chấm màu nền trước
of color    màu sắc
dot    dấu chấm
or parenthesis dot system blue    hoặc hệ thống dấu ngoặc đơn màu xanh
foreground color    màu nền
right    Phải
okay    được rồi
so now let's resume it    vì vậy bây giờ chúng ta hãy tiếp tục nó
and    Và
right now we've defaulted our    ngay bây giờ chúng tôi đã mặc định của
chúng tôi
oh that's crazy our selected filter to    ồ thật điên rồ bộ lọc đã chọn của chúng tôi
tweet so that's why we noticed this    tweet vì vậy đó là lý do tại sao chúng tôi
nhận thấy điều này
massive view under the tweet the tweets    lượt xem lớn dưới tweet các tweet
option we also noticed that this is    tùy chọn chúng tôi cũng nhận thấy rằng đây
là
bolded and these guys are not this is    in đậm và những kẻ này không phải là đây
là
black and these guys are gray so that's    màu đen và những người này màu xám nên
đó là
looking good we just need to change the    nhìn tốt, chúng ta chỉ cần thay đổi
frame of this guy so we're going to say    khung của anh chàng này vì vậy chúng tôi
sẽ nói
frame    khung
height is 3    chiều cao là 3
and that's going to look much better    và điều đó sẽ trông tốt hơn nhiều
right    Phải
and then we're going to say    và sau đó chúng ta sẽ nói
here    đây
in order to even this out we're going to    để giải quyết vấn đề này, chúng ta sẽ
say else    nói khác đi
and then we're just going to create this    và sau đó chúng ta sẽ tạo ra cái này
capsule    viên con nhộng
again    lại
but we're going to give it a clear color    nhưng chúng tôi sẽ cung cấp cho nó một
màu sắc rõ ràng
for the other options    cho các tùy chọn khác
so you guys notice that the capsule is    vì vậy các bạn chú ý rằng viên nang là


about:blank

    44/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
there for each option    ở đó cho mỗi tùy chọn
but for the non-selected ones it's clear    nhưng đối với những cái không được chọn
thì rõ ràng
and that's just sort of so we can get    và đó chỉ là một cách để chúng ta có thể
nhận được
everything on the same level because if    mọi thứ ở cùng cấp độ bởi vì nếu
this capsule wasn't there these guys    viên nang này không có những người này
would actually sit lower    thực sự sẽ ngồi thấp hơn
right so i could comment that out    đúng để tôi có thể nhận xét điều đó
and it just messes everything up so like    và nó chỉ làm mọi thứ rối tung lên như vậy
giving everything a capsule and just    cho mọi thứ một viên nang và chỉ
changing the background color just makes    thay đổi màu nền chỉ làm cho
everything a lot smoother there    mọi thứ mượt mà hơn rất nhiều ở đó
okay so let's actually go ahead and hit    được rồi, hãy thực sự tiếp tục và đánh
the play button and see if we can select    nút phát và xem liệu chúng tôi có thể chọn
a filter    một bộ lọc
and you guys can see in the preview that    và các bạn có thể thấy trong bản xem trước
rằng
it's changing and that's really smooth    nó đang thay đổi và điều đó thực sự trơn tru
right    Phải
but we can make this a little bit    nhưng chúng ta có thể làm điều này một
chút
smoother you guys notice if i go from    mượt hơn các bạn để ý nếu mình đi từ
tweet to likes it just kind of shows up    tweet để thích nó chỉ hiển thị
there whereas in the completed app    ở đó trong khi trong ứng dụng đã hoàn
thành
there's this nice like sliding animation    có cái này đẹp như hoạt hình trượt
so we're going to use matched geometry    vì vậy chúng tôi sẽ sử dụng hình học phù
hợp
effects do that so    hiệu ứng làm điều đó như vậy
here just go ahead and say match    ở đây chỉ cần tiếp tục và nói trận đấu
geometry effects id we can just make it    id hiệu ứng hình học chúng ta có thể làm
cho nó
like filter    thích bộ lọc
and then we need a namespace id so go up    và sau đó chúng tôi cần một id không gian
tên để đi lên
to the top say at namespace bar    lên đầu nói ở thanh không gian tên
animation    hoạt hình
and just pass in animation there    và chỉ chuyển vào hoạt ảnh ở đó




about:blank



    45/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so now just go ahead and play that again    vì vậy bây giờ chỉ cần tiếp tục và chơi lại
and let's go ahead and click on likes    và hãy tiếp tục và nhấp vào lượt thích
huh    Huh
let me try again    để tôi thử lại
okay so you guys notice now    được rồi để các bạn chú ý ngay bây giờ
that    cái đó
it's sliding all the way over very    nó đang trượt hết cỡ
smoothly so that looks really really    trơn tru để trông thực sự thực sự
good um one more thing you guys will    tốt um một điều nữa các bạn sẽ
notice is that we do have like a divider    lưu ý là chúng tôi có giống như một dải
phân cách
here so we're going to give this h stack    ở đây vì vậy chúng tôi sẽ cung cấp ngăn
xếp h này
an overlay    một lớp phủ
of a divider    của một dải phân cách
so we're going to say overlay    vì vậy chúng ta sẽ nói lớp phủ
divider    dải phân cách
then we're going to give it an offset of    sau đó chúng tôi sẽ cung cấp cho nó một
phần bù của
x 0    x 0
y 16    năm 16
and you guys will notice that that gives    và các bạn sẽ nhận thấy rằng điều đó mang
lại
us that nice divider there    chúng tôi mà dải phân cách tốt đẹp ở đó
um    ô
and it just makes this look a little bit    và nó chỉ làm cho điều này trông một chút
cleaner and gives it more separation    sạch hơn và cho nó tách biệt hơn
so this is awesome guys that's looking    vì vậy đây là những người tuyệt vời đang
tìm kiếm
super super smooth that's coded really    siêu siêu mượt được mã hóa thực sự
cleanly    sạch sẽ
and uh you know our profile view is    và uh bạn biết xem hồ sơ của chúng tôi là
really really starting to come together    thực sự thực sự bắt đầu đến với nhau
here the last piece of the puzzle    đây là mảnh ghép cuối cùng
is this list of tweets and guess what we    đây là danh sách các tweet và đoán những
gì chúng tôi
already have that and we're going to be    đã có điều đó và chúng ta sẽ trở thành
good coders here and reuse previously    lập trình viên giỏi ở đây và sử dụng lại trước
đây


about:blank

    46/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
created components in order to get that    đã tạo các thành phần để có được điều đó
guy to show up instead of recoding it    anh chàng xuất hiện thay vì mã hóa lại
all over again and having the same exact    một lần nữa và có cùng một chính xác
code in multiple places in our app and    mã ở nhiều nơi trong ứng dụng của chúng
tôi và
basically being total newbie programmers    về cơ bản là toàn bộ lập trình viên mới
we're not going to do that    chúng tôi sẽ không làm điều đó
so    Vì thế
really quickly before we do that let's    thực sự nhanh chóng trước khi chúng ta
làm điều đó hãy
go ahead and cut all this stuff out    tiếp tục và cắt bỏ tất cả những thứ này ra
and create this    và tạo cái này
uh    uh
extracted like component    trích xuất như thành phần
we're going to call it uh tweet filter    chúng ta sẽ gọi nó là uh bộ lọc tweet
bar    quán ba
some view    một số xem
and paste all that in there    và dán tất cả vào đó
and go ahead here and say tweet filter    và tiếp tục ở đây và nói bộ lọc tweet
bar    quán ba
and then the last piece of the puzzle    và sau đó là mảnh ghép cuối cùng
guys is    các bạn là
this uh scroll view so we're going to    chế độ xem cuộn uh này vì vậy chúng tôi sẽ
say scroll view    nói xem cuộn
and then we're going to say lazy v stack    và sau đó chúng ta sẽ nói lazy v stack
and we can just do like a simple for    và chúng ta chỉ có thể làm như một cách
đơn giản cho
each loop zero we can do like up to nine    mỗi vòng lặp số 0 chúng ta có thể thực hiện
tới chín
content um i believe we need to give it    nội dung um tôi tin rằng chúng ta cần phải
cung cấp cho nó
an id backslash that self and we're just    một dấu gạch chéo ngược id đó và chúng
tôi chỉ
gonna reuse that tweet row view    sẽ sử dụng lại chế độ xem hàng tweet đó
just like that    cứ thế
oh yeah we need underscore in    ồ vâng, chúng tôi cần gạch dưới trong
so let's go ahead and hit resume    vì vậy hãy tiếp tục và nhấn tiếp tục
and we notice that that's showing up    và chúng tôi nhận thấy rằng điều đó đang
hiển thị


about:blank

    47/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
very nicely let's just go ahead and give    rất tuyệt, hãy tiếp tục và cống hiến
our tweet row view some padding    hàng tweet của chúng tôi xem một số phần
đệm
awesome awesome awesome    tuyệt vời tuyệt vời tuyệt vời
so now you guys will notice that i can    vì vậy bây giờ các bạn sẽ nhận thấy rằng tôi
có thể
actually    Thực ra
scroll through this list of tweets and    cuộn qua danh sách các tweet này và
that's looking super slick right so    trông siêu bóng bẩy đúng như vậy
let's go ahead and just extract this    hãy tiếp tục và giải nén cái này
view just like we did to the with the    xem giống như chúng tôi đã làm với
rest of our views here and that's gonna    phần còn lại của quan điểm của chúng tôi ở
đây và đó sẽ
wrap it up for our profile ui so i'm    kết thúc nó cho hồ sơ của chúng tôi ui vì
vậy tôi
gonna go down to the bottom here and    sẽ đi xuống phía dưới đây và
call this tweets view    gọi đây là chế độ xem tweet
some view    một số xem
paste that in there    dán cái đó vào đó
and then go back up to the top and say    và sau đó quay trở lại đầu trang và nói
tweet view alright guys so that's going    tweet xem được rồi các bạn, vậy là xong
to wrap it up for the profile chapter    để kết thúc nó cho chương hồ sơ
or at least the ui for it in the next    hoặc ít nhất là giao diện người dùng cho nó
trong phần tiếp theo
part of this course we're going to be    một phần của khóa học này chúng ta sẽ trở
thành
building out this explore view so that    xây dựng chế độ xem khám phá này để
we can search for users that exist in    chúng tôi có thể tìm kiếm người dùng tồn tại
trong
the app and actually be able to click on    ứng dụng và thực sự có thể nhấp vào
them and have it take us over to their    họ và có nó đưa chúng ta đến với họ
profile before we get into the rest of    hồ sơ cá nhân trước khi chúng tôi đi vào
phần còn lại của
the course so get excited for that guys    khóa học rất phấn khích cho những người
đó
that's what's next let's do it    đó là những gì tiếp theo chúng ta hãy làm
điều đó
alright guys so let's get started with    được rồi các bạn, vậy chúng ta hãy bắt đầu
với
this view here this should be pretty    khung cảnh này ở đây sẽ rất đẹp


about:blank

    48/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
quick so we're going to go into this    nhanh chóng vì vậy chúng ta sẽ đi sâu vào
vấn đề này
explorer folder we already have an    thư mục thám hiểm chúng tôi đã có một
explorer view but we do want to create    chế độ xem thám hiểm nhưng chúng tôi
muốn tạo
our two    hai chúng ta
subfolders for views and view models so    các thư mục con để xem và xem các mô
hình
let's do that first    hãy làm điều đó trước
views and then we're going to drag this    lượt xem và sau đó chúng tôi sẽ kéo cái này
explore view guy up into    khám phá xem thằng lên thành
the view folder just like that awesome    thư mục xem giống như tuyệt vời đó
okay    được rồi
so the first thing we're going to need    vì vậy điều đầu tiên chúng ta sẽ cần
is    là
or one of the things we're going to need    hoặc một trong những thứ chúng ta sẽ cần
is this sort of like user row view so    đây có phải là kiểu xem hàng của người
dùng không vậy
we're going to put that in our    chúng tôi sẽ đưa nó vào
components folder so i'm going to create    thư mục thành phần vì vậy tôi sẽ tạo
a new group here    một nhóm mới ở đây
call this users    gọi người dùng này
and    Và
i'm going to create a swift ui view    tôi sẽ tạo giao diện người dùng nhanh
and we're going to say user row    và chúng ta sẽ nói hàng người dùng
view    xem
awesome so this is a pretty simple view    tuyệt vời vì vậy đây là một cái nhìn khá đơn
giản
guys it's just going to be an h stack    các bạn, nó sẽ chỉ là một ngăn xếp h
and we're going to put a circle here for    và chúng ta sẽ đặt một vòng tròn ở đây cho
the image we're going to give it a frame    hình ảnh chúng ta sẽ cung cấp cho nó một
khung
of like i think it's going to be 48 by    giống như tôi nghĩ nó sẽ là 48 bởi
48    48
we don't need the alignment    chúng ta không cần sự liên kết
and then    và sau đó
we    chúng tôi
are going to within that h stack have a    sẽ vào trong ngăn xếp h đó có một




about:blank    49/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
v stack let me just get my preview going    v stack hãy để tôi xem bản xem trước của
mình
here    đây
um and let's see we want to give that    ừm và hãy xem chúng tôi muốn đưa ra điều
đó
guy a foreground color too    anh chàng cũng có màu nền trước
i think it defaults to black though so    tôi nghĩ nó mặc định là màu đen
that's fine    Tốt rồi
and then the v stack is going to be    và sau đó ngăn xếp v sẽ là
a text component that's just going to be    một thành phần văn bản sẽ trở thành
like you know joker    như bạn biết joker
dot font dot sub headline    chấm phông chữ chấm tiêu đề phụ
and we're going to say dot bold and then    và chúng ta sẽ nói dấu chấm đậm và sau đó
text    chữ
which is going to be heath ledger    đó sẽ là sổ cái y tế
and then dot font    và sau đó chấm phông chữ
dot sub headline    chấm tiêu đề phụ
and then it's going to be foreground    và sau đó nó sẽ là tiền cảnh
color of dot gray    màu chấm xám
and we want this v stack to be an    và chúng tôi muốn ngăn xếp v này là một
alignment or have an alignment of dot    căn chỉnh hoặc có sự liên kết của dấu chấm
leading    hàng đầu
right    Phải
and then we also want to give it some    và sau đó chúng tôi cũng muốn cung cấp
cho nó một số
spacing so let's say spacing is like    khoảng cách vì vậy hãy nói khoảng cách
giống như
four    bốn
and then we want this to be all the way    và sau đó chúng tôi muốn điều này là tất cả
các cách
over to the left of our screen so we're    ở bên trái màn hình của chúng tôi để chúng
tôi
gonna put a spacer    sẽ đặt một miếng đệm
um after that stuff to you know just    ừm sau những thứ đó để bạn biết
fill out all that blank space    điền vào tất cả chỗ trống đó
and that looks pretty good to me    và điều đó có vẻ khá tốt với tôi
then    sau đó
um we can just give this guy some    ừm, chúng ta có thể cho anh chàng này một
ít


about:blank

    50/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
padding uh    đệm uh
yeah just say padding    vâng chỉ cần nói phần đệm
cool    mát mẻ
um so that looks pretty good now we can    ừm để nó trông khá tốt bây giờ chúng ta có
thể
reuse this component back in our explore    sử dụng lại thành phần này trong khám phá
của chúng tôi
view so let's hop back to our explorer    xem vì vậy hãy quay lại nhà thám hiểm của
chúng tôi
view    xem
make sure our preview is connected    đảm bảo bản xem trước của chúng tôi được
kết nối
awesome    tuyệt vời
it's just going to be    nó sẽ chỉ là
a v stack    một ngăn xếp v
and then we're going to have uh    và sau đó chúng ta sẽ có uh
what is it called a scroll view with a    nó được gọi là chế độ xem cuộn với
lazy v stack    ngăn xếp v lười biếng
we're gonna say four each zero up to    chúng ta sẽ nói bốn mỗi số không cho đến
like 25 or something    như 25 hay gì đó
id backslash dot self    id dấu gạch chéo ngược dấu chấm tự
open brackets underscore in    mở ngoặc gạch dưới trong
and guys we will be replacing this with    và các bạn, chúng tôi sẽ thay thế cái này
bằng
actual data as we go through the course    dữ liệu thực tế khi chúng tôi trải qua khóa
học
we just don't have that data yet    chúng tôi chưa có dữ liệu đó
um so we need to actually connect the    ừm vì vậy chúng ta cần thực sự kết nối
back end using firestore which we're    back end sử dụng firestore mà chúng tôi
đang
going to do in a little bit    sẽ làm trong một chút
so let's just go ahead and resume on    vì vậy chúng ta hãy tiếp tục và tiếp tục
that    cái đó
and    Và
let's actually pass in this user row    hãy thực sự vượt qua trong hàng người
dùng này
view    xem
and see how that looks    và xem nó trông như thế nào
okay so that's looking pretty good    được rồi vì vậy nó trông khá tốt




about:blank



    51/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
um now guys what we want to do is    ừm bây giờ những gì chúng ta muốn làm là
actually make this something called a    thực sự làm cho cái này được gọi là
navigation link    liên kết điều hướng
and it's going to have a destination and    và nó sẽ có một điểm đến và
a label    một cái nhãn
and the destination is going to be our    và đích đến sẽ là của chúng ta
profile view    xem hồ sơ
and the label is going to be our user    và nhãn sẽ là người dùng của chúng tôi
row view    xem hàng
just like that    cứ thế
you guys will notice that it changed the    các bạn sẽ nhận thấy rằng nó đã thay đổi
color of everything so let's go back to    màu sắc của mọi thứ vì vậy chúng ta hãy
quay trở lại
the user row view    chế độ xem hàng của người dùng
and give this v stack    và cho ngăn xếp v này
uh    uh
a foreground color of dot black for the    một màu nền trước của chấm đen cho
text    chữ
and this guy    và anh chàng này
will stay the same but i actually think    sẽ giữ nguyên nhưng tôi thực sự nghĩ
it's all grayed out because we're not    tất cả đều chuyển sang màu xám bởi vì
chúng ta không
actually inside of a navigation view    thực sự bên trong chế độ xem điều hướng
so    Vì thế
i want us to do that as well    tôi cũng muốn chúng ta làm điều đó
because this won't actually work unless    bởi vì điều này sẽ không thực sự làm việc
trừ khi
we're inside of a navigation view    chúng tôi đang ở trong chế độ xem điều
hướng
so what we can just do for now is wrap    vì vậy những gì chúng ta có thể làm bây giờ
là quấn
this whole thing inside of the    toàn bộ điều này bên trong của
navigation view    chế độ xem điều hướng
and paste it all in there    và dán tất cả vào đó
and you guys will notice that everything    và các bạn sẽ nhận thấy rằng mọi thứ
should now look just fine    bây giờ nên nhìn tốt
and we can actually give this like a    và chúng ta thực sự có thể cho điều này
giống như một




about:blank    52/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
navigation bar title as well so we can    tiêu đề thanh điều hướng cũng như để
chúng tôi có thể
say that navigation bar title    nói rằng tiêu đề thanh điều hướng
or just title is explore    hoặc chỉ tiêu đề là khám phá
and you guys will notice that our    và các bạn sẽ nhận thấy rằng chúng tôi
navigation item comes up right there    mục điều hướng xuất hiện ngay tại đó
and then we'll say dot navigation title    và sau đó chúng tôi sẽ nói tiêu đề điều
hướng dấu chấm
display mode and we can just say dot    chế độ hiển thị và chúng ta chỉ có thể nói
dấu chấm
inline    nội tuyến
so now guys i'm going to click play on    vì vậy bây giờ các bạn tôi sẽ nhấp vào chơi
trên
this and click that and you guys will    cái này và nhấp vào cái đó và các bạn sẽ
notice that it takes me over to my    lưu ý rằng nó đưa tôi đến chỗ của tôi
profile view    xem hồ sơ
you guys will notice however that this    Tuy nhiên, các bạn sẽ nhận thấy rằng điều
này
isn't doing anything when i click on    không làm bất cứ điều gì khi tôi nhấp vào
this button i have to like hold down and    nút này tôi phải nhấn giữ và
swipe back    vuốt lại
which isn't terrible but i do want to    điều đó không tệ nhưng tôi muốn
fix that right now so let's go ahead and    khắc phục điều đó ngay bây giờ vì vậy hãy
tiếp tục và
do that so back in our profile view    làm điều đó để trở lại trong chế độ xem hồ
sơ của chúng tôi
i'm going to add something called an    tôi sẽ thêm một thứ gọi là
environment variable here    biến môi trường ở đây
so environment open parentheses    vì vậy môi trường mở ngoặc đơn
backslash dot presentation mode var mode    chế độ trình bày dấu gạch chéo ngược chế
độ var
and let's scroll down to this header    và hãy cuộn xuống tiêu đề này
view    xem
and we have this button here for the our    và chúng tôi có nút này ở đây cho
arrow    mũi tên
we're going to say    chúng ta sẽ nói
mode.wrappedvalue.dismiss    mode.wrappedvalue.dismiss
and now let's hit resume on the preview    và bây giờ hãy nhấn tiếp tục trên bản xem
trước




about:blank    53/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
let's go back to our explore view    hãy quay lại chế độ xem khám phá của
chúng tôi
and let's click on one of these guys and    và hãy nhấp vào một trong những người
này và
hit this    đánh cái này
and you guys will notice now that it's    và bây giờ các bạn sẽ nhận thấy rằng đó là
taking me back    đưa tôi trở lại
over to my original view    qua chế độ xem ban đầu của tôi
so really quickly i actually just want    rất nhanh tôi thực sự chỉ muốn
to fix some of this padding here these    để sửa một số phần đệm này ở đây
rows are a little bit too spread out    các hàng hơi quá dàn trải
and there's a lot of white space in    và có rất nhiều khoảng trắng trong
there so    Bởi vậy
let's just hop back into this user row    chúng ta hãy quay trở lại hàng người dùng
này
view    xem
and we're going to remove the padding    và chúng tôi sẽ loại bỏ phần đệm
guy or rather we're just going to add    anh chàng hay đúng hơn là chúng ta sẽ
thêm
padding dot horizontal    dấu chấm đệm nằm ngang
and then dot padding    và sau đó chấm đệm
vertical we're just gonna do like    theo chiều dọc, chúng ta sẽ làm như thế
nào
four    bốn
and    Và
let's go back to    chúng ta hãy quay trở lại
our    của chúng tôi
what's it called explore view i think    tôi nghĩ nó được gọi là chế độ xem khám
phá
yep and resume and let's just look at    vâng và tiếp tục và chúng ta hãy nhìn vào
these updates so that looks a little bit    những cập nhật này để có vẻ một chút
better to me i also want a little bit    tốt hơn với tôi tôi cũng muốn một chút
more spacing between the picture    thêm khoảng cách giữa các hình ảnh
and the user info    và thông tin người dùng
so let's just go and add some spacing to    vì vậy chúng ta hãy tiếp tục và thêm một số
khoảng cách vào
our h stack so we're going to say    ngăn xếp h của chúng tôi vì vậy chúng tôi sẽ
nói
spacing and let's do like 12.    khoảng cách và hãy làm như 12.




about:blank



    54/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
okay so that looks perfect guys so    được rồi, trông thật hoàn hảo nhé mọi
người
that's going to wrap it up for    điều đó sẽ kết thúc nó cho
that component for now that you sort of    thành phần đó bây giờ mà bạn sắp xếp
user list view later on we're going to    chế độ xem danh sách người dùng sau này
chúng ta sẽ
add a search bar and make those users    thêm một thanh tìm kiếm và làm cho những
người dùng đó
searchable    có thể tìm kiếm
um but next up there's a couple more ui    ừm nhưng tiếp theo sẽ có thêm vài cái nữa
ui
components that we have to build guys    các thành phần mà chúng ta phải xây dựng
các chàng trai
we're going to be building out this    chúng ta sẽ xây dựng cái này
awesome side menu that you see here next    menu bên tuyệt vời mà bạn thấy ở đây tiếp
theo
and then we still have to do this uh    và sau đó chúng ta vẫn phải làm điều này
uh
tweet upload a tweet view as well as our    tweet tải lên một lượt xem tweet cũng như
của chúng tôi
login and sign up pages so    trang đăng nhập và đăng ký
side menu's next you guys are doing    menu phụ tiếp theo các bạn đang làm
great so far i hope you're enjoying this    tuyệt vời cho đến nay tôi hy vọng bạn thích
điều này
course and the ui is really starting to    khóa học và giao diện người dùng đang
thực sự bắt đầu
come together then we're going to start    đến với nhau sau đó chúng ta sẽ bắt đầu
adding some data in our back end so get    thêm một số dữ liệu vào phần cuối của
chúng tôi để có được
excited for that guys    phấn khích cho các chàng trai đó
alright guys so this is what the side    được rồi các bạn vì vậy đây là những gì bên
menu is going to look like we're going    thực đơn sẽ giống như chúng ta đang đi
to start by just building out the ui for    để bắt đầu bằng cách xây dựng giao diện
người dùng cho
this view and then work on the    chế độ xem này và sau đó làm việc trên
presentation logic after we're done    logic trình bày sau khi chúng tôi hoàn thành
building the ui so go up to your core    xây dựng giao diện người dùng, vì vậy hãy
đi đến cốt lõi của bạn
folder we're going to create a new group    thư mục chúng ta sẽ tạo một nhóm mới
and we're going to call this side menu    và chúng ta sẽ gọi menu phụ này




about:blank    55/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and i'm going to put the components    và tôi sẽ đặt các thành phần
folder back above that and then here    thư mục phía trên đó và sau đó ở đây
we're going to create two sub groups one    chúng ta sẽ tạo hai nhóm phụ một
for view model    để xem mô hình
and one for views    và một cho lượt xem
okay so    được thôi, nếu vậy
we're gonna create our side menu view    chúng ta sẽ tạo chế độ xem menu bên
within this view folder so create a new    trong thư mục chế độ xem này, vì vậy hãy
tạo một thư mục mới
file select swift ui view    tập tin chọn swift ui xem
and we're going to call this side menu    và chúng ta sẽ gọi menu phụ này
view    xem
and we're also going to create our side    và chúng tôi cũng sẽ tạo ra phe của chúng
tôi
menu row view    chế độ xem hàng menu
so go ahead and create another file    vì vậy hãy tiếp tục và tạo một tệp khác
called side menu row view    được gọi là chế độ xem hàng menu bên
and that's just going to be the like    và điều đó sẽ giống như
sort of row for each menu option    sắp xếp hàng cho mỗi tùy chọn menu
and then we're also going to go here and    và sau đó chúng ta cũng sẽ đi đến đây và
create our side menu view model so    tạo mô hình xem menu bên của chúng tôi
để
that's going to be a swift file    đó sẽ là một tập tin nhanh chóng
we're going to call it side menu view    chúng ta sẽ gọi nó là chế độ xem menu bên
model    người mẫu
and let's actually just go ahead and    và chúng ta hãy thực sự tiếp tục và
build the data model out first    xây dựng mô hình dữ liệu đầu tiên
and it's going to be another enumeration    và nó sẽ là một phép liệt kê khác
um    ô
and here i'm going to explain the reason    và ở đây tôi sẽ giải thích lý do
why i like enumeration so much for this    tại sao tôi thích liệt kê rất nhiều cho điều này
guys but let's just go ahead and build    các bạn nhưng chúng ta hãy tiếp tục và xây
dựng
it first we're going to call it side    nó đầu tiên chúng ta sẽ gọi nó là bên
menu    thực đơn
view model    xem mô hình
once again it's an integer    một lần nữa nó là một số nguyên
enum and it conforms to the case    enum và nó phù hợp với trường hợp


about:blank

    56/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
interable protocol right so we're going    giao thức tương thích, vì vậy chúng tôi sẽ đi
to say case profile pretty much just    để nói hồ sơ trường hợp khá nhiều chỉ
mimic all these options you see here    bắt chước tất cả các tùy chọn bạn thấy ở
đây
case uh lists case bookmarks    trường hợp uh liệt kê các dấu trang trường
hợp
and case logout    và trường hợp đăng xuất
and then we're going to create a    và sau đó chúng ta sẽ tạo ra một
description    Sự miêu tả
called it's going to be a string we're    được gọi là nó sẽ là một chuỗi chúng ta
going to say switch south and here is    sẽ nói chuyển về phía nam và đây là
just where we name    chỉ là nơi chúng tôi đặt tên
or give each option an actual string    hoặc cung cấp cho mỗi tùy chọn một chuỗi
thực tế
title    tiêu đề
so case profile    hồ sơ vụ án
case dot lists    trường hợp dot danh sách
return lists i actually have to say    trả lại danh sách tôi thực sự phải nói
return up here    trở lại đây
and then we're going to say    và sau đó chúng ta sẽ nói
case.bookmarks return    case.bookmarks trở lại
book marks    dấu sách
and then case.log out return log out    và sau đó case.log out quay lại đăng xuất
okay and one more thing guys we notice    được rồi và một điều nữa các bạn chúng tôi
lưu ý
that we also have an image associated    rằng chúng tôi cũng có một hình ảnh liên
quan
with each option so we're going to add    với mỗi tùy chọn vì vậy chúng tôi sẽ thêm
that image name property to our view    thuộc tính tên hình ảnh đó vào chế độ xem
của chúng tôi
model here as well    người mẫu ở đây cũng vậy
and see how we're going to be able to    và xem làm thế nào chúng ta sẽ có thể
use that later so we're going to say var    sử dụng nó sau vì vậy chúng ta sẽ nói var
image name which is a string and we can    tên hình ảnh là một chuỗi và chúng ta có thể
pretty much just copy this switch    gần như chỉ cần sao chép công tắc này
statement and we're just going to change    tuyên bố và chúng ta sẽ thay đổi
up the strings that we return    lên các chuỗi mà chúng tôi trở lại
so the first one is going to be person    vì vậy người đầu tiên sẽ là người




about:blank    57/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
next one list dot bullet    một danh sách tiếp theo dấu chấm đầu
dòng
bookmarks is going to be bookmark    dấu trang sẽ là dấu trang
and then this one is going to be    và sau đó cái này sẽ là
arrow.left    mũi tên.trái
dot square    chấm vuông
cool    mát mẻ
okay so let's go ahead and use this enum    được rồi, hãy tiếp tục và sử dụng enum này
um or actually rather just talk about    um hoặc thực sự chỉ nói về
how it's used now we'll talk about it    làm thế nào nó được sử dụng bây giờ
chúng ta sẽ nói về nó
later i promise    sau này tôi hứa
let's go ahead and start building out    hãy tiếp tục và bắt đầu xây dựng
this view really fast    lượt xem này thực sự nhanh
so we're going to go to our side menu    vì vậy chúng ta sẽ đi đến menu phụ của
chúng ta
view    xem
and we want to start building out this    và chúng tôi muốn bắt đầu xây dựng điều
này
header first and then we're going to use    tiêu đề đầu tiên và sau đó chúng tôi sẽ sử
dụng
that data model to create all these    mô hình dữ liệu đó để tạo ra tất cả những
thứ này
options here    tùy chọn ở đây
so    Vì thế
first off guys we're going to uh make    trước tiên chúng ta sẽ làm
this a v stack    đây là ngăn xếp v
and let me just get my code opened up    và để tôi mở mã của mình
here    đây
okay so first thing uh just create a    được rồi, điều đầu tiên uh chỉ cần tạo một
circle for our you know profile image    vòng tròn cho hình ảnh hồ sơ bạn biết của
chúng tôi
there    ở đó
and let's get this preview connected    và hãy kết nối bản xem trước này
a little sip of tea for me    một chút trà cho tôi
no beer this time    lần này không có bia
so we got our circle let's give it a    vì vậy chúng tôi đã có vòng kết nối của
mình, hãy cho nó một
frame    khung




about:blank



    58/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
width and height 48 by 48    chiều rộng và chiều cao 48 x 48
and we don't need that    và chúng tôi không cần điều đó
okay    được rồi
all right so then we're going to say so    được rồi, vậy thì chúng ta sẽ nói như vậy
we're going to have some text it's going    chúng tôi sẽ có một số văn bản nó sẽ đi
to be    được
bruce wayne    Lý Tiểu Long
dot font dot uh    phông chữ chấm chấm uh
let's give it a font of headline    hãy cung cấp cho nó một phông chữ tiêu đề
yep that looks good    vâng cái đó có vẻ tốt
then we're going to below that we're    sau đó chúng ta sẽ đến bên dưới mà chúng
ta
going to say text at batman    sẽ nói văn bản tại batman
and we're going to give this a font of    và chúng tôi sẽ cung cấp cho phông chữ
này
we can just go ahead and do caption i    chúng ta có thể tiếp tục và tạo chú thích tôi
think    nghĩ
oh cannot find oh dot caption cool    ồ không thể tìm thấy chú thích dấu chấm
tuyệt vời
so that doesn't look too bad um    vậy trông cũng không tệ lắm ừm
this v stack    ngăn xếp v này
is what we've got right here we want it    là những gì chúng tôi có ngay tại đây, chúng
tôi muốn nó
to be pushed over    bị đẩy qua
uh to    uh để
the left    Bên trái
so we're going to make this alignment    vì vậy chúng ta sẽ thực hiện sự liên kết này
dot leading that's not going to do    dấu chấm hàng đầu sẽ không làm được
anything right now    bất cứ điều gì ngay bây giờ
or it is but we want it to eventually be    hoặc nó là nhưng chúng tôi muốn nó cuối
cùng là
all the way over here we're going to    tất cả các cách ở đây chúng ta sẽ
work on that in a second    làm việc trên đó trong một giây
first off let's give this a foreground    trước hết chúng ta hãy cung cấp cho nó một
tiền cảnh
color of dot gray    màu chấm xám
for the username guy right there so    cho anh chàng tên người dùng ngay tại đó
that's looking good    trông thật tuyệt




about:blank    59/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and i'm actually going to wrap this    và tôi thực sự sẽ quấn cái này
inside of its own v stack guys    bên trong ngăn xếp v của chính nó
because i want our my own set of spacing    bởi vì tôi muốn tập hợp khoảng cách của
riêng mình
on that    trong vấn đề này
so i'm going to say spacing is like 4    vì vậy tôi sẽ nói khoảng cách giống như 4
so that looks good and then copy this    để có vẻ tốt và sau đó sao chép này
alignment    căn chỉnh
and now that's looking pretty good    và bây giờ điều đó trông khá tốt
and you guys notice that we have this    và các bạn để ý rằng chúng ta có cái này
same like stat view that we had back in    giống như chế độ xem thống kê mà chúng
tôi đã quay lại
our profile view    xem hồ sơ của chúng tôi
so really quickly i'm actually going to    rất nhanh, tôi thực sự sẽ
create a reusable component for this    tạo một thành phần có thể tái sử dụng cho
việc này
um so if you guys hop back to the    ừm vậy nếu các bạn quay trở lại
profile and go to views profile view    hồ sơ và đi đến lượt xem xem hồ sơ
um let's see let's find that it should    ừm hãy xem chúng ta hãy thấy rằng nó nên
be    là
this guy right here    anh chàng này ngay tại đây
right so let's actually go ahead and    đúng vậy, hãy thực sự tiếp tục và
create a reusable component for this    tạo một thành phần có thể tái sử dụng cho
việc này
so we have a users section already so    vì vậy chúng tôi đã có một phần người dùng
rồi
let's go ahead and create a new file    hãy tiếp tục và tạo một tệp mới
it's going to be a swift ui view    nó sẽ là một giao diện người dùng nhanh
chóng
and we're going to call this user stats    và chúng tôi sẽ gọi số liệu thống kê người
dùng này
view    xem
and let's create that and just go back    và hãy tạo nó và chỉ cần quay lại
and we're going to cut all this or copy    và chúng tôi sẽ cắt tất cả hoặc sao chép
it    Nó
user stats view    chế độ xem thống kê người dùng
go and paste that in there    đi và dán nó vào đó
and now what we can do guys is go back    và bây giờ những gì chúng ta có thể làm là
quay trở lại




about:blank    60/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to the side or sorry profile view    sang một bên hoặc xin lỗi xem hồ sơ
and let's actually just replace this    và hãy thực sự thay thế cái này
with our user stats view    với chế độ xem thống kê người dùng của
chúng tôi
and now we can go back to our side menu    và bây giờ chúng ta có thể quay lại menu
phụ của mình
view    xem
and add in    và thêm vào
that guy as well user stats view    anh chàng đó cũng xem số liệu thống kê
người dùng
and eventually we're going to make this    và cuối cùng chúng ta sẽ làm điều này
so that it's populated with real data    để nó được phổ biến với dữ liệu thực
um but for now this is just sort of    ừm nhưng bây giờ đây chỉ là một loại
dummy data    dữ liệu giả
and we notice that that looks pretty    và chúng tôi nhận thấy rằng nó trông đẹp
good    Tốt
right we just want uh some spacing on    đúng rồi, chúng tôi chỉ muốn uh một số
khoảng cách trên
that guy so let's actually go ahead and    anh chàng đó vì vậy hãy thực sự tiếp tục và
just give it some padding of like dot    chỉ cần cung cấp cho nó một số phần đệm
giống như dấu chấm
vertical    thẳng đứng
right so that's looking pretty good    đúng như vậy trông khá tốt
um and we can actually leave this as is    ừm và chúng ta thực sự có thể để nó như
vậy
for now    bây giờ
um what we're going to do next is    ừm những gì chúng ta sẽ làm tiếp theo là
actually build out this list so    thực sự xây dựng danh sách này vì vậy
let's go ahead and do that    hãy tiếp tục và làm điều đó
i want us to wrap this v stack inside of    tôi muốn chúng ta bọc ngăn xếp v này bên
trong
another v stack so go ahead and say    ngăn xếp v khác vì vậy hãy tiếp tục và nói
embed in v stack    nhúng vào ngăn xếp v
and    Và
that way this v stack acts as it's like    theo cách đó ngăn xếp v này hoạt động
giống như
own container right we can see that    vùng chứa riêng, chúng ta có thể thấy điều
đó
that's sort of like our header view    điều đó giống như chế độ xem tiêu đề của
chúng tôi


about:blank

    61/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and now down here    và bây giờ xuống đây
we're going to create the actual like    chúng ta sẽ tạo ra thực tế như
profile option list so we're going to    danh sách tùy chọn hồ sơ vì vậy chúng tôi
sẽ
say for each and this is where our data    nói cho mỗi và đây là nơi dữ liệu của chúng
tôi
model comes in handy we're going to say    mô hình có ích chúng ta sẽ nói
side menu view model about all cases    menu bên xem mô hình về tất cả các trường
hợp
oops    Ối
and go ahead and hit enter on that    và tiếp tục và nhấn enter vào đó
content    nội dung
and don't forget to actually add your id    và đừng quên thực sự thêm id của bạn
backslash dot raw value    dấu gạch chéo ngược dấu chấm giá trị thô
and here we can just say like option in    và ở đây chúng ta chỉ có thể nói tùy chọn
like trong
okay and this should actually be side    được rồi và điều này thực sự nên được phụ
menu view model that's my bad then    mô hình xem menu đó là xấu của tôi sau đó
within this guide we are going to create    trong hướng dẫn này, chúng tôi sẽ tạo
an h stack and that's going to be what    một ngăn xếp h và đó sẽ là những gì
each of these option views are so we're    mỗi chế độ xem tùy chọn này là vì vậy
chúng tôi
going to create an image say system name    sẽ tạo một hình ảnh nói tên hệ thống
and we're going to pass in the    và chúng ta sẽ vượt qua trong
option.imagename    tùy chọn.tên hình ảnh
and then we're going to pass in a text    và sau đó chúng ta sẽ chuyển qua một văn
bản
and we're going to pass in the    và chúng ta sẽ vượt qua trong
option.title    tùy chọn.title
you guys might have that as description    các bạn có thể có đó như mô tả
i changed it to title i think that's a    tôi đã đổi nó thành tiêu đề tôi nghĩ đó là một
little bit easier to remember so if you    dễ nhớ hơn một chút vì vậy nếu bạn
want you guys can just go ahead and    muốn các bạn có thể tiếp tục và
change the name of this property to    thay đổi tên của tài sản này để
title that way we have text option.title    tiêu đề theo cách đó chúng tôi có tùy chọn
văn bản.title
and we can see here that this is like    và chúng ta có thể thấy ở đây rằng điều này
giống như
the beginning of what our um    sự khởi đầu của những gì um của chúng tôi




about:blank



    62/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
our options should look like we're    các tùy chọn của chúng tôi sẽ giống như
chúng tôi
actually going to add a spacer here    thực sự sẽ thêm một miếng đệm ở đây
um to each one of them    ừm với mỗi người trong số họ
and hit resume and that's just going to    và nhấn tiếp tục và điều đó sẽ xảy ra
move everything over to the left side of    di chuyển mọi thứ sang phía bên trái của
the screen for us which is going to be    màn hình cho chúng tôi sẽ là
really nice    thực sự tốt đẹp
okay    được rồi
and you notice it kind of lines    và bạn nhận thấy đó là loại đường
everything up as well which is great    mọi thứ đều tốt, điều đó thật tuyệt
this h stack guys we're going to give it    ngăn xếp h này, chúng tôi sẽ cung cấp cho
nó
a frame of height which is 40 to give    một khung có chiều cao là 40 để cung cấp
everything a little bit more spacing so    mọi thứ thêm một chút khoảng cách như
vậy
that's looking good    trông thật tuyệt
and then we are going to give it some    và sau đó chúng tôi sẽ cung cấp cho nó một
số
horizontal padding    đệm ngang
and then to get this guy over here    và sau đó để có được anh chàng này ở đây
we can just copy this    chúng ta chỉ có thể sao chép này
leading alignment guy one more time and    anh chàng liên kết hàng đầu một lần nữa và
put that on the    đặt nó trên
parent v stack right and then you notice    mẹ v ngăn xếp ngay và sau đó bạn chú ý
that that gets pushed all the way over    mà được đẩy tất cả các cách trên
to the left as well    bên trái cũng vậy
and    Và
on that    trong vấn đề này
this guy right here    anh chàng này ngay tại đây
this uh sort of header view v stack    uh đây là loại xem tiêu đề v ngăn xếp
we're going to say padding    chúng ta sẽ nói phần đệm
dot    dấu chấm
leading    hàng đầu
and that's going to move that over    và điều đó sẽ chuyển nó qua
nicely    độc đáo
and then guys we need to get this moved    và sau đó các bạn, chúng ta cần di chuyển
cái này




about:blank    63/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
up all the way to the top of the screen    lên đến đỉnh màn hình
so on your uh    vậy bạn à
parent v stack just go ahead and add a    ngăn xếp cha v chỉ cần tiếp tục và thêm một
spacer and that's going to shove    miếng đệm và điều đó sẽ xô đẩy
everything up to the top    mọi thứ lên đến đỉnh
and that's looking really good    và điều đó trông thực sự tốt
we do want a little bit more spacing    chúng tôi muốn có thêm một chút khoảng
cách
between these options and we're going to    giữa các tùy chọn này và chúng ta sẽ
change the font and color a little bit    thay đổi phông chữ và màu sắc một chút
of them as well just to make it look a    của họ cũng như chỉ để làm cho nó trông
giống như một
little bit cleaner so the image we're    sạch hơn một chút để hình ảnh chúng ta
going to say dot font is dot headline    sẽ nói dấu chấm là tiêu đề dấu chấm
and that's going to make the image a    và điều đó sẽ làm cho hình ảnh trở thành
một
little nicer then we're going to say dot    đẹp hơn một chút thì chúng ta sẽ nói dấu
chấm
foreground color    màu nền
is dot gray    là chấm xám
and then the text we're going to say dot    và sau đó là văn bản chúng ta sẽ nói dấu
chấm
font dot sub headline    phông chữ chấm tiêu đề phụ
and that looks a little better    và điều đó có vẻ tốt hơn một chút
okay now    được rồi
on the h stack guys go ahead and give it    trên ngăn xếp h mọi người cứ tiếp tục và
cho nó
a spacing parameter of 16.    tham số khoảng cách là 16.
and we're gonna add some padding to this    và chúng tôi sẽ thêm một số phần đệm vào
đây
for each guy right here so go to the end    cho mỗi chàng trai ngay tại đây vì vậy hãy đi
đến cuối
of that and say dot padding dot vertical    của điều đó và nói dấu chấm đệm dấu chấm
dọc
ooh uh    ồ ồ
make that like four    làm cho nó giống như bốn
yeah so that spaces our options out a    vâng để loại bỏ các tùy chọn của chúng tôi
ra một
little bit better    tốt hơn một chút
and then on this v stack here the    và sau đó trên ngăn xếp v này ở đây


about:blank

    64/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
overall item let's see if we can add    mục tổng thể hãy xem liệu chúng ta có thể
thêm
spacing of like 32    khoảng cách như 32
and that's just gonna yeah so let's    và điều đó sẽ đúng, vì vậy chúng ta hãy
actually remove that vertical padding    thực sự loại bỏ phần đệm dọc đó
and that'll just give it some spacing    và điều đó sẽ chỉ cung cấp cho nó một số
khoảng cách
here between the the header and sort of    ở đây giữa tiêu đề và sắp xếp
the option list so that's looking really    danh sách tùy chọn để trông thực sự
good    Tốt
so that's pretty much it for the ui on    vì vậy đó là khá nhiều cho giao diện người
dùng trên
the side menu next we're going to work    menu phụ tiếp theo chúng ta sẽ làm việc
on how to actually show that side menu    về cách thực sự hiển thị menu bên đó
from our main view but before we do that    từ chế độ xem chính của chúng tôi nhưng
trước khi chúng tôi làm điều đó
i did promise you guys i would give you    tôi đã hứa với các bạn tôi sẽ cung cấp cho
các bạn
a more in-depth explanation as to why i    một lời giải thích sâu hơn về lý do tại sao tôi
like to use enumerations as the view    thích sử dụng bảng liệt kê làm chế độ xem
model to create these menu options that    mô hình để tạo các tùy chọn menu này
we see here we also saw something    chúng tôi thấy ở đây chúng tôi cũng thấy
một cái gì đó
similar with the profile filter bar so    tương tự với thanh bộ lọc hồ sơ như vậy
let me go ahead and do and explain that    hãy để tôi tiếp tục và làm và giải thích điều
đó
really quickly so one of the main    thực sự nhanh chóng vì vậy một trong
những điều chính
reasons i like to use enumerations for    lý do tôi thích sử dụng liệt kê cho
situations like this is how easy they    những tình huống như thế này thật dễ dàng
are to modify so for example let's say i    là để sửa đổi, ví dụ, giả sử tôi
wanted to remove an option i just do    muốn xóa một tùy chọn tôi chỉ cần làm
that right here so i remove the    ngay tại đây vì vậy tôi loại bỏ
bookmarks case i'm going to build my    trường hợp dấu trang tôi sẽ xây dựng
code and it's going to give me an error    mã và nó sẽ báo lỗi cho tôi
in all the places i need to modify my    ở tất cả những nơi tôi cần sửa đổi
code in order for it to work again so    mã để nó hoạt động trở lại
luckily for me it's all in one place    may mắn cho tôi là tất cả ở một nơi




about:blank    65/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so now if i go back to my side menu view    vì vậy bây giờ nếu tôi quay lại chế độ xem
menu bên của mình
and i resume on my preview we're going    và tôi tiếp tục bản xem trước của mình,
chúng tôi sẽ đi
to notice that the bookmark option just    để lưu ý rằng tùy chọn dấu trang chỉ
goes away and the list automatically    biến mất và danh sách tự động
adjusts itself to    tự điều chỉnh để
have that updated list of options right    có danh sách tùy chọn được cập nhật ngay
so the bookmark option is just gone    vì vậy tùy chọn dấu trang đã biến mất
and adding it back is as simple as you    và thêm nó trở lại đơn giản như bạn
know adding a case you know you guys    biết thêm một trường hợp bạn biết các bạn
could add any number of cases to this    có thể thêm bất kỳ số lượng trường hợp này
and once you add another case so let's    và một khi bạn thêm một trường hợp khác,
vì vậy hãy
say i added like uh    nói rằng tôi đã thêm như uh
i don't know    Tôi không biết
super likes or something i don't know    siêu thích hay gì đó tôi không biết
right um you guys will notice that    đúng rồi, các bạn sẽ nhận thấy điều đó
it says hey switch has to be exhaustive    nó nói rằng công tắc này phải đầy đủ
so you have to add the missing case and    vì vậy bạn phải thêm trường hợp còn thiếu
và
it pretty much just gives you a single    nó khá nhiều chỉ cung cấp cho bạn một
source of truth for your data model for    nguồn sự thật cho mô hình dữ liệu của bạn
cho
your ui that's why i really like    ui của bạn đó là lý do tại sao tôi thực sự
thích
enumerations here and we also get these    bảng liệt kê ở đây và chúng tôi cũng nhận
được những
awesome like computed properties that we    tuyệt vời như các thuộc tính được tính toán
mà chúng tôi
can use    co thể sử dụng
that are based on each one of the cases    dựa trên từng trường hợp
that we have so that's how we were able    rằng chúng tôi có nên đó là cách chúng tôi
có thể
to configure our data here all done    để định cấu hình dữ liệu của chúng tôi ở
đây đã hoàn tất
through one place or one sort of data    thông qua một nơi hoặc một loại dữ liệu
structure which is this enumeration    cấu trúc đó là kiểu liệt kê này
and we saw that with the tweet filter    và chúng tôi đã thấy điều đó với bộ lọc
tweet




about:blank    66/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
view model as well it would be really    xem mô hình cũng như nó sẽ thực sự
easy for you guys to change these    dễ dàng cho các bạn để thay đổi những
options around    tùy chọn xung quanh
or add or remove options to them so    hoặc thêm hoặc xóa các tùy chọn cho
chúng để
that's why i really like using enums for    đó là lý do tại sao tôi thực sự thích sử dụng
enums cho
this type of stuff    loại công cụ này
um and i think you guys should do the    ừm và tôi nghĩ các bạn nên làm
same whenever you can it's a lot better    tương tự bất cứ khi nào bạn có thể nó tốt
hơn rất nhiều
than just having like an array of    hơn là chỉ thích một mảng
strings right um you could have had an    chuỗi đúng um bạn có thể đã có một
array of strings like profile list blah    mảng các chuỗi như danh sách hồ sơ blah
blah blah you could have created a    blah blah bạn có thể đã tạo ra một
structure for it but this is just what i    cấu trúc cho nó nhưng đây chỉ là những gì
tôi
like to do but anyway guys    thích làm nhưng dù sao đi nữa các bạn
now that we've talked about that a    bây giờ chúng ta đã nói về điều đó
little bit more    Thêm một chút nữa
and my promise has been fulfilled    và lời hứa của tôi đã được thực hiện
let's go ahead and    hãy tiếp tục và
go over to our main tab view and start    chuyển đến chế độ xem tab chính của
chúng tôi và bắt đầu
configuring that to be able to show this    định cấu hình để có thể hiển thị điều này
side menu view to the user so that they    chế độ xem menu bên cho người dùng để
họ
can toggle it in and out as we see here    có thể bật tắt nó như chúng ta thấy ở đây
in the completed app right looks pretty    trong ứng dụng đã hoàn thành trông khá
đẹp
smooth so let's go ahead and do that now    trơn tru vì vậy hãy tiếp tục và làm điều đó
ngay bây giờ
okay guys so we're actually going to hop    được rồi các bạn, vì vậy chúng tôi thực sự
sẽ nhảy
into our app file and we're going to    vào tệp ứng dụng của chúng tôi và chúng tôi
sẽ
change this around a bit in order to get    thay đổi điều này xung quanh một chút để
có được
this to work so    cái này để làm việc như vậy




about:blank    67/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
go ahead and just delete main tab view    hãy tiếp tục và chỉ cần xóa chế độ xem tab
chính
you guys notice here that we have a    các bạn chú ý ở đây rằng chúng ta có một
navigation bar up at the top so    thanh điều hướng lên ở trên cùng
i'm actually going to    tôi thực sự sẽ
make the root view    tạo chế độ xem gốc
of the application be contained within    của ứng dụng được chứa trong
this navigation view    chế độ xem điều hướng này
and then we're actually going to make    và sau đó chúng tôi thực sự sẽ làm
the root view the content view of the    chế độ xem gốc chế độ xem nội dung của
app and that's just this blank file here    app và đó chỉ là tệp trống ở đây
and what we're going to do in this    và những gì chúng ta sẽ làm trong này
content view is actually create a    chế độ xem nội dung thực sự là tạo một
z-stack    ngăn xếp z
where we have the main tab and the side    nơi chúng tôi có tab chính và phụ
menu sort of stacked on top of each    sắp xếp menu xếp chồng lên nhau
other inside of another view which is    khác bên trong một khung nhìn khác đó là
going to be this content view and then    sẽ là chế độ xem nội dung này và sau đó
we're going to add some presentation    chúng tôi sẽ thêm một số bài thuyết trình
logic so that like when we hit this    logic để giống như khi chúng ta nhấn cái
này
button up at the top on the navigation    nút lên ở trên cùng trên điều hướng
bar    quán ba
that it'll bring that side menu into    rằng nó sẽ đưa menu phụ đó vào
view and they'll be arranged in a    xem và chúng sẽ được sắp xếp trong một
z-stack where you can see that the side    z-stack nơi bạn có thể thấy rằng bên
menu is sort of on top of the main tab    menu được sắp xếp ở trên cùng của tab
chính
view so that's how we're going to do    xem vì vậy đó là cách chúng ta sẽ làm
this    cái này
so anyway    dù sao đi nữa
let's go ahead and actually just run the    hãy tiếp tục và thực sự chỉ cần chạy
app really quickly    ứng dụng thực sự nhanh chóng
and it's just gonna be like this thing    và nó sẽ giống như thế này
that says hello world but we should    điều đó nói xin chào thế giới nhưng chúng
ta nên
notice that we're inside of a navigation    lưu ý rằng chúng tôi đang ở trong một điều
hướng




about:blank    68/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
view and we can't actually see that    xem và chúng ta thực sự không thể thấy
điều đó
right now because we have to add uh some    ngay bây giờ bởi vì chúng ta phải thêm uh
một số
components to our navigation bar    các thành phần vào thanh điều hướng của
chúng tôi
so really quickly before we do that i'm    rất nhanh trước khi chúng tôi làm điều đó tôi
just going to say z stack    chỉ cần nói z ngăn xếp
and the alignment is going to be    và sự liên kết sẽ được
dot top leading and we'll see why this    dẫn đầu và chúng ta sẽ thấy tại sao điều
này
comes into play in a little bit    đi vào chơi trong một chút
and then we're going to add the main tab    và sau đó chúng ta sẽ thêm tab chính
view so let's actually run it again and    xem vì vậy hãy thực sự chạy lại và
see if our main tab view is showing up    xem chế độ xem tab chính của chúng tôi có
hiển thị không
and you guys notice that it is and now    và các bạn lưu ý rằng nó là và bây giờ
there's some space up at the top and    có một số không gian ở trên cùng và
that's actually the navigation bar    đó thực sự là thanh điều hướng
so let's go ahead and configure our    vì vậy hãy tiếp tục và định cấu hình
navigation bar    thanh điều hướng
so that it has this uh    để nó có cái này uh
user profile    Thông tin người dùng
image view up at the top and then a    xem hình ảnh ở trên cùng và sau đó là một
navigation bar title    tiêu đề thanh điều hướng
alright guys so that's pretty easy to do    được rồi các bạn, điều đó khá dễ thực hiện
we just say navigation    chúng tôi chỉ nói điều hướng
title and we give it a text of home    tiêu đề và chúng tôi cung cấp cho nó một
văn bản của nhà
and then we say that navigation bar    và sau đó chúng tôi nói rằng thanh điều
hướng
title display mode is dot inline so we    chế độ hiển thị tiêu đề là dấu chấm nội
tuyến vì vậy chúng tôi
don't want that large title we want it    không muốn tiêu đề lớn mà chúng tôi muốn
nó
to be in line so that's looking good    để được xếp hàng vì vậy mà nhìn tốt
then we just need to create this    sau đó chúng ta chỉ cần tạo cái này
button up at the top here so we're    nút lên ở trên cùng ở đây vì vậy chúng tôi
actually going to use this toolbar    thực sự sẽ sử dụng thanh công cụ này




about:blank    69/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
option    lựa chọn
apple said that the navigation bar items    apple nói rằng các mục trên thanh điều
hướng
is getting deprecated they want us to    đang bị phản đối, họ muốn chúng tôi
use this    dùng cái này
so here    nên ở đây
you just place a toolbar item    bạn chỉ cần đặt một mục trên thanh công cụ
and you're going to do this one that has    và bạn sẽ làm cái này có
placement and then you can say dot    vị trí và sau đó bạn có thể nói dấu chấm
navigation bar leading and the content    thanh điều hướng hàng đầu và nội dung
is just going to be a circle    sẽ chỉ là một vòng tròn
with a frame of 32 by 32 and that's    với khung 32 x 32 và đó là
going to be our profile image eventually    cuối cùng sẽ là hình ảnh hồ sơ của chúng
tôi
but this is essentially just going to    nhưng điều này về cơ bản chỉ là đi đến
act as our button to show our side menu    hoạt động như nút của chúng tôi để hiển thị
menu bên của chúng tôi
so let's actually go ahead and wrap this    Vì vậy, hãy thực sự tiếp tục và hoàn thành
phần này
in a button or create a button out of it    trong một nút hoặc tạo một nút từ nó
so you're going to say action and label    vì vậy bạn sẽ nói hành động và nhãn
label is going to be that and then we're    nhãn sẽ là cái đó và sau đó chúng ta
going to toggle some property here    sẽ chuyển đổi một số tài sản ở đây
that's actually going to show and hide    điều đó thực sự sẽ hiển thị và ẩn
our side menu so let's go ahead and    menu phụ của chúng tôi vì vậy hãy tiếp tục
và
create it now we're going to say state    tạo nó ngay bây giờ chúng ta sẽ nói trạng
thái
private var    var riêng
show    trình diễn
showing menu or show menu    hiển thị menu hoặc hiển thị menu
equals false and then here we're just    bằng sai và sau đó ở đây chúng tôi chỉ
going to say show menu dot toggle    sẽ nói hiển thị menu dấu chấm chuyển đổi
okay so that's looking pretty good so    được rồi vì vậy nó trông khá tốt vì vậy
far we're also going to use the show    xa chúng ta cũng sẽ sử dụng chương trình
menu    thực đơn
to help us with our presentation logic    để giúp chúng tôi với logic trình bày của
chúng tôi
for how to show and hide the side menu    để biết cách hiển thị và ẩn menu bên


about:blank

    70/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so one more time guys it's actually a z    vì vậy một lần nữa các bạn nó thực sự là
một z
stack    cây rơm
so we're going to put the side menu on    vì vậy chúng tôi sẽ đặt menu phụ trên
top of    trên cùng của
the main tab view    chế độ xem tab chính
and    Và
we're just going to give the side menu    chúng tôi sẽ chỉ cung cấp menu phụ
a default offset so that it starts off    một phần bù mặc định để nó bắt đầu tắt
the screen and then when we want to show    màn hình và sau đó khi chúng tôi muốn hiển
thị
the menu we just bring it onto the    menu chúng tôi chỉ mang nó lên
screen or into view on the screen so    màn hình hoặc vào chế độ xem trên màn
hình để
right now the side menu exists it's just    ngay bây giờ menu bên tồn tại nó chỉ là
off the screen that we hit the button    tắt màn hình mà chúng tôi nhấn nút
and it comes onto screen and gets placed    và nó xuất hiện trên màn hình và được đặt
over top of the main tab view    phía trên cùng của chế độ xem tab chính
so let's go ahead and figure out how to    vì vậy hãy tiếp tục và tìm hiểu làm thế nào
để
do that    làm việc đó đi
so    Vì thế
in a z-stack    trong ngăn xếp z
if you place something first and then    nếu bạn đặt một cái gì đó đầu tiên và sau đó
something after the thing you place    một cái gì đó sau những điều bạn đặt
after goes on top so we're going to put    sau khi đi lên trên cùng, vì vậy chúng tôi sẽ
đặt
the side menu view here and this will    chế độ xem menu bên ở đây và điều này sẽ
mean that the side menu view is on top    có nghĩa là chế độ xem menu bên ở trên
cùng
of the main tab view    của chế độ xem tab chính
so just to see that let's go ahead and    vì vậy chỉ để thấy rằng chúng ta hãy tiếp tục
và
give it a frame    cung cấp cho nó một khung
of    của
width    chiều rộng
300    300
and you guys will notice that it's going    và các bạn sẽ nhận thấy rằng nó đang diễn
ra




about:blank    71/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to be    được
on the top leading edge or that's where    trên cạnh hàng đầu hoặc đó là nơi
it's going to start because that's how    nó sẽ bắt đầu bởi vì đó là cách
we have our alignment configured for our    chúng tôi đã định cấu hình căn chỉnh cho
z-stack    ngăn xếp z
so let's actually just go ahead and run    vì vậy hãy thực sự tiếp tục và chạy
this and see if the side menu view is    cái này và xem chế độ xem menu bên có
showing up    hiển thị
so    Vì thế
it's really messy but it is showing up    nó thực sự lộn xộn nhưng nó đang hiển thị
right    Phải
so we actually want to give it a    vì vậy chúng tôi thực sự muốn cung cấp cho
nó một
background    lý lịch
of color.white    màu sắc. trắng
and let's go ahead and see if we can see    và hãy tiếp tục và xem liệu chúng ta có thể
thấy
it a little bit better or i should    nó tốt hơn một chút hoặc tôi nên
probably made it like red or something    có lẽ làm cho nó giống như màu đỏ hoặc
một cái gì đó
but it's okay    Nhưng nó ổn mà
so we can see it now um    vì vậy chúng ta có thể thấy nó bây giờ um
and we can see that this is like the    và chúng ta có thể thấy rằng điều này giống
như
tweet or the feed view right we can    tweet hoặc chế độ xem nguồn cấp dữ liệu
bên phải, chúng tôi có thể
still see like the bookmark button on    vẫn thấy như nút đánh dấu trên
the cells and we can still see the tab    các ô và chúng ta vẫn có thể thấy tab
bar down here    thanh xuống đây
so this is um    vậy đây là ừm
you know    Bạn biết
the side menu view showing up so that's    chế độ xem menu bên hiển thị vì vậy đó là
good we just have to add a couple more    tốt, chúng ta chỉ cần thêm một vài chi tiết
things to get this all working properly    mọi thứ để làm cho tất cả điều này hoạt
động bình thường
so    Vì thế
first off guys let's give it um an    trước hết các bạn hãy cho nó um một
offset    bù lại




about:blank    72/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and the x-axis is going to be if we're    và trục x sẽ là nếu chúng ta
showing the menu yes it's 0    hiển thị menu vâng, đó là 0
no it's minus 300. so this has a width    không, nó là âm 300. vậy cái này có chiều
rộng
of 300 and if we're not showing it we're    của 300 và nếu chúng tôi không hiển thị nó,
chúng tôi
going to just move it over to the left    sẽ chỉ cần di chuyển nó qua bên trái
by 300 pixels    bằng 300 pixel
so let's run this again and we should    vì vậy hãy chạy lại cái này và chúng ta nên
notice that oops y is just going to be    lưu ý rằng rất tiếc y sẽ chỉ là
zero    số không
that we can no longer see the side menu    rằng chúng ta không còn có thể nhìn thấy
menu bên
oh um hold on that's weird    oh um giữ nó thật kỳ lạ
we can    chúng ta có thể
let's just give it a color a background    chúng ta hãy tạo cho nó một màu nền
color of clear    màu rõ ràng
so show menu yes it's zero    vì vậy hãy hiển thị menu vâng, không
[Music]    [Âm nhạc]
no it's 300    không, nó là 300
right okay so yeah let's go here guys    đúng rồi, vâng, chúng ta hãy đi đây các bạn
we're going to say show menu yes    chúng tôi sẽ nói hiển thị menu có
color.white no color.clear    color.white không color.clear
okay so now we actually can't see it and    được rồi, bây giờ chúng tôi thực sự không
thể nhìn thấy nó và
if i were to press this button    nếu tôi nhấn nút này
you guys notice that it comes into view    các bạn chú ý là nó vào xem
right it's just not animating so we're    đúng là nó không hoạt hình nên chúng tôi
gonna fix all that stuff we're gonna add    sẽ sửa chữa tất cả những thứ mà chúng tôi
sẽ thêm vào
like a shadow view here so let's just    giống như một cái nhìn bóng tối ở đây vì
vậy hãy chỉ
keep going with this    tiếp tục với điều này
um    ô
on the main tab you were in between    trên tab chính bạn đang ở giữa
these guys we're gonna say if show menu    những người này chúng ta sẽ nói nếu hiển
thị menu
and we're gonna add like a black view    và chúng ta sẽ thêm như một chế độ xem
màu đen




about:blank    73/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
here to cover up this uh portion of the    ở đây để che đậy phần uh này của
view    xem
um so that it looks like a shadow is    ừm để nó trông giống như một cái bóng
being placed on top of it so we're gonna    được đặt trên đầu trang của nó vì vậy chúng
tôi sẽ
say z stack    nói z ngăn xếp
we're gonna say color    chúng ta sẽ nói màu sắc
dot black    chấm đen
dot opacity    độ mờ chấm
0.25    0,25
and we're actually going to    và chúng tôi thực sự sẽ
now give this    bây giờ đưa cái này
an on tap gesture    một cử chỉ trên máy
and say with animation dot ease in out    và nói với hoạt hình chấm dễ dàng trong ra
ngoài
showing men or show menu    hiển thị đàn ông hoặc hiển thị menu
equals false so what this is going to do    bằng sai vậy điều này sẽ làm gì
guys    các bạn
is when we tap on this like shadow view    là khi chúng ta nhấn vào cái này giống như
chế độ xem bóng tối
it's going to dismiss the side menu    nó sẽ loại bỏ menu bên
and then on the main tab view    và sau đó trên chế độ xem tab chính
um we notice that we're going to want to    ừm, chúng tôi nhận thấy rằng chúng tôi sẽ
muốn
hide the navigation bar here so we're    ẩn thanh điều hướng ở đây để chúng tôi
actually going to go on the main tab    thực sự sẽ đi trên tab chính
view and say dot navigation    xem và nói điều hướng dấu chấm
are hidden    Đang ẩn
and that is going to be showing menu    và điều đó sẽ được hiển thị menu
or show menu    hoặc hiển thị menu
so let's see what we have now    vì vậy hãy xem những gì chúng ta có bây
giờ
with this    Với cái này
okay so that's looking pretty good and    được rồi, điều đó trông khá tốt và
then we hit this    sau đó chúng tôi đánh cái này
okay    được rồi
so our side menu is looking    vì vậy menu phụ của chúng tôi đang tìm
kiếm




about:blank    74/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
uh better now right and then we see that    uh tốt hơn ngay bây giờ và sau đó chúng ta
thấy điều đó
we have this like sort of shadow view on    chúng tôi có cái này giống như loại chế độ
xem bóng tối trên
top of our main tab view and if i were    đầu chế độ xem tab chính của chúng tôi và
nếu tôi là
to hit that    đánh cái đó
it sort of slides everything back over    nó sắp trượt mọi thứ trở lại
so    Vì thế
all right guys now we just want to clean    được rồi các bạn bây giờ chúng tôi chỉ
muốn làm sạch
up the animation a little bit as well so    lên hoạt hình một chút cũng vậy
when we actually toggle the menu let's    khi chúng ta thực sự chuyển menu, hãy
go down uh to this button action handler    đi xuống uh để xử lý hành động nút này
cut that with command x and say with    cắt nó bằng lệnh x và nói với
animation dot ease in out    hoạt hình chấm dễ dàng trong ra ngoài
and then say show menu.toggle the same    và sau đó nói hiển thị menu. chuyển đổi
tương tự
way we toggle it in we need to toggle it    cách chúng ta chuyển đổi nó trong chúng ta
cần chuyển đổi nó
back out    rút lui
and then we're also    và sau đó chúng tôi cũng
going to add um    sẽ thêm um
something called ignore safe area on    một cái gì đó gọi là bỏ qua khu vực an toàn
trên
this z-stack so    ngăn xếp z này vì vậy
go here guys and say just say ignore    đi đây các bạn và nói chỉ cần nói bỏ qua
safe area    khu vực an toàn
um    ô
and that's just going to make sure that    và điều đó sẽ đảm bảo rằng
the shadow view stretches all the way to    chế độ xem bóng trải dài đến tận
the top and bottom of the screen not    trên cùng và dưới cùng của màn hình không
respecting those safe areas and    tôn trọng những khu vực an toàn đó và
for the opacity    cho độ mờ
or we're going to say    hoặc chúng ta sẽ nói
show menu actually let's let me show you    thực sự hiển thị menu, hãy để tôi chỉ cho
bạn
guys what that's going to do before i do    các bạn sẽ làm gì trước khi tôi làm
it so you can understand it better    nó để bạn có thể hiểu nó tốt hơn




about:blank



    75/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
but anyway    nhưng dù sao
let's see how this is looking now it    hãy xem nó trông như thế nào bây giờ
should look pretty smooth    nên trông khá mượt mà
awesome right that's pretty smooth    tuyệt vời đúng là khá trơn tru
we click the black view or the shadow    chúng tôi nhấp vào chế độ xem màu đen
hoặc bóng tối
view and it just goes right back over    xem và nó chỉ quay lại ngay
and we notice that we can't do anything    và chúng tôi nhận thấy rằng chúng tôi không
thể làm bất cứ điều gì
on the feed this acts as sort of like a    trên nguồn cấp dữ liệu này hoạt động giống
như một
like um    như ừm
like an overlay view and we just hit it    giống như một chế độ xem lớp phủ và
chúng tôi chỉ nhấn nó
and it dismisses our side menu and we    và nó loại bỏ menu phụ của chúng tôi và
chúng tôi
notice that it stretches all the way to    lưu ý rằng nó kéo dài tất cả các cách để
the top and bottom of the view as well    trên cùng và dưới cùng của chế độ xem
so really quickly guys    nhanh thật đấy các bác
um i'm going to add    ừm tôi sẽ thêm
some logic to this opacity as well i'm    một số logic cho độ mờ này cũng như tôi
going to say show menu yes    sẽ nói hiển thị menu có
0.25    0,25
no 0.0    không 0,0
and what this is going to do is just    và những gì nó sẽ làm chỉ là
make it so that the opacity is based off    làm cho nó để độ mờ được dựa trên
of this    điều này
show menu guy as well and it's going to    hiển thị anh chàng menu và nó sẽ
animate in and out for us    sinh động trong và ngoài cho chúng tôi
a little smoother um than if we don't    một chút mượt mà hơn nếu chúng ta không
have that there so that's looking pretty    có cái đó ở đó nên nó trông rất đẹp
good    Tốt
um    ô
and that's pretty much gonna wrap it up    và đó là khá nhiều sẽ kết thúc nó
for that side menu presentation logic    cho logic trình bày menu bên đó
guys    các bạn
um    ô
the next thing i want us to do is    điều tiếp theo tôi muốn chúng ta làm là




about:blank



    76/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
actually implement a    thực sự thực hiện một
action to this profile button so that it    hành động với nút hồ sơ này để nó
actually takes us over to the user    thực sự đưa chúng tôi đến với người dùng
profile    hồ sơ
so let's do that and that is going to    vì vậy hãy làm điều đó và điều đó sẽ
pretty much wrap it up for this chapter    khá nhiều kết thúc cho chương này
so what we're going to do is handle that    vì vậy những gì chúng ta sẽ làm là xử lý nó
here    đây
so    Vì thế
we're going to go inside this guy and    chúng ta sẽ đi vào bên trong anh chàng này
và
we're going to say    chúng ta sẽ nói
if option equals dot profile so that's    nếu tùy chọn bằng hồ sơ dấu chấm thì đó là
another awesome part about the enum we    một phần tuyệt vời khác về enum chúng tôi
can check and see    có thể kiểm tra và xem
if we're looking at a certain option and    nếu chúng ta đang xem xét một lựa chọn
nhất định và
we get this awesome like dot notation    chúng tôi nhận được ký hiệu giống như dấu
chấm tuyệt vời này
for it    cho nó
um then i'm going to create a navigation    ừm thì tôi sẽ tạo một điều hướng
link    liên kết
destination label    nhãn đích
cool    mát mẻ
so the destination is going to be the    vì vậy điểm đến sẽ là
profile view and then the label is going    xem hồ sơ và sau đó nhãn sẽ đi
to be    được
this guy we see here so    anh chàng này chúng ta thấy ở đây vì vậy
we're going to notice that we do    chúng tôi sẽ nhận thấy rằng chúng tôi làm
actually want to extract this as a like    thực sự muốn trích xuất cái này như một
lượt thích
as a reusable view so let's go down at    dưới dạng chế độ xem có thể tái sử dụng, vì
vậy hãy đi xuống tại
the bottom and create an extension here    phía dưới và tạo tiện ích mở rộng tại đây
on side menu view    ở chế độ xem menu bên
we're going to say var    chúng ta sẽ nói var
side menu option    tùy chọn menu bên
row    hàng ngang




about:blank



    77/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
or option row view    hoặc chế độ xem hàng tùy chọn
some view    một số xem
and we're just going to    và chúng tôi sẽ chỉ
take this guy and put it in here and i    đưa anh chàng này và đặt nó vào đây và tôi
actually think we need to make this its    thực sự nghĩ rằng chúng ta cần phải làm
điều này
own view guys that's probably why i had    những người có quan điểm riêng, đó có lẽ là
lý do tại sao tôi có
it like that before because we need    nó như thế trước bởi vì chúng ta cần
access to this option right    truy cập vào tùy chọn này ngay
so let's go ahead and actually just    vì vậy hãy tiếp tục và thực sự chỉ
create that view    tạo chế độ xem đó
swift ui view we're going to say psi or    Chế độ xem ui nhanh chóng, chúng tôi sẽ
nói psi hoặc
the outside menu    thực đơn bên ngoài
option    lựa chọn
row view    xem hàng
it's a little bit long but that's okay    nó hơi dài nhưng không sao
and we're actually going to initialize    và chúng tôi thực sự sẽ khởi tạo
this with a option or we could call it a    cái này với một tùy chọn hoặc chúng ta có
thể gọi nó là một
view model    xem mô hình
side menu view model    mô hình xem menu bên
and then go back to this guy    và sau đó quay lại với anh chàng này
and just cut this h stack out we can    và chỉ cần cắt ngăn xếp h này ra là chúng ta
có thể
remove this extension    xóa phần mở rộng này
and then just go ahead and paste that in    và sau đó chỉ cần tiếp tục và dán nó vào
there and everything should act exactly    ở đó và mọi thứ nên hành động chính xác
the same    giống nhau
um we just need to call this view model    ừm chúng ta chỉ cần gọi mô hình xem này
and we need to do that in the preview as    và chúng ta cần làm điều đó trong bản xem
trước như
well just pass in like dot profile    cũng chỉ cần vượt qua như chấm hồ sơ
so this is what your option row view    vì vậy đây là chế độ xem hàng tùy chọn của
bạn
should look like side menu view now we    bây giờ trông giống như chế độ xem menu
bên, chúng tôi
can go back here and in the label    có thể quay lại đây và trong nhãn




about:blank



    78/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
we can say side menu    chúng ta có thể nói menu phụ
option row view and just pass in that    tùy chọn chế độ xem hàng và chỉ cần
chuyển vào đó
guy and we can actually rename this to    anh chàng và chúng ta thực sự có thể đổi
tên cái này thành
view model    xem mô hình
just so it makes a little bit more sense    chỉ để nó có ý nghĩa hơn một chút
and then here guys    và sau đó ở đây các bạn
um we're actually going to add an else    ừm, chúng tôi thực sự sẽ thêm một cái khác
if option equals dot log out    nếu tùy chọn bằng dấu chấm đăng xuất
we're going to say print    chúng ta sẽ nói in
uh or you know we're actually    uh hoặc bạn biết chúng tôi thực sự
going to add like um    sẽ thêm như um
an action handler for logging out there    một trình xử lý hành động để đăng xuất ở
đó
and then we can just go here and say    và sau đó chúng ta có thể đến đây và nói
else and then pass in the side menu    khác và sau đó chuyển vào menu bên
option    lựa chọn
row view    xem hàng
view model just like that    xem mô hình như thế
oh and that needs to be view model    oh và đó cần phải được xem mô hình
and that needs to be modeled cool    và điều đó cần phải được mô hình hóa tuyệt
vời
okay so now our builds should succeed    được rồi, bây giờ các bản dựng của chúng
ta sẽ thành công
sorry that was a little bit messy    xin lỗi đó là một chút lộn xộn
um    ô
so now guys let's go and run this code    Vì vậy, bây giờ các bạn hãy đi và chạy mã
này
and see if this actually serves as a    và xem nếu điều này thực sự phục vụ như
là một
navigation link or works as a navigation    liên kết điều hướng hoặc hoạt động như
một điều hướng
link so i'm going to go here    liên kết vì vậy tôi sẽ đi đây
and we notice that the text changed to    và chúng tôi nhận thấy rằng văn bản đã thay
đổi thành
blue and that's an indicator that it    màu xanh và đó là một dấu hiệu cho thấy nó
turned into a navigation link we just    biến thành một liên kết điều hướng chúng
tôi chỉ
need to go back in there and change that    cần quay lại đó và thay đổi điều đó


about:blank

    79/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so that it doesn't change the blue but    để nó không thay đổi màu xanh nhưng
if i hit profile you guys will notice it    nếu tôi nhấn hồ sơ các bạn sẽ nhận thấy nó
takes me right over to my profile which    đưa tôi đến ngay hồ sơ của tôi
is pretty awesome right    là khá tuyệt vời phải không
and then if i go back    và sau đó nếu tôi quay trở lại
it takes me back here but the side menu    nó đưa tôi trở lại đây nhưng menu bên
view is still showing so we're going to    chế độ xem vẫn đang hiển thị nên chúng tôi
sẽ
want to make it so that if we go back it    muốn làm cho nó để nếu chúng ta quay trở
lại nó
just takes us back to the feed view so    chỉ đưa chúng tôi trở lại chế độ xem nguồn
cấp dữ liệu
let's go ahead and fix those two things    hãy tiếp tục và sửa chữa hai điều đó
and then wrap up this chapter so in the    và sau đó kết thúc chương này để trong
side menu row view for this guy we're    chế độ xem hàng menu bên cho anh chàng
này, chúng tôi
going to say foreground color is dot    sẽ nói màu nền trước là dấu chấm
black    đen
so that'll solve that problem where it    vì vậy sẽ giải quyết vấn đề đó ở đâu
turns the navigation link text blue    biến văn bản liên kết điều hướng thành màu
xanh lam
and then    và sau đó
back in our content view    quay lại chế độ xem nội dung của chúng tôi
on this z stack guys we're just gonna    trên ngăn xếp z này, chúng ta sẽ
say    nói
dot on appear    dấu chấm xuất hiện
show menu equals false so that way every    hiển thị menu bằng sai để theo cách đó mọi
time this view appears    thời gian chế độ xem này xuất hiện
like so when we hit back on appear will    như vậy khi chúng tôi quay lại sẽ xuất hiện
get called    được gọi
and then it's going to    và sau đó nó sẽ
hide the menu    ẩn thực đơn
or it's going to set show menu to false    hoặc nó sẽ đặt menu hiển thị thành false
and once that sets to false it goes back    và một khi nó được đặt thành false, nó sẽ
quay trở lại
through our logic in the view and we'll    thông qua logic của chúng tôi trong chế độ
xem và chúng tôi sẽ
hide the side menu so we go here we    ẩn menu bên để chúng tôi đến đây chúng tôi




about:blank    80/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
notice that that part's fixed go here we    lưu ý rằng phần đó đã được sửa ở đây
chúng tôi
hit the back button    nhấn nút quay lại
and we notice that like it just brings    và chúng tôi nhận thấy rằng nó chỉ mang lại
us back to    chúng tôi trở lại
our main view so that is looking super    chế độ xem chính của chúng tôi trông siêu
đẹp
super smooth let me just hit profile one    siêu mượt để tôi chỉ cần nhấn hồ sơ một
more time we go back and when we go back    thêm thời gian chúng ta quay lại và khi
chúng ta quay lại
that like i said that on appear guy gets    như tôi đã nói rằng khi xuất hiện, anh chàng
được
called it sets show menu to false and    được gọi là nó đặt menu hiển thị thành false
và
then    sau đó
um it just sort of animates everything    ừm, nó chỉ làm sinh động mọi thứ
back to its original state of not    trở lại trạng thái ban đầu của nó không
showing the menu and showing our main    hiển thị menu và hiển thị chính của chúng
tôi
tab view here    tab xem ở đây
one thing that we notice however is that    Tuy nhiên, một điều mà chúng tôi nhận thấy
là
our logout button disappeared so really    nút đăng xuất của chúng tôi đã thực sự biến
mất
quickly let's fix that and then call    hãy nhanh chóng khắc phục điều đó và sau
đó gọi
this chapter or section a wrap    chương hoặc phần này kết thúc
so go back to side menu view guys we    vì vậy hãy quay lại chế độ xem menu bên,
chúng tôi
have no code with for this log out    không có mã nào cho việc đăng xuất này
option and that's because we want to    tùy chọn và đó là bởi vì chúng tôi muốn
create a button here    tạo một nút ở đây
and our action we're going to just say    và hành động của chúng tôi, chúng tôi sẽ
chỉ nói
like print handle log out here    như xử lý in đăng xuất tại đây
and our label is just going to be this    và nhãn của chúng tôi sẽ là thế này
guy    chàng trai
so here this is a little bit messy we do    vì vậy đây là một chút lộn xộn chúng tôi làm
have to go through some logic here um to    phải trải qua một số logic ở đây um để




about:blank    81/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
handle what we want each one of the    xử lý những gì chúng tôi muốn mỗi một
trong những
buttons to do    nút để làm
but it's not that bad like the logic    nhưng nó không tệ như logic
really isn't terrible um and now we can    thực sự không tệ lắm ừm và bây giờ chúng
ta có thể
run this again    chạy cái này một lần nữa
and    Và
we can see that when we go back to our    chúng ta có thể thấy điều đó khi chúng ta
quay trở lại
side menu the log out button is going to    menu bên, nút đăng xuất sẽ xuất hiện
be there    ở đó
and we can click it and it's it works as    và chúng ta có thể nhấp vào nó và nó hoạt
động như
a button now and we can see our print    một nút bây giờ và chúng ta có thể thấy bản
in của mình
statement showing up in our console    tuyên bố hiển thị trong bảng điều khiển của
chúng tôi
there so that's going to wrap it up for    ở đó vì vậy sẽ kết thúc nó cho
the side menu feature guys uh we can get    tính năng menu bên các bạn uh chúng ta có
thể nhận được
to our profile from here which is    đến hồ sơ của chúng tôi từ đây
awesome and eventually we'll be able to    tuyệt vời và cuối cùng chúng ta sẽ có thể
log out from there    đăng xuất khỏi đó
and show that login and sign up flow    và hiển thị quy trình đăng nhập và đăng ký
đó
and we're going to be working on    và chúng tôi sẽ làm việc trên
building that soon but before we do that    xây dựng nó sớm nhưng trước khi chúng tôi
làm điều đó
the next ui component we're going to    thành phần giao diện người dùng tiếp theo
chúng ta sẽ làm
build the second to last one is going to    xây dựng cái thứ hai đến cái cuối cùng sẽ
thành
be that upload a tweet view and that's    là tải lên một lượt xem tweet và đó là
going to be super quick we just have to    sẽ rất nhanh, chúng ta chỉ cần
build this floating button present a    xây dựng nút nổi này trình bày một
sheet and then show our upload a tweet    trang tính và sau đó hiển thị một tweet tải
lên của chúng tôi
view    xem
and that's really going to be super    và đó thực sự sẽ là siêu




about:blank    82/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
quick and easy then we build the login    nhanh chóng và dễ dàng sau đó chúng tôi
xây dựng thông tin đăng nhập
and sign up page and then we are ready    và đăng ký trang và sau đó chúng tôi đã sẵn
sàng
to start hooking up our api which is    để bắt đầu kết nối api của chúng tôi, đó là
going to be super exciting the app is    ứng dụng sẽ cực kỳ thú vị
looking super slick i'm hoping you guys    trông siêu bóng bẩy, tôi hy vọng các bạn
have this working right now and it's    có cái này hoạt động ngay bây giờ và nó
looking good for you as well let's go    tìm kiếm tốt cho bạn cũng như chúng ta hãy
đi
ahead and power through finishing up    phía trước và sức mạnh thông qua kết thúc
lên
this ui so we can get to the database    giao diện người dùng này để chúng tôi có
thể truy cập cơ sở dữ liệu
stuff which is going to be really    những thứ sẽ thực sự
exciting    thú vị
all right guys so we're going to start    được rồi mọi người, vậy chúng ta sẽ bắt
đầu
by creating this floating button here    bằng cách tạo nút nổi này tại đây
so what we're going to do is hop into    vì vậy những gì chúng ta sẽ làm là nhảy vào
the feed view and we're going to command    chế độ xem nguồn cấp dữ liệu và chúng tôi
sẽ ra lệnh
click onto the scroll view and click    nhấp vào chế độ xem cuộn và nhấp
embed in z stack so this is just going    nhúng vào ngăn xếp z vì vậy điều này sẽ
diễn ra
to    ĐẾN
uh sort of float on top of the scroll    uh loại nổi trên đầu cuộn
view you notice we'll be able to scroll    xem bạn nhận thấy chúng tôi sẽ có thể cuộn
but the    nhưng
the button stays stationary right which    nút vẫn đứng yên bên phải
is what we want    là những gì chúng tôi muốn
and we're going to set an alignment on    và chúng ta sẽ thiết lập một sự liên kết trên
this of dot bottom trailing and that's    đây là dấu chấm phía dưới và đó là
how we're going to get it to show up in    làm thế nào chúng ta sẽ làm cho nó xuất
hiện trong
the bottom right corner of the screen    góc dưới cùng bên phải của màn hình
so just go ahead here and create a    vì vậy chỉ cần tiếp tục ở đây và tạo một
button    cái nút
we can say print    chúng ta có thể nói in




about:blank    83/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
show new tweet view    hiển thị chế độ xem tweet mới
and then the label is just going to be    và sau đó nhãn sẽ chỉ là
this button here    nút này ở đây
this is an asset that you guys are going    đây là một tài sản mà các bạn đang đi
to need to download so the link to that    cần tải xuống nên liên kết đến đó
is in the description    là trong mô tả
the source code will be available on my    mã nguồn sẽ có sẵn trên của tôi
personal website guys and the link to    trang web cá nhân và liên kết đến
that is also in the description so check    cái đó cũng có trong phần mô tả nên hãy
kiểm tra
that out if you want the completed    đó ra nếu bạn muốn hoàn thành
source code    mã nguồn
but anyway we're gonna go here and we're    nhưng dù sao thì chúng ta sẽ đến đây và
chúng ta
just gonna say image    chỉ cần nói hình ảnh
tweet then we're gonna say dot resizable    tweet thì chúng ta sẽ nói dấu chấm có thể
thay đổi kích thước
make the rendering mode dot template    tạo mẫu dấu chấm chế độ kết xuất
give it a frame of 28 by 28    cung cấp cho nó một khung hình 28 x 28
and then you're gonna give it some    và sau đó bạn sẽ cho nó một số
padding    đệm
and then uh so that looks pretty good we    và sau đó uh để trông khá tốt, chúng tôi
just need to give it that clip shape    chỉ cần cung cấp cho nó hình dạng clip đó
so we're going to say background is    vì vậy chúng ta sẽ nói nền là
color    màu sắc
oops parenthesis dot system blue    rất tiếc dấu ngoặc đơn hệ thống dấu chấm
màu xanh lam
so let's see what that does so that    vì vậy hãy xem những gì nó làm để
looks okay we're going to say foreground    có vẻ ổn, chúng ta sẽ nói tiền cảnh
colors.white dot clip shape is    colors.white dot clip hình dạng là
a circle    một vòng tròn
and then we're going to give it some    và sau đó chúng tôi sẽ cung cấp cho nó một
số
padding    đệm
so that looks really good and    vì vậy trông thực sự tốt và
now what we need to do guys is make it    bây giờ những gì chúng ta cần làm là làm
cho nó
so that when we click this it presents    để khi chúng tôi nhấp vào đây, nó sẽ hiển thị




about:blank    84/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
this full screen    toàn màn hình này
and then we're going to work on building    và sau đó chúng ta sẽ làm việc để xây dựng
this view shortly after    quan điểm này ngay sau đó
so    Vì thế
uh let's go ahead and figure out how    uh chúng ta hãy tiếp tục và tìm hiểu làm thế
nào
we're going to do that so we're going to    chúng tôi sẽ làm điều đó vì vậy chúng tôi sẽ
create a state property up at the top    tạo một tài sản nhà nước ở trên cùng
called state private bar show new tweet    được gọi là thanh trạng thái riêng hiển thị
tweet mới
view    xem
and we're going to set it equal to false    và chúng ta sẽ đặt nó bằng false
and in the action for this guy we're    và trong hành động cho anh chàng này,
chúng tôi
just going to say show new    chỉ cần nói hiển thị mới
tweetview.toggle    tweetview.toggle
and then down at the bottom here right    và sau đó xuống dưới cùng ở đây bên phải
under padding you're going to say dot    dưới phần đệm bạn sẽ nói dấu chấm
full screen cover and you're going to    che toàn màn hình và bạn sẽ
select the option that says is presented    chọn tùy chọn cho biết được trình bày
on dismiss and content    về việc loại bỏ và nội dung
so is presented you're going to say    vì vậy được trình bày bạn sẽ nói
dollar sign shown you tweet view toggle    ký hiệu đô la hiển thị cho bạn chế độ xem
tweet chuyển đổi
oops    Ối
not that toggle you just say show new    không phải chuyển đổi mà bạn chỉ cần nói
hiển thị mới
tweet view so now this is bound to the    chế độ xem tweet vì vậy bây giờ điều này bị
ràng buộc với
state property so when this changes to    tài sản nhà nước vì vậy khi điều này thay
đổi thành
true it's going to present our full    đúng là nó sẽ trình bày đầy đủ của chúng tôi
screen cover    bìa màn hình
um on dismiss    ừm nghỉ việc
we don't need    chúng tôi không cần
and for the content let's just go ahead    và đối với nội dung, hãy tiếp tục
and say text    và nói văn bản
new tweet    tweet mới
view    xem


about:blank

    85/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so now we can go ahead and run the    vì vậy bây giờ chúng ta có thể tiếp tục và
chạy
application    ứng dụng
and we should see our button showing up    và chúng ta sẽ thấy nút của mình hiển thị
there    ở đó
and we should be able to press it    và chúng ta sẽ có thể nhấn nó
okay so it's showing up it's    được rồi vì vậy nó đang hiển thị
acting as a floating button which is    hoạt động như một nút nổi
nice we press it and it shows this full    tốt đẹp, chúng tôi nhấn nó và nó hiển thị đầy
đủ
screen cover which says new tweet view    bìa màn hình cho biết chế độ xem tweet mới
so now all we got to do is build out    vì vậy bây giờ tất cả những gì chúng ta phải
làm là xây dựng
that new tweet view and we can move on    chế độ xem tweet mới đó và chúng ta có thể
tiếp tục
so there's a couple things we have to do    vì vậy có một vài điều chúng ta phải làm
to get this done    để hoàn thành việc này
uh    uh
it looks pretty straightforward but    nó trông khá đơn giản nhưng
we're gonna have to build like a custom    chúng ta sẽ phải xây dựng như một phong
tục
text view here    văn bản xem tại đây
and that's because you know you want the    và đó là bởi vì bạn biết bạn muốn
text to wrap like this    văn bản để bọc như thế này
and if you have a text field it would    và nếu bạn có một trường văn bản thì nó sẽ
just keep going off screen so we have to    chỉ cần tiếp tục tắt màn hình vì vậy chúng tôi
phải
create like a text view and give it a    tạo giống như một chế độ xem văn bản và
cung cấp cho nó một
placeholder which is kind of annoying    trình giữ chỗ gây phiền nhiễu
but uh it is what it is it was the same    nhưng uh nó là như vậy nó là như nhau
thing that we have to do in ui kit so    điều mà chúng ta phải làm trong ui kit vì vậy
anyway let's go up to the core folder    dù sao đi nữa, hãy đi đến thư mục cốt lõi
create two new groups or one new group    tạo hai nhóm mới hoặc một nhóm mới
sorry we're gonna let's call it upload    xin lỗi, chúng tôi sẽ gọi nó là tải lên
tweet    tiếng riu ríu
and then we're going to create two    và sau đó chúng ta sẽ tạo ra hai
subfolders    thư mục con
one for view models    một cho các mô hình xem


about:blank

    86/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and one for views    và một cho lượt xem
so    Vì thế
in the views folder go ahead and create    trong thư mục lượt xem, hãy tiếp tục và tạo
a swift ui view we're going to call it    một chế độ xem ui nhanh chóng, chúng tôi
sẽ gọi nó
new tweet    tweet mới
view    xem
create    tạo nên
okay    được rồi
so let's see um what this is going to be    Vì vậy, hãy xem um những gì sẽ được
we're going to this is going to be    chúng ta sẽ đến đây sẽ là
it's not a navigation bar so we're just    nó không phải là một thanh điều hướng vì
vậy chúng tôi chỉ
going to create our own custom like    sẽ tạo tùy chỉnh của riêng chúng tôi như
action buttons up here    các nút hành động ở đây
and then we need to create another age    và sau đó chúng ta cần tạo ra một thời đại
khác
stack down here    xếp chồng xuống đây
with our picture and this custom text    với hình ảnh của chúng tôi và văn bản tùy
chỉnh này
area    khu vực
so    Vì thế
our parent view is going to be a v stack    chế độ xem gốc của chúng tôi sẽ là một
ngăn xếp v
because these things are vertically    bởi vì những thứ này là theo chiều dọc
stacked and we're going to have two h    xếp chồng lên nhau và chúng ta sẽ có hai h
stacks    ngăn xếp
so this first one is going to be a    vì vậy cái đầu tiên này sẽ là một
button    cái nút
action label    nhãn hành động
print dismiss this is going to be our    in bỏ qua đây sẽ là của chúng tôi
cancel button right here    nút hủy ngay tại đây
the label is going to be super simple    nhãn sẽ trở nên siêu đơn giản
it's just going to say text cancel    nó sẽ nói hủy văn bản
dot foreground color    chấm màu nền trước
color parenthesis    dấu ngoặc đơn màu
dot system blue    hệ thống chấm màu xanh
cool    mát mẻ




about:blank



    87/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
uh let's resume our preview    uh hãy tiếp tục xem trước của chúng tôi
awesome so that looks pretty good let's    tuyệt vời để có vẻ khá tốt chúng ta hãy
go ahead and copy this button code guys    hãy tiếp tục và sao chép mã nút này các
bạn
after that add a spacer because we're    sau đó thêm một miếng đệm bởi vì chúng
tôi
just gonna add a spacer in between these    chỉ cần thêm một miếng đệm ở giữa những
thứ này
two things    hai điều
go ahead and paste it    tiếp tục và dán nó
so we have two cancel buttons now this    vì vậy bây giờ chúng tôi có hai nút hủy
one is now oops gonna our our action we    một là bây giờ rất tiếc sẽ hành động của
chúng tôi chúng tôi
could change to say tweet    có thể thay đổi để nói tweet
also change your text to say tweet    cũng thay đổi văn bản của bạn để nói tweet
and then we just need to give this like    và sau đó chúng ta chỉ cần đưa ra như thế
này
this sort of background here    loại nền này ở đây
so let's go ahead and just delete this    vì vậy hãy tiếp tục và chỉ cần xóa cái này
we're going to give it    chúng tôi sẽ cung cấp cho nó
some padding    một số phần đệm
of dot horizontal    chấm ngang
and also    và cũng
some padding of dot vertical    một số phần đệm của dấu chấm dọc
prep comma eight    chuẩn bị dấu phẩy tám
so this sort of gives it that like wider    vì vậy loại này mang lại cho nó rộng hơn
or like rectangular frame with the    hoặc như khung hình chữ nhật với
padding parameters here or modifiers    tham số đệm ở đây hoặc công cụ sửa đổi
then we're gonna say dot background    sau đó chúng ta sẽ nói dấu chấm nền
color    màu sắc
parenthesis dot system blue    dấu ngoặc đơn hệ thống dấu chấm màu
xanh
so alex okay and then give it a    vì vậy alex được rồi hãy cho nó một
foreground color of white    màu nền trước màu trắng
so now tweet shows back up right that    vì vậy bây giờ tweet hiển thị sao lưu đúng
như vậy
like just like that    như thế thôi
and then we're going to give it a clip    và sau đó chúng tôi sẽ cung cấp cho nó một
clip




about:blank    88/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
shape of a capsule    hình dạng của một viên nang
so it's going to like    vì vậy nó sẽ thích
make it look like a capsule there and    làm cho nó trông giống như một viên nang ở
đó và
we're also going to bold the tweet text    chúng tôi cũng sẽ in đậm văn bản tweet
just like that so that looks pretty    chỉ cần như vậy để trông đẹp
smooth and then on this h stack we're    trơn tru và sau đó trên ngăn xếp h này,
chúng tôi
going to go ahead here    sẽ tiếp tục ở đây
and just say dot padding    và chỉ cần nói phần đệm dấu chấm
so that's looking pretty good    vì vậy điều đó trông khá tốt
then    sau đó
let's uh work on this other h stack so    chúng ta hãy làm việc trên ngăn xếp h khác
này
we're just going to have a circle    chúng ta sẽ có một vòng tròn
for now    bây giờ
and give it a frame    và cung cấp cho nó một khung
of 64 by 64.    của 64 nhân 64.
and that looks good    và điều đó có vẻ tốt
and then we are going to say    và sau đó chúng ta sẽ nói
we have now we have sorry we have to    chúng tôi có bây giờ chúng tôi xin lỗi chúng
tôi phải
create this custom uh text area    tạo vùng văn bản uh tùy chỉnh này
so    Vì thế
let's just uh go ahead and do that now    chúng ta hãy tiếp tục và làm điều đó ngay
bây giờ
so this is going to go    vì vậy điều này sẽ đi
in our components folder    trong thư mục thành phần của chúng tôi
which i actually want to get up to the    mà tôi thực sự muốn đạt được
top here    đầu ở đây
and let's just go ahead and create a new    và chúng ta hãy tiếp tục và tạo một cái mới
file swift ui view    tập tin nhanh chóng ui xem
and we're going to call it text area    và chúng ta sẽ gọi nó là vùng văn bản
okay guys so this is gonna have uh two    được rồi các bạn vì vậy điều này sẽ có uh
hai
properties    của cải
we're gonna say binding var text which    chúng ta sẽ nói văn bản var ràng buộc mà
is a string because we have to pass like    là một chuỗi bởi vì chúng ta phải vượt qua
như


about:blank

    89/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
a text in that will represent the tweet    một văn bản trong đó sẽ đại diện cho tweet
caption and we also need a placeholder    chú thích và chúng tôi cũng cần một trình
giữ chỗ
so we're gonna say let placeholder which    vì vậy chúng ta sẽ nói let placeholder which
is also a string    cũng là một chuỗi
then we're going to say init    sau đó chúng ta sẽ nói init
underscore placeholder string    chuỗi giữ chỗ gạch dưới
text which is a binding    văn bản là ràng buộc
with the string    với chuỗi
like that    như thế
and we're going to say self.placeholder    và chúng ta sẽ nói self.placeholder
equals placeholder and self dot    bằng giữ chỗ và tự chấm
underscore text equals text so that's    văn bản gạch dưới bằng văn bản vì vậy đó
là
how you initialize    cách bạn khởi tạo
a binding property    thuộc tính ràng buộc
just like    giống như
that and also here we're going to say ui    điều đó và cũng ở đây chúng ta sẽ nói ui
text view dot appearance oops    xem văn bản xuất hiện dấu chấm rất tiếc
well why is that not working    tại sao nó không hoạt động
appearance    vẻ bề ngoài
dot background color equals dot clear    chấm màu nền bằng chấm rõ ràng
so that's going to give our text view a    vì vậy điều đó sẽ cung cấp cho chế độ xem
văn bản của chúng ta
nice clear background color    màu nền rõ đẹp
okay    được rồi
so now the rest of this is pretty easy    vì vậy bây giờ phần còn lại của điều này là
khá dễ dàng
we actually don't need the preview here    chúng tôi thực sự không cần bản xem trước
ở đây
guys    các bạn
we're going to go here and create a z    chúng ta sẽ đến đây và tạo một z
stack and our alignment    ngăn xếp và sự liên kết của chúng tôi
is going to be top leading    sẽ dẫn đầu
and oops open up your brackets    và rất tiếc, hãy mở ngoặc của bạn
we're going to say text    chúng ta sẽ nói văn bản
and we're going to put the placeholder    và chúng tôi sẽ đặt trình giữ chỗ
there    ở đó




about:blank



    90/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot foreground color and we're going to    chấm màu nền trước và chúng ta sẽ
say color open parenthesis dot    nói màu mở dấu ngoặc đơn chấm
uh    uh
placeholder text    Văn bản giữ chỗ
just like that    cứ thế
dot padding    đệm chấm
dot    dấu chấm
horizontal which is going to be 8    ngang sẽ là 8
dot padding dot vertical which is going    dấu chấm đệm dấu chấm dọc đang diễn ra
to be 12    là 12
okay    được rồi
and    Và
we're actually going to wrap this in an    chúng tôi thực sự sẽ bọc nó trong một
if statement and we're going to say if    câu lệnh if và chúng ta sẽ nói nếu
text dot is empty    dấu chấm văn bản trống
and then we're going to put that there    và sau đó chúng ta sẽ đặt nó ở đó
and then else we're going to say text    và sau đó chúng ta sẽ nói văn bản
editor which is a actual swift ui    trình chỉnh sửa là một giao diện người dùng
nhanh thực sự
component    thành phần
and this is where we have to pass in    và đây là nơi chúng ta phải vượt qua
that binding property of our text    tài sản ràng buộc đó của văn bản của chúng
tôi
i'm going to give it a padding of 4    tôi sẽ cho nó một phần đệm của 4
pixels    điểm ảnh
and    Và
the whole thing is going to have a font    toàn bộ sẽ có một phông chữ
of that body okay    của cơ thể đó ổn
so we're getting an error here let's see    vì vậy chúng tôi đang gặp lỗi ở đây, hãy
xem
oh we can't put these parentheses there    oh chúng ta không thể đặt những dấu ngoặc
đơn ở đó
so now go ahead and build that and our    vì vậy bây giờ hãy tiếp tục và xây dựng nó
và của chúng tôi
custom component should be done    thành phần tùy chỉnh nên được thực hiện
let's go ahead and see now if we can    chúng ta hãy tiếp tục và xem bây giờ nếu
chúng ta có thể
drop it into our new tweet view    thả nó vào chế độ xem tweet mới của chúng
tôi


about:blank

    91/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so on this h stack just go ahead and    vì vậy trên ngăn xếp h này, hãy tiếp tục và
uh add your text area    uh thêm vùng văn bản của bạn
and we need to pass in a placeholder and    và chúng ta cần chuyển vào một trình giữ
chỗ và
a text so here we're going to say what's    một văn bản vì vậy ở đây chúng ta sẽ nói
những gì
happening    đang xảy ra
for the placeholder and the text we    cho trình giữ chỗ và văn bản chúng tôi
actually need to create that so we're    thực sự cần phải tạo ra điều đó vì vậy
chúng tôi
going to say at state private var    sẽ nói ở bang private var
caption    đầu đề
and it's just going to be blank    và nó sẽ trống rỗng
and then here we're going to say dollar    và sau đó ở đây chúng ta sẽ nói đô la
sign caption    ký chú thích
sweet so that's looking pretty good    ngọt ngào nên trông khá ổn
um let's resume the preview    ừm, hãy tiếp tục xem trước
and okay so you guys notice that this is    và được rồi để các bạn chú ý rằng đây là
like kind of huge right now    giống như loại rất lớn ngay bây giờ
um    ô
so i think we actually need to give it a    vì vậy tôi nghĩ rằng chúng ta thực sự cần
phải cung cấp cho nó một
frame    khung
or maybe    hoặc có thể
no sorry we don't actually    không xin lỗi, chúng tôi không thực sự
um because this this could actually just    ừm bởi vì điều này thực sự có thể chỉ
be    là
this size on the h stack we can actually    kích thước này trên ngăn xếp h chúng ta
thực sự có thể
change the alignment to dot top    thay đổi căn chỉnh thành dot top
and it puts that guy right on top of    và nó đặt anh chàng đó ngay trên đầu
there which looks great    ở đó trông thật tuyệt
and then on this h stack guys just go    và sau đó trên ngăn xếp h này, mọi người
chỉ cần đi
ahead and add some padding    phía trước và thêm một số phần đệm
so that looks good    vì vậy có vẻ tốt
and this is now looking    và điều này hiện đang tìm kiếm
as it should and let's go ahead and hit    như nó nên và hãy tiếp tục và đánh




about:blank    92/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
play    chơi
and start typing into this text for some    và bắt đầu gõ vào văn bản này cho một số
reason the typing in my preview doesn't    lý do gõ trong bản xem trước của tôi không
work    công việc
so really quickly before we run this on    rất nhanh trước khi chúng tôi chạy cái này
the simulator go back to your feed view    trình giả lập quay lại chế độ xem nguồn cấp
dữ liệu của bạn
and replace this text here that says new    và thay thế văn bản này ở đây có nội dung
mới
tweet view    xem tweet
with the actual new tweet view    với chế độ xem tweet mới thực tế
and let's go ahead and run this and that    và hãy tiếp tục và chạy cái này và cái kia
should do it for    nên làm điều đó cho
this section we'll be able to move on to    phần này chúng ta sẽ có thể chuyển sang
our authentication stuff next    công cụ xác thực của chúng tôi tiếp theo
so that looks really good    vì vậy trông thực sự tốt
um we do have to make it so that this    ừm, chúng ta phải làm cho nó như thế này
that cancel button actually dismisses    nút hủy đó thực sự loại bỏ
that view but let's make sure our text    chế độ xem đó nhưng hãy đảm bảo rằng
văn bản của chúng tôi
area is working    khu vực đang làm việc
so that looks really good and you guys    vì vậy trông thực sự tốt và các bạn
notice that if i delete everything the    lưu ý rằng nếu tôi xóa mọi thứ
placeholder shows back up so    trình giữ chỗ hiển thị sao lưu để
really quickly we can talk about how    thực sự nhanh chóng chúng ta có thể nói về
cách
that works    nó hoạt động
um but first let's make it so that we    ừm nhưng trước tiên hãy làm cho nó sao
cho chúng ta
this cancel button actually dismisses    nút hủy này thực sự loại bỏ
the view    quan điểm
so let me go back to new tweet view    vì vậy hãy để tôi quay lại chế độ xem tweet
mới
we're gonna add an environment variable    chúng ta sẽ thêm một biến môi trường
here    đây
at environment bar oops at environment    tại thanh môi trường rất tiếc tại môi trường
parentheses backslash dot presentation    dấu gạch chéo ngược dấu chấm trình bày
mode    cách thức




about:blank    93/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
bar    quán ba
presentation mode    chế độ trình bày
and basically guys what this does is    và về cơ bản, những gì nó làm là
it's an environment variable that    đó là một biến môi trường
recognizes the presentation state of the    nhận ra trạng thái trình bày của
application so it'll be able to    ứng dụng để nó có thể
recognize    nhận ra
that we have a view presented right now    rằng chúng tôi có một cái nhìn được trình
bày ngay bây giờ
so when we hit the cancel button it will    vì vậy khi chúng tôi nhấn nút hủy, nó sẽ
dismiss that presented view    loại bỏ quan điểm được trình bày
so here we just have to say    vì vậy ở đây chúng ta chỉ cần nói
presentationmode.wrappedvalue.dismiss    Presentationmode.wrappedvalue.dismiss
and we can run this again and we should    và chúng ta có thể chạy lại cái này và chúng
ta nên
be able to    có thể
toggle that new tweet view    chuyển chế độ xem tweet mới đó
up and down so this will present it this    lên và xuống vì vậy điều này sẽ trình bày nó
will cancel it present    sẽ hủy bỏ nó
cancel so that looks really good so    hủy để trông thực sự tốt vì vậy
really quickly i'll just explain this    rất nhanh tôi sẽ chỉ giải thích điều này
text area and why we had to make it a    vùng văn bản và tại sao chúng tôi phải biến
nó thành một
custom view    theo cách nhìn thông thường
one more time before we move on to the    một lần nữa trước khi chúng ta chuyển sang
phần
next    Kế tiếp
chapter    chương
so let's open that text area up    vì vậy hãy mở vùng văn bản đó lên
if you guys want to know how to do that    nếu các bạn muốn biết làm thế nào để làm
điều đó
you just hold down command shift o    bạn chỉ cần giữ phím shift o
and you can just uh like sort of quick    và bạn có thể chỉ uh như loại nhanh chóng
open uh any any one of your files and    mở uh bất kỳ tệp nào của bạn và
xcode it's really helpful    xcode nó thực sự hữu ích
but    Nhưng
essentially guys once again we needed to    về cơ bản các bạn một lần nữa chúng ta
cần phải




about:blank    94/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
create this because we want this to be a    tạo cái này bởi vì chúng tôi muốn cái này là
một
text view so the text will like wrap    chế độ xem văn bản để văn bản sẽ giống
như gói
um i don't think you can do that with    ừm tôi không nghĩ bạn có thể làm điều đó
với
the text field but the problem is text    trường văn bản nhưng vấn đề là văn bản
views or in this case what swift ui    lượt xem hoặc trong trường hợp này, Swift
ui là gì
calls them text editors they don't have    gọi họ là người soạn thảo văn bản mà họ
không có
placeholders so you basically have to    giữ chỗ, do đó về cơ bản bạn phải
make a custom view    tạo chế độ xem tùy chỉnh
and build the placeholder functionality    và xây dựng chức năng giữ chỗ
in yourself so basically it's a z stack    trong chính bạn nên về cơ bản nó là một
ngăn xếp z
right and you say if the text is empty    đúng và bạn nói nếu văn bản trống
which in this case right now it is it    mà trong trường hợp này ngay bây giờ nó là
nó
shows the placeholder and if the text is    hiển thị trình giữ chỗ và nếu văn bản là
not empty which is what is happening    không trống rỗng, đó là những gì đang xảy
ra
here it'll show the actual text editor    ở đây nó sẽ hiển thị trình soạn thảo văn bản
thực tế
and    Và
we pass in a placeholder    chúng tôi vượt qua trong một trình giữ chỗ
because now we can reuse this in other    bởi vì bây giờ chúng ta có thể sử dụng lại
cái này trong cái khác
parts of the app if we wanted to and we    các phần của ứng dụng nếu chúng tôi muốn
và chúng tôi
could just pass in a different    chỉ có thể vượt qua trong một khác nhau
placeholder and a different text    trình giữ chỗ và một văn bản khác
parameter um and it will it will like    tham số um và nó sẽ như thế nào
bind to the or like the uh the view that    liên kết với hoặc thích uh quan điểm đó
it's contained within so right now we    nó được chứa bên trong vì vậy ngay bây
giờ chúng tôi
could drag and drop this text area into    có thể kéo và thả vùng văn bản này vào
any part of the app and    bất kỳ phần nào của ứng dụng và
it will act as like a standalone view    nó sẽ hoạt động giống như một chế độ xem
độc lập




about:blank    95/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
which is really nice    cái nào thực sự tốt
so    Vì thế
this is why now it functions this way    đây là lý do tại sao bây giờ nó hoạt động
theo cách này
which is exactly sort of what we want    đó chính xác là những gì chúng ta muốn
there so that's looking really good guys    ở đó trông rất đẹp đấy các bạn
that's going to wrap it up for this    điều đó sẽ kết thúc nó cho việc này
chapter    chương
in the next one we are going to now    trong phần tiếp theo chúng ta sẽ đến bây
giờ
finally start building out    cuối cùng bắt đầu xây dựng
this uh awesome    điều này thật tuyệt vời
log out and sign up page so get excited    đăng xuất và đăng ký trang để có hứng thú
for that guys it looks super slick and    đối với những người đó, nó trông siêu bóng
bẩy và
that's going to wrap it up for the ui    điều đó sẽ kết thúc nó cho giao diện người
dùng
once we're done with that then we'll be    một khi chúng ta hoàn thành việc đó thì
chúng ta sẽ
able to start hooking up the back end    có thể bắt đầu kết nối mặt sau
and work with some actual data which is    và làm việc với một số dữ liệu thực tế
going to be really fun    sẽ rất vui
last but not least guys we are going to    cuối cùng nhưng không kém phần quan
trọng, chúng ta sẽ
be building this login and sign up page    đang xây dựng trang đăng nhập và đăng ký
này
so let's just jump right into it go to    vì vậy chúng ta hãy nhảy ngay vào nó
your core folder and we're going to    thư mục cốt lõi của bạn và chúng tôi sẽ
create another group here    tạo một nhóm khác tại đây
and this is going to be called    và điều này sẽ được gọi là
authentication    xác thực
uh and then within that we're going to    uh và sau đó chúng ta sẽ
create two other subgroups    tạo hai nhóm con khác
one for view model    một cho mô hình xem
and one for views    và một cho lượt xem
and in the views folder    và trong thư mục lượt xem
we're going to create two swift ui views    chúng ta sẽ tạo hai chế độ xem Swift ui
we're going to create    chúng ta sẽ tạo ra
our login view    chế độ xem đăng nhập của chúng tôi


about:blank

    96/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and we are also going to create our    và chúng tôi cũng sẽ tạo ra
registration view    xem đăng ký
just like that okay cool so let's start    cứ như vậy được rồi, tuyệt, vậy hãy bắt đầu
with this login view    với chế độ xem đăng nhập này
and resume on your preview just to make    và tiếp tục trên bản xem trước của bạn chỉ
để thực hiện
sure that it's connected    chắc chắn rằng nó được kết nối
and we can start building out our ui    và chúng ta có thể bắt đầu xây dựng giao
diện người dùng của mình
once that loads awesome    một khi tải tuyệt vời
so    Vì thế
uh first we're going to create this like    uh trước tiên chúng ta sẽ tạo cái này như
thế nào
sort of header view right here    loại xem tiêu đề ngay tại đây
so    Vì thế
really quickly guys let's go ahead and    thật nhanh các bạn hãy tiếp tục và
just make a v stack    chỉ cần tạo một ngăn xếp v
and it's going to within that    và nó sẽ đi vào bên trong đó
have um    có ừm
another v stack    ngăn xếp v khác
and that's because    và đó là bởi vì
uh this is going to be its own v stack    uh đây sẽ là ngăn xếp v của riêng nó
and then all of this other stuff is a v    và sau đó tất cả những thứ khác này là một
v
stack as well so this is sort of like    ngăn xếp cũng như vậy, đây là loại giống
như
the parent    cha mẹ
we call it parent container    chúng tôi gọi nó là vùng chứa chính
and then this guy    và sau đó anh chàng này
will be the header view    sẽ là chế độ xem tiêu đề
okay just adding those comments to    được rồi, chỉ cần thêm những nhận xét đó
vào
clarify everything on this header view    làm rõ mọi thứ trên chế độ xem tiêu đề này
we're going to create an alignment of    chúng ta sẽ tạo ra một sự liên kết của
dot leading    dấu chấm hàng đầu
and    Và
i'm just going to go ahead and make a    tôi sẽ tiếp tục và thực hiện một
text that says hello    văn bản nói xin chào




about:blank    97/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot or period    dấu chấm hoặc dấu chấm
and then    và sau đó
we're we're gonna give it a font of dot    chúng tôi sẽ cung cấp cho nó một phông
chữ dấu chấm
large oops dot fonts    rất tiếc phông chữ chấm lớn
dot large title    chấm tiêu đề lớn
dot font weight dot semi bold    dấu chấm chữ đậm dấu chấm bán đậm
okay so that looks good    được rồi để có vẻ tốt
then we're gonna give it a text that    sau đó chúng tôi sẽ cung cấp cho nó một
văn bản
says welcome back    nói chào mừng trở lại
dot font dot large title    phông chữ chấm chấm tiêu đề lớn
dot font weight dot semi bold    dấu chấm chữ đậm dấu chấm bán đậm
awesome    tuyệt vời
okay and then guys on this v stack here    được rồi các bạn trên ngăn xếp v này ở đây
we're going to give it a    chúng tôi sẽ cung cấp cho nó một
dot frame    khung chấm
of height    chiều cao
which is 260.    đó là 260.
okay so that looks good    được rồi để có vẻ tốt
and then we are going to give it a    và sau đó chúng tôi sẽ cung cấp cho nó một
background    lý lịch
of color parenthesis dot system blue    dấu ngoặc đơn màu xanh lam
looking good we're going to give it a    nhìn tốt, chúng tôi sẽ cung cấp cho nó một
foreground color of white    màu nền trước màu trắng
looking better    trông đẹp hơn
and then we need to give it this like    và sau đó chúng ta cần phải cung cấp cho
nó như thế này
custom clip shape and we need to make it    hình dạng clip tùy chỉnh và chúng tôi cần
làm cho nó
fill the width of the screen    lấp đầy chiều rộng của màn hình
okay so what we can actually do to make    được rồi, vậy những gì chúng ta thực sự có
thể làm để tạo ra
it fill the width of the screen there's    nó lấp đầy chiều rộng của màn hình có
two things you can do    hai điều bạn có thể làm
i'm sure there's other ways of doing    tôi chắc rằng có những cách khác để làm
this as well you guys can just go here    cái này cũng vậy các bạn có thể vào đây
and make an h stack    và tạo một ngăn xếp h




about:blank



    98/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and create a spacer just like that and    và tạo một miếng đệm giống như vậy và
you guys will notice that it will just    các bạn sẽ nhận thấy rằng nó sẽ chỉ
stretch it out to fit the entire screen    kéo dài nó ra để vừa với toàn bộ màn hình
an alternative would be to make this a    một giải pháp thay thế sẽ là biến điều này
thành một
z-stack or just embed this in a z-stack    z-stack hoặc chỉ cần nhúng cái này vào z-
stack
but this is fine as well it's just a    nhưng điều này cũng tốt thôi, nó chỉ là một
little trick that i like to use um i    mẹo nhỏ mà tôi thích sử dụng um i
believe that if you tried    tin rằng nếu bạn cố gắng
to give it a width of like ui screen    để cung cấp cho nó chiều rộng như màn
hình ui
main.bound    chính. giới hạn
and like where to comment this out i    và thích nơi để bình luận điều này tôi
don't think that works    không nghĩ rằng nó hoạt động
oh it does but uh the problem is    oh nó có nhưng uh vấn đề là
is that    đó là
um    ô
i don't know how to get the text to    tôi không biết làm thế nào để có được văn
bản
align to the leading edge when you do it    căn chỉnh với cạnh hàng đầu khi bạn làm
điều đó
like that so it's a little bit weird    như thế thì hơi lạ
so i like to just make it this h stack    vì vậy tôi muốn làm cho nó ngăn xếp h này
here    đây
and everything aligns perfectly    và mọi thứ sắp xếp hoàn hảo
and then we're just going to give it    và sau đó chúng tôi sẽ cung cấp cho nó
some padding guys we're going to say dot    một số kẻ đệm chúng ta sẽ nói dấu chấm
padding    đệm
dot leading just like that    dấu chấm hàng đầu như thế
and that'll stretch it out there nicely    và điều đó sẽ kéo dài nó ra khỏi đó một
cách độc đáo
and then    và sau đó
um within our parent container    um trong vùng chứa chính của chúng tôi
for now we're just going to add a    bây giờ chúng ta sẽ thêm một
spacer and then on this parent container    miếng đệm và sau đó trên vùng chứa chính
này
as well we're going to say dot ignores    cũng như chúng ta sẽ nói dấu chấm bỏ qua
safe area    khu vực an toàn


about:blank

    99/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and that will get it to fill out into    và điều đó sẽ khiến nó điền vào
the top of the screen so that looks    phía trên cùng của màn hình để trông
pretty good right i do however want to    khá tốt đúng không tôi làm tuy nhiên muốn
show you guys how to get this like sort    chỉ cho các bạn làm thế nào để có được loại
như thế này
of custom shape here    của hình dạng tùy chỉnh ở đây
it's actually pretty simple we're just    nó thực sự khá đơn giản, chúng tôi chỉ
going to create a custom    sẽ tạo một tùy chỉnh
view    xem
or a view modifier rather    hoặc một công cụ sửa đổi chế độ xem thay
vì
that's going to help us do that and it's    điều đó sẽ giúp chúng tôi làm điều đó và nó
uh really awesome because we're going to    uh thực sự tuyệt vời bởi vì chúng ta sẽ
create it so that we can round whatever    tạo ra nó để chúng ta có thể làm tròn bất cứ
điều gì
edges of a shape that we want so you can    các cạnh của hình dạng mà chúng tôi muốn
để bạn có thể
pick one two three or four edges to    chọn một hai ba hoặc bốn cạnh để
round in this case we're just rounding    làm tròn trong trường hợp này chúng ta chỉ
làm tròn
out one of the edges it's the bottom    ra khỏi một trong các cạnh đó là đáy
right edge so    cạnh phải như vậy
i'm going to go into my components    tôi sẽ đi vào các thành phần của tôi
folder guys uh let's move that up there    thư mục các bạn uh hãy di chuyển nó lên đó
um create a new file    ừm tạo một tập tin mới
it's going to be a    nó sẽ là một
uh we can just make it a swift file    uh chúng ta có thể biến nó thành một tập tin
nhanh chóng
actually    Thực ra
and we're gonna call it rounded shape    và chúng ta sẽ gọi nó là hình tròn
and we're gonna import swift ui up at    và chúng tôi sẽ nhập swift ui lên tại
the top    đỉnh
and we're gonna say uh    và chúng ta sẽ nói uh
struct    cấu trúc
rounded shape and it's gonna inherit    hình tròn và nó sẽ kế thừa
from the shape class    từ lớp hình dạng
and we're going to create some corners    và chúng ta sẽ tạo một số góc
which is a ui rect corner    đó là góc ui rect




about:blank    100/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
see this is the corners of a rectangle    xem đây là các góc của một hình chữ nhật
and this is going to be    và đây sẽ là
how we're able to tell our shape which    làm thế nào chúng ta có thể nói hình dạng
của chúng tôi mà
corners to round out    các góc để làm tròn
so then we need to have this path    vì vậy sau đó chúng ta cần phải có con
đường này
function    chức năng
and we're going to say let path equal ui    và chúng ta sẽ nói let path equal ui
bezier path    con đường bezier
uh let's see what do we want we want    uh hãy xem những gì chúng ta muốn chúng
ta muốn
this rounded rect    trực tràng tròn này
wrecked    bị đắm
by rounding corners we pass in our    bằng cách làm tròn các góc, chúng tôi vượt
qua
corners variable    biến góc
and corner radii is going to be cg size    và bán kính góc sẽ có kích thước cg
with    với
80 by 80.    80 nhân 80.
and we're going to return a path    và chúng ta sẽ trả về một con đường
path.cgpath    đường dẫn.cgpath
so this is just a custom    vì vậy đây chỉ là một phong tục
modifier that i like to have in all of    công cụ sửa đổi mà tôi muốn có trong tất cả
my projects    những dự án của tôi
and like i said it will allow you to    và như tôi đã nói nó sẽ cho phép bạn
just round out whatever edges of a shape    chỉ cần làm tròn bất kỳ cạnh nào của hình
dạng
you want so we're going to actually go    bạn muốn vì vậy chúng tôi sẽ thực sự đi
ahead and see how to use this now it's    trước và xem cách sử dụng cái này bây giờ
really really cool    thực sự thực sự mát mẻ
so let's go back to our login view    Vì vậy, hãy quay lại chế độ xem đăng nhập
của chúng tôi
and on this v stack here    và trên ngăn xếp v này ở đây
we're just going to apply    chúng tôi sẽ áp dụng
a clip shape    một hình dạng clip
of our rounded shape    hình dạng tròn của chúng tôi
and it's going to ask us for the corners    và nó sẽ yêu cầu chúng tôi cho các góc




about:blank    101/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and you guys can just open up your    và các bạn chỉ có thể mở của bạn
parentheses and say dot bottom right    dấu ngoặc đơn và nói dấu chấm phía dưới
bên phải
and let's go ahead and resume our    và hãy tiếp tục và tiếp tục
preview and you guys will notice that    xem trước và các bạn sẽ nhận thấy rằng
that    cái đó
rounds out the bottom right edge    làm tròn cạnh dưới bên phải
just like that and that looks really    chỉ như vậy và điều đó trông thực sự
really good guys    những người thực sự tốt
um and you'll notice that i could also    ừm và bạn sẽ nhận thấy rằng tôi cũng có
thể
do like dot bottom    làm như chấm đáy
left    bên trái
and it would round out this whole thing    và nó sẽ hoàn thiện toàn bộ điều này
obviously that looks kind of silly    rõ ràng là có vẻ ngớ ngẩn
i don't really like that i think it's    tôi không thực sự thích điều đó tôi nghĩ nó
just better to have it    chỉ tốt hơn để có nó
with one    với một
edge rounded out i do think that looks    cạnh được làm tròn tôi nghĩ rằng nó trông
really good    thật sự tốt
um if you guys wanted to mess with how    ừm nếu các bạn muốn gây rối với cách
rounded it gets    làm tròn nó được
you could just go back to    bạn chỉ có thể quay trở lại
that component    thành phần đó
and you could adjust this stuff if you    và bạn có thể điều chỉnh công cụ này nếu
bạn
wanted to wanted it to be fully    muốn nó được đầy đủ
customizable you could add another input    tùy chỉnh bạn có thể thêm một đầu vào khác
parameter for what you want the corner    tham số cho những gì bạn muốn góc
radius or radii to be for that    bán kính hoặc bán kính cho điều đó
because the way it's set up now    bởi vì cách nó được thiết lập bây giờ
every time you use this clip shape it    mỗi khi bạn sử dụng clip này, hãy định hình
nó
would have this sort of static    sẽ có loại tĩnh này
corner radii if you wanted to be able to    bán kính góc nếu bạn muốn có thể
customize that you could just add that    tùy chỉnh mà bạn chỉ có thể thêm nó
up here as another input parameter and    lên đây như một tham số đầu vào khác và




about:blank    102/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
pass it in as whatever you want um    chuyển nó vào như bất cứ điều gì bạn muốn
um
whenever you're creating a shape in    bất cứ khi nào bạn đang tạo một hình dạng
trong
different places in your application    những nơi khác nhau trong ứng dụng của
bạn
um okay so now that that's done    ừm được rồi, bây giờ điều đó đã xong
and it looks pretty darn good    và nó có vẻ khá tốt
we're going to keep going    chúng ta sẽ tiếp tục đi
with uh    với uh
these custom text fields down here so    các trường văn bản tùy chỉnh này ở đây để
this login page does have a lot of    trang đăng nhập này có rất nhiều
custom    phong tục
views guys um and it does take a little    lượt xem các bạn um và nó mất một chút
bit of time to build that stuff out but    một chút thời gian để xây dựng những thứ
đó nhưng
i think it's really worth it to have    tôi nghĩ nó thực sự đáng để có
these custom views that you can reuse    các chế độ xem tùy chỉnh này mà bạn có
thể sử dụng lại
across any application that you're    trên bất kỳ ứng dụng nào mà bạn đang
building    xây dựng
so    Vì thế
let's go ahead and make another v stack    hãy tiếp tục và tạo một ngăn xếp v khác
and this is going to be for these two    và cái này sẽ dành cho hai người này
text fields here    trường văn bản ở đây
um we're going to give it a spacing    ừm, chúng ta sẽ tạo khoảng cách cho nó
parameter of 40.    thông số 40.
and we are going to want to create some    và chúng tôi sẽ muốn tạo ra một số
custom text fields here    trường văn bản tùy chỉnh ở đây
um    ô
but for now let's just go ahead and make    nhưng bây giờ chúng ta hãy tiếp tục và thực
hiện
them text fields    chúng trường văn bản
um we're just going to want a title and    ừm, chúng tôi sẽ chỉ muốn một tiêu đề và
a text so it's going to be email    một văn bản vì vậy nó sẽ là email
and text we need that actual text    và văn bản chúng tôi cần văn bản thực tế đó
property so we're going to go up here    tài sản vì vậy chúng tôi sẽ đi lên đây
and say at state private bar email    và nói tại email thanh trạng thái riêng tư




about:blank    103/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
equals a blank string and let's just go    bằng một chuỗi trống và chúng ta hãy bắt
đầu
ahead and make the password variable as    phía trước và biến mật khẩu thành
well    Tốt
and they're both just blank strings    và cả hai đều chỉ là những chuỗi trống
okay now we can pass in our email text    được rồi bây giờ chúng ta có thể chuyển
văn bản email của mình
property    tài sản
and we can just go ahead and copy this    và chúng ta có thể tiếp tục và sao chép cái
này
paste it down below    dán nó xuống bên dưới
this will say password    điều này sẽ nói mật khẩu
and this will be dollar sign password    và đây sẽ là mật khẩu ký hiệu đô la
and let's go ahead and resume our    và hãy tiếp tục và tiếp tục
preview and see how that looks    xem trước và xem nó trông như thế nào
um we will come back and customize these    ừm, chúng tôi sẽ quay lại và tùy chỉnh
những thứ này
in a little bit i kind of want to just    trong một chút tôi muốn chỉ
get the rest of this view built out    xây dựng phần còn lại của chế độ xem này
so let's see try    vì vậy hãy xem thử
again    lại
okay so looks not great but um we're    được rồi, trông không đẹp lắm nhưng ừm
chúng tôi
gonna adjust    sẽ điều chỉnh
or add some modifiers to clean it up a    hoặc thêm một số sửa đổi để làm sạch nó
little bit so we're gonna say dot    một chút vì vậy chúng ta sẽ nói dấu chấm
padding    đệm
dot horizontal    chấm ngang
32    32
and then padding    và sau đó đệm
uh dot top    uh chấm đầu
44.    44.
all right so that is looking a little    được rồi vì vậy điều đó đang tìm kiếm một
chút
bit better and like i said guys we're    tốt hơn một chút và như tôi đã nói các bạn
going to customize this view to have    sẽ tùy chỉnh chế độ xem này để có
like an image and like this underline    thích một hình ảnh và thích gạch chân này
view and we're going to make a custom    xem và chúng tôi sẽ thực hiện một tùy chỉnh




about:blank    104/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
sub view or sorry sub class for that    sub view hay xin lỗi sub class vì điều đó
view so that we can reuse it in    xem để chúng tôi có thể sử dụng lại nó
trong
different places in the app    những nơi khác nhau trong ứng dụng
we're going to be reusing this in the    chúng ta sẽ sử dụng lại cái này trong
registration view as well but for now    xem đăng ký là tốt nhưng bây giờ
let's just keep going we'll create this    chúng ta hãy tiếp tục, chúng ta sẽ tạo ra cái
này
forgot password guy    anh quên mật khẩu
so this is going to actually be an h    vì vậy đây thực sự sẽ là một h
stack    cây rơm
because we're going to use a spacer to    bởi vì chúng tôi sẽ sử dụng một miếng đệm
để
push this all the way to the right so    đẩy cái này sang bên phải
we're going to create a spacer here    chúng ta sẽ tạo một miếng đệm ở đây
and then we're just going to create a    và sau đó chúng ta sẽ tạo ra một
navigation link    liên kết điều hướng
destination label    nhãn đích
this is just going to say text like    điều này sẽ chỉ nói văn bản như
reset password view    đặt lại chế độ xem mật khẩu
and the label    và nhãn
is just going to be a text    sẽ chỉ là một văn bản
property that says forgot password    tài sản cho biết quên mật khẩu
uh we're going to say dot font    uh chúng ta sẽ nói phông chữ dấu chấm
dot    dấu chấm
caption    đầu đề
font weight dot bold    trọng lượng phông chữ chấm đậm
and then we're going to give it a    và sau đó chúng tôi sẽ cung cấp cho nó một
foreground color    màu nền
of color dot system blue    hệ thống chấm màu xanh lam
see how that looks    xem nó trông như thế nào
uh pretty good uh actually add a    uh khá tốt uh thực sự thêm một
question mark at the end of forgot    dấu chấm hỏi ở cuối quên
password now we just need to give it    mật khẩu bây giờ chúng ta chỉ cần cung cấp
cho nó
some padding guys    một số kẻ đệm
so we're gonna say dot padding dot top    vì vậy chúng ta sẽ nói dấu chấm đệm dấu
chấm trên cùng




about:blank    105/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot padding dot trailing    dấu chấm đệm dấu chấm
24.    24.
okay so that's looking pretty good let's    được rồi, vậy là trông khá ổn, chúng ta hãy
actually make the font weight semi-bold    thực sự làm cho trọng lượng phông chữ bán
đậm
right i think that looks a little bit    đúng tôi nghĩ rằng nó có vẻ một chút
better    tốt hơn
sweet so that's looking pretty good now    ngọt ngào vì vậy bây giờ trông khá tốt
we just have to do this sign up button    chúng ta chỉ cần thực hiện nút đăng ký này
so now what we're going to do is go    vì vậy bây giờ những gì chúng ta sẽ làm là
đi
below this h stack and we're going to    bên dưới ngăn xếp h này và chúng ta sẽ
create a button    tạo một nút
action label    nhãn hành động
we're going to just print    chúng ta sẽ chỉ in
sign in here    đăng nhập tại đây
and then the label is going to be a text    và sau đó nhãn sẽ là một văn bản
property that says sign in    tài sản cho biết đăng nhập
dot font    phông chữ chấm
dot headline    chấm tiêu đề
that foreground color is dot white    màu nền trước đó là chấm trắng
dot frame    khung chấm
width height    chiều rộng chiều cao
so we're going to do 340 for the width    vì vậy chúng ta sẽ làm 340 cho chiều rộng
and 50 for the height    và 50 cho chiều cao
then we're going to give it a background    sau đó chúng ta sẽ cung cấp cho nó một
nền tảng
of color parentheses dot system blue    dấu ngoặc đơn màu xanh lam
dot clip shape    hình dạng kẹp chấm
is a capsule    là một viên nang
and then we're just going to give it    và sau đó chúng tôi sẽ cung cấp cho nó
some padding    một số phần đệm
and let's see how that looks so that    và hãy xem nó trông như thế nào
looks great    Trông rất tuyệt
um and we are going to give this a very    ừm và chúng tôi sẽ cung cấp cho điều này
rất
slight shadow guys it just makes it pop    các bạn bóng nhẹ nó chỉ làm cho nó bật lên
a little bit more and it's very very    một chút nữa và nó rất rất


about:blank

    106/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
subtle    tế nhị
and you might not notice it in terms of    và bạn có thể không nhận thấy nó về mặt
it being visible to like the naked eye    nó có thể nhìn thấy bằng mắt thường
right away but it is there and it    ngay lập tức nhưng nó ở đó và nó
actually does add a little bit of very    thực sự có thêm một chút rất
subtle dimension to your ui and make it    kích thước tinh tế cho giao diện người dùng
của bạn và làm cho nó
look like it pops out a little bit more    có vẻ như nó bật ra thêm một chút nữa
so we're going to say dot shadow    vì vậy chúng ta sẽ nói chấm bóng
color is going to be dot gray    màu sẽ là chấm xám
dot opacity oops    độ mờ của dấu chấm rất tiếc
dot opacity    độ mờ chấm
0.5 radius is 10 x 0 y 0.    0,5 bán kính là 10 x 0 y 0.
and you guys could like    và các bạn có thể thích
change the just to see that it's    thay đổi chỉ để thấy rằng nó
actually showing up    thực sự xuất hiện
you could mess with some of these    bạn có thể gây rối với một số trong số này
properties here like if you took off    tài sản ở đây như thể bạn cất cánh
this opacity    độ mờ này
it's a little bit more visible you can    nó rõ ràng hơn một chút bạn có thể
kind of see that gray shadow like if i    kiểu như nhìn thấy bóng xám đó như thể tôi
make it red    làm cho nó đỏ
you can see that red shadow right there    bạn có thể thấy bóng đỏ đó ngay tại đó
but then if you give it that opacity    nhưng sau đó nếu bạn cho nó độ mờ
back    mặt sau
it becomes much more faint and much more    nó trở nên mờ nhạt hơn nhiều và nhiều hơn
nữa
subtle but it is still there    tinh tế nhưng nó vẫn ở đó
so just change it back to gray    vì vậy chỉ cần thay đổi nó trở lại màu xám
and um i always like to do that with my    và ừm tôi luôn thích làm điều đó với tôi
buttons to make it look like they pop    các nút để làm cho nó trông giống như
chúng bật
out a little bit more anyway now we just    ra thêm một chút dù sao bây giờ chúng ta
chỉ
need to uh create this uh    uh cần phải tạo cái này uh
spit like little button down here that's    nhổ như nút nhỏ xuống đây đó là
gonna take us over to our registration    sẽ đưa chúng tôi đến đăng ký của chúng tôi
view    xem


about:blank

    107/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so below the spacer guys that's within    vì vậy bên dưới những người đệm trong đó
the parent v stack container    bộ chứa ngăn xếp cha v
we're going to add this navigation link    chúng tôi sẽ thêm liên kết điều hướng này
the destination will be our registration    điểm đến sẽ là đăng ký của chúng tôi
view    xem
excuse    thứ lỗi
me and on the registration view guys    tôi và các bạn vào xem đăng ký
you're going to say dot navigation bar    bạn sẽ nói thanh điều hướng dấu chấm
hidden is true    ẩn là sự thật
because we do not want a navigation bar    bởi vì chúng tôi không muốn có một thanh
điều hướng
on this guy um we're going to have this    về anh chàng này ừm chúng ta sẽ có cái
này
custom header    tiêu đề tùy chỉnh
and our label is just going to be an h    và nhãn của chúng tôi sẽ chỉ là một h
stack    cây rơm
it's going to say text don't    nó sẽ nói văn bản không
have an account    có một tài khoản
dot font dot system size or we can just    kích thước hệ thống chấm phông chữ chấm
hoặc chúng ta chỉ có thể
give it dot caption actually    cung cấp cho nó chú thích dấu chấm thực
sự
one sec guys    một giây nhé các bạn
okay and then we're gonna say    được rồi chúng ta sẽ nói
text sign    dấu hiệu văn bản
up    hướng lên
dot font dot caption    chấm phông chữ chấm tiêu đề
dot font weight dot semi bold    dấu chấm chữ đậm dấu chấm bán đậm
now we give this some uh    bây giờ chúng tôi cung cấp cho một số uh
padding on the bottom    đệm ở phía dưới
right so that looks pretty good    đúng như vậy trông khá tốt
and let's actually give this a font of    và hãy thực sự cung cấp cho phông chữ
này
body caption's a little small    chú thích cơ thể hơi nhỏ
uh    uh
and that looks a little too big now    và bây giờ trông hơi quá lớn
let's try footnote    hãy thử chú thích
foot nope    chân không




about:blank



    108/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
okay footnote looks uh good to me    được rồi, chú thích cuối trang có vẻ tốt với
tôi
sweet okay so now we just need to give    ngọt ngào được rồi vì vậy bây giờ chúng ta
chỉ cần cho
it a foreground color    nó là một màu nền trước
with color    với màu sắc
dot system blue    hệ thống chấm màu xanh
and that's looking pretty clean guys    và đó là trông khá sạch sẽ guys
and also on the navigation bar here    và cả trên thanh điều hướng ở đây
we're gonna say dot navigation bar    chúng ta sẽ nói thanh điều hướng dấu chấm
hidden    ẩn giấu
is true so that'll hide it on our um    là đúng vì vậy sẽ ẩn nó trên um của chúng
tôi
login view as well so let's actually go    chế độ xem đăng nhập cũng vậy, hãy thực
sự bắt đầu
ahead and make this the root view of our    phía trước và biến đây thành chế độ xem
gốc của chúng tôi
application and then we'll be able to    ứng dụng và sau đó chúng tôi sẽ có thể
see it coming up on the simulator and    thấy nó xuất hiện trên trình giả lập và
see how this looks and see if this    xem cái này trông như thế nào và xem cái
này có
navigation link is working    liên kết điều hướng đang hoạt động
so let's see let's go to our youtube app    vì vậy hãy xem chúng ta hãy truy cập ứng
dụng youtube của chúng tôi
file    tài liệu
and replace content view    và thay thế chế độ xem nội dung
with login view    với chế độ xem đăng nhập
and run it    và chạy nó
so it should look pretty similar to that    vì vậy nó sẽ trông khá giống với điều đó
we just won't have those custom text    chúng tôi sẽ không có những văn bản tùy
chỉnh đó
fields    lĩnh vực
okay so yeah that looks pretty darn good    được rồi, vâng, nó trông khá đẹp
and we noticed if we hit the sign up    và chúng tôi nhận thấy nếu chúng tôi nhấn
đăng ký
button it takes us over to this or what    nút nó đưa chúng ta đến cái này hay cái gì
our registration view is currently set    chế độ xem đăng ký của chúng tôi hiện
được đặt
up as uh to go back guys you can just    up as uh to go back guys bạn chỉ có thể
hold the edge of the screen and i think    giữ cạnh của màn hình và tôi nghĩ


about:blank

    109/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
you can just drag    bạn chỉ có thể kéo
it's actually not working    nó thực sự không hoạt động
okay we'll fix that later    được rồi, chúng tôi sẽ sửa nó sau
obviously um right now what i want us to    rõ ràng là um ngay bây giờ những gì tôi
muốn chúng tôi
do is actually    làm là thực sự
go ahead and build out these custom text    hãy tiếp tục và xây dựng những văn bản tùy
chỉnh này
fields so once again back in your    các trường để một lần nữa trở lại trong bạn
components we're going to create another    các thành phần chúng ta sẽ tạo ra một
thành phần khác
file    tài liệu
and it's going to be a swift ui view    và nó sẽ là một giao diện người dùng nhanh
chóng
and we're going to just call this custom    và chúng ta sẽ chỉ gọi đây là tùy chỉnh
text to be able to input fields    văn bản để có thể nhập các trường
okay so let's go ahead and see how we're    được rồi, hãy tiếp tục và xem chúng ta thế
nào
going to create this guy let me get this    sẽ tạo ra anh chàng này để tôi lấy cái này
open on my code    mở mã của tôi
okay so we need a couple things guys uh    được rồi vì vậy chúng tôi cần một vài điều
các bạn uh
we need to be able to pass in an image    chúng ta cần để có thể vượt qua trong một
hình ảnh
name so that this can have an im a    tên để cái này có thể có im a
unique image for each field uh we need    hình ảnh duy nhất cho mỗi lĩnh vực uh
chúng tôi cần
to pass into placeholder texts because    để chuyển vào văn bản giữ chỗ vì
that's also going to be unique whenever    đó cũng sẽ là duy nhất bất cứ khi nào
we want to create one of these things    chúng tôi muốn tạo ra một trong những thứ
này
and then um we also need a binding    và sau đó um chúng tôi cũng cần một ràng
buộc
text property so let's go ahead and    thuộc tính văn bản, vì vậy hãy tiếp tục và
create that stuff we're going to say let    tạo ra những thứ mà chúng ta sẽ nói hãy để
image name is a string    tên hình ảnh là một chuỗi
let placeholder text    để văn bản giữ chỗ
to string    thành chuỗi
and let or sorry at binding    và để hoặc xin lỗi khi ràng buộc
var text    văn bản var


about:blank

    110/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
is also a string    cũng là một chuỗi
and this is going to give us some    và điều này sẽ cung cấp cho chúng tôi một
số
problems    các vấn đề
with our preview so let's actually just    với bản xem trước của chúng tôi, vì vậy hãy
thực sự chỉ
go ahead and add these properties    hãy tiếp tục và thêm các thuộc tính này
we can go here and say envelope for the    chúng ta có thể đến đây và nói phong bì cho
image name    Tên Hình ảnh
placeholder text we could just make it    văn bản giữ chỗ chúng ta có thể làm cho nó
email    e-mail
and the binding text you can just say    và văn bản ràng buộc bạn chỉ có thể nói
dot constant    hằng số chấm
and give it a blank text    và cung cấp cho nó một văn bản trống
just like that    cứ thế
so now if we resume our preview    vì vậy bây giờ nếu chúng tôi tiếp tục xem
trước của mình
um    ô
it should just say hello world so that's    nó chỉ nên nói xin chào thế giới vậy thôi
fine um now let's go ahead and make this    tốt thôi, bây giờ chúng ta hãy tiếp tục và làm
điều này
guy so it's going to be within a v stack    vì vậy nó sẽ nằm trong ngăn xếp v
and then within that we have an h stack    và sau đó trong đó chúng ta có một ngăn
xếp h
and we're going to have our image which    và chúng ta sẽ có hình ảnh của chúng ta
is system name    là tên hệ thống
image name oops    tên hình ảnh rất tiếc
dot resizable    dấu chấm có thể thay đổi kích thước
dot scaled to fit    chấm thu nhỏ để phù hợp
dot frame    khung chấm
width and height    chiều rộng và chiều cao
of 20 by 20    của 20 nhân 20
dot foreground color and we're going to    chấm màu nền trước và chúng ta sẽ
give it a color of open parenthesis dot    cho nó một màu của dấu ngoặc đơn mở
dark gray    màu xám đen
okay so that should be oh i spelled    được rồi, đó nên là oh tôi đánh vần
envelope wrong there we go so that's    phong bì sai rồi, chúng ta đi vậy đó
showing up nicely    xuất hiện độc đáo




about:blank



    111/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
all right now    tất cả ngay bây giờ
um    ô
we're going to go here and create a text    chúng ta sẽ đến đây và tạo một văn bản
field    cánh đồng
and the title key is going to be our    và khóa tiêu đề sẽ là của chúng tôi
placeholder text    Văn bản giữ chỗ
and the binding property will just be    và thuộc tính ràng buộc sẽ chỉ là
our text    văn bản của chúng tôi
right so that's our text field that's    đúng vậy đó là trường văn bản của chúng
tôi đó là
looking pretty good    nhìn khá tốt
now what we're going to have guys is    bây giờ những gì chúng ta sẽ có các chàng
trai là
a divider below that h stack we're going    một dải phân cách bên dưới ngăn xếp h đó
chúng ta sẽ đi
to say just divider    để nói chỉ chia
dot background    chấm nền
color open parenthesis dot dark gray    màu mở dấu ngoặc đơn chấm màu xám
đậm
okay so that looks pretty good    được rồi vì vậy trông khá tốt
now we can go ahead and create or add    bây giờ chúng ta có thể tiếp tục và tạo hoặc
thêm
these custom input fields on our login    các trường nhập tùy chỉnh này khi đăng
nhập của chúng tôi
page so we're gonna go to our login view    trang để chúng tôi sẽ chuyển đến chế độ
xem đăng nhập của chúng tôi
and we're gonna replace uh these text    và chúng ta sẽ thay thế uh những văn bản
này
fields here    lĩnh vực ở đây
with our custom input field so we're    với trường đầu vào tùy chỉnh của chúng tôi,
vì vậy chúng tôi
gonna say custom input fields    sẽ nói các trường nhập tùy chỉnh
image name is going to be envelope    tên hình ảnh sẽ là phong bì
placeholder text is email text is dollar    văn bản giữ chỗ là văn bản email là đô la
sign email    ký email
and i'm just going to    và tôi sẽ
divide that up just like that and let's    chia nó ra như vậy và chúng ta hãy
go ahead and hit resume    tiếp tục và nhấn tiếp tục
and see if it's looking good    và xem nó có đẹp không




about:blank    112/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so we should notice that our email guy    vì vậy chúng ta nên chú ý rằng anh chàng
email của chúng ta
looks different yep that looks pretty    trông khác yep trông đẹp đấy
good to me    tốt với tôi
and then let's uh do the same thing for    và sau đó chúng ta hãy làm điều tương tự
cho
our password so just go ahead and copy    mật khẩu của chúng tôi vì vậy chỉ cần tiếp
tục và sao chép
and paste that    và dán nó
we're going to create this and say it's    chúng ta sẽ tạo cái này và nói nó là
lock i believe    khóa tôi tin
and this guy is going to say password    và anh chàng này sẽ nói mật khẩu
and this is going to be dollar sign    và đây sẽ là ký hiệu đô la
password    mật khẩu
um all right yep so that looks pretty    ừm được rồi, yep trông rất đẹp
pretty darn good right    khá darn tốt phải không
um i do think that we should run this    ừm tôi nghĩ rằng chúng ta nên chạy cái này
one more time just to see how it looks    một lần nữa chỉ để xem nó trông như thế
nào
and    Và
now    Hiện nay
that we're done with that we'll be able    rằng chúng tôi đã hoàn thành với điều đó
chúng tôi sẽ có thể
to move on to creating our registration    để chuyển sang tạo đăng ký của chúng tôi
page which is going to go really really    trang sẽ thực sự đi
quickly because we just did a lot of the    một cách nhanh chóng bởi vì chúng tôi vừa
làm rất nhiều
heavy lifting here alright guys so this    nâng vật nặng ở đây được rồi các bạn nên
cái này
looks phenomenal right that's one of the    trông thật phi thường, đó là một trong
những
cleanest looking login pages i've ever    các trang đăng nhập sạch nhất mà tôi từng
có
seen built by yours truly you're welcome    nhìn thấy được xây dựng bởi bạn thực sự
bạn được chào đón
now you guys can literally drag and drop    bây giờ các bạn có thể kéo và thả theo đúng
nghĩa đen
this login page into any one of your    trang đăng nhập này vào bất kỳ trang nào
của bạn
apps that you have you can replace this    ứng dụng mà bạn có, bạn có thể thay thế




about:blank    113/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
ứng dụng này
text with images or whatever the hell    văn bản với hình ảnh hoặc bất cứ điều gì
địa ngục
you want    bạn muốn
but this is a pretty standard login page    nhưng đây là một trang đăng nhập khá
chuẩn
it has everything you need to just drag    nó có mọi thứ bạn cần chỉ cần kéo
and drop it into any one of the    và thả nó vào bất kỳ một trong những
applications that you're building that    các ứng dụng mà bạn đang xây dựng
requires an authentication feature    yêu cầu một tính năng xác thực
alrighty    được rồi
so next up we're going to be building    vì vậy tiếp theo chúng ta sẽ xây dựng
out this registration page so let's go    ra khỏi trang đăng ký này vì vậy chúng ta
hãy đi
ahead and get started with that guys    phía trước và bắt đầu với những kẻ đó
so this is what our registration page is    đây là trang đăng ký của chúng tôi
going to look like guys as you can see    sẽ trông giống như những chàng trai như
bạn có thể thấy
it's extremely similar to the login page    nó cực kỳ giống với trang đăng nhập
it just has a couple extra input fields    nó chỉ có thêm một vài trường đầu vào
and this is going to be really really    và điều này sẽ thực sự thực sự
easy for us to create because it reuses    chúng tôi dễ dàng tạo vì nó tái sử dụng
so many components from the login view    rất nhiều thành phần từ chế độ xem đăng
nhập
so    Vì thế
the first thing we're going to want is    điều đầu tiên chúng ta sẽ muốn là
we're going to want to take this header    chúng tôi sẽ muốn lấy tiêu đề này
and copy and paste it over into our    và sao chép và dán nó vào của chúng tôi
registration view    xem đăng ký
so first of all let's put everything in    vì vậy trước hết hãy đặt mọi thứ vào
a v stack and then just copy and paste    một ngăn xếp v và sau đó chỉ cần sao chép
và dán
that header and you could hit resume    tiêu đề đó và bạn có thể nhấn tiếp tục
and    Và
that would technically be okay    về mặt kỹ thuật sẽ ổn thôi
but since we are reusing this component    nhưng vì chúng tôi đang sử dụng lại thành
phần này
and the only thing that differs is the    và điều duy nhất khác biệt là
text or the title we are going to want    văn bản hoặc tiêu đề chúng ta sẽ muốn


about:blank

    114/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to    ĐẾN
be good programmers here and create a    trở thành lập trình viên giỏi ở đây và tạo ra
một
reusable component for this so in our    thành phần tái sử dụng cho điều này vì vậy
trong chúng tôi
components folder guys let's just go    thư mục thành phần đi thôi mọi người
ahead and make a new group for    phía trước và tạo một nhóm mới cho
authentication    xác thực
and let's make a new file here    và hãy tạo một tệp mới ở đây
swift ui view and we're going to call it    swift ui view và chúng ta sẽ gọi nó
authentication header    tiêu đề xác thực
so uh let's actually call it    vì vậy uh hãy thực sự gọi nó là
authentication header view    xem tiêu đề xác thực
header view    xem tiêu đề
and we could probably shorten it to auth    và chúng ta có thể rút ngắn nó thành auth
header view    xem tiêu đề
auth header view    chế độ xem tiêu đề xác thực
authentication header view is a bit long    chế độ xem tiêu đề xác thực hơi dài
underscore previews it's okay so    xem trước gạch dưới không sao đâu
um    ô
then replace that with auth header view    sau đó thay thế bằng chế độ xem tiêu đề
auth
okay so that looks    được rồi, có vẻ như vậy
better to me    tốt hơn với tôi
um now let's just go ahead and    ừm bây giờ chúng ta hãy tiếp tục và
copy this guy here    sao chép anh chàng này ở đây
and paste that inside of our auth header    và dán nó vào bên trong tiêu đề xác thực
của chúng tôi
view    xem
right and the only thing we need to do    đúng và điều duy nhất chúng ta cần làm
guys is replace the title okay    các bạn thay tiêu đề đi nhé
so the title does have two parts    vì vậy tiêu đề có hai phần
so    Vì thế
we're going to uh say let title uh 1    chúng ta sẽ uh nói hãy để tiêu đề uh 1
string let title 2    chuỗi để tiêu đề 2
string    sợi dây
you guys might    các bạn có thể
want to give those more descriptive    muốn cung cấp cho những mô tả nhiều hơn


about:blank

    115/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
names    tên
i think that's fine    tôi nghĩ điều đó ổn
we can just go ahead here and now say    chúng ta chỉ có thể tiếp tục ở đây và bây giờ
nói
title 1    tiêu đề 1
and title 2.    và tiêu đề 2.
and for the preview let's just go ahead    và để xem trước, hãy tiếp tục
and hit fix    và nhấn sửa
and you can say hello and title two is    và bạn có thể nói xin chào và tiêu đề hai là
welcome back    chào mừng trở lại
and if you guys were to hit resume on    và nếu các bạn nhấn tiếp tục
that    cái đó
you should notice that it looks pretty    bạn nên chú ý rằng nó trông đẹp
good right hello welcome back and for    tốt đúng xin chào chào mừng trở lại và cho
this guy we're just going to say get    anh chàng này chúng ta sẽ nói có được
started create your account so really    bắt đầu tạo tài khoản của bạn rất thực sự
quickly let's go back to the login view    nhanh chóng quay lại giao diện đăng nhập
and let's just replace this with auth    và hãy thay thế cái này bằng auth
header view    xem tiêu đề
and title 1 will be hello    và tiêu đề 1 sẽ là xin chào
and this will be welcome back    và điều này sẽ được chào đón trở lại
uh and then    uh và sau đó
go ahead and    đi trước và
copy that    sao chép cái đó
and instead of having this    và thay vì có cái này
uh    uh
same exact code repeated twice    cùng một mã chính xác được lặp lại hai lần
we just put it into its own sub view or    chúng tôi chỉ đặt nó vào chế độ xem phụ
của chính nó hoặc
subclass and now we can reuse it a lot    lớp con và bây giờ chúng ta có thể sử dụng
lại nó rất nhiều
more efficiently and cleanly in    hiệu quả và sạch sẽ hơn trong
different places in our code    những nơi khác nhau trong mã của chúng
tôi
so this will just be get started    vì vậy điều này sẽ chỉ được bắt đầu
and then this will say    và sau đó điều này sẽ nói
title 2 will be create    tiêu đề 2 sẽ được tạo
your account    tài khoản của bạn


about:blank

    116/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so let's go ahead and hit resume    vì vậy hãy tiếp tục và nhấn tiếp tục
awesome right and then guys within this    tuyệt vời đúng rồi các bạn trong này
we're just gonna add a spacer    chúng ta sẽ thêm một miếng đệm
to move that to the top    để di chuyển nó lên trên cùng
and then on this guy we are going to say    và sau đó về anh chàng này, chúng ta sẽ
nói
dot ignores safe area    dấu chấm bỏ qua khu vực an toàn
and that is now our custom header    và đó bây giờ là tiêu đề tùy chỉnh của chúng
tôi
extracted out to a sub view so that it's    trích xuất ra một chế độ xem phụ để nó
reusable now we are going to create    có thể tái sử dụng bây giờ chúng ta sẽ tạo
another v stack here    ngăn xếp v khác ở đây
and this is going to be for all these    và điều này sẽ dành cho tất cả những điều
này
input fields    trường đầu vào
so before we create the input fields    vì vậy trước khi chúng tôi tạo các trường
đầu vào
let's go ahead and create our state    hãy tiếp tục và tạo trạng thái của chúng ta
properties    của cải
so we're going to have email    vì vậy chúng ta sẽ có email
blank string at state private var user    chuỗi trống ở trạng thái private var user
name    tên
blank string at state private var    chuỗi trống ở trạng thái private var
full name    Họ và tên
blank string at state private var    chuỗi trống ở trạng thái private var
password    mật khẩu
blank string    chuỗi trống
now we'll be able to go ahead and create    bây giờ chúng ta sẽ có thể tiếp tục và tạo
all of these custom input fields so    tất cả các trường đầu vào tùy chỉnh này
let's go back to our login view and we    hãy quay lại chế độ xem đăng nhập của
chúng tôi và chúng tôi
could just grab these two because we're    chỉ có thể lấy hai cái này vì chúng tôi
going to be reusing them    sẽ tái sử dụng chúng
and paste them in there again    và dán chúng vào đó một lần nữa
and so this will be    và vì vậy đây sẽ là
let's go ahead and resume    hãy tiếp tục và tiếp tục
just to see how those look    chỉ để xem chúng trông như thế nào
so they're really kind of like cluttered    vì vậy chúng thực sự giống như lộn xộn




about:blank



    117/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so let's actually just go ahead and fix    vì vậy hãy thực sự tiếp tục và sửa chữa
um    ô
our padding really quickly we're going    phần đệm của chúng tôi thực sự nhanh
chóng, chúng tôi sẽ đi
to say dot padding    để nói dấu chấm đệm
dot vertical    chấm dọc
32    32
dot padding    đệm chấm
uh actually    thực ra
just go ahead and give it a padding of    chỉ cần tiếp tục và cung cấp cho nó một
phần đệm của
32 guys my bad    32 chàng trai tồi tệ của tôi
um and then on your spacing up at the    ừm và sau đó vào khoảng cách của bạn tại
top here    đầu ở đây
on the v stack i believe it's 40 pixels    trên ngăn xếp v tôi tin rằng nó là 40 pixel
right so that looks a lot more spaced    đúng để trông có vẻ cách đều hơn rất nhiều
out and a lot nicer    ra và đẹp hơn rất nhiều
um    ô
also    Mà còn
we now just need to drop this button in    bây giờ chúng ta chỉ cần thả nút này vào
here but before we do that let's go    ở đây nhưng trước khi chúng ta làm điều đó
chúng ta hãy đi
ahead and create    phía trước và tạo ra
make sure that all these input fields    đảm bảo rằng tất cả các trường đầu vào
này
have the correct data right so we have    có dữ liệu chính xác, vì vậy chúng tôi có
email password email password we don't    email mật khẩu email mật khẩu chúng tôi
không
want that    muốn điều đó
um so this is email this next guy should    ừm vậy đây là email mà anh chàng tiếp theo
nên
be person for the image    là người cho hình ảnh
the placeholder text should be user    văn bản giữ chỗ phải là người dùng
username    tên tài khoản
and the text should be dollar sign    và văn bản phải là ký hiệu đô la
username    tên tài khoản
and then    và sau đó
the image name for the next one will    tên hình ảnh cho cái tiếp theo sẽ




about:blank    118/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
also be person    cũng là người
placeholder text will be full name    văn bản giữ chỗ sẽ có tên đầy đủ
and then this will be dollar sign full    và sau đó đây sẽ là ký hiệu đô la đầy đủ
name and then you guys could leave this    tên và sau đó các bạn có thể để lại này
password guy here    anh chàng mật khẩu ở đây
right so that looks a lot better    đúng như vậy trông đẹp hơn rất nhiều
once again we can pretty much just grab    một lần nữa chúng ta có thể lấy khá nhiều
this button from our login view    nút này từ chế độ xem đăng nhập của
chúng tôi
but instead of copy and pasting once    nhưng thay vì sao chép và dán một lần
again guys we are going to create a    một lần nữa, chúng ta sẽ tạo ra một
reusable component here    thành phần tái sử dụng ở đây
um that's actually i take that back that    ừm đó thực sự là tôi rút lại điều đó
gets a little tricky because the action    có một chút khó khăn vì hành động
that's linked to that will be different    cái đó được liên kết với cái đó sẽ khác
and i could show you guys how to do that    và tôi có thể chỉ cho các bạn cách làm điều
đó
but it is a little bit trickier and    nhưng nó phức tạp hơn một chút và
since this is just a button we can    vì đây chỉ là một nút nên chúng ta có thể
actually go ahead and just drop this in    thực sự tiếp tục và chỉ cần thả cái này vào
to our code    mã của chúng tôi
uh okay so that looks really good the    uh được rồi vì vậy trông thực sự tốt
text here is going to say sign up    văn bản ở đây sẽ nói đăng ký
and this will say sign up here    và điều này sẽ nói đăng ký tại đây
awesome    tuyệt vời
and then we're going to do the same    và sau đó chúng ta sẽ làm như vậy
thing guys for this uh    điều này mọi người cho uh
this guy right here    anh chàng này ngay tại đây
um actually just go ahead and grab the    um thực sự chỉ cần đi trước và lấy
hdac this is not going to be a    hdac đây sẽ không phải là một
navigation link it's just going to be a    liên kết điều hướng nó sẽ chỉ là một
button    cái nút
so let's hit resume and see where we're    vì vậy hãy nhấn tiếp tục và xem chúng ta
đang ở đâu
at so that looks really good    trông thật tuyệt
now guys below the spacer right here    bây giờ các bạn bên dưới miếng đệm ngay
tại đây
let's go ahead and create a button    hãy tiếp tục và tạo một nút


about:blank

    119/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
action label    nhãn hành động
paste in that guy    dán vào anh chàng đó
replace this with already have an    thay thế cái này bằng đã có một
account and then we're going to replace    tài khoản và sau đó chúng tôi sẽ thay thế
sign up with sign in    đăng ký với đăng nhập
and go back to your login view and let's    và quay lại chế độ xem đăng nhập của bạn
và hãy
just grab    chỉ cần lấy
these two modifiers the padding    hai công cụ sửa đổi này phần đệm
and the color    và màu sắc
so we can actually remove that color    vì vậy chúng tôi thực sự có thể loại bỏ màu
đó
because    bởi vì
that's the default color of a button    đó là màu mặc định của một nút
already    đã
and here we just want to actually    và ở đây chúng tôi chỉ muốn thực sự
dismiss    miễn nhiệm
the uh the current view that we're    uh quan điểm hiện tại mà chúng tôi đang
looking at so we do that through the use    nhìn vào vì vậy chúng tôi làm điều đó thông
qua việc sử dụng
of that environment variable so we go    của biến môi trường đó vì vậy chúng tôi đi
ahead and say environment up at the top    phía trước và nói môi trường ở trên cùng
we're going to create a property    chúng ta sẽ tạo một tài sản
that's going to look at the presentation    đó là sẽ nhìn vào bài thuyết trình
mode    cách thức
var presentation mode    chế độ trình bày var
and then let's just copy that    và sau đó chúng ta hãy sao chép nó
presentation mode guy and in the action    anh chàng chế độ trình bày và trong hành
động
go ahead here and say presentation mode    hãy tiếp tục ở đây và nói chế độ trình bày
dot wrapped value dot dismiss    giá trị bọc dấu chấm loại bỏ dấu chấm
and guess what boom shakalaka that wraps    và đoán xem kết thúc của boom shakalaka
là gì
it up for the registration page so you    nó lên cho trang đăng ký để bạn
guys can see that it was a little bit    mọi người có thể thấy rằng đó là một chút
more work to build the login page but    nhiều công việc hơn để xây dựng trang
đăng nhập nhưng
that saved us a ton of time in building    đã tiết kiệm cho chúng tôi rất nhiều thời gian
trong việc xây dựng


about:blank

    120/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
the registration page because of how    trang đăng ký vì làm thế nào
reusable we have made our code so that    có thể tái sử dụng, chúng tôi đã tạo mã của
mình để
is one of the true like hallmarks of a    là một trong những dấu hiệu giống như thật
của một
good coder guys you create reusable    những người lập trình tốt, bạn tạo ra có thể
tái sử dụng
components that will    thành phần sẽ
make your code easier to work with down    làm cho mã của bạn dễ dàng hơn để làm
việc với xuống
the line right    dòng bên phải
so it's a little bit more work up front    vì vậy cần thêm một chút công việc phía
trước
but that work pays off for you a lot in    nhưng công việc đó trả hết cho bạn rất
nhiều trong
the end so    kết thúc như vậy
um guys    ừm các bạn
give yourselves a huge pad on the back    cho mình một tấm đệm lớn ở phía sau
we are done building the user interface    chúng tôi đã hoàn thành việc xây dựng giao
diện người dùng
for this application believe it took us    cho ứng dụng này tin rằng nó đã đưa chúng
tôi
about two and a half hours and honestly    khoảng hai tiếng rưỡi và thành thật mà nói
that's not bad this is a pretty complex    điều đó không tệ, đây là một vấn đề khá
phức tạp
ui right    đúng rồi
um especially things in like the profile    ừm, đặc biệt là những thứ như hồ sơ
view and we have scrollable views and    xem và chúng tôi có chế độ xem có thể
cuộn và
floating buttons and we got a bunch of    các nút nổi và chúng tôi có một loạt các nút
awesome in here and this is    shit tuyệt vời ở đây và đây là
starting to look really really good now    bắt đầu trông thực sự thực sự tốt bây giờ
we're actually ready to hook up our back    chúng tôi thực sự đã sẵn sàng để kết nối trở
lại của chúng tôi
end so we're going to be creating a    kết thúc vì vậy chúng tôi sẽ tạo ra một
firebase project for this so that we can    dự án firebase cho điều này để chúng tôi có
thể
actually authenticate our users there    thực sự xác thực người dùng của chúng tôi
ở đó
and start uploading data to the database    và bắt đầu tải dữ liệu lên cơ sở dữ liệu




about:blank    121/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
that we'll be able to start viewing in    mà chúng tôi sẽ có thể bắt đầu xem trong
the app like tweets profile images user    ứng dụng thích tweet hình ảnh hồ sơ người
dùng
accounts all that awesome stuff so get    tài khoản tất cả những thứ tuyệt vời đó để
có được
really excited for that guys    thực sự phấn khích cho những người đó
everything's about to come together and    mọi thứ sắp đến với nhau và
we're about to have a fully working    chúng tôi sắp có một công việc đầy đủ
social media application that's pretty    ứng dụng truyền thông xã hội khá đẹp
much exactly like twitter so this is    giống hệt như twitter vì vậy đây là
going to be awesome get excited we're    sẽ trở nên tuyệt vời, hãy phấn khích, chúng
tôi
almost done    sắp xong
okay guys so let's go ahead and set up    được rồi các bạn, hãy tiếp tục và thiết lập
our back end with firebase now so you    phần cuối của chúng tôi với firebase bây giờ
để bạn
guys are going to want to go to an    mọi người sẽ muốn đi đến một
internet browser and you're going to    trình duyệt internet và bạn sẽ
want to head to    muốn hướng đến
console.firebase.google.com    console.firebase.google.com
okay and all you need is a google    được rồi và tất cả những gì bạn cần là
google
account to    tài khoản để
sign in and be able to create firebase    đăng nhập và có thể tạo firebase
projects here so this is where our    dự án ở đây vì vậy đây là nơi của chúng tôi
backend is going to be set up so we're    phụ trợ sẽ được thiết lập vì vậy chúng tôi
just going to go here and click on add    chỉ cần vào đây và nhấp vào thêm
projects and i'm going to call this    dự án và tôi sẽ gọi đây là
twitter    Twitter
youtube tutorial    hướng dẫn youtube
obviously you guys just name this    rõ ràng các bạn chỉ cần đặt tên này
whatever you want let's select continue    bất cứ điều gì bạn muốn, hãy chọn tiếp tục
and we don't need analytics for this    và chúng tôi không cần phân tích cho việc
này
project let's just hit create project    dự án chúng ta hãy nhấn tạo dự án
and wait for it to do its thing and    và đợi nó làm việc của nó và
actually set up our back end and once    thực sự thiết lập back-end của chúng tôi và
một lần
more guys this is going to be where we    nhiều người hơn, đây sẽ là nơi chúng ta


about:blank

    122/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
authenticate all our users and store all    xác thực tất cả người dùng của chúng tôi và
lưu trữ tất cả
of our data including profile images and    dữ liệu của chúng tôi bao gồm hình ảnh hồ
sơ và
app data like user information tweets    dữ liệu ứng dụng như tweet thông tin người
dùng
and all that good stuff so it's sort of    và tất cả những thứ tốt đẹp như vậy
a one stop shop for uh your backend    một cửa hàng duy nhất cho phần phụ trợ
của bạn
services so now that we're here let's go    dịch vụ vì vậy bây giờ chúng tôi ở đây, hãy
đi
ahead and go to this authentication tab    trước và chuyển đến tab xác thực này
okay    được rồi
and you're just gonna go to the top and    và bạn sẽ chỉ đi đến đỉnh và
you're gonna click get started    bạn sẽ nhấp vào bắt đầu
and we're just gonna set up an email and    và chúng tôi sẽ thiết lập một email và
password uh authentication method um    mật khẩu uh phương thức xác thực ừm
there's a ton of other authentication    có rất nhiều xác thực khác
methods that we can use with firebase    các phương thức mà chúng ta có thể sử
dụng với firebase
but for this app we're just going to do    nhưng đối với ứng dụng này, chúng tôi sẽ
làm
email password so click that hit enable    mật khẩu email để nhấp vào đó nhấn bật
and then click save    và sau đó nhấp vào lưu
so that is now set up now let's go to    vì vậy bây giờ đã được thiết lập bây giờ
chúng ta hãy đi đến
our uh firestore database    uh cơ sở dữ liệu firestore của chúng tôi
and you're go actually sorry guys go    và bạn đang đi thực sự xin lỗi mọi người đi
back to project overview that's my bad    quay lại tổng quan dự án đó là điểm xấu của
tôi
um    ô
and you're gonna say here get started by    và bạn sẽ nói ở đây hãy bắt đầu bằng
adding firebase to your app you're gonna    thêm firebase vào ứng dụng của bạn, bạn
sẽ
click on ios and we need the bundle id    nhấp vào ios và chúng tôi cần id gói
for our application here so let's go    cho ứng dụng của chúng tôi ở đây vì vậy
hãy đi
back to the xcode project and click on    quay lại dự án xcode và nhấp vào
your project name all the way up at the    tên dự án của bạn tất cả các cách lên tại
top    đứng đầu


about:blank

    123/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and then you're just going to see in    và sau đó bạn sẽ thấy trong
this general tab    tab chung này
right here with your target selected so    ngay tại đây với mục tiêu của bạn được
chọn để
if you guys aren't seeing this    nếu các bạn không nhìn thấy điều này
go right here where you see your target    đi ngay đây nơi bạn nhìn thấy mục tiêu của
bạn
name and make sure that you have target    đặt tên và đảm bảo rằng bạn có mục tiêu
selected if you don't this is going to    đã chọn nếu bạn không điều này sẽ
look different so make sure you just    trông khác nhau vì vậy hãy chắc chắn rằng
bạn chỉ
select that target and we're going to    chọn mục tiêu đó và chúng tôi sẽ
copy and paste this bundle identifier    sao chép và dán số nhận dạng gói này
that you see here go back to firebase    mà bạn thấy ở đây quay lại firebase
and paste it in there and then we're    và dán nó vào đó và sau đó chúng tôi
just going to say register app    chỉ cần nói đăng ký ứng dụng
and now we have to download this google    và bây giờ chúng ta phải tải xuống google
này
service info plist file so let's just go    tập tin plist thông tin dịch vụ vì vậy chúng ta
hãy bắt đầu
ahead and click download there    phía trước và nhấp vào tải xuống ở đó
this is going to show up in your finder    cái này sẽ hiển thị trong công cụ tìm của
bạn
under or sorry in your downloads folder    bên dưới hoặc xin lỗi trong thư mục tải
xuống của bạn
what i like to do guys is uh    những gì tôi thích làm mọi người là uh
if you've done this before you're gonna    nếu bạn đã làm điều này trước khi bạn sẽ
see a dash and a number there you cannot    thấy một dấu gạch ngang và một số ở đó
bạn không thể
have that dash number so here's what i    có số gạch ngang đó vì vậy đây là những gì
tôi
like to do um i actually like to drag    thích làm ừm tôi thực sự thích kéo
and drop this into my project folder so    và thả cái này vào thư mục dự án của tôi để
mine is located in my desktop folder    của tôi nằm trong thư mục máy tính để bàn
của tôi
under this programming    dưới chương trình này
folder that i have and you can see my    thư mục mà tôi có và bạn có thể thấy thư
mục của tôi
project name right here    tên dự án ngay tại đây
so you just drag and drop it into there    vì vậy bạn chỉ cần kéo và thả nó vào đó


about:blank

    124/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and what is going on there    và những gì đang xảy ra ở đó
huh that's weird i should have    huh đó là kỳ lạ tôi nên có
oh there it is okay    ồ không sao đâu
so my bad that was in the wrong    vì vậy xấu của tôi đó là trong sai
uh    uh
let's move it    Chúng ta hãy di chuyển nó
so i'm gonna go back to desktop    vì vậy tôi sẽ quay trở lại máy tính để bàn
and i believe it's twitter swift ui    và tôi tin đó là twitter swift ui
youtube that i want to put it in yeah    youtube mà tôi muốn đưa nó vào yeah
okay    được rồi
so i'm gonna put it in there    vì vậy tôi sẽ đặt nó ở đó
and then i'm gonna rename it    và sau đó tôi sẽ đổi tên nó
to delete that dash and the number okay    để xóa dấu gạch ngang và số đó đi nhé
and then let's just hit next    và sau đó chúng ta hãy nhấn tiếp theo
um and this is how we add our firebase    ừm và đây là cách chúng tôi thêm căn cứ
hỏa lực của mình
to our xcode project we're going to do    với dự án xcode của chúng tôi, chúng tôi sẽ
làm
that in just a second really quickly    điều đó chỉ trong một giây thực sự nhanh
chóng
guys let's drag and drop this into our    các bạn hãy kéo và thả cái này vào
project    dự án
so i'm just going to drag this guy    vì vậy tôi sẽ kéo anh chàng này
over right below my assets folder and    ở ngay bên dưới thư mục tài sản của tôi và
hit finish    nhấn kết thúc
so now we can see this google service    vì vậy bây giờ chúng ta có thể thấy dịch vụ
google này
info file    tập tin thông tin
and that's looking good now we just have    và điều đó có vẻ tốt bây giờ chúng ta chỉ có
to actually add the firebase sdk to our    để thực sự thêm sdk firebase vào của
chúng tôi
project so    dự án như vậy
we can do this now through the swift    chúng ta có thể làm điều này ngay bây giờ
thông qua nhanh chóng
package manager previously it was all    trình quản lý gói trước đây là tất cả
done through cocoapods but we have the    được thực hiện thông qua cacaopods
nhưng chúng tôi có
ability to add third-party code into our    khả năng thêm mã của bên thứ ba vào của
chúng tôi




about:blank    125/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
app through the swift package manager    app thông qua trình quản lý gói nhanh
now so really quickly guys let's just go    bây giờ thật nhanh các bạn hãy đi thôi
ahead and copy this link we're going to    phía trước và sao chép liên kết này, chúng
tôi sẽ
go back to xcode you're going to go to    quay lại xcode bạn sẽ truy cập
file and you're going to say add    tập tin và bạn sẽ nói thêm
packages or click on add packages    gói hoặc nhấp vào thêm gói
in this enter package url paste the url    trong này nhập url gói dán url
that we got click add package    mà chúng tôi đã nhấp vào thêm gói
and let's just wait for it to do its    và chúng ta hãy đợi nó làm
thing it's basically fetching all of the    điều về cơ bản là tìm nạp tất cả
code it needs to from firebase um    mã nó cần từ firebase um
from github so that we can integrate it    từ github để chúng tôi có thể tích hợp nó
into our project and this is going to    vào dự án của chúng tôi và điều này sẽ
allow us to be able to    cho phép chúng tôi có thể
use code that firebase has created to    sử dụng mã mà firebase đã tạo để
interact with our api it's going to help    tương tác với api của chúng tôi, nó sẽ giúp
ích
us authenticate users upload data    chúng tôi xác thực người dùng tải lên dữ
liệu
download data upload images download    tải xuống dữ liệu tải lên hình ảnh tải xuống
images and all that good stuff    hình ảnh và tất cả những thứ tốt
okay guys so now that all that has been    được rồi các bạn vì vậy bây giờ tất cả
những gì đã được
fetched let's check what we want to add    đã tìm nạp, hãy kiểm tra những gì chúng tôi
muốn thêm
into our project so definitely going to    vào dự án của chúng tôi vì vậy chắc chắn
sẽ
want to add firebase auth    muốn thêm xác thực firebase
uh we are going to add uh let's expand    uh chúng ta sẽ thêm uh hãy mở rộng
this a little bit    cái này một chút
um we are going to add firebase database    ừm, chúng ta sẽ thêm cơ sở dữ liệu
firebase
swift    nhanh
or actually    hoặc thực sự
no sorry not firebase database switch    không xin lỗi không chuyển đổi cơ sở dữ
liệu firebase
we're going to add fire by firebase    chúng ta sẽ thêm lửa bằng firebase
firestore swift that's my bad    firestore swift đó là lỗi của tôi




about:blank



    126/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and then we are going to add firebase    và sau đó chúng ta sẽ thêm firebase
storage    kho
um so make sure you have firebase    ừm, vậy hãy chắc chắn rằng bạn có firebase
storage    kho
firebase firestore swift    firebase firestore swift
firebase firestore    căn cứ hỏa lực
and firebase so you should have four    và firebase, vì vậy bạn nên có bốn
checked one more time firebase off    đã kiểm tra thêm một lần nữa khi tắt
firebase
firebase firestore firebase firestore    firebase firestore firebase firebase
swift and firebase storage okay    lưu trữ nhanh và firebase ổn
so    Vì thế
let's say add package    giả sử thêm gói
and that is going to add that package    và điều đó sẽ thêm gói đó
dependency to our project    phụ thuộc vào dự án của chúng tôi
and    Và
uh to close out this chapter guys i just    uh để kết thúc chương này guys tôi chỉ
want to make sure that we have    muốn đảm bảo rằng chúng tôi có
successfully integrated firebase so    tích hợp thành công firebase như vậy
let's go to our twitter swift ui    hãy truy cập twitter của chúng tôi nhanh
chóng ui
app    ứng dụng
file right here just your main app file    tệp ngay tại đây chỉ là tệp ứng dụng chính
của bạn
and we are going to import firebase up    và chúng tôi sẽ nhập firebase lên
at the top    ở trên cùng
and within this guy    và trong anh chàng này
we're going to add an init method    chúng ta sẽ thêm một phương thức init
and we're going to say firebase app dot    và chúng ta sẽ nói ứng dụng firebase chấm
configure okay    cấu hình ổn
so now let's go ahead and run this    vì vậy bây giờ chúng ta hãy tiếp tục và chạy
cái này
project    dự án
and we should notice that everything    và chúng ta nên chú ý rằng mọi thứ
works just fine    hoạt động tốt
and we should not get any crashes    và chúng ta sẽ không gặp phải bất kỳ sự cố
nào
so if that's the case that means we    vì vậy nếu đó là trường hợp có nghĩa là




about:blank



    127/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
chúng tôi
successfully integrated firebase into    tích hợp thành công firebase vào
our app    ứng dụng của chúng tôi
and set up our back end correctly let's    và thiết lập mặt sau của chúng tôi một cách
chính xác, hãy
go ahead and actually finish the setup    tiếp tục và thực sự hoàn thành thiết lập
process we hit next    quá trình chúng tôi nhấn tiếp theo
so    Vì thế
this is uh    đây là uh
the step we just did but    bước chúng tôi vừa làm nhưng
we obviously don't have an app delegate    rõ ràng là chúng tôi không có đại biểu ứng
dụng
file so that's just how you sort of work    tập tin để đó chỉ là cách bạn sắp xếp công
việc
around that when you have this uh just    xung quanh đó khi bạn có cái này uh chỉ
app file you don't have an app delegate    tệp ứng dụng mà bạn không có đại biểu ứng
dụng
you basically just have to initialize    về cơ bản bạn chỉ cần khởi tạo
firebase    căn cứ hỏa lực
when the app launches and now we can    khi ứng dụng khởi chạy và bây giờ chúng ta
có thể
just continue to console    chỉ cần tiếp tục điều khiển
and let's go ahead and continue with our    và hãy tiếp tục và tiếp tục với
setup here so we're going to go to    thiết lập ở đây vì vậy chúng tôi sẽ đi đến
firestore database    cơ sở dữ liệu lò sưởi
we're going to say create database we    chúng ta sẽ nói tạo cơ sở dữ liệu chúng ta
can just start in test mode    chỉ có thể bắt đầu trong chế độ thử nghiệm
and let's hit enable    và hãy nhấn cho phép
so cloud firestore is where we're going    vì vậy cloud firestore là nơi chúng ta sẽ đến
to upload actual data like    để tải lên dữ liệu thực tế như
information about our users in tweet    thông tin về người dùng của chúng tôi trong
tweet
data and all that good stuff likes    dữ liệu và tất cả những thứ hay ho đó
comments whatever it may be    bình luận bất kể nó có thể là gì
it's all going to get stored in    tất cả sẽ được lưu trữ trong
firestore    lò sưởi
and that's where we're going to be    và đó là nơi chúng ta sẽ đến
fetching that data from as well    cũng lấy dữ liệu đó từ




about:blank    128/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so this is what you should see on your    vì vậy đây là những gì bạn sẽ thấy trên của
bạn
screen now and the last thing we have to    màn hình ngay bây giờ và điều cuối cùng
chúng ta phải
do while our app is still running is go    làm trong khi ứng dụng của chúng tôi vẫn
đang chạy là đi
to storage and this is where we're going    đến kho lưu trữ và đây là nơi chúng ta sẽ
đến
to store our    để lưu trữ của chúng tôi
images so    hình ảnh như vậy
you can see that it's already set up so    bạn có thể thấy rằng nó đã được thiết lập
như vậy
it looks good to go    nó có vẻ tốt để đi
and the reason we have to store images    và lý do chúng ta phải lưu trữ hình ảnh
separately guys is because uh typical    các bạn riêng biệt là bởi vì uh điển hình
back-end standard practice is to store    thực hành tiêu chuẩn back-end là lưu trữ
large files in a separate storage bucket    các tệp lớn trong một thùng lưu trữ riêng
you don't want to store your files where    bạn không muốn lưu trữ các tệp của mình ở
đâu
all of your sort of metadata is stored    tất cả các loại siêu dữ liệu của bạn được
lưu trữ
you store larger files like images and    bạn lưu trữ các tệp lớn hơn như hình ảnh
và
videos in a separate storage bucket and    video trong một thùng lưu trữ riêng biệt và
you get some sort of pointer to the file    bạn nhận được một số loại con trỏ tới tệp
that you're going to store in the actual    mà bạn sẽ lưu trữ trong thực tế
database something that's known as like    cơ sở dữ liệu một cái gì đó được gọi là như
an image url or video video url or media    url hình ảnh hoặc url video video hoặc
phương tiện
url stuff like that so we'll actually    những thứ url như thế vì vậy chúng tôi sẽ
thực sự
see how that works in just a little bit    xem nó hoạt động như thế nào chỉ trong một
chút
but just know that that's standard    nhưng chỉ cần biết rằng đó là tiêu chuẩn
practice you never want to store    thực hành bạn không bao giờ muốn lưu trữ
your metadata and your large files in    siêu dữ liệu của bạn và các tệp lớn của bạn
trong
one place you want to keep them separate    một nơi bạn muốn giữ chúng riêng biệt
so    Vì thế
that should just about do it i just want    điều đó chỉ nên làm điều đó tôi chỉ muốn




about:blank    129/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to make sure that our app runs and it    để đảm bảo rằng ứng dụng của chúng tôi
chạy và nó
looks like it's almost done so once we    có vẻ như nó gần như đã hoàn thành khi
chúng tôi
can see that our app is running we can    có thể thấy rằng ứng dụng của chúng tôi
đang chạy, chúng tôi có thể
close out this chapter and actually    kết thúc chương này và thực sự
start creating some view models in our    bắt đầu tạo một số mô hình xem trong của
chúng tôi
app that are going to help us do things    ứng dụng sẽ giúp chúng tôi làm mọi việc
like authenticate our users and upload    như xác thực người dùng của chúng tôi và
tải lên
user information to the database which    thông tin người dùng vào cơ sở dữ liệu
is the first thing we're going to do    là điều đầu tiên chúng ta sẽ làm
we're going to be working with this sign    chúng ta sẽ làm việc với dấu hiệu này
up page so that we can authenticate some    lên trang để chúng tôi có thể xác thực một
số
users and store their information in the    người dùng và lưu trữ thông tin của họ trong
database    cơ sở dữ liệu
and then we'll be able to you know    và sau đó chúng tôi sẽ có thể cho bạn biết
search for users and stuff like that and    tìm kiếm người dùng và những thứ tương tự
và
see their profiles and then ultimately    xem hồ sơ của họ và sau đó cuối cùng
be able to upload tweets    có thể tải lên các tweet
and really quickly you guys might notice    và thực sự nhanh chóng các bạn có thể
nhận thấy
that there isn't a profile image    rằng không có một hình ảnh hồ sơ
selector here so we're we are going to    bộ chọn ở đây vì vậy chúng tôi sẽ
integrate that once the user sign signs    tích hợp điều đó một khi người dùng đăng
ký
up we're going to take them over to a    lên, chúng tôi sẽ đưa họ đến một
different screen that asks them    màn hình khác hỏi họ
to uh add a profile image and that's    để uh thêm một hình ảnh hồ sơ và đó là
where we're going to upload it    nơi chúng tôi sẽ tải nó lên
and then actually save that in firebase    và sau đó thực sự lưu nó trong firebase
storage so that's going to be really    lưu trữ vì vậy sẽ thực sự
cool    mát mẻ
and we can even make it so that if the    và chúng tôi thậm chí có thể làm cho nó để
nếu




about:blank    130/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
use the user could choose not to upload    sử dụng người dùng có thể chọn không tải
lên
an image but for the purposes of this    một hình ảnh nhưng cho mục đích này
app we are going to sort of force them    ứng dụng, chúng tôi sẽ sắp xếp buộc họ
to upload a profile image so that we    để tải lên một hình ảnh hồ sơ để chúng tôi
don't have to worry about adding a    không phải lo lắng về việc thêm một
default profile image and having edit    hình ảnh hồ sơ mặc định và có chỉnh sửa
profile functionality and stuff like    chức năng hồ sơ và những thứ như
that    cái đó
okay guys so    được rồi mọi người
we noticed that our app has successfully    chúng tôi nhận thấy rằng ứng dụng của
chúng tôi đã thành công
built we're not getting any crashes and    được xây dựng, chúng tôi không gặp phải
bất kỳ sự cố nào và
everything looks really good so the next    mọi thứ trông thực sự tốt vì vậy tiếp theo
phase of this is actually going to be    giai đoạn này thực sự sẽ là
signing up some users and creating some    đăng ký một số người dùng và tạo một số
view models for our app and really    xem các mô hình cho ứng dụng của chúng
tôi và thực sự
getting into the fun stuff so that's    tham gia vào những thứ thú vị vì vậy đó là
what we're going to be doing in the next    chúng ta sẽ làm gì tiếp theo
chapter guys    chương kẻ
so we are going to get started in this    vì vậy chúng ta sẽ bắt đầu trong việc này
chapter guys by creating our    chương guys bằng cách tạo ra của chúng
tôi
authentication view model and this auth    mô hình xem xác thực và xác thực này
view model as we're going to call it or    xem mô hình như chúng ta sẽ gọi nó hoặc
authentication view model is going to be    mô hình xem xác thực sẽ là
responsible for communicating with our    chịu trách nhiệm liên lạc với chúng tôi
api with anything that involves    api với bất cứ thứ gì liên quan
authenticating a user meaning logging    xác thực người dùng có nghĩa là ghi nhật ký
them in    họ trong
signing them up if they have never    đăng ký cho họ nếu họ chưa bao giờ
created an account before    đã tạo một tài khoản trước đó
and doing other things like checking to    và làm những việc khác như kiểm tra
see if they're logged in when we launch    xem họ có đăng nhập khi chúng tôi khởi
chạy không
the app so we know whether or not to    ứng dụng để chúng tôi biết có nên hay
không


about:blank

    131/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
show the user with the main interface or    hiển thị cho người dùng giao diện chính
hoặc
the authentication flow so let's go    quy trình xác thực, vì vậy hãy bắt đầu
ahead and get started with this so    phía trước và bắt đầu với điều này vì vậy
let's collapse that components folder    hãy thu gọn thư mục thành phần đó
we're going to go into this view model    chúng ta sẽ đi vào mô hình xem này
folder and create a new file and it's    thư mục và tạo một tệp mới và nó là
going to be a swift file and i'm just    sẽ là một tập tin nhanh chóng và tôi chỉ
going to call it auth view model    sẽ gọi nó là mô hình xem auth
and we are going to import swift ui    và chúng tôi sẽ nhập Swift ui
and we're also going to import firebase    và chúng tôi cũng sẽ nhập firebase
and we're going to create a class called    và chúng ta sẽ tạo một lớp gọi là
off view model and it's going to conform    tắt mô hình xem và nó sẽ phù hợp
to the observable object    đến đối tượng quan sát
[Music]    [Âm nhạc]
right here    ngay chỗ này
type alias    gõ bí danh
okay and we're just going to create an    được rồi và chúng ta sẽ tạo một
init    trong đó
here and we're going to create a couple    ở đây và chúng ta sẽ tạo ra một vài
parameters up at the top so    thông số lên ở đầu vì vậy
we're going to create a published    chúng tôi sẽ tạo ra một xuất bản
variable    Biến đổi
uh var    uh var
and it's going to be called user session    và nó sẽ được gọi là phiên người dùng
and it's going to be a firebase auth dot    và nó sẽ là một dấu chấm xác thực firebase
user    người dùng
and it's going to be optional    và nó sẽ là tùy chọn
so this is going to be where we store    vì vậy đây sẽ là nơi chúng tôi lưu trữ
the actual user session so if the user    phiên người dùng thực tế vì vậy nếu người
dùng
is logged in this property will have a    được đăng nhập vào tài sản này sẽ có một
value    giá trị
if they're not this property will be nil    nếu họ không thuộc tính này sẽ là con số
không
so here's how we're going to initialize    vì vậy đây là cách chúng ta sẽ khởi tạo
it in our initializer what we're going    nó trong trình khởi tạo của chúng tôi những
gì chúng tôi sẽ làm


about:blank

    132/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to do is say self dot user session    phải làm là nói phiên người dùng tự chấm
equals auth.auth.currentuser    bằng auth.auth.currentuser
so    Vì thế
basically what this is going to do is if    về cơ bản điều này sẽ làm là nếu
a current user or a user is logged in    người dùng hiện tại hoặc người dùng đã
đăng nhập
we're going to store the user session in    chúng tôi sẽ lưu trữ phiên người dùng trong
this variable and we're going to    biến này và chúng ta sẽ
uh implement some presentation logic in    uh thực hiện một số logic trình bày trong
our content view in a second and    xem nội dung của chúng tôi trong một giây
và
basically if this user session has a    về cơ bản nếu phiên người dùng này có
value meaning there's a user that's    giá trị có nghĩa là có một người dùng
logged in we're gonna show the user the    đã đăng nhập, chúng tôi sẽ hiển thị cho
người dùng
main interface of the application and    giao diện chính của ứng dụng và
load their user data if not we're going    tải dữ liệu người dùng của họ nếu không
chúng tôi sẽ
to show the user the authentication flow    để hiển thị cho người dùng luồng xác thực
and have them log in or sign up so let's    và yêu cầu họ đăng nhập hoặc đăng ký, vì
vậy hãy
go over how to do that now    đi qua làm thế nào để làm điều đó bây giờ
so we're going to go to our content view    vì vậy chúng tôi sẽ đi đến chế độ xem nội
dung của chúng tôi
and we are actually going to go here and    và chúng tôi thực sự sẽ đi đến đây và
create a group so    tạo một nhóm như vậy
i want to grab all this stuff here right    tôi muốn lấy tất cả những thứ này ngay tại
đây
and i'm going to cut it    và tôi sẽ cắt nó
and then i'm going to create something    và sau đó tôi sẽ tạo ra một cái gì đó
called a group    được gọi là một nhóm
and    Và
make sure you guys uh    đảm bảo nhé các bạn uh
let's just go ahead and paste that    chúng ta hãy tiếp tục và dán nó
actually we actually need to introduce a    thực sự chúng ta thực sự cần phải giới thiệu
một
property here    tài sản ở đây
so i'm going to say at environment    vì vậy tôi sẽ nói tại môi trường
object    sự vật




about:blank



    133/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
view model    xem mô hình
and it's going to be of type off view    và nó sẽ bị loại khỏi chế độ xem
model and i'm going to go over why    mô hình và tôi sẽ đi qua lý do tại sao
this is an environment object man make    đây là một đối tượng môi trường mà con
người tạo ra
sure you guys add the word var there    chắc chắn các bạn thêm từ var vào đó
okay    được rồi
so let's actually cut this whole thing    vì vậy hãy thực sự cắt bỏ toàn bộ điều này
out one more time    ra ngoài một lần nữa
and we're going to say if view model dot    và chúng ta sẽ nói nếu xem mô hình chấm
user session    phiên người dùng
equals nil    bằng không
and else    và khác
so if the user session is nil that means    vì vậy nếu phiên người dùng bằng không,
điều đó có nghĩa là
no user logged in    không có người dùng nào đăng nhập
else    khác
have a logged    có một đăng nhập
in user so basically if we have a logged    trong người dùng về cơ bản nếu chúng ta
có một bản ghi
in user then we're going to show all the    trong người dùng thì chúng tôi sẽ hiển thị tất
cả
main code right but let's actually    mã chính đúng nhưng hãy thực sự
extract this to its own view    trích xuất cái này để xem riêng
um so we can actually go down here    ừm để chúng ta thực sự có thể đi xuống đây
and just say extension    và chỉ cần nói phần mở rộng
content view    xem nội dung
and we can just go ahead and call this    và chúng ta có thể tiếp tục và gọi đây là
like var    như var
main    chủ yếu
interface view or something    xem giao diện hoặc một cái gì đó
some view    một số xem
paste it all in there    dán tất cả vào đó
and we can now go ahead and say main    và bây giờ chúng ta có thể tiếp tục và nói
chính
interface view and here we're going to    xem giao diện và ở đây chúng ta sẽ
say login view    nói đăng nhập xem
so this is our presentation logic guys    đây là logic trình bày của chúng ta




about:blank



    134/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so you guys are going to notice that if    vì vậy các bạn sẽ chú ý rằng nếu
we were to run the application right now    chúng tôi đã chạy ứng dụng ngay bây giờ
that it's going to still show us our    rằng nó sẽ vẫn cho chúng ta thấy
login view actually guys go ahead and    đăng nhập xem thực tế các bạn hãy tiếp tục
và
stop that that's my bad let's go ahead    dừng lại đó là lỗi của tôi, hãy tiếp tục
and replace    và thay thế
this login view so delete that so it's    chế độ xem đăng nhập này vì vậy hãy xóa
nó đi
no longer the root view of the    không còn chế độ xem gốc của
application and let's go ahead and    ứng dụng và hãy tiếp tục và
make the root view this content view    làm cho chế độ xem gốc chế độ xem nội
dung này
again and then run the application    một lần nữa và sau đó chạy ứng dụng
and here's where you guys are going to    và đây là nơi các bạn sẽ đến
be able to see this magic working    có thể thấy phép thuật này hoạt động
you're going to see that even though the    bạn sẽ thấy điều đó mặc dù
root view of the app is the content view    chế độ xem gốc của ứng dụng là chế độ
xem nội dung
that we should be presented with the    rằng chúng ta nên được trình bày với
login view here    đăng nhập xem tại đây
and i actually think we're going to get    và tôi thực sự nghĩ rằng chúng ta sẽ nhận
được
a crash here and i'll explain why in a    một vụ tai nạn ở đây và tôi sẽ giải thích tại
sao trong một
second this ties into the environment    thứ hai điều này liên quan đến môi trường
object that we created    đối tượng mà chúng tôi đã tạo
so if you guys look at the error that we    vì vậy nếu các bạn nhìn vào lỗi mà chúng tôi
get    lấy
we say fatal error no observable object    chúng tôi nói lỗi nghiêm trọng không có đối
tượng có thể quan sát được
of type auth viewmodel found    loại auth viewmodel được tìm thấy
a viewmodel or sorry view.environment    một viewmodel hoặc xin lỗi
view.environment
object for autoview model baby may be    đối tượng cho em bé mô hình autoview có
thể là
missing as an ancestor of this view    mất tích như một tổ tiên của quan điểm này
so here guys we are using this    vì vậy ở đây các bạn chúng tôi đang sử
dụng cái này
environment object uh variable    đối tượng môi trường uh biến


about:blank

    135/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and    Và
you notice that we don't initialize this    bạn lưu ý rằng chúng tôi không khởi tạo cái
này
off view model here like we don't say    tắt xem mô hình ở đây như chúng tôi không
nói
like    giống
equals    bằng
bam right    bam phải
we're not doing that and that's because    chúng tôi không làm điều đó và đó là bởi vì
we need this    chúng tôi cần cái này
variable to be used across multiple    biến được sử dụng trên nhiều
locations in the app right so we're    vị trí trong ứng dụng ngay vì vậy chúng tôi
going to need this in the content view    sẽ cần điều này trong chế độ xem nội dung
we're going to need it in the login view    chúng tôi sẽ cần nó trong chế độ xem đăng
nhập
we're going to need it in the    chúng ta sẽ cần nó trong
registration view so instead of    đăng ký xem như vậy thay vì
initializing that view model over and    khởi tạo lại mô hình xem đó và
over again or passing it around to all    một lần nữa hoặc chuyển nó cho tất cả
the different views    các quan điểm khác nhau
we're going to create this environment    chúng ta sẽ tạo ra môi trường này
object so that it's usable within that    đối tượng để nó có thể sử dụng được trong
đó
whole environment of views so that's why    toàn bộ môi trường của quan điểm vì vậy đó
là lý do tại sao
we create this as an environment object    chúng tôi tạo cái này như một đối tượng môi
trường
but we do need to initialize it    nhưng chúng ta cần phải khởi tạo nó
somewhere so we're actually going to do    ở đâu đó vì vậy chúng tôi thực sự sẽ làm
that in the app file    cái đó trong tệp ứng dụng
so    Vì thế
we are going to go here    chúng ta sẽ đi đây
and we are going to say    và chúng ta sẽ nói
at state objects    tại các đối tượng trạng thái
var    var
view model equals auth view model    xem mô hình bằng auth xem mô hình
and then on the content view we're going    và sau đó trên chế độ xem nội dung, chúng
tôi sẽ
to say dot environment object    để nói đối tượng môi trường dấu chấm


about:blank

    136/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
view model    xem mô hình
and let's go ahead and go back to this    và chúng ta hãy tiếp tục và quay lại vấn đề
này
off view model and actually just go    tắt xem mô hình và thực sự chỉ cần đi
ahead and say print debug    trước và nói in gỡ lỗi
user session    phiên người dùng
is    là
oops    Ối
self.user session so we're going to get    phiên self.user vì vậy chúng tôi sẽ nhận
được
a print statement right and that's going    một tuyên bố in đúng và điều đó sẽ xảy ra
to happen when this guy initializes when    xảy ra khi anh chàng này khởi tạo khi
this off view model initializes and it's    mô hình tắt chế độ xem này khởi tạo và nó
initializing inside of our app file and    khởi tạo bên trong tệp ứng dụng của chúng
tôi và
then it's passing it as an environment    sau đó nó chuyển nó thành một môi trường
object to our content view    phản đối chế độ xem nội dung của chúng tôi
then    sau đó
back in our content view now we'll    quay lại chế độ xem nội dung của chúng tôi
bây giờ chúng tôi sẽ
actually be able to use this because it    thực sự có thể sử dụng cái này bởi vì nó
will have been initialized somewhere    sẽ được khởi tạo ở đâu đó
so now we should see    vì vậy bây giờ chúng ta nên xem
that we are getting shown our login view    rằng chúng tôi đang được hiển thị chế độ
xem đăng nhập của mình
so that is really really cool right and    vì vậy điều đó thực sự rất tuyệt đúng không
và
if you guys were to notice if i just    nếu các bạn chú ý nếu tôi chỉ
replace the or like change the logic    thay thế hoặc thích thay đổi logic
here    đây
and this is incorrect logic i just want    và đây là logic không chính xác, tôi chỉ
muốn
to show you guys what would happen if i    để cho các bạn thấy điều gì sẽ xảy ra nếu
tôi
changed it    đã thay đổi nó
so this is saying hey if the user    vì vậy đây là nói xin chào nếu người dùng
session has a value then show the login    phiên có một giá trị sau đó hiển thị thông tin
đăng nhập
view well we obviously don't want to do    xem tốt rõ ràng là chúng tôi không muốn
làm


about:blank

    137/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
that    cái đó
it's just to show you that this    nó chỉ để cho bạn thấy rằng điều này
presentation logic is actually working    logic trình bày đang thực sự hoạt động
right so you notice i changed the logic    đúng để bạn nhận thấy tôi đã thay đổi logic
and it went through this uh sort of view    và nó đã trải qua kiểu xem uh này
logic here and it said hey    logic ở đây và nó nói này
viewmodel.user session    phiên viewmodel.user
is nil so i'm going to show you the main    là con số không vì vậy tôi sẽ chỉ cho bạn cái
chính
interface view it's going to hit this    xem giao diện nó sẽ đánh cái này
else block here    khối khác ở đây
and now everything is working    và bây giờ mọi thứ đang hoạt động
as we have seen    như chúng ta đã thấy
um    ô
that we built before which is looking    mà chúng tôi đã xây dựng trước đó đang
tìm kiếm
really good    thật sự tốt
so anyway let's change the logic back    Vì vậy, dù sao đi nữa, hãy thay đổi logic trở
lại
and now let's go over what we need to do    và bây giờ chúng ta hãy đi qua những gì
chúng ta cần làm
to actually    thực sự
um make our app work so that it can    um làm cho ứng dụng của chúng tôi hoạt
động để nó có thể
register users log them in and upload    đăng ký người dùng đăng nhập và tải lên
some user data so we're going to hop    một số dữ liệu người dùng vì vậy chúng tôi
sẽ nhảy
back into our auth view model    quay lại mô hình xem xác thực của chúng
tôi
oh and let's see if we got that print    ồ và hãy xem liệu chúng ta có bản in đó
không
statement    tuyên bố
so i'm going to filter this out with    vì vậy tôi sẽ lọc cái này ra với
debug yep we see that user session is    gỡ lỗi vâng, chúng tôi thấy rằng phiên người
dùng là
nil meaning we do not have a user signed    không có nghĩa là chúng tôi không có người
dùng đã ký
in because we haven't added any users to    trong vì chúng tôi chưa thêm bất kỳ người
dùng nào vào
the application    ứng dụng


about:blank

    138/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so i'm going to add two functions here    vì vậy tôi sẽ thêm hai chức năng ở đây
for now guys i'm going to say funk login    bây giờ các bạn, tôi sẽ nói đăng nhập funk
with email email string    với chuỗi email email
password    mật khẩu
string    sợi dây
and then i'm going to add another    và sau đó tôi sẽ thêm một cái khác
function    chức năng
that says func    điều đó nói rằng func
register    đăng ký
with email    với email
email string    chuỗi email
password    mật khẩu
string full name    chuỗi tên đầy đủ
string    sợi dây
username    tên tài khoản
string    sợi dây
awesome    tuyệt vời
and    Và
that is going to be it for now    đó sẽ là nó bây giờ
um    ô
so obviously this is gonna log our user    vì vậy rõ ràng điều này sẽ đăng nhập người
dùng của chúng tôi
in this is gonna sign our user up let's    trong phần này sẽ đăng ký người dùng của
chúng tôi, hãy
hop back into our login view just to see    nhảy trở lại chế độ xem đăng nhập của
chúng tôi chỉ để xem
where we're gonna actually call these    nơi chúng ta sẽ thực sự gọi những thứ này
functions so for now i'm just gonna say    chức năng vì vậy bây giờ tôi sẽ chỉ nói
print    in
debug    gỡ lỗi
login with email    đăng nhập bằng email
email    e-mail
and here let's add a print statement    và ở đây hãy thêm một câu lệnh in
that says register with email    nói rằng đăng ký với email
email    e-mail
and let's see how we're going to    và hãy xem chúng ta sẽ làm như thế nào
implement our view model in our other    thực hiện mô hình xem của chúng tôi trong
khác của chúng tôi


about:blank

    139/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
views and actually call these functions    lượt xem và thực sự gọi các chức năng này
and let's actually just go ahead and we    và chúng ta hãy thực sự tiếp tục và chúng ta
can keep that guy there for now might be    có thể giữ anh chàng đó ở đó bây giờ có thể
là
useful later    hữu ích sau này
but let's go back to our login view    nhưng hãy quay lại giao diện đăng nhập của
chúng ta
and we're going to add another instance    và chúng tôi sẽ thêm một trường hợp khác
of that view model so we're going to say    của mô hình xem đó, vì vậy chúng tôi sẽ nói
dot environment object    đối tượng môi trường dấu chấm
var view model auth view model    var xem mô hình auth xem mô hình
suite    Thượng hạng
and down here where we say print sign in    và dưới đây nơi chúng tôi nói in đăng nhập
here    đây
we're going to say view model dot login    chúng ta sẽ nói xem mô hình dot đăng nhập
with email    với email
and password and the email and password    và mật khẩu và email và mật khẩu
guys are these text properties that we    các bạn là những thuộc tính văn bản mà
chúng tôi
created up here these state variables    tạo ra ở đây các biến trạng thái này
so let's do the same thing in our    vì vậy chúng ta hãy làm điều tương tự trong
của chúng tôi
registration view    xem đăng ký
instead of sign up here    thay vì đăng ký tại đây
we're going to add uh some some actual    chúng tôi sẽ thêm uh một số thực tế
code    mã số
and it's going to but sorry first we    và nó sẽ nhưng xin lỗi đầu tiên chúng tôi
need to say environment    cần phải nói môi trường
object bar viewmodel    chế độ xem thanh đối tượng
off viewmodel    tắt chế độ xem
so once again guys this concept is    vì vậy một lần nữa các bạn khái niệm này là
really important to understand it's very    thực sự quan trọng để hiểu nó rất
helpful in swift ui we notice that we    hữu ích trong Swift ui, chúng tôi nhận thấy
rằng chúng tôi
are not initializing this view model in    không khởi tạo mô hình xem này trong
multiple places it's only been    nhiều nơi nó chỉ được
initialized in one place which is the at    được khởi tạo ở một nơi đó là tại
file and then we launch the content view    tệp và sau đó chúng tôi khởi chạy chế độ




about:blank



    140/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
xem nội dung
let's actually add this as an    hãy thực sự thêm cái này như một
environment object to the navigation    đối tượng môi trường để điều hướng
view that's my bad    xem đó là xấu của tôi
so let's say dot environment object    vì vậy hãy nói đối tượng môi trường dấu
chấm
view model    xem mô hình
right so we add this as an environment    đúng vậy nên chúng tôi thêm cái này làm
môi trường
object and because this login view is    đối tượng và bởi vì chế độ xem đăng nhập
này là
part of the same environment    một phần của cùng một môi trường
as the content view right because it's    như nội dung xem đúng bởi vì nó
set up in the content view so it's part    thiết lập trong chế độ xem nội dung để nó là
một phần
of the same environment we get access to    của cùng một môi trường chúng ta có quyền
truy cập vào
that view model there    mà xem mô hình ở đó
and it's the same thing with the content    và đó là điều tương tự với nội dung
view and it's going to be the same thing    xem và nó sẽ giống như vậy
with the registration view so that's    với chế độ xem đăng ký vì vậy đó là
really really cool we don't have to    thực sự rất tuyệt, chúng ta không cần phải
worry about passing it around or doing    lo lắng về việc vượt qua nó xung quanh
hoặc làm
any sort of you know initializing it    bất kỳ loại nào bạn biết khi khởi tạo nó
multiple times it's all just taken care    nhiều lần tất cả chỉ được chăm sóc
of through this environment object    thông qua đối tượng môi trường này
property which is really really helpful    tài sản thực sự thực sự hữu ích
so anyway let's go back to this button    Vì vậy, dù sao đi nữa, hãy quay lại nút này
and we're going to say    và chúng ta sẽ nói
viewmodel.register with email    viewmodel.register với email
password    mật khẩu
full name    Họ và tên
username    tên tài khoản
and let's just do let's break this up a    và chúng ta hãy phá vỡ điều này
little bit    một chút
boom    bùng nổ
now let's run our app guys and see if we    bây giờ hãy chạy ứng dụng của chúng tôi và
xem liệu chúng tôi có


about:blank

    141/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
are getting back those print statements    đang lấy lại những câu lệnh in đó
that we added in our off view model just    mà chúng tôi đã thêm vào mô hình tắt chế
độ xem của mình
to let us know that we're successfully    để cho chúng tôi biết rằng chúng tôi đang
thành công
connected to it and that we're able to    kết nối với nó và chúng tôi có thể
call functions that are a part of that    gọi các chức năng là một phần của điều đó
view model    xem mô hình
so it's going to show us that    vì vậy nó sẽ cho chúng ta thấy rằng
log in with email and we don't see    đăng nhập bằng email và chúng tôi không
thấy
anything there let's actually type an    bất cứ điều gì ở đó hãy thực sự gõ một
email in    gửi email vào
test gmail.com    kiểm tra gmail.com
hit that and you guys notice that our    nhấn vào đó và các bạn nhận thấy rằng
chúng tôi
print statement says log in with test    tuyên bố in cho biết đăng nhập bằng thử
nghiệm
gmail.com so that's looking great we go    gmail.com vì vậy trông thật tuyệt, chúng tôi
đi
here let's add another email    ở đây hãy thêm một email khác
uh    uh
something    thứ gì đó
gmail.com let's hit sign up and it says    gmail.com hãy nhấn đăng ký và nó nói
register with email something gmail.com    đăng ký với email gì đó gmail.com
so that is looking awesome    vì vậy điều đó trông thật tuyệt
next step we know so    bước tiếp theo chúng ta biết như vậy
once again what that tells us is that we    một lần nữa điều đó cho chúng ta biết là
chúng ta
have successfully connected our view    đã kết nối thành công chế độ xem của
chúng tôi
model to our views it's being used as an    mô hình theo quan điểm của chúng tôi, nó
đang được sử dụng như một
environment object which is great we    đối tượng môi trường thật tuyệt vời chúng ta
have some presentation logic set up and    có một số logic trình bày được thiết lập và
the main effect of that guys is once the    tác dụng chính của những kẻ đó là một khi
user logs in it's always going to just    người dùng đăng nhập nó sẽ luôn luôn
take them straight to the main interface    đưa họ thẳng đến giao diện chính
of the application they won't have to    của ứng dụng họ sẽ không phải




about:blank    142/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
log in every time right that's what that    đăng nhập mọi lúc đúng như vậy đó
presentation logic and the content view    logic trình bày và chế độ xem nội dung
is doing it says hey if they've already    đang làm điều đó hãy nói này nếu họ đã làm
rồi
logged in just take them to the main    đăng nhập chỉ cần đưa họ đến chính
interface if not take them to the login    giao diện nếu không đưa họ đến đăng nhập
view so    xem như vậy
this is obviously only going to happen    điều này rõ ràng là sẽ chỉ xảy ra
when the app launches and the user    khi ứng dụng khởi chạy và người dùng
hasn't signed up yet or if they    chưa đăng ký hoặc nếu họ
physically log out of the application so    đăng xuất vật lý khỏi ứng dụng để
this is looking really really good it's    cái này trông thực sự rất tốt nó
super slick now we're going to get into    siêu bóng bẩy bây giờ chúng ta sẽ đi vào
actually    Thực ra
adding the authentication code to these    thêm mã xác thực vào những
functions so we can actually    các chức năng để chúng ta thực sự có thể
authenticate a user with our back end    xác thực người dùng với phần cuối của
chúng tôi
so we are going to hop into this    vì vậy chúng ta sẽ nhảy vào đây
register function guys because we    chức năng đăng ký bởi vì chúng tôi
obviously can't log someone in if we    rõ ràng là không thể đăng nhập ai đó nếu
chúng tôi
haven't registered them yet right    chưa đăng ký đúng không
so    Vì thế
registering this user is just going to    đăng ký người dùng này chỉ là đi đến
involve grabbing these properties that    liên quan đến việc lấy các thuộc tính này
we get from the view when we call this    chúng tôi nhận được từ chế độ xem khi
chúng tôi gọi đây là
function and uploading it to the    chức năng và tải nó lên
database    cơ sở dữ liệu
so we first have to authenticate the    vì vậy trước tiên chúng ta phải xác thực
user and then we're going to save their    người dùng và sau đó chúng tôi sẽ lưu của
họ
information in the database it's two    thông tin trong cơ sở dữ liệu đó là hai
separate processes and it'll make more    các quy trình riêng biệt và nó sẽ tạo ra nhiều
hơn
sense when we actually write the code    cảm giác khi chúng ta thực sự viết mã
so let's go ahead and just delete this    vì vậy hãy tiếp tục và chỉ cần xóa cái này




about:blank    143/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
print statement and we're going to say    tuyên bố in và chúng tôi sẽ nói
auth.auth.createuser with email password    auth.auth.createuser với mật khẩu email
and completion so    và hoàn thành như vậy
guys this is obviously code that we're    các bạn, đây rõ ràng là mã mà chúng tôi
đang
getting from firebase this is the whole    nhận được từ firebase đây là toàn bộ
reason we added this swift package    lý do chúng tôi thêm gói Swift này
because all this code here this dot    bởi vì tất cả mã này ở đây dấu chấm này
create user function is code that    tạo chức năng người dùng là mã
firebase has written that we have    firebase đã viết rằng chúng tôi có
integrated into our project so that we    tích hợp vào dự án của chúng tôi để chúng
tôi
can use it to communicate with the api    có thể sử dụng nó để giao tiếp với api
so obviously this function creates a    vì vậy rõ ràng chức năng này tạo ra một
user    người dùng
and you see here that we need an email    và bạn thấy ở đây rằng chúng tôi cần một
email
we need a password and then we get some    chúng tôi cần một mật khẩu và sau đó
chúng tôi nhận được một số
sort of callback and we're going to go    loại gọi lại và chúng tôi sẽ đi
over what that does in a second    hơn những gì nó làm trong một giây
obviously we just pass in these    rõ ràng là chúng ta chỉ vượt qua những
properties email password and then we're    mật khẩu email thuộc tính và sau đó chúng
tôi
going to tab over to this completion and    đi đến tab để hoàn thành này và
we're going to hit enter okay    chúng ta sẽ nhấn enter nhé
so we notice that we get back some sort    vì vậy chúng tôi nhận thấy rằng chúng tôi
lấy lại một số loại
of result    kết quả
and some sort of potential error okay    và một số loại lỗi tiềm năng được
so obviously something might go wrong in    vì vậy rõ ràng một cái gì đó có thể đi sai
trong
the authentication process so we might    quá trình xác thực để chúng tôi có thể
get an error back but we also might not    nhận lại lỗi nhưng chúng tôi cũng có thể
không
which is why this property is optional    đó là lý do tại sao tài sản này là tùy chọn
so the first thing we're going to do is    vì vậy điều đầu tiên chúng ta sẽ làm là
check to see if an error happened maybe    kiểm tra xem có lỗi xảy ra không




about:blank    144/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
the user's email was invalid maybe their    email của người dùng không hợp lệ có thể
họ
password didn't meet the password    mật khẩu không đáp ứng mật khẩu
requirements maybe something went wrong    yêu cầu có thể đã xảy ra sự cố
with the back end maybe the user already    với mặt sau có thể người dùng đã
exists who knows what it might be right    tồn tại ai biết nó có thể đúng
so we're going to say if let error    vì vậy chúng ta sẽ nói if let error
equals error    bằng lỗi
oops error    lỗi rất tiếc
error    lỗi
we're going to say print    chúng ta sẽ nói in
debug failed to register with error    gỡ lỗi không thể đăng ký với lỗi
and then we're just going to    và sau đó chúng ta sẽ
say error dot localized description and    nói lỗi chấm mô tả bản địa hóa và
then we're going to return so basically    sau đó chúng ta sẽ trở lại về cơ bản
what's going to happen is this is an    điều gì sẽ xảy ra đây là một
if-let statement it's going to check to    câu lệnh if-let nó sẽ kiểm tra
see if the error is nil or not if it's    xem lỗi có phải là không hay không nếu đó
là
not it's going to store the error in    không phải nó sẽ lưu trữ lỗi trong
this let constant and then we're going    điều này hãy để nó liên tục và sau đó chúng
ta sẽ đi
to print this statement out right and    để in tuyên bố này ra bên phải và
it's going to give us some description    nó sẽ cung cấp cho chúng tôi một số mô tả
about what happened or what went wrong    về những gì đã xảy ra hoặc những gì đã sai
and then we're going to return out of    và sau đó chúng ta sẽ trở về
the function because we obviously don't    chức năng bởi vì chúng tôi rõ ràng là không
want to keep going with the sign up flow    muốn tiếp tục với quy trình đăng ký
if    nếu như
something went wrong    đã xảy ra sự cố
so now we're going to go here and we're    vì vậy bây giờ chúng ta sẽ đi đến đây và
chúng ta
going to say guard let user equal    sẽ nói bảo vệ để người dùng bình đẳng
results dot user    người dùng chấm kết quả
else return    khác trở lại
so    Vì thế
this is we're accessing this result as    đây là chúng tôi đang truy cập kết quả này
như




about:blank    145/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
part of the callback    một phần của cuộc gọi lại
and um we get access to this user    và ừm, chúng tôi có quyền truy cập vào
người dùng này
property and if you guys were to hold    tài sản và nếu các bạn đã nắm giữ
down option and click on that user    tùy chọn xuống và nhấp vào người dùng đó
you guys notice that it's this user type    các bạn chú ý rằng đó là loại người dùng
này
which is actually the same type that we    mà thực sự là cùng một loại mà chúng tôi
have up here it's the it's part of the    có ở đây nó là một phần của
firebase auth library    thư viện xác thực firebase
so    Vì thế
if we get the user back then we're going    nếu chúng tôi lấy lại được người dùng thì
chúng tôi sẽ
to say    để nói
self    bản thân
dot user session equals user    phiên người dùng chấm bằng người dùng
just like that    cứ thế
and let's go ahead and just hit command    và hãy tiếp tục và chỉ cần nhấn lệnh
b to make sure our code still works    b để đảm bảo mã của chúng tôi vẫn hoạt
động
okay looks pretty good to me so you guys    được rồi có vẻ khá tốt với tôi vì vậy các bạn
notice that we're able to set this    lưu ý rằng chúng tôi có thể thiết lập điều này
property to this user guy right here    tài sản cho anh chàng người dùng này ngay
tại đây
because they're of the same data type    vì chúng có cùng kiểu dữ liệu
and now    và bây giờ
something else we have to do is we've    một cái gì đó khác chúng ta phải làm là
chúng ta đã
through this process we've successfully    thông qua quá trình này, chúng tôi đã thành
công
authenticated a user but we haven't    đã xác thực người dùng nhưng chúng tôi
chưa
actually uploaded any of their    thực sự tải lên bất kỳ của họ
information to the database so i'm going    thông tin vào cơ sở dữ liệu vì vậy tôi sẽ
to stop here and actually    dừng lại ở đây và thực sự
test this out in the simulator so i can    kiểm tra điều này trong trình giả lập để tôi có
thể
show you guys what i mean    cho các bạn thấy ý tôi là gì
and let's actually just go ahead and add    và hãy thực sự tiếp tục và thêm




about:blank    146/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
a print statement that says print debug    một câu lệnh in có nội dung gỡ lỗi in
registered    đăng ký
user successfully    người dùng thành công
and let's go ahead and actually print    và hãy tiếp tục và thực sự in
out    ngoài
user is    người dùng là
self that user session    bản thân phiên người dùng đó
all right guys so let's go ahead and run    được rồi các bạn, vì vậy hãy tiếp tục và
chạy
this and see if it actually creates a    điều này và xem nếu nó thực sự tạo ra một
user for us this is gonna be pretty    người dùng đối với chúng tôi điều này sẽ rất
đẹp
exciting    thú vị
so go ahead and actually get your um    vì vậy hãy tiếp tục và thực sự nhận được
um của bạn
what's it called    nó được gọi là gì
authentication tab opened up in firebase    tab xác thực đã mở trong firebase
and let's go ahead and sign a user up so    và hãy tiếp tục và đăng ký người dùng
we're just going to say test gmail.com    chúng tôi sẽ nói thử nghiệm gmail.com
username is test full name is test test    tên người dùng là kiểm tra tên đầy đủ là
kiểm tra kiểm tra
password let's just do q q q q q q and    mật khẩu hãy làm q q q q q và
you guys notice that we have to make    các bạn lưu ý rằng chúng ta phải làm
this a secure field we're going to do    đây là một lĩnh vực an toàn chúng ta sẽ làm
that in just a second i just want to see    rằng chỉ trong một giây tôi chỉ muốn xem
if this works so let's go ahead and hit    nếu điều này hoạt động thì hãy tiếp tục và
nhấn
sign up    đăng ký
oh and check that out right you guys    ồ và kiểm tra xem có đúng không các bạn
noticed that it took me directly to    nhận thấy rằng nó đã đưa tôi trực tiếp đến
the    các
main interface because that means we    giao diện chính vì điều đó có nghĩa là chúng
tôi
successfully registered our user so    đăng ký thành công người dùng của chúng
tôi vì vậy
that's really cool and i'll explain why    điều đó thực sự tuyệt vời và tôi sẽ giải thích
tại sao
that happened as well and you guys will    điều đó cũng xảy ra và các bạn sẽ
notice that here    chú ý rằng ở đây




about:blank



    147/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
at first the user session was nil and    lúc đầu, phiên người dùng là không và
then we get this registered user    sau đó chúng tôi có được người dùng đã
đăng ký này
successfully and then we get back an    thành công và sau đó chúng tôi nhận lại một
actual user it's just some weird object    người dùng thực tế nó chỉ là một số đối
tượng kỳ lạ
type but    gõ nhưng
um that means we've actually set this    ừm, điều đó có nghĩa là chúng tôi đã thực
sự thiết lập điều này
user session property to something and    thuộc tính phiên người dùng cho một cái gì
đó và
guys this is a published variable so    các bạn đây là một biến được công bố vì
vậy
whenever this thing gets set it's going    bất cứ khi nào điều này được thiết lập nó sẽ
đi
to publish that notification to the view    để xuất bản thông báo đó để xem
that is utilizing this view model    đó là sử dụng mô hình xem này
and so if we go back to our content view    và vì vậy nếu chúng ta quay lại chế độ xem
nội dung của mình
this logic here depends on that user    logic này ở đây phụ thuộc vào người dùng
đó
session property so when that user    thuộc tính phiên để khi người dùng đó
session property gets published it's    thuộc tính phiên được xuất bản
going to reconfigure the view run back    sắp cấu hình lại view chạy lại
through this logic and go oh hey the    thông qua logic này và đi oh hey
user session's not nil anymore it got    phiên người dùng không còn là con số
không nữa
published and now that's why as soon as    được xuất bản và bây giờ đó là lý do tại sao
ngay sau khi
we sign up it shows us this main    chúng tôi đăng ký nó cho chúng tôi thấy
chính này
interface view which is really really    chế độ xem giao diện thực sự thực sự
really freaking cool right so now if we    thực sự tuyệt vời ngay bây giờ nếu chúng ta
run the app again    chạy lại ứng dụng
it's going to have a logged in user you    nó sẽ có một người dùng đăng nhập bạn
guys will notice that this print    mọi người sẽ nhận thấy rằng bản in này
statement says hey you guys have a user    tuyên bố nói này, các bạn có một người
dùng
and it's now showing us    và bây giờ nó đang cho chúng ta thấy
the actual main interface of the app    giao diện chính thực tế của ứng dụng




about:blank    148/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
which is awesome    đó là tuyệt vời
and if we were to refresh our    và nếu chúng ta làm mới
authentication page we notice that we    trang xác thực, chúng tôi nhận thấy rằng
chúng tôi
have a user successfully registered in    có một người dùng đã đăng ký thành công
trong
the application so this is all looking    ứng dụng vì vậy đây là tất cả tìm kiếm
really really really good guys um but    thực sự thực sự thực sự tốt mọi người um
nhưng
there is a but    có một nhưng
if we go to our database we haven't    nếu chúng tôi truy cập cơ sở dữ liệu của
mình, chúng tôi chưa
actually saved any of that user    thực sự đã lưu bất kỳ người dùng nào
information anywhere so    thông tin bất cứ nơi nào vì vậy
authenticating the user and actually    xác thực người dùng và thực sự
storing their information in the    lưu trữ thông tin của họ trong
database are two separate processes so    cơ sở dữ liệu là hai quá trình riêng biệt vì
vậy
for example    Ví dụ
we don't have any information about    chúng tôi không có bất kỳ thông tin nào về
their username right now or what their    tên người dùng của họ ngay bây giờ hoặc
những gì họ
full name is so if i were to go to my    tên đầy đủ là vì vậy nếu tôi đi đến của tôi
profile i obviously need to fetch that    hồ sơ tôi rõ ràng cần phải tìm nạp đó
information from the database but all    thông tin từ cơ sở dữ liệu nhưng tất cả
the authentication gives us is their    xác thực mang lại cho chúng tôi là của họ
email and their user id    email và id người dùng của họ
so i need to take this information that    vì vậy tôi cần lấy thông tin này
i have about the user    tôi có về người dùng
their uh    uh của họ
you know their full name and their    bạn biết tên đầy đủ của họ và họ
username and also their email    tên người dùng và cả email của họ
and i actually need to store it in the    và tôi thực sự cần phải lưu trữ nó trong
database    cơ sở dữ liệu
so that's what we're going to be working    vì vậy đó là những gì chúng ta sẽ làm việc
on next so let's just go ahead and jump    tiếp theo vì vậy hãy tiếp tục và nhảy
right into it so    ngay vào nó như vậy
we are going to create this data    chúng ta sẽ tạo dữ liệu này




about:blank    149/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dictionary so we're going to say let    từ điển vì vậy chúng ta sẽ nói let
data equal    dữ liệu bằng nhau
and we're going to say email    và chúng ta sẽ nói email
and once again guys this is back in that    và một lần nữa các bạn, điều này đã trở lại
trong đó
register function    chức năng đăng ký
and we're just going to say email just    và chúng tôi sẽ chỉ nói email
like that    như thế
username    tên tài khoản
we're going to say username.lowercase    chúng ta sẽ nói tên người dùng.chữ thường
and this is this for this reason guys    và đây là lý do này nhé các bạn
you don't want case-sensitive usernames    bạn không muốn tên người dùng phân biệt
chữ hoa chữ thường
in your app if you guys look at any app    trong ứng dụng của bạn nếu các bạn xem
bất kỳ ứng dụng nào
like twitter or instagram they force    như twitter hoặc instagram họ buộc
lowercase all the usernames because you    chữ thường tất cả tên người dùng bởi vì
bạn
don't want somebody to be named uh    không muốn ai đó được đặt tên uh
billy or billy bob    billy hoặc billy bob
and then have one uh all that be    và sau đó có một uh tất cả những gì được
lowercase and then have someone be    chữ thường và sau đó có ai đó được
capital b billy bob or capital    vốn b billy bob hoặc vốn
uh b capital i billy bob right you you    uh b vốn tôi billy bob đúng bạn bạn
want to force lower case everything    muốn buộc mọi thứ viết thường
so that's why we say dot lower case    vì vậy đó là lý do tại sao chúng tôi nói dấu
chấm chữ thường
right there    ngay tại đó
so no matter what the user types into    vì vậy bất kể người dùng nhập gì vào
that lo of that username field we're    lo của trường tên người dùng đó, chúng tôi
just going to automatically lower case    chỉ cần tự động viết thường
it    Nó
and then we're going to say    và sau đó chúng ta sẽ nói
full name    Họ và tên
full name and we don't care about    tên đầy đủ và chúng tôi không quan tâm đến
capitalization there and then we're    viết hoa ở đó và sau đó chúng tôi
going to say uid    sẽ nói uid
user.uid    người dùng.uid




about:blank



    150/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and i'm going to    và tôi sẽ
indent this stuff properly    thụt lề nội dung này đúng cách
so it should look just like this    vì vậy nó sẽ trông giống như thế này
so this is our data dictionary okay so    vì vậy đây là từ điển dữ liệu của chúng tôi
được rồi
we're going to actually upload this    chúng tôi sẽ thực sự tải cái này lên
information to firestore    thông tin đến firestore
and if you guys don't know what a    và nếu các bạn không biết những gì một
dictionary is i just recommend looking    từ điển là tôi chỉ khuyên bạn nên tìm kiếm
up some youtube videos or googling but    lên một số video youtube hoặc googling
nhưng
it's essentially a key value store    về cơ bản nó là một kho lưu trữ giá trị quan
trọng
so every user will have the same keys    vì vậy mọi người dùng sẽ có các khóa giống
nhau
email username full name uid and they    email tên người dùng tên đầy đủ uid và họ
will just have different values    sẽ chỉ có các giá trị khác nhau
associated with them so to actually    liên kết với họ để thực sự
upload this data we're going to say    tải lên dữ liệu này chúng ta sẽ nói
firestore.firestore.collection    firestore.firestore.collection
users    người dùng
then we're going to say dot    sau đó chúng ta sẽ nói dấu chấm
document    tài liệu
user.uid and this user guys is what we    user.uid và những người dùng này là những
gì chúng tôi
get back from the result in our callback    lấy lại từ kết quả trong cuộc gọi lại của
chúng tôi
so for those of you who don't know what    Vì vậy, đối với những người bạn không biết
những gì
that means a brief explanation    điều đó có nghĩa là một lời giải thích ngắn
gọn
is this create user function    đây có phải là chức năng tạo người dùng
không
involves reaching out to the internet    liên quan đến việc tiếp cận với internet
and actually creating a user and once    và thực sự tạo một người dùng và một lần
that process finishes    quá trình đó kết thúc
you notice that there's a separate block    bạn nhận thấy rằng có một khối riêng biệt
here this is what's known as a    đây là những gì được gọi là
completion block    khối hoàn thành




about:blank    151/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and what we get back    và những gì chúng ta nhận lại
from that completion or that api call    từ lần hoàn thành đó hoặc cuộc gọi api đó
are these two properties we either get    hai thuộc tính này chúng ta có được không
back some result or some error as part    quay lại một số kết quả hoặc một số lỗi như
một phần
of that result that we get back from the    của kết quả mà chúng tôi nhận được trở lại
từ
callback or within the completion block    gọi lại hoặc trong khối hoàn thành
is this result    đây là kết quả
or we could get back an error    hoặc chúng tôi có thể lấy lại một lỗi
and within this block    và trong khối này
then we can do everything we need to do    sau đó chúng ta có thể làm mọi thứ chúng
ta cần làm
after this create user function has been    sau khi chức năng tạo người dùng này đã
được
called that's just a very brief    được gọi là đó chỉ là một cái gì đó rất ngắn
gọn
explanation of it so now we're going to    giải thích về nó vì vậy bây giờ chúng ta sẽ
say dot set data    nói dữ liệu tập hợp dấu chấm
and we actually want a completion block    và chúng tôi thực sự muốn có một khối
hoàn thành
so let's see set data completion we're    Vì vậy, hãy xem hoàn thành dữ liệu thiết lập,
chúng tôi
going to pass in our data    sẽ vượt qua trong dữ liệu của chúng tôi
and then on the completion we don't    và sau đó khi hoàn thành, chúng tôi không
really need to handle the error because    thực sự cần phải xử lý lỗi vì
nothing should ever really go wrong    không có gì nên thực sự đi sai
there    ở đó
we're just going to say print debug    chúng ta sẽ nói gỡ lỗi in
did    làm
upload    tải lên
user    người dùng
data so    dữ liệu như vậy
you guys will notice that the app is    các bạn sẽ nhận thấy rằng ứng dụng này là
automatically launching to this uh    tự động khởi chạy tới cái này uh
interface right the main interface we    giao diện ngay giao diện chính chúng ta
want to get back to our login flow so we    muốn quay lại quy trình đăng nhập của
chúng tôi vì vậy chúng tôi
actually need to implement the    thực sự cần phải thực hiện các




about:blank



    152/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
functionality for this log out button    chức năng cho nút đăng xuất này
before we can get this stuff done and    trước khi chúng ta có thể hoàn thành công
việc này và
then we also need to make the password a    sau đó chúng ta cũng cần đặt mật khẩu
secure field    lĩnh vực an toàn
so we're gonna    vì vậy chúng ta sẽ
proceed with those two things right now    tiến hành với hai điều đó ngay bây giờ
so when we hit this log out button we    vì vậy khi chúng tôi nhấn nút đăng xuất này,
chúng tôi
actually want it to log us out of the    thực sự muốn nó đăng xuất chúng tôi ra
khỏi
application so we're going to add    ứng dụng vì vậy chúng tôi sẽ thêm
another function here that's going to be    một chức năng khác ở đây sẽ là
called sign out    được gọi là đăng xuất
or you know sign out    hoặc bạn biết đăng xuất
just like that    cứ thế
and    Và
we're going to do a couple things we're    chúng tôi sẽ làm một vài điều chúng tôi
going to set user session to nil    sẽ đặt phiên người dùng thành không
we're going to set and then we're just    chúng ta sẽ thiết lập và sau đó chúng ta chỉ
going to say try    sẽ nói thử
auth.auth.sign out    auth.auth.đăng xuất
okay so this is doing two things    được rồi vì vậy điều này đang làm hai việc
we're going to set this user session to    chúng tôi sẽ đặt phiên người dùng này
thành
nil and once again guys this is a    không và một lần nữa các bạn, đây là một
published property so it's going to go    tài sản đã xuất bản vì vậy nó sẽ đi
back to our content view sorry and it's    quay lại chế độ xem nội dung của chúng tôi
xin lỗi và đó là
going to say oh hey this user session    sẽ nói oh hey phiên người dùng này
has changed that means i need to    đã thay đổi điều đó có nghĩa là tôi cần phải
reconfigure this view    định cấu hình lại chế độ xem này
and run this logic again so now user    và chạy lại logic này để bây giờ người dùng
session once it gets set to nil it's    phiên khi nó được đặt thành không
going to show us with the login view    sẽ cho chúng tôi thấy với chế độ xem đăng
nhập
so that handles everything on the client    để xử lý mọi thứ trên máy khách
side or locally right    bên hoặc bên phải cục bộ




about:blank    153/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
but we actually physically need to log    nhưng chúng tôi thực sự cần phải đăng
nhập
out of our back uh    ra khỏi lưng của chúng tôi uh
log our user out in our back end as well    đăng xuất người dùng của chúng tôi trong
phần cuối của chúng tôi
so we need to handle things on two    vì vậy chúng ta cần xử lý mọi thứ trên hai
different fronts    mặt trận khác nhau
on the client side and on the server    ở phía máy khách và trên máy chủ
side so if i were to just set user    bên vì vậy nếu tôi chỉ đặt người dùng
session to nil so let's go ahead and    phiên thành con số không, vì vậy hãy tiếp
tục và
actually see this working live so you    thực sự thấy điều này làm việc trực tiếp vì
vậy bạn
guys can actually understand this    các chàng trai thực sự có thể hiểu điều này
so let's see off viewmodel    vì vậy hãy tiễn viewmodel
i'm just going to set user session to    tôi sẽ đặt phiên người dùng thành
nil and i'm going to delete this or    không và tôi sẽ xóa cái này hoặc
comment this out    nhận xét điều này ra
this function is what logs us out on the    chức năng này là thứ đăng xuất chúng tôi
trên
back end so i'm going to add a comment    back end vì vậy tôi sẽ thêm một bình luận
here    đây
signs user    dấu hiệu người dùng
out on    ra ngoài
backend or on server    phụ trợ hoặc trên máy chủ
and then this user session guy let's see    và sau đó anh chàng phiên người dùng này
hãy xem
this uh    cái này à
sets user session    đặt phiên người dùng
to nil so we show login view    đến con số không để chúng tôi hiển thị chế
độ xem đăng nhập
okay so we have our comments    được rồi vì vậy chúng tôi có ý kiến  của   
chúng tôi
um    ô
and before this actually works we need    và trước khi điều này thực sự hoạt động,
chúng ta cần
to hop back and actually call this    để nhảy trở lại và thực sự gọi đây là
function    chức năng
in our side menu guide    trong hướng dẫn menu bên của chúng tôi




about:blank    154/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so when we hit that log out button we    vì vậy khi chúng tôi nhấn nút đăng xuất đó,
chúng tôi
want to call this function so we need to    muốn gọi chức năng này vì vậy chúng ta
cần
go to our side menu    đi đến menu phụ của chúng tôi
views side menu view and we notice that    chế độ xem menu bên và chúng tôi nhận
thấy rằng
we have this print handle log out here    chúng tôi có tay cầm in này đăng xuất tại
đây
so that's uh just where we're going to    vì vậy đó chỉ là nơi chúng ta sẽ đến
stick this function but we do need    dính chức năng này nhưng chúng tôi cần
access to the view model so inside of    truy cập vào mô hình xem nên bên trong
the side menu view    chế độ xem menu bên
we're going to say    chúng ta sẽ nói
at environment object bar    tại thanh đối tượng môi trường
i think i spelled that wrong at in    tôi nghĩ rằng tôi đã đánh vần sai ở trong
vi    vi
ron    ron
meant    có nghĩa là
object    sự vật
view model    xem mô hình
auth view model cool and i think we    auth xem mô hình tuyệt vời và tôi nghĩ rằng
chúng tôi
should get access to that because it's    nên có quyền truy cập vào đó bởi vì nó
all part of the same environment so now    tất cả các phần của cùng một môi trường vì
vậy bây giờ
we're going to go here and we're going    chúng ta sẽ đi đây và chúng ta sẽ đi
to say view model dot sign out    để nói xem mô hình chấm đăng xuất
and build that    và xây dựng nó
so it's actually getting confused guys    Vì vậy, nó thực sự khiến mọi người bối rối
because we're using this view model term    bởi vì chúng tôi đang sử dụng thuật ngữ mô
hình chế độ xem này
um sort of ambiguously right    ừm hơi mơ hồ đúng không
so we have viewmodel here and viewmodel    vì vậy chúng tôi có viewmodel ở đây và
viewmodel
here so let's just replace this as off    ở đây vì vậy hãy thay thế cái này thành tắt
viewmodel and then down here say    viewmodel rồi xuống đây nói
authviewmodel.signout    authviewmodel.signout
okay    được rồi




about:blank



    155/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and let's run this and see what we get    và hãy chạy cái này và xem những gì chúng
ta nhận được
so    Vì thế
just a quick recap we're going to notice    chỉ là một bản tóm tắt nhanh chúng ta sẽ
nhận thấy
that this is going to sign us out or    rằng điều này sẽ đăng xuất chúng tôi hoặc
appear to sign us out    xuất hiện để đăng xuất chúng tôi
basically it's going to you know    về cơ bản nó sẽ cho bạn biết
set the user session to nil on the    đặt phiên người dùng thành không trên
client side but it's not actually going    phía khách hàng nhưng nó không thực sự
diễn ra
to do anything on the back end so this    để làm bất cứ điều gì ở mặt sau vì vậy điều
này
that change won't actually persist once    thay đổi đó sẽ không thực sự tồn tại một lần
we run the app again so i'll show you    chúng tôi chạy lại ứng dụng vì vậy tôi sẽ chỉ
cho bạn
guys what i mean    ý tôi là gì
so i go here and i log out right and it    vì vậy tôi vào đây và tôi đăng xuất ngay và
nó
takes me to the login page so on the    đưa tôi đến trang đăng nhập để trên
surface everything looks good    bề mặt mọi thứ có vẻ tốt
it says hey i clicked the logout button    Nó nói này, tôi đã nhấp vào nút đăng xuất
and i've been taken to a login page    và tôi đã được đưa đến một trang đăng
nhập
makes sense    có ý nghĩa
but if i run the app again it should    nhưng nếu tôi chạy lại ứng dụng thì nó sẽ
như vậy
take me back to the login page but you    đưa tôi trở lại trang đăng nhập nhưng bạn
guys are going to notice that it doesn't    mọi người sẽ nhận thấy rằng nó không
it takes me back to the main interface    nó đưa tôi trở lại giao diện chính
you're probably like well what the hell    bạn có lẽ cũng giống như cái quái gì vậy
dude i logged out right well that's    anh bạn tôi đã đăng xuất đúng rồi đó
because we didn't really log the user    bởi vì chúng tôi đã không thực sự đăng
nhập người dùng
out so we go back to auth view model and    out để chúng tôi quay lại mô hình xem xác
thực và
we've set this user session to nil but    chúng tôi đã đặt phiên người dùng này
thành không nhưng
this is just a local property so when we    đây chỉ là một tài sản địa phương vì vậy khi
chúng tôi




about:blank    156/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
relaunch the app and we re-initialize    khởi chạy lại ứng dụng và chúng tôi khởi tạo
lại
this auth view model we set self.user    mô hình chế độ xem xác thực này, chúng tôi
đặt self.user
session equal to something that depends    phiên bằng với một cái gì đó phụ thuộc
on reaching out to the firebase servers    khi liên hệ với các máy chủ firebase
and checking to see if there's a user    và kiểm tra xem có người dùng nào không
logged in well guess what there is    đã đăng nhập đoán xem có gì
because we never sign them out    bởi vì chúng tôi không bao giờ đăng xuất
chúng
so this user session property will still    vì vậy thuộc tính phiên người dùng này sẽ
vẫn
have a value and it'll take us back to    có một giá trị và nó sẽ đưa chúng ta trở lại
the main interface so    giao diện chính vậy
that's where if we comment out this line    đó là nơi nếu chúng ta nhận xét dòng này
of code this code right here this line    của mã mã này ngay tại đây dòng này
will actually sign us out on the back    thực sự sẽ đăng xuất chúng tôi ở mặt sau
end as well    cũng kết thúc
so that when we log out it does    để khi chúng ta đăng xuất thì nó làm
uh it logs us out on both fronts client    uh nó đăng xuất chúng tôi trên cả hai máy
khách
side and on the back end    bên và ở mặt sau
so if we run this    vì vậy nếu chúng ta chạy cái này
and hit sign out again let's just run    và nhấn đăng xuất một lần nữa, hãy chạy
through that process one more time to    thông qua quá trình đó một lần nữa để
make sure everything is fine    đảm bảo mọi thứ đều ổn
so    Vì thế
i'm going to log out and everything    tôi sẽ đăng xuất và mọi thứ
still looks the same on the surface but    vẫn trông giống nhau trên bề mặt nhưng
now you guys will notice if i run the    bây giờ các bạn sẽ chú ý nếu tôi chạy
app again    ứng dụng lại
that now it takes me to the    rằng bây giờ nó đưa tôi đến
what's it called the login page and it's    nó được gọi là trang đăng nhập và nó là gì
recognizing that the user session is nil    nhận ra rằng phiên người dùng là không
so when we have this line of code here    vì vậy khi chúng tôi có dòng mã này ở đây
and this stuff reaches out to the    và những thứ này tiếp cận với
firebase servers to check if someone's    máy chủ firebase để kiểm tra xem ai đó
logged in it's like oh hey guess what    đăng nhập nó giống như oh hey đoán




about:blank



    157/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
những gì
you signed me out so with this line of    bạn đã đăng xuất tôi vì vậy với dòng này
code so nobody's logged in so then it    mã để không ai đăng nhập nên nó
takes us back here so that's looking    đưa chúng tôi trở lại đây vì vậy đó là tìm
kiếm
really good    thật sự tốt
now    Hiện nay
let's register another user guys    hãy đăng ký người dùng khác đi các bạn
and see what happens when we actually    và xem điều gì xảy ra khi chúng ta thực sự
try to upload this data to the database    cố gắng tải dữ liệu này lên cơ sở dữ liệu
so i'm going to say test    vì vậy tôi sẽ nói bài kiểm tra
2    2
gmail.com    gmail.com
test test and just qqq    kiểm tra kiểm tra và chỉ qqq
hit sign up    nhấn đăng ký
fail to register email address is    không thể đăng ký địa chỉ email là
already in use by another account okay    đã được sử dụng bởi một tài khoản khác rồi
nhé
so i think i registered that off screen    vì vậy tôi nghĩ rằng tôi đã đăng ký ngoài
màn hình
yeah so um let me just delete this    vâng vậy um để tôi xóa cái này
account delete    xóa tài khoản
but what that shows guys is that our    nhưng điều đó cho mọi người thấy rằng
chúng ta
error functionality is actually working    chức năng lỗi đang thực sự hoạt động
right so    đúng vậy
um i had registered that account um    ừm tôi đã đăng ký tài khoản đó ừm
off-camera and because i tried to    tắt máy ảnh và bởi vì tôi đã cố gắng
register that account again    đăng ký lại tài khoản đó
firebase doesn't allow you to register    firebase không cho phép bạn đăng ký
accounts on the same app that have a    tài khoản trên cùng một ứng dụng có một
duplicate email so it threw an error and    trùng lặp email để nó gây ra lỗi và
printed out that error message for us    in ra thông báo lỗi đó cho chúng tôi
which is looking really good    mà trông thực sự tốt
so but now since i deleted the account    vậy nhưng bây giờ kể từ khi tôi xóa tài
khoản
and i hit sign up again    và tôi nhấn đăng ký một lần nữa
everything's going to work just fine    mọi thứ sẽ hoạt động tốt thôi




about:blank    158/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
i run the or refresh the page test2    tôi chạy hoặc làm mới trang test2
gmail.com is there i have this new user    gmail.com ở đó tôi có người dùng mới này
id and you guys will notice now that if    id và bây giờ các bạn sẽ nhận thấy rằng nếu
i go to firestore database i actually    tôi đi đến cơ sở dữ liệu firestore tôi thực sự
have some data in the database here    có một số dữ liệu trong cơ sở dữ liệu ở đây
right and it's test2 gmail.com it's    phải và đó là test2 gmail.com đó là
exactly the information i typed in    chính xác thông tin tôi đã nhập
um    ô
what's it called    nó được gọi là gì
on the signup page you guys will notice    trên trang đăng ký các bạn sẽ chú ý
that test is lower case on the username    bài kiểm tra đó là chữ thường trên tên
người dùng
which is great this user id matches this    thật tuyệt id người dùng này phù hợp với
điều này
document id and we've actually saved    id tài liệu và chúng tôi đã thực sự lưu
some information in the database now we    một số thông tin trong cơ sở dữ liệu bây giờ
chúng tôi
get back this print statement as did    lấy lại câu lệnh in này như đã làm
upload user data so that's looking    tải lên dữ liệu người dùng để tìm kiếm
really good    thật sự tốt
we've successfully uploaded some    chúng tôi đã tải lên thành công một số
information to the database and we'll be    thông tin vào cơ sở dữ liệu và chúng tôi sẽ
able to fetch this information later to    có thể lấy thông tin này sau để
do things like display it user    làm những việc như hiển thị nó người dùng
information in a tweet right when we    thông tin trong một tweet ngay khi chúng tôi
want to like look at their full name and    muốn thích nhìn vào tên đầy đủ của họ và
their username we're going to pull that    tên người dùng của họ, chúng tôi sẽ kéo nó
information from the database and also    thông tin từ cơ sở dữ liệu và cũng
we'll be able to go to any user's    chúng tôi sẽ có thể truy cập bất kỳ người
dùng nào
profile and view their information there    hồ sơ và xem thông tin của họ ở đó
as well so this is looking really really    vì vậy điều này trông thực sự thực sự
good guys    Người tốt
um    ô
now uh that we got to do a couple more    bây giờ chúng ta phải làm thêm một vài điều
nữa
things though    mọi thứ mặc dù
um    ô




about:blank



    159/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
we want to make it so that we can    chúng tôi muốn làm cho nó để chúng tôi có
thể
actually log back in as the user with    thực sự đăng nhập lại với tư cách là người
dùng với
their existing credentials so we're    thông tin đăng nhập hiện có của họ vì vậy
chúng tôi
going to hop into this login function    sẽ nhảy vào chức năng đăng nhập này
and take care of that now    và chăm sóc nó ngay bây giờ
so it's going to be really really    vì vậy nó sẽ thực sự thực sự
similar to the registration function    tương tự như chức năng đăng ký
it's just going to be a little bit    nó sẽ chỉ là một chút
simpler right    đơn giản hơn đúng không
so we just have to worry about    vì vậy chúng ta chỉ phải lo lắng về
what happens on the back end we don't    những gì xảy ra ở mặt sau chúng ta không
actually have to upload information    thực sự phải tải lên thông tin
anywhere so we can just say    bất cứ nơi nào để chúng ta chỉ có thể nói
off.auth.sign in with email password and    off.auth.sign in bằng mật khẩu email và
completion    hoàn thành
signs in using an email address and    đăng nhập bằng địa chỉ email và
password and that's exactly what we have    mật khẩu và đó chính xác là những gì chúng
tôi có
so we're going to pass in our email    vì vậy chúng tôi sẽ chuyển qua email của
chúng tôi
password and then once again we have    mật khẩu và sau đó một lần nữa chúng ta
có
access to this callback we're going to    truy cập vào cuộc gọi lại này, chúng tôi sẽ
get back either a result or an error    lấy lại kết quả hoặc lỗi
hit enter    Nhấn Enter
name these properties result in error    đặt tên cho các thuộc tính này dẫn đến lỗi
we're going to just handle the error in    chúng ta sẽ chỉ xử lý lỗi trong
the exact same way    chính xác theo cùng một cách
but instead of register we're going to    nhưng thay vì đăng ký, chúng tôi sẽ
say fail to sign in with error and print    nói không thể đăng nhập có lỗi và in
out the error and then stop with that    ra lỗi và sau đó dừng lại với điều đó
return    trở lại
and then we need to    và sau đó chúng ta cần phải
set this user session property    đặt thuộc tính phiên người dùng này
to something so that it will
um you know run back through that
about:blank    160/3156/7/23, 1:25 AM    about:blank
Main subtitle
presentation logic in the content view
Second subtitle
and show us the main interface view so
we're going to do the same thing we did
right here self.user session
bam
and that looks really really good guys
um and then we can just add a print
statement that says you know like did
log user in
and let's go ahead and run this and see
if it works
we're already calling this function back
in the login view if you guys remember
we replaced that print statement with
viewmodel.log in with email and password
so right now we see our user session is
nil um actually guys before we do this
let's hop back up to this init method
and let's go ahead and say
printself.usersession.uid
so that way we actually get back like an
actual string instead of just some weird
like object
representation
and run that again that's my bad
okay so let's log our user in
let's start with the first use that we
created test gmail.com
qqq sign in
and we notice that we get that did log
user in and it takes us back to the main
interface of the application so the
login functionality is working here as
well that's awesome so now we'll run the
app
and we should get some user id back
right so we notice that we get back p z


about:blank

    161/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
u blah blah blah blah
if we go to our authentication page we
notice that test at gmail's user id is
pzu so that's working really nicely now
let's see if we can log in as our other
user test2 at gmail.com
so i'm going to log out
log in as test2 gmail.com one two three
four five six sign in
excuse me and we actually have to run
the app again to get this print
statement guys and once again that's
because the off view model
only gets initialized once so that's why
this print statement only runs once
[Music]
so we run it again and we'll notice that
we get back a different user id and this
is the one associated with test2
gmail.com
and we noticed that test2 gmail.com is
the only user that's actually has
information saved in the database
so this is looking really really good
guys
um one more thing i want to do
um as a nice touch-up is actually make
this password field
uh you know be an actual password field
where you can't see the letters being
typed
and
that's going to affect the
capitalization
of the password like
we'll see that uh
swift ui they have a secure field


about:blank

    162/3156/7/23, 1:25 AM    about:blank
Main subtitle
that
Second subtitle
defaults everything to a lower case um
because that's what all passwords fields
do
because passwords are case sensitive so
anyway let's just go and uh fix this
right now
so we're going to go back into our
components go back to this custom input
field and we're going to add a property
called let
is secure
field and it's a boolean
and you notice the build bill is going
to fail let's go ahead and add that
missing property is secure field we can
say false
and we can actually um
give this a default value of false
and make it optional i think
and what we're going to do now guys is
go through some logic here
and we're going to say cut this out
we're going to say if is secure field
and else
paste the text field back into the else
block
and then here
you can copy this and replace text field
with secure field
and secure field is something that has
all the password field properties
and we can give this a default value of
false
and this way guys we don't have to add
the is secure field
input parameter every time we create




about:blank



    163/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
this custom input field if it's not
there it will just default to false
so now
we only need to add this to one spot
we're gonna go or sorry two spots we're
gonna go back to the login view
so authentication views login view
and this is going to
for the password we're going to go here
and say is secure field is true
and let's just copy this and go to the
registration view
and replace the password guy with that
as well
oh we need to add a comma
that's my bad
comma
let's run this again
and let's see if the field is secure and
just remember
that
you're going to have to capitalize
your passwords first letter
or you could just delete these accounts
and create new accounts
so anyway i'm going to say test
gmail.com i'm going to capitalize the
first queue
two three four five six and you guys
will notice that it's now obviously a
secure field hit sign in and everything
is still good to go um so that is
looking really good guys for
authentication
next
what we have to do is make it so that
when the user hits sign up it actually


about:blank

    164/3156/7/23, 1:25 AM    about:blank
Main subtitle
prompts them to add a profile photo so
Second subtitle
that's a pretty lengthy process uh
buckle in for that one guys it's a lot
of fun and like i said it's something
that you can drag and drop into any one
of your applications that involves
uploading images so it's worth the time
to you know to figure out how it works
and how it's built but basically once
the user hits sign up and they get
authenticated it's going to take them to
a new screen that says hey please upload
a profile photo and then you know we'll
be able to actually fetch that
information from the database and like
display some user information on their
profile so it's going to be a lot of fun
let's go ahead and get started with that
now
so guys we need to create one more view
that allows the user to select a profile
photo that's going to be the easiest
part of this process so let's just go
ahead and knock that out now so in your
authentication folder in the views
folder
let's go ahead and create a new swift ui
view
and this is going to be called
photo
selector
view
and actually make it a profile photo
selector view
okay so we have this view here
and it's gonna be pretty simple but
let's get our preview




about:blank



    165/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
working
um we're gonna re-add this header
and it's just going to say like select a
profile photo
but really quickly guys we got to wait
for this preview to get going
so we got the preview working guys let's
go ahead and just create a v stack here
so we're going to say v stack
and we're going to add this auth header
off header view
uh title 1 title two
uh we're just gonna say create your
account as the first title
and title two will be select a profile
photo
and the body
we don't need that
and let's just enter right there
and
let's go ahead and hit try again
oh yeah sorry guys we don't want that no
take those brackets out so that looks uh
pretty good right um
we just want to add a spacer here and
then say dot ignores safe area
um
we could change this to like add profile
photo i think
add a profile photo yeah that looks good
um and now we just need to add like a
button here that allows the user to add
a profile photo
so uh let's see
below this
we're going to create a button
action


about:blank

    166/3156/7/23, 1:25 AM    about:blank
Main subtitle
we're going to say print
Second subtitle
pick
image here
and then our label guys
is going to be
an image that i have in the assets and
once again you guys can download these
assets the link is in the description
it's just this like circular button that
says like hey add a photo
it's pretty self-explanatory that you
click on that to add a photo
so let's go ahead and um
just add that guy right now so
we're going to say the label is going to
be
um an image
with the name plus underscore photo i'm
pretty sure that's what it's called
yeah plus underscore photo that's
dot resizable
dot frame
which is going to be
180 by 180
and then we're going to give it a
padding on the top of
44.
and
i think we also want to say like dot
scaled to fill
shouldn't really change much but
okay so that looks pretty good um
guys we noticed that the blues don't
really match um i think we can fix that
let's try to
so under resizable you can say dot
rendering mode dot template




about:blank



    167/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and then you can say like dot uh
foreground color is color
dot system
blue and let's try it with like system
pink or something
see if it changes it yeah so that
actually is really freaking cool right
you can change the color of any one of
your buttons just like this so let's
just go ahead and make it system blue so
that it matches up with everything
okay
so that's our plus photo button
let's work on the presentation logic for
how we get to this screen right meaning
when we the user fills out this form and
they sign up
then we want to somehow magically take
them over to this add a profile photo
screen right
so
it's a little bit tricky it involves a
little bit of magic but i'm gonna show
you guys how to do it because i'm
awesome and i love you guys
so
we're gonna go back to the registration
view okay
and we're going to create this
navigation link
so on the v stack you guys are just
going to go here and add a navigation
link
navigation link
we're going to have a destination and a
label oh sorry guys navigation link
destination label and we want this is


about:blank

    168/3156/7/23, 1:25 AM    about:blank
Main subtitle
active property in here as well okay
Second subtitle
so the destination is obviously going to
be the profile photo selector view
is active
this is where the trick comes in
the label
also another trick it's just going to be
blank
excuse me so this is basically a blank
navigation link and this is active
property so there's no label guys but
we're going to be able to
activate this navigation link based on
when something happens in our off view
model
so we're going to go to our off view
model right now
so go to view model auth view model
we're going to add another published
property
we're going to say at
published
var
[Music]
or actually i think we could just use
this user session
right
so basically
when
we uh or actually not we're not going to
do that
so at publishedvar
did authenticate
user
equals false
so
excuse me




about:blank



    169/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
all right sorry guys my throat's like
super dry
um but after we set this data and we say
did upload user data in our register
function we're gonna go here
and we're gonna say
self.did authenticate user equals true
and then we're going to go back to
our registration view
and we are going to say view model
dot did authenticate user
and that is going to determine whether
or not this link is active
and i believe you have to put a dollar
sign in front of that
so basically here's the rundown of
what's going to happen guys this is
super super smooth
um
in the off view model
when we authenticate this user
this published property is going to
change its value
and then back in our registration view
so we're here we authenticate the user
that means we authenticated them and we
uploaded their information to the
database
then this navigation link will become
active once we authenticate that user
and it will take us over to the select
the profile photo page or profile photo
selector view
so that is about as smooth as it gets
homie let's run this and see if it
works
and then you know we still got a little


about:blank

    170/3156/7/23, 1:25 AM    about:blank
Main subtitle
bit more work to do
Second subtitle
uh because we actually have to uh
implement the code for the user to
select the profile photo right now this
is just the presentation logic for how
to get there
so as you can see this stuff is pretty
complicated guys but we are working
through it and best part about this is
it's free
so
let's go and we're going to say like
test like 345 at gmail.com
test test
one two three four five six we sign up
okay
so it doesn't do what we want it to do
that's interesting right so we got to
work through the logic in our auth view
model a little bit
so
here
we need to change how we configure this
user session
so we're actually going to delete this
line of code right because as soon as it
authenticates the user it sets this user
session property to some value and then
in our content view
it says oh hey user session has a value
now so now you want me to show the main
interface view but we're like hold up
wait a minute
we actually want to show the profile
photo selector view so we're not going
to set that user session property just
yet




about:blank



    171/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and that's another reason we have this
we created this uh additional property
guys because if we try to just reuse
this same property we wouldn't be able
to get around the content view
showing us the main interface right
because that depends on this user
session property so we have to create a
different property that is unique to
the registration view
or unique to this like sort of
authentication flow for selecting a
profile photo
so now that we have that
let's uh let's log out of the app real
quick
run this again
and see if it works now
i'm pretty sure this is going to work
when i say pretty sure i mean like 99
you know
but i always got a little leave a little
bit of room for error because code is
unpredictable
so we gotta register a new user i'm
gonna say test like 888
gmail.com one two uh test
test one two three four five six
hit sign
up boom
shakashaka
takes us right over to that plus photo
or add a profile photo guy
we hit this
and that's where we actually want to
present the user with an image picker
right


about:blank

    172/3156/7/23, 1:25 AM    about:blank
Main subtitle
um so this is looking really good guys
Second subtitle
the next part
is not super fun
unfortunately swift ui still to this day
does not have like a native image picker
that you can just access through use of
swift ui
we have to work through ui kit to do
this so it's a valuable lesson to learn
because swift ui is still in its infant
stages even though we're on the third
iteration of it
but we have to be able to work with ui
kit within swift ui 2 and luckily they
give us the ability to integrate ui kit
and swift ui together so that they can
you know sort of work together in unison
and where swifty wash falls short we can
still work with ui kit to make things
happen so that's what we're going to be
doing next we're going to be adding this
sort of image picker so the user can
select the profile photo
and then once they select that they'll
be able to hit like a continue button
down here to actually take them back to
the main interface so
get excited for that guys that's what's
up next
really quickly guys i actually want to
change this to just say like setup
account
because
throughout the rest of the app the top
line is shorter than the bottom line so
i think it's cool
or better to stay consistent with that




about:blank



    173/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
just for like a smooth ui that looks a
little bit messy so i think that's a
little bit better but anyway with that
little touch up let's go ahead and i
think yeah see i look i think that looks
better
um let's go ahead and create this image
picker that we need to create in order
to get this to work
so
we're going to go back to our components
and we are going to create or sorry guys
do we have a utils folder
i think that's what we need
yeah let's create a utilities folder so
let's go up to the top
and create something called utils right
and then within this utils folder we're
going to create a swift file
and it's going to be called image picker
and guys this is something you
thankfully only have to create one time
i'm sure you guys who have worked with
swift ui before have created this
um
but you know any any app that you have
that involves selecting a photo you can
literally just drag and drop this into
any app which is really nice so you only
have to make it one time
so um let me get this opened up in my
code imagepicker.swift so we're going to
create a struct called image picker
and it conforms to this ui view
representable protocol so basically this
allows us to create some ui kit ui view
or create a like a view controller


about:blank

    174/3156/7/23, 1:25 AM    about:blank
Main subtitle
essentially in ui kit and it translates
Second subtitle
it into a swift ui view for us which is
pretty cool right so we are going to
create this function called make
coordinator
and we have to create another function
called make ui view controller
uh sorry this needs to be ui view
controller representable
and then this goes to make ui view
controller okay
and then we need one more function
called update uiviewcontroller and we
are just going to leave this guy blank
we do need to however put some stuff in
here so we're going to make an extension
for this image picker
and we're going to call or make a class
called coordinator
it's going to conform to the ns object
or subclass ns objects and it's also
going to
conform to these two protocols ui
navigation controller delegate and ui
image picker controller delegate
so if you guys have worked with ui kit
before these are the two protocols you
have to conform to whenever you work
with an image picker this is what this
coordinator is going to do here
so
back up in this make coordinator
we're just going to say return
coordinator
and we actually need to write an init
for this coordinator guys so we're going
to say init




about:blank



    175/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
underscore parent which is an image
picker
and we are going to make a parent
property here we're going to say let
parent
image picker and it will become clear
while we're creating this property a
little bit later on um within like the
next five minutes so if you guys are
confused by this right now don't worry
explanation is coming we're just going
to say self.parent equals parent
and we are going to initialize this
coordinator with self right because self
refers to image picker and we're asking
this uh
init to pass in some image picker
reference
which is in this case in this struct is
just self
okay um and then in make ui view
controller guys we're gonna say let
picker equal ui image picker controller
so we're actually creating a view
controller here
we're going to say picker.delegate
equals uh context
dot coordinator
and we're going to return our picker so
typically you guys are probably used to
saying picker.delegate equals self
but in this context
this needs to say itself
it's our coordinator that conforms to
the protocols that we need so we have to
say picker.delegate each is equal to the
context.coordinator


about:blank

    176/3156/7/23, 1:25 AM    about:blank
Main subtitle
the context in this case just refers to
Second subtitle
some context property that is associated
with this image picker class every ui
view controller representable or ui view
representable has to have some
coordinator this sort of acts as the
link
that bridges the gap between ui kit and
swift ui this is where we can conform to
the ui kit protocols and write the code
that we need to okay
anyway
um let's now conform to this ui image
picker controller delegate here and say
funk image picker controller
did finish picking media with info so
this is where we actually need to set
some image property
so
we're going to go here and we're going
to say guard let mo
image equal
info
dot
original image
as ui image
else return
and here we need to be able to say like
parent dot image
equals this image right but we don't
have an image on the parent yet because
ultimately what we want to be able to do
guys
is
get the image from this image picker and
put it into our swift ui view right so
right now we're building this image




about:blank



    177/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
picker so that we can do that but we
need to be able to access the image that
the user picked so here we're going to
create a binding variable called image
or we could call you know like selected
image to make it a little bit more clear
it's going to be ui image
and then we're also going to create an
environment
variable
called
backslash.presentation
mode var presentation mode
and this is so that we can dismiss the
image picker okay
so now we'll be able to go here and say
parent dot image
or select an image
equals image
and parent dot presentation mode dot rap
value dot dismiss
so this is where this parent comes in
guys we need to be able to link the
coordinator back to the image picker
so the parent is a reference to the
image picker and when we initialize this
guy we ask for
a reference to the image picker or an
image picker property essentially so
then
here this function requires us to make a
coordinator this function
is a requirement of this protocol
and so is this make ui view controller
so here we make the coordinator and we
return this coordinator and it's like oh
hey this coordinator conforms to these


about:blank

    178/3156/7/23, 1:25 AM    about:blank
Main subtitle
protocols
Second subtitle
right and in this coordinator we have
access to the parent class which is this
class so this is essentially a subclass
of this class and this parent property
is how we communicate between the two
classes so here is where we get the
image but we need to be able to pass it
back to or over to
the image picker class so we can say
parent dot whatever right selected image
and then we also have access to the
presentation mode because when we pick
that image we want to dismiss the image
picker
so that's pretty much it guys
um we should now be able to go back to
our um
what's it called
photo selector view
and on this button
we're going to add a sheet parameter
we're going to say dot sheet is
presented
and then we need to add a property up
here we're going to say at state private
var
show
image picker
equals false
the buttons action is going to be show
image picker dot toggle
and then is presented is going to be
show image picker
on dismiss
um we're not going to do anything with
that for now




about:blank



    179/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
but the content is going to be our image
picker
and it's going to ask us for a selected
image right here
so we're going to need to create that
image we're going to say state private
var
image
equals and we're just going to set it to
a ui image
just like that and it's just going to be
a blank image okay
and here we're going to just pass in
that image
so
let's go ahead and run this
and
um
guys let's actually stop the app really
quick
oh this is a binding property so one
second um but uh what i was going to say
just now is that we don't want to have
to register a user every time we want to
get to this part of the app
so really quickly let's just go to this
guy
and
we're going to go here and we're just
going to once again comment this content
view out
and here we're going to say profile
photo selector view we know that our
presentation logic is working
so now we just have to get
you know the actual image picker
functionality and stuff working here


about:blank

    180/3156/7/23, 1:25 AM    about:blank
Main subtitle
so let's see what this guy is giving me
Second subtitle
grief for
so let's actually create uh let's make
this a little different guys
we're going to say state private var
selected image
and that's going to be a ui image just
like that
and we're going to have a state private
var
of an actual pro of the actual profile
image
and that's going to be an image so the
difference here is the ui prefix right
so ui prefix means that it comes from ui
kit so this image guy is actually just
part of swift ui
so for our selected image down here
we're going to be able to pass in dollar
sign selected image just like that
so that looks pretty good
let's go ahead and run this it should
just take us straight over to our
what's it called
profile photo selector view
but you guys are gonna notice that
there's one more thing we gotta do
so i'm gonna hit that
and it's gonna oh awesome no it's good
to go
so i have some custom images in here
guys if you guys want to be able to get
that
you just close out or go to safari
and you can do any sort of like google
search for images
so just go to you know on the safari app




about:blank



    181/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
just go to images
you can search for anything literally
like let's search for like goku
and you know like you can just literally
click on any image
and like long press on it and then say
add to photos
and you can go back here to your image
picker and you guys will notice that it
shows up right away so that's pretty
cool but anyway we can click on that
image now and you guys notice that it
dismisses the image picker
and so it you know it actually selected
a photo for us but we haven't actually
done anything with that photo just yet
so what we're going to want to do is
actually replace this guy
with the image that we selected
so
um we're going to do that in this in
this label right here right because we
want it to be a button no matter what
because like let's say the user selects
an image and they want to change it we
still want them to be able to click on
it to change it again so the only thing
that's going to change is this label
so
for the image
let's see what we got to do here guys
so let's just go ahead and cut this with
command x
and we're going to say if let profile
image equals profile image
and
else we put the image there and if not


about:blank

    182/3156/7/23, 1:25 AM    about:blank
Main subtitle
we put profile image
Second subtitle
and we still do all this stuff right
and we're actually going to want a clip
shape of a circle
just like that
all right
but
um we noticed that this is not great
right to have all this code listed twice
um and we can actually create like a
custom modifier
to handle this so
um let's see if we can
do that now
so down at the bottom here guys let's
just create like a private struct
uh and we call it profile image
modifier
view modifier
and it's gonna have this funk
called body content
right so we'll be able to take some
content which is essentially gonna be
this image whatever this image is and
add this modifier to it
so we're gonna just say content and then
we can take all this code
and modify it to that content
and we'll just be able to go here and
say
dot modifier
profile
image modifier
and
just take this line of code and do the
same thing there so that's like
significantly cleaner than having all




about:blank



    183/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
that code sort of jumbled up in there we
just need to create this private
structure and it's like you know private
to this file
ooh
um
i think we need to initialize it
like that and that should be good to go
all right it's yelling at me a little
bit
um so let's see guys
um looks like we can't have resizable in
there which should be fine
um
rendering mode template we only need
that on this part right here
and padding top we can actually just put
that on the button itself
just like that
so we're actually going to have to add a
little helper function so that when the
image picker dismisses it replaces this
uh button this
image we have here with the selected
image from the user
so let me clean this up a little bit
outside of this body guys or uh we can
actually just go ahead and add a
function called load image
and we're just going to say guard let
selected even image equal selected image
else return
um
i like my guard statements like this
then we're just going to say profile
image equals
image


about:blank

    184/3156/7/23, 1:25 AM    about:blank
Main subtitle
and then type in ui
Second subtitle
and pass in that selected image
so this is really really cool
this allows us to construct a swift ui
image from a ui kit image so this
selected image is the image we get back
from the user selection right that's why
we named it selected image
but in order for us to get this to work
we can't use a ui image we have to use a
swift ui image which is just the regular
image guide that we see here
so we need to be able to construct that
from
a ui image which is what we're allowed
to do here
so now we just have to figure out where
to call this function
so we can go back to this sheet guys and
we can say comma on dismiss
load image
so your function should now look like
this we had this option when we created
this sheet but basically
this is really really cool
and what it's going to do is when that
sheet dismisses it's going to call that
load image function and load our profile
image into that spot
so let's run the application guys and
see what happens when we select a
profile photo
so i'm going to go here
i'm going to select goku
and so that's working which is awesome
but
the uh




about:blank



    185/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
image is way too zoomed in right like
that's not what we want so we're just
gonna go up to our profile image guy and
we're going to go here and say dot
resizable and that will allow the image
to be resizable and actually fit the
frame we don't need to do that here
because we have the template rendering
mode and this does not need to be
resizable
so if we go ahead and run that again
guys
we should notice that this is working
really nicely and then the last piece of
this puzzle
is to add a little bit more to the view
okay that looks freaking awesome right
guys this is really really coming
together it's exciting right we're
building it piece by piece and we can
see it just like slowly morphing into an
awesome application i'm loving this man
and i've already built this before
you guys must be having a great time but
anyway um the last piece of the puzzle
guys
is
or pieces rather we got two more things
to do with this image stuff
we have to add a button that says like
continue
once the user selects a profile photo
right so once they select it we want
them to be able to see what they've
selected make sure it looks good and
make sure they don't want to change it
and we notice that hey we can still


about:blank

    186/3156/7/23, 1:25 AM    about:blank
Main subtitle
change it if we want to
Second subtitle
and then this button is going to show up
they'll be able to hit continue and then
continue on to the main interface of the
application
so let's go ahead and implement this
button really quickly so we're going to
go back here and add to the v stack
so i'm just going to say if let profile
image equals profile image
then i'm going to want to grab a button
and it's going to look really similar to
our authentication button
so we can literally just go ahead
grab this code
go back here and put that in there
and it'll say continue
but we don't need this let's just go
ahead and say print
debug finish registering
user
and we actually don't need access to
that profile image property guys so we
could just go ahead here and say if
profile image is not equal to nil
let me fix that not equal to nil and
remove the let
so let's go here
select a guy
and we notice that that continue button
shows up and it looks really good and
it's giving us that print statement back
of finish registering user god damn this
is looking good
right
so
i mean guys this is just like super




about:blank



    187/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
super smooth man
so anyway now all we got to do
is upload this profile image that's the
final piece of the puzzle right so we
actually have to write some code
that is going to upload this profile
image to firebase storage
and then we are going to have to modify
our uh user
uh data in the database so let me bring
this over really quickly
uh sorry guys that was a you know just
got to bring this uh
stuff over from my other screen
so we need to add like a profile image
url
property right so it would look
something like this it would say like
profile image url and it's gonna be like
uh
dot image is
here dot firebase storage
dot com right add so like
this is like basically what it's going
to look like but the www dot blah blah
blah is going to be the actual location
of the image and when we go to that url
it's going to download the image to our
device and then we'll be able to access
the profile image so that's what we're
going to do next get excited for that
guys
and that will be the final piece of our
authentication
functionality then we can actually get
into
loading some of the user data that we've


about:blank

    188/3156/7/23, 1:25 AM    about:blank
Main subtitle
uploaded into like user profiles and
Second subtitle
then we can get into uploading tweets
and searching for users and all the fun
stuff you guys have been waiting for
that are going to really bring this app
together so let's keep going
so we are going to hop into this service
class or folder sorry guys we're gonna
create a new file
it's gonna be a swift file
we're gonna call it image uploader so
what this is going to serve as is
essentially some sort of helper class
that its sole purpose is going to be
uploading images
so if you could imagine
if you want to be able to upload images
in multiple places in your application
you'll be able to just reuse this image
uploader helper
instead of having the same code in
multiple places hey i want to be able to
upload a profile image or hey i also
want to be able to upload a tweet image
right
now having it in one centralized
location allows us to reuse it which is
what we want
so
we are going to go up here and import
firebase and we're also going to import
ui kit
and we're going to create a struct
called image uploader
and it's going to have one static
function
called upload image




about:blank



    189/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
it's going to be an image which is a ui
image
and it's going to have a completion of
at escaping parentheses string
void just like that
so
what's the reasoning behind this
completion that we see here so
essentially guys
what we want from this function is to
for it to give us give us back an image
url so we're going to upload an image to
firebase storage
but we need to get back the location of
that image so that we can put it in our
data dictionary here right we ultimately
need the location of that image
so that when we want to like download
the user data we get the location of
their profile image
because if you remember what i said we
can't actually store the image here
we can only store the image in the
storage bucket
and then get a pointer to that image
right it'll make more sense once we
actually go through it if that doesn't
make sense already
so let's go ahead and get to it we're
going to say guard let image data equal
image.jpg data compression quality
0.5 else return
so this grabs the image gives us back
the image data and it compresses it to
half the original size
okay so
it's going to slightly lower the quality


about:blank

    190/3156/7/23, 1:25 AM    about:blank
Main subtitle
of the image but it's going to reduce
Second subtitle
the image size so that when we download
these images it's not going to be as
large of a download which will
ultimately make our app faster and limit
our data usage so you could even limit
this to like something like 0.3 but
let's just keep it at 0.5 so we don't
lose too much image quality
we're going to create a file name it's
going to be nsuuid
constructor.uuid string
then we're going to create a reference
we're going to say storage
dot storage dot reference
with path
parentheses slash profile images or
let's make it underscore images slash
we use some string interpolation file
name
so this is the path to the image we're
creating you guys are going to see a
folder show up here that says profile
images and then within that profile
image folder we're going to have some
unique file name this is just
swift's way of generating some unique
string okay
then we're going to say ref.put data
actually we need a different one put
data with a completion
now here we pass in the image data
metadata is nil
completion you guys notice that we get
back a callback of a potential error or
some storage metadata
so you go here




about:blank



    191/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
underscore
error
we're going to handle our error we're
going to say if let error
equals error
then we're going to say print debug
failed to upload
image with error
error dot localized description
and then return so if we have an error
uploading the image it's going to give
us that error message and it's going to
return
now we need to get the actual image url
so we can execute our completion handler
so we're going to say ref.download url
completion and this gives us back a url
or an error so you hit enter on that guy
say image url
and then we're not going to handle the
error here guys because
honestly if something goes wrong it's
probably going to be here we don't
really have to worry about it here if
you guys want to be super super safe you
could just
do that for the download url as well
but we're going to now say guard let
image url
equal
image url dot absolute string
alex return
and then we're going to execute our
completion of image url
alright guys so this is
going to be our image uploader helper
now we actually have to go back to the


about:blank

    192/3156/7/23, 1:25 AM    about:blank
Main subtitle
auth view model
Second subtitle
and be able to upload that profile image
so
we're going to create a helper function
to do this for us
so i'm going to go down here and say
private
func
upload profile image
or actually it's not going to be private
we need to actually access this through
the profile photo selector view
and we're going to just do underscore
image ui image
just like that
we're gonna say guard let uid equal
um
okay so this actually gets a little
tricky
um because
we obviously want to be able to say user
session dot uid else return
but if you guys remember
in our register function right we can't
set this user session to have a value
until
we want to be taken to our main user
interface
right so we actually need to create
another property
so i'm going to go up to the top
and i'm just going to create a private
variable
called temp
user session
which is firebaseauth.user
just like that and this is just going to




about:blank



    193/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
be like a temporary user session that we
can set in this register function
so
this is like the actual user session and
once we set this
it's going to take us over to the main
interface
but we have this in between step now
right
where we want to upload a profile image
so we're going to go here and say guard
that uid equal temp user session dot uid
and up here
we can uh delete this guy we can
actually delete this too we don't need
that anymore
after this guard let user equal
result.user statement we're going to say
temp user session
equals user
hit command b just to make sure
everything is okay
we should get a
we need a self here
so now we can store this user session
in some like temporary property that's
not going to take us to the user the
main user interface right
so now we want to upload this profile
image we actually do need access to this
uid
because why
we need to be able to go into our
firestore database and update the
correct
user structure so we need to go to the
users collection


about:blank

    194/3156/7/23, 1:25 AM    about:blank
Main subtitle
and then go into the correct user id
Second subtitle
which is going to come from this temp
user session guy
once the user gets created right
we're going to need to know
where to upload their profile image url
right we can't just go into some random
users data structure and put a different
user's profile image that would be all
kinds of bad
so
um that's the reasoning behind this guys
and then we're just going to go here
and we're going to call upon our image
uploader
we're going to say upload image
we're going to pass in the image and
then we're going to say here we have the
profile image
url and now here's where we can upload
the information so we're going to say
firestore.firestore.collection
users
dot document
and this is where this comes in
uid
so this takes us to users and then goes
to the correct user id and now we can
upload their profile image url
document uid
uh
dot update data
with a completion
of um
let's see we need to say profile
image url
and then pass in that profile image url




about:blank



    195/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
completion we don't need to worry about
the error
now we can say self.user session
equals
self.temp current temp user session
right so
guys if this isn't smooth i
don't know what is right this is smooth
like suave super suave ricky suave
smooth bruh
right
so what this is going to do is
upload our profile image and then it's
going to go into our database update the
user structure and then once that
process completes
then we set the temp users or the user
session
to the temp user session and then it's
going to take us over to our main user
interface right so that's a lot of
going on
but
it's uh
that's about as smooth as it gets to me
man if you guys got a better way of
doing this you can let me know
but anyway
we need to actually call this function
in our profile photo selector view
so here we have finish registering user
and we're actually going to need to
get that uh
if let going equals profile image
now we say view model
oh we need access to our view model
so we need an environment variable


about:blank

    196/3156/7/23, 1:25 AM    about:blank
Main subtitle
our view model
Second subtitle
off view model so now we can go down
here and say view model dot
upload profile image
profile image
and that's actually wrong
right because
we need to be able to upload a ui image
so if we go back to this image uploader
um the only way we can convert this
image to actual image data
is through this ui image guys
if you tried to replace this as a
regular image like for the for from a
swift ui
thing
or using swift ui the swift ui image
component
you're going to notice that it doesn't
have that jpeg data transformer
so we cannot do that we need to pass in
the ui image but it's a good thing we
have one
right this selected image guys a ui
image so we're actually going to say if
that
selected image
equals selected image
and then pass that selected image right
there
now
let's go ahead and run this
oh we got build failed
huh it's asking me for a view model
that's weird
at environment object var view model
so that should be good to go




about:blank



    197/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and
let's see um we actually need to go back
to our app file guys
and
delete this and go back to our original
content view
run the app and test this the whole way
through and see if it works
and i'm confident it's going to i don't
think this is going to mess up i think
i'm uh
i think this is going to work so let's
go ahead and log out
hit sign up
just do like test
9876 at gmail.com
test9876 as the username
test9876 password qqq
sign up
awesome
so
first of all
we should notice that we have a new user
here
so we see that we already have this user
existing in the database right
that
uh transition from this that's previous
screen to this screen actually involved
authenticating the user and uploading
their information the last piece of this
puzzle is uploading their profile photo
so now we can hit plus photo
let's do a ferrari
and we hit continue
and bam look at that bro let's go
that is the actual


about:blank

    198/3156/7/23, 1:25 AM    about:blank
Main subtitle
profile image url's location so if you
Second subtitle
guys were to copy and paste this
right let's copy and paste this url
you paste it and look it downloaded that
image
and now i can click on it in my
downloads and look it downloaded that
image to my computer how slick
is that right
so that's what that whole process
involved guys
we store the image
in firebase storage look at that right
there boom
profile image folder showing up here's
the image that we just uploaded to
firebase
and we see here that this is the actual
location of that image and what we see
in firestore
is a pointer to the location of that
image and when we access that url it
downloads the image to our device so
this is looking absolutely
amazing
okay
and we were in addition taken back to
the main interface of our application
once
we hit that continue button right so
that's a lot of moving parts that we
just brought all together to magically
work in unison okay so that's a full
like
authentication sign up flow
where
you uh have like a separation of of like




about:blank



    199/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
concerns where you have the user fill
out a form and then upload a profile
photo and you guys could take it a step
further and make it so that it's
optional to upload that profile photo
but we're not going to be doing all that
because we want to get into the actual
fun stuff of being able to like upload a
tweet
and replace all these boring blue images
right with actual profile images from
the application so that's the next step
guys this is looking really really good
um
in the next one
our chapter we're going to continue with
fetching
user data
and displaying all the actual user data
in their profile and then we'll be able
to search the app for all the existing
users that we have and ultimately be
able to click on their profile and have
it display real life information so get
excited for that guys the app is really
really coming together and i'm super
pumped about it hope you guys are too
thanks for sticking with me up until
this point i think we're like four or
four and a half hours in right now and
it's been a lot of fun i'm glad you guys
are along with me on the ride on this
one let's keep going
all right guys so essentially we've just
uploaded a bunch of data to the database
we have it saved somewhere on the
internet but what we ultimately want to


about:blank

    200/3156/7/23, 1:25 AM    about:blank
Main subtitle
be able to do is download this
Second subtitle
information and display it in our
application right so we can see a bunch
of different users showing up
and download the information from our
central data storage or api
so we're actually going to go and create
a service class and it's going this file
is going to be called user service and
it's going to be dedicated to fetching
and downloading user information from
the api so we're going to go to this
service
folder we're going to create a new swift
file and we're going to call it user
service
user
service cool
we're going to import firebase up at the
top
and i'm going to create a structure
called user
service
and this is going to have a function for
now called fetch user with uid uid
string
and we're just going to add a print
statement here that says print debug
fetch user info
so i want us to figure out where exactly
we're going to call this and how we're
going to utilize this user service
before we actually go over how to fetch
our user information
so we're going to hop back into our off
view model okay guys
and we're going to go up at the top and




about:blank



    201/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
we're going to say private let service
equal user service
and in our initialization function
we're going to go ahead and just delete
this print statement
and we're going to say
service
dot fetch user with uid
and we need to pass in a user identifier
here
so
um
actually guys what we can do
is in this init
or sorry we're actually going to create
a
helper function here
that's called fetch user
and we're going to say guard let
uid equal
self.user session dot uid else return
and then within this function we're
going to say service dot fetch user with
uid uid
and then up at the top here we can say
self.fetch user
okay so this fetch user function
is a function that's within our auth
view model
and this guy calls upon the service
fetch user function which we have to
pass in the uid to
and in this case it's just going to be
the current user id
all right so let's just go ahead and run
our application and see if we get back
that print statement that we wrote in


about:blank

    202/3156/7/23, 1:25 AM    about:blank
Main subtitle
our user service file fetch user info
Second subtitle
that's all we want to see here
right this way we know that we are
calling the function in the correct
place
and it's actually giving us back some
data signifying to us that it's being
called
so
bam we get fetch user info so now we
know we're good to go so this is where
we can actually fetch the current user
information
so
we're going to go ahead and say
dot firestore.firestore.com
users
dot document
uid
dot get document
completion we're gonna have a snapshot
oops snap shot
underscore and then under here we're
going to say guard let
uh
what's it called snapshot
equal snapshot
else return
and i think we can actually say snapshot
dot data
right
so we can say guard let data equal
snapshot.data and let's just go ahead
and say print debug user data is
data
and let's see if we're actually getting
something back from this fetch user




about:blank



    203/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
function
right so this ideally should give us
back the data of the user that we are
currently logged in as
so this is going to be pretty exciting
guys big moment of truth here
oh
look at that baby
right we're getting the full name we're
logged in as test9876
email bam and we also have the profile
image url and the username so this is us
getting information back from our api
about the user that we are currently
logged in as this is absolutely amazing
guys
this really coming full circle here
where we've uploaded information to the
database we are now fetching that
information from the database
and we just have a couple more steps to
go to actually be able to display this
information in our app and have it
really come to life okay so the first
thing we're gonna have to do
is build out a data model okay we have
to be able to map this data into an
actual object okay
so we're gonna hop up to this model
folder here and we're going to create an
object so we're going to just call this
user
and up at the top we are going to imp
import firebase firestore swift and i'll
explain why in just a little bit but
what we're going to do guys is create
this struct it's going to be a user and


about:blank

    204/3156/7/23, 1:25 AM    about:blank
Main subtitle
it's going to conform to this
Second subtitle
identifiable protocol
and i'll explain this as well
but essentially we're going to create
something called a document id var id
string
and it's going to be optional then we're
just going to create a couple other
parameters yet let user name
string let full name
string let profile image url string
let's uh what's it called
email
string
all right so this is going to be our
user object if you guys don't understand
the concept of an object in programming
i highly recommend you go and look up
some object oriented programming
fundamentals i will have a youtube
series on that coming very very shortly
which i will link to the description
when it's ready so at the time you're
watching this video it might be ready so
just check the link to the description
if you guys don't have any idea what i'm
doing when i'm creating something called
a user object but i'm assuming most of
you know what is going on here
but essentially
what we're doing guys is
mirroring um or creating an object in
our code that we're going to map this
data into so we can access it all
through this object so we can say like
user dot username or full name or
profile image url right so let's talk




about:blank



    205/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
about what we're importing up at the top
here it's firebase firestore swift so
you guys are probably familiar familiar
with the decodable protocol this is just
what we have to import to work with the
decodable protocol through the firebase
code okay so we'll be able to just
decode our user object um through use of
importing firebase firestore swift here
so this is our data model guys this is
looking pretty good
so what i want us to do is hop back into
this user service and actually map this
data into our user object okay
so let's go ahead and try to do that now
so i'm actually going to go here and
delete this uid field we don't need this
guys
and that ties into why we created this
document id variable so basically what
it's going to do
is
it's going to read the document id here
and store that in the id property so
that we don't have to duplicate that
data in the actual body of the object
okay so it's going to say hey the user
this is the document id
that represents all this data here it's
going to grab that and store it in this
id property unfortunately it has to be
optional
but that's not too bad to work around so
let's just go ahead and hop back into
this user service and see if we can map
this data into that
so up at the top guys let's go ahead and


about:blank

    206/3156/7/23, 1:25 AM    about:blank
Main subtitle
import
Second subtitle
firebase firestore swift because we need
to do this to actually be able to decode
this data
um
let's actually just go ahead and delete
that dot data and
rename this property snapshot
and we're going to say
guard let user equal try
um snapshot.data
and you guys notice that when you say
data as it has this throws option or
like that means it can throw an error
that's why we have to mark it with this
optional try
but we don't have to introduce the catch
if we in if we have a question mark next
to the try and wrap it in a guard
statement so we're just going to go here
and say user dot self
else return
and let's just go ahead here and say
like print debug
user name is
user dot username
print
debug email is user.email okay so you
guys notice through use of this object
we can say like
um
what is this yelling at me for
requires that user conform to decodable
i guess we actually have to conform to
the decodable protocol that would make
sense
so go back to your user struct guys and




about:blank



    207/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
conform to the decodable protocol
let's try to build that one more time
and that should be good to go looking
good build succeed please build succeed
please let's go
all right so let's run this and see if
we get these two print statements back
you guys notice the beauty of using an
object is that we can we get this dot
notation and can access all the
properties associated with that user and
that is absolutely beautiful
right guys we get username is test9876
email is test9876 gmail.com so
couple things are happening here we are
successfully fetching information from
the database
and then we are successfully mapping
that information into our user object
and then
we can access that user object and
access certain properties associated
with that user object through use of
this dot notation which is a thing of
beauty okay
so
now what we want to do
is actually
um link this user service stuff
to our
auth view model okay and we're gonna do
that through the use of something called
combine
okay so
combine is something that works very
very well with swift ui
and we're gonna see how exactly we can


about:blank

    208/3156/7/23, 1:25 AM    about:blank
Main subtitle
use that here guys to ultimately be able
Second subtitle
to
display
information about our user in things
like our side menu and our profile and
all that good stuff
but before we do that um you guys notice
that i did manually modify some data in
my database and you got to be really
careful with that because
i deleted that uid property because if
it was still there i'm pretty sure the
decode would fail right it might not but
um essentially what this decodable
protocol is doing is it reads a data
dictionary and it tries to look for
the exact name of these keys or these
values or these property names in the
data dictionary so you guys will notice
that these things match up identically
right username profile imagery full name
email all match up directly with what we
have here if i were to simply change
this to like
full uh
you know capital like that
you guys are noticed that this decode is
going to fail
and i'm actually not going to get those
print statements back about my user so
that's the power of the decodable
protocol guys i love it
and it makes life a lot easier when
you're working with objects and
downloading information from an api so
you guys notice there's no information
about there's no print statements coming




about:blank



    209/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
back that's because the decodable
protocol or the decode failed there you
guys notice if i change it back so full
name matches full name here and all the
other fields match
that i'm going to get my print statement
back in the console there
meaning the decode was successful okay
so that's uh something that is really
important to understand guys a lot of
errors that i get messages about come
down to you guys spelling things wrong
in that in that process so just watch
out for that
um
but essentially now what we want to do
like i said before is link that user
service to this off view model so that
we can pass that user object around to
different views right so let's go over
how we're going to do that
alright guys so we're going to hop back
into our auth view model and we're going
to
start off by adding a published property
a published var current user
which is going to be the uh of the type
the user object that we created and it's
going to be optional the reason it's
optional is because we have to reach out
to our api to fetch this user data
before we can set it so when the app
launches initially it will be nil
even if it takes a quarter of a second
to fetch that information the app
launches before the current we can fetch
that data right it always takes time to


about:blank

    210/3156/7/23, 1:25 AM    about:blank
Main subtitle
execute an api call so we have to
Second subtitle
initialize this as an optional property
so
um basically we need a way of getting
the user
from this fetch user function back into
this file so that we can set this
property here
so what we're going to do is go back to
the user service and we're going to go
here and add a completion
it's going to be at escaping
parentheses user
void just like that
and we are going to go here and just
after this guard statement we're going
to say completion
user
and you guys are going to notice that if
we build the project
we're going to get an error
and that's because in this completion
or in this function call here we're
missing a completion block
so let's just go ahead and delete that
fetch user guy let's just retype the
function we're going to pass in that uid
and now you guys have noticed that we're
going to have access to a completion
handler so if we hit enter on this it's
like oh hey
when this function call completes you're
gonna get access to a user
and then we just have to go here and say
self dot current user equals user
okay
and that's gonna set this published




about:blank



    211/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
current user property to
the user that we fetch from the database
all right so that's pretty cool
now what we want to do uh first thing i
want to do is actually see this user's
information showing up in the side menu
okay
so we're gonna go back to the side menu
collapse all that stuff side menu side
menu view
and we already have access to this off
view model right here right
and through this off view model
we have access to our currently logged
in user and it's a published property so
we know when that guy updates it will
update our
um
side menu view with the new and incoming
data
so
what we're going to do
is just wrap
some of this stuff in an if let
statement okay
so we can basically wrap this whole
thing
right this is one way of doing it we can
just say if let user equals off
viewmodel.currentuser
and paste all that stuff in there
and now we can replace this dummy data
with actual data okay so here i'm going
to go ahead and say user.full name
here i'm going to do some string
interpolation i'm going to say at
user.username


about:blank

    212/3156/7/23, 1:25 AM    about:blank
Main subtitle
and that's all we have for now we're
Second subtitle
also going to want to get this profile
image stuff in there but that's what
we're going to do next for now i just
want to see if this is actually showing
up with real life user data this is
going to be really freaking cool right a
lot of stuff's about to come together
here guys
uh so drum roll please
right let's see if it's working
so we go here
and look at that
i love it when this works man it
makes me feel good about myself right so
we see test9876
test9876 as the username so that means
guys that we are successfully fetching
our user information from the database
we've created our user object and now we
are passing it to
different view components in our app the
first thing we passed it to was our side
menu
all right so
now that that's happening
um
i want us to to go ahead and knock out
this uh profile image stuff here so
we're actually going to download a
third-party library or swift package
that is going to help us download images
from the internet and display them in
our app in the most efficient way
possible
so let's go ahead and do that now
so uh we're going to go to file or sorry




about:blank



    213/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
let's highlight xcode
file add packages
and let's go ahead and find the package
we're going to add guys just go to your
internet browser and type in kingfisher
swift package
kingfisher is one word and you're going
to see this link that says 1vcat
kingfisher
right so this is just a third-party
library that makes downloading images
really really really really simple
i absolutely love this uh
this uh
library
so
we just need to find the install
instructions so let's see
swift
package
so we have package manager so if you
guys just do a find command f and search
for swift package you'll get the url
that we need to download this swift
package
you go here you paste it in there
click add package
and just let that do its thing
all right guys so you should see this
screen after a bit you just hit add
package
it's only one box that you can check and
now we've added the kingfisher package
to our project and let's just go ahead
and see
just how easy it is to use kingfisher to
download an image from the internet


about:blank

    214/3156/7/23, 1:25 AM    about:blank
Main subtitle
so we're going to go back to the side
Second subtitle
menu view
we're going to import king fisher
just like so
build your project with command b just
to make sure everything is working
okay no such module kingfisher that's
unfortunate because it's literally right
there
um guys we don't need our preview
anymore so i'm just going to close that
out um typically this error will go away
once the the project actually finishes
building it just takes xcode some time
to recognize that but anyway um you
notice guys here that we just have a
circle um so we're gonna replace this
with something called kf image
and it's gonna ask us for this url okay
um so now we actually have to pass in a
url object
so we're going to say url and we're
going to use the string constructor and
we're going to say user.profile image
url so that's literally all we have to
do then you just go here and add dot
resizable and then like dot scaled to
fill
and uh
i think we have to say dot clip shape
circle or something like that right
because before we were working with the
circle now we're working with an image
we actually have to give it a clip shape
of a circle
so
um the guys the reason we have to do




about:blank



    215/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
this conversion of like building this
url here is because on our user object
we just have the profile image url
represented as a string
the url object is a custom swift object
so
we can't say it's like it makes your
life more difficult if you try to cast
this as a url it's easier to just cast
it as a string because that's what it
comes back as
from your database or your api
so
then we just go here and construct that
url using the user profile image url
string
and that's literally all we have to do
so i'm going to go ahead and run this
now
and
we should see
in our side menu
right
that user profile image url showing up
and it's going to look super freaking
smooth
and we're going to see
oh
check that out boy
let's go
we see our profile image url showing up
beautifully there guys
and
in addition to this test data
so this is looking really really good so
far
um the next step i want us to go over


about:blank

    216/3156/7/23, 1:25 AM    about:blank
Main subtitle
how to do is implementing that up here
Second subtitle
as well and then we're going to go over
how to implement that in the profile as
well
so
next step guys is we need to hop back
into this content view here
so that we can replace this circle
image that we have as our
leading navigation bar button item with
the actual user's profile image url so
if you guys go back to the content view
and you scroll down to the main
interface view we have in the extension
we have this button here that's a part
of our toolbar
and right now the label is just this
circle
so what we're going to do is replace
that with our profile image url
so
um on this toolbar guys we can go here
and we can just say if let user equals
viewmodel.currentuser
and so basically this won't get created
unless we actually fetch our user
then we're going to replace the label
with
first we got to go up to the top and
import
kingfisher and you guys will notice that
we have access to the auth view model
through this environment object that's
why we can go say if let user equals
viewmodel.currentuser
and then here we're going to just say kf
image




about:blank



    217/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
url
string
user dot profile image url
and then we're going to say dot
resizable dot scale to fill
dot frame
is 32 by 32
and then we're going to say dot clip
shape of a circle
all right so let's go ahead and run this
now guys
and we should be able to see
our side menu also showing up with our
user profile or sorry our toolbar
showing up with our user profiles image
url or profile image that we are
downloading
and
that is exactly what twitter does and
you guys notice that it takes just a
second to show up right but then
as soon as it does boom we have that
stuff loading absolutely beautifully so
that's uh the next piece of the puzzle
that we have conquered guys the next
step that i want us to go over how to do
is how to integrate this uh
user object into our profile and then we
are going to segue into actually
fetching multiple users
and displaying them in this user list
here and we're going to fix some bugs as
well you guys notice it looks like we
were doubled up on
some navigation views here we're going
to fix that stuff
but this is looking really good guys so


about:blank

    218/3156/7/23, 1:25 AM    about:blank
Main subtitle
let's go ahead and figure out how we're
Second subtitle
going to add
or integrate our user into our profile
here that's going to be fun
so we are actually going to take a
different approach on how to sort of get
the user object into this profile view
and ultimately display their information
so we're going to use something here
called a dependency injection or a
custom initializer so we're going to
initialize this view with a user
and then up at the top we're just going
to create a user property we're going to
say private let user
is a user and then we're going to go
here and just say self.user equals user
and if you guys try to build that you
notice that you're going to get an error
and that's because it says hey you need
to initialize this profile view with a
user
so
um you guys notice in our preview now
we're missing a parameter for the user
so if we want we could go ahead and just
sort of add like a dummy user
and it's going to ask us for a bunch of
this stuff uid
or id
you know and we're just going to say
like
nsuid uuid string username is like
batman full name is bruce wayne
profile image url is just blank and
email is batman
gmail.com




about:blank



    219/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
all right so this is like i said guys
sort of like a dummy user
that we can add to our preview just to
make sure that that still works
um we don't really need the preview
anymore
but you guys notice the uh you know this
comes back to this initializer that we
just created um we tried to create the
profile view but it was like hey you
need to initialize this thing with a
user
so we're going to try to do it one more
time
and i'm pretty sure we're going to get
an error again
and that's because we're creating this
profile view
i think in two places in the app right
when we click on
this profile button in the side menu
and also when we go to the explore page
and click on a user from there
so
let's just go to those two places and
see if we can figure out how to figure
fix this problem so we're going to go to
side menu first we can go to side menu
view and here is where we go to the
profile view with this navigation link
so we're just going to go here and say
user
user right because we've wrapped this
whole thing in an if-let statement and
we're getting
access to the current user that's on the
view model so now we can just pass it


about:blank

    220/3156/7/23, 1:25 AM    about:blank
Main subtitle
into the profile view
Second subtitle
um alternatively you guys could add the
auth view model back to the profile view
as an environment object and do the same
thing we did here and i don't think
there's anything wrong with that right i
think uh both ways
are completely acceptable here so i'm
just showing you a different way of
doing it you guys can pick which one you
like better or which
sort of technique fits your app better
but anyway we got one more place to do
this in so let's go to the explore
folder go to views explorer view
and then here we need to pass in a user
as well
you guys notice however that we don't
have access to a user here so i'm
actually just going to comment this out
for now
until we actually go over how to fetch
real users from this we could make some
dummy data but it would kind of just be
a waste of time
because we're just going to end up
fetching that stuff from the database
anyway so now
i could go back to my profile view
and i could now take this user object
and start replacing all that dummy data
with actual data about the user so let's
go ahead and do that
so first thing we're going to do up at
the top is import kingfisher
and in the header view we want to
replace this circle with an actual uh




about:blank



    221/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
profile image so we're going to replace
circle with kf image
url
string
user.profile image url
and then we're going to say dot
resizable
dot scaled to fill
dot clip shape
circle
and then i guess it also has that offset
all right so that's the first thing guys
excuse me
um
now we just keep scrolling down and
anywhere we see some dummy data like
this is uh you know dummy data right
here where we have heath ledger we're
just going to replace this with
user.full name
and then here we go to the at symbol and
we do some string interpolation and we
say user.username
uh we don't have a bio for the user yet
so we're just going to leave this there
we also don't have location and website
yet so we're going to leave that stuff
there as well
and then we don't have
follower data yet either so all that
stuff is going to remain the same for
now
let's just go ahead and run this really
quickly let's see what my problem is
cannot find circle
oops i spelled circle wrong
so we're going to run this


about:blank

    222/3156/7/23, 1:25 AM    about:blank
Main subtitle
and see if we're getting some actual
Second subtitle
data
in our
user profile
and once again guys this has been done
through something called a dependency
injection where we're not using the view
model we're actually just requiring that
we initialize this view with a user
just another technique of how to get
data from one place to another so we go
here
click on profile and look at that guys
that's looking super smooth right we got
our profile image here we got our test
uh you know username and full name
um
and what i'm going to do guys is
i'm actually going to go ahead and
delete all these dummy users and create
a bunch of actual like users so the app
looks a little cleaner but we'll do that
in a second um a couple things i want to
do
we need to adjust the spacing of these
two things like we want this arrow to be
a little bit closer to the top here this
looks a little messy
so let's actually scroll down to
our header view and we're going to
change this y offset to negative 16 okay
guys
um
positive offsets move it down negative
offsets move it up when you're on the
y-axis and that's because
the origin point of the




about:blank



    223/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
coordinate system for a phone starts in
the upper left so anything positive
moves it down anything negative moves it
up
so it's a little weird and you guys
notice that looks a lot better
um you guys could move it up even a
little bit more if you want like we
could make this like negative 20.
and i'm sure that would look great you
guys notice we click it and everything
is still working just fine
so that's looking really good guys uh we
have our user injected into our profile
now and next up um like i said i'm gonna
do this off camera but i'm gonna just go
ahead and delete
all of those uh sort of custom
test users that we made like all this
stuff here
um you guys make sure that if you do the
same if you have just a bunch of dummy
users and you want to delete them as
well that you delete them in the
authentication
guide as well so you just go and you
click on this and you just click delete
account
but let's make sure we sign out before
we do that
so i've signed out and then i'm just
going to go ahead and delete all these
accounts
one by one and then you go and also you
can just delete this whole user
collection you just say delete
collection you type in the name of the


about:blank

    224/3156/7/23, 1:25 AM    about:blank
Main subtitle
collection you hit delete and then you
Second subtitle
go to storage and you can delete that as
well so that's sort of just how you wipe
your database clean if you ever need to
do that um and i'm going to go ahead and
register some actual users so the app
just looks a little cleaner and then
what we're going to do is go over how to
fetch all the users that we have on the
application and display them in that
list be able to click on them and take
and then navigate to the profile and
also be able to search for users which
is going to be a lot of fun guys so get
excited for that
okay guys so i've created a couple more
users um i went with f1 drivers for fun
so we can see here that this is looking
pretty good i did however notice a
couple bugs that we have in the
application um first off we can't see it
because of the color
but the if you guys hold down right by
where that arrow is there's actually
still a navigation uh button there so on
the profile view we're gonna go here and
say
dot navigation oops not there but on the
v stack rather and say dot navigation
bar hidden is true
and let's go ahead and run this and see
how that looks and the other bugs were
authentication bugs and i'm going to go
through the process of signing up a user
if you guys did the same thing i'm sure
that you notice these bugs as well
um and we're going to go over how to fix




about:blank



    225/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
them now
so let's let the app launch
and let's just go back and check out the
profile
so now i'm logged in as danny ricardo go
to my profile and you guys notice that
now the offset of the button is like a
little jacked up so the sizing of this
was messed up because the navigation bar
was actually still there so we need to
go back to the header and adjust the
y offset so let's just do like negative
four
and run that one more time
and hopefully that looks better
because it was definitely kind of
confusing as to why the frame was only
96 pixels but it looked so much bigger
right now everything actually looks
as it should
so we go to the profile and that looks
pretty good there guys right and that is
working really smoothly
awesome okay so the next bug i'm just
gonna go ahead and show you guys what it
is and then we'll uh go over how to fix
it so if i were to log out of a profile
and then go and sign a user up so i'm
gonna sign up a new user
um let's see
who do i want to do
uh let's do lando norris
so just do lando at gmail.com
uh lando norris
full name is lando norris
one two three four five six so you guys
remember that i was logged in as danny


about:blank

    226/3156/7/23, 1:25 AM    about:blank
Main subtitle
ricardo okay so that's just let's call
Second subtitle
that user a and this is user b so i hit
sign up that's working just fine go to
my profile photos and i select lando
norris there i hit continue
and it's going to take me back to the
main interface of the application but
you guys notice that it still looks like
i'm logged in as danny ricardo like i go
to my profile and everything is from the
previously logged in user that's not
what we want
so
what we need to do is go to our
authentication view model
and on this register function guys after
we authenticate the user we need to call
this fetch user function again okay
and
what that's going to do is it's going to
fetch the user with the new data so this
user session is going to have a
different value
okay and then
once that has a different value or
actually we might want to call it in
this upload profile image yeah that's
what we want to do so after we upload
the profile image then we're just going
to go here and say self.fetch user right
so now you can see make sure you call it
after you set the user session to the
new temporary user session
right because now this will be equal to
the newly created user's id and then we
go to this fetch user function and it
says oh hey we have a new user i'm going




about:blank



    227/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to go ahead and fetch that information
now
sweet
all right so
um now we also need to do this in one
more place we need to do it in the login
function as well so self.user session is
user and then we go here and just say
self.fetch user so that means now that
once the user logs in it will be logged
in with the new user data
so that looks pretty good let's just go
ahead and run this and
you guys will notice that once i run the
app then it's going to be showing me
with the lando norris profile
and i'm just going to create one more
user just so we can verify that this is
working
so now you guys will notice that it's
lando norris up at the top that's
looking good we can see that it's all
lando norris here this button looks good
up here so now let's go ahead and log
out
create a new user
so it's going to be valtteri
gmail.com this is val teri bottas
oops
val terry
botos cool one two three four five six i
hit sign up
i add a photo
i select my valtteri botox photo i hit
continue
and you guys will notice that now it's
valtteri botasa's information in the


about:blank

    228/3156/7/23, 1:25 AM    about:blank
Main subtitle
application and it's not the previously
Second subtitle
logged in user so that's looking really
really good we go to the profile
everything is fine and dandy
right so this is looking awesome guys um
the next step for us is going to be
fetching all of the users and displaying
them in this explore view and also
implementing some search functionality
and being able to go click on one of
these users and have it navigate us over
to that
user profile so that's going to be a lot
of fun and that's what's up next now
that we have fixed those bugs we also
have one more bug to fix here where we
look like we're doubled up on some
navigation bars so that's what we're
going to be doing in the next chapter
guys get excited
all right guys so the first thing i want
us to fix is this issue we see here
where we have this double uh navigation
view right so
this is actually a really easy fix we
just need to hop into the explorer view
and remove this navigation view here so
let's just highlight or all this stuff
with that's the v stack so pretty much
everything except this navigation view
and its brackets cut it delete the
navigation view and paste that back in
there
so let's go ahead and run this and let's
go to the explore page and you guys will
be able to see that that uh second
navigation item is gone um there is




about:blank



    229/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
another bug that we are gonna fix uh
later on guys you guys notice that the
tab title or sorry the navigation title
is the same for each one of our tabs and
we're going to be going over how to fix
that later on you notice that even
though i have navigation title explorer
here
it uh doesn't change we're going to fix
that bug like i said a little bit later
in the course i want us to get more into
the fun stuff here where we're gonna
actually get started with how to fetch
all the users in our application and
also search for them and filter through
them so we can check out different
people's profiles that's going to be
really cool and really bring sort of the
social media aspect of this app together
so
let's go and hop into um
i think it's going to be our user
service okay guys so right now we have a
function for fetching one user we need a
function that's going to help us fetch
all the users so we're going to write a
function here called fetch users
and it's going to have a completion of
at escaping
void
and we're going to
get back an array of users just like
that
and all we need to do is go into this
collection
firestore.firestore.collection users and
then just say dot get documents


about:blank

    230/3156/7/23, 1:25 AM    about:blank
Main subtitle
and that's just gonna give us back all
Second subtitle
the users in that users collection which
is uh really simple
so now we just have to say snapshot
and underscore for the error because i
don't really bother handling the error
guys with snapshot fetches um because it
pretty much never fails unless you just
don't have an internet connection
um which is something you can handle
separately but anyway let's say guard
let documents equal snapshot dot
documents else return
so just to make this clear guys what
we're doing in the database is we're
going to this user's collection and
we're just getting all of these
documents and each one of them will have
a different sort of data packet
associated with it like different
values for all of these keys you can see
this is kimmy
this is max for stop in this is lewis
hamilton blah blah blah and what we're
going to do in this function is map all
of that into a user's array so that we
can ultimately display it in this list
so right now we have all of these
documents now all we need to do is map
it into our user object very similar to
what we did here so we're going to say
let
so i'll show you guys the long way of
doing this and sort of the swifty way of
doing this so we're going to say
documents
dot for each




about:blank



    231/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
document
then
we would have to go up here and create a
users array
like this
and then we would have to say let user
equal and we would just grab this line
of code guard let user equal blah blah
blah
try and it would just be uh document
dot data
as user dot self and you guys could
build that and notice that it works then
you could say users.append
user
and then outside of this for loop after
it's all done you would say completion
users okay
so this would work but it is uh like a
little bit
uh it could be a lot cleaner but um
first of all guys let's go ahead and see
if this uh
function works and where we're gonna
call it and then we will come back and
clean up this code a little bit we can
actually shorten this down to one line
of code using swift so um let's see
where do we want to call this function
so i think it's going to be in our
explore view model which we do not have
yet so we need to go to this explore
folder go to the view models folder and
create a new file so we're going to call
this explore view model or we could call
it like search view model doesn't matter
we should probably call it explorer just


about:blank

    232/3156/7/23, 1:25 AM    about:blank
Main subtitle
to stay consistent with our naming
Second subtitle
explorer view model we're going to go
here we're going to create a class
called explore view model
it's going to be
it's going to inherit from observable
objects
we're going to have a published property
of our users which is going to be this
user array
um and then you know we're going to have
an init function
actually i don't think we need the init
let's keep it there we're going to have
funk fetch users
and then we also need a service so we're
going to say let service equal user
service
and we're going to say service dot fetch
users
[Music]
and this will give us back our users and
we could say self.users equals users
but let's also just go ahead and say
print
users
are
the users we just delete that so we're
going to call this function when we
initialize this view model and it's
going to call that fetch users function
which is going to go into our service
class and call that fetch users function
which is what actually reaches out to
the database
you guys might be wondering why we have
a separate service class um




about:blank



    233/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
why not just put the fetch users
function in here that way we don't have
to worry about this completion stuff i'm
going to explain that a little later
and go over some improvements for how to
improve upon using this user service so
that it's more reusable and we don't
have to initialize it in multiple places
in the app i'll go over that in just a
little um for now i just want to see if
this is working so we're going to hop
back into the explore view and create
our view model so we're going to say at
observed
object
var view model equals explore view model
so this is where we actually initialize
this view model so once it initializes
it's going to call that fetch users
function
and
let's just go ahead and see if we are
getting back that print statement that
gives us back all those users from the
database right so this is going to tell
us two things one that we're
successfully fetching the information
two that we're successfully mapping the
information into our users object and
it's
mapped into an array of users so that we
can ultimately display those users in a
list using that array
so this looks pretty good guys right we
have all of our users in the app coming
back right here so all of that stuff is
successful you see we have that in the


about:blank

    234/3156/7/23, 1:25 AM    about:blank
Main subtitle
name of the app dot user and then it
Second subtitle
gives us all of the data associated with
each one of those users so displaying
this in a list is now going to be
actually really really simple
we're just going to replace this for
each with viewmodel.users
and replace this underscore with the
user
and
now we can actually go into this user
row view
and we can pass a user into this
[Music]
and the text here is going to be the
user's username so we're going to say
user.username
here we're going to say
user.fullname
right and then we need to replace this
with our kf image so we're going to say
import kingfisher
and we're going to say kf image
with the url string user.profile image
url let's actually make this a tad bit
bigger guys i looked at the twitter app
and the image does look a little bigger
than what we have
then we're going to just say dot
resizable
dot
what else is it clip shape
circle
and then we're also going to say dot
scaled to
fill so this should look really good
we're going to go back here we're going




about:blank



    235/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to pass in this user
to our user row view so now this is
actually being populated with user data
and now we can even uncomment this line
of code and pass
the user into our
profile view as well
so let's go ahead and run this guys and
see if it works
conform to hashable so i think we
actually can just delete this guys that
id backslash self
build failed
what are you complaining about xcode
oh so yeah this needs um
a user now uh like i said guys we are
done with building the ui so we don't
really need that preview anymore
um what i like to do
when i'm at when i'm like building an
app sometimes is create mock data so i
would have some like sort of helper
class that had a bunch of mock objects
for like users and tweets and stuff but
uh for those purposes of this course we
don't really need to do that
um but look at that guys that is
freaking awesome right we got all the
users showing up in our application it's
in this awesome scrollable list that
looks really smooth and you guys will
notice that if i click on one of them
it'll display
real profile information about them or
real information about that user so if i
go to daniel ricardo it displays his
information if i go to lando norris it


about:blank

    236/3156/7/23, 1:25 AM    about:blank
Main subtitle
displays his information we there's a
Second subtitle
couple more things we have to do on the
profile like obviously we want this to
be like a follow button we only wanted
this be edit profile if we're looking at
our currently logged in user
so i'm logged in as valtteri botas i
would want to go to valerie botos and
have it say edit profile but if i went
to
like lewis hamilton
then i would want this to say follower
following so we have to implement some
logic there but other than that guys
that is looking absolutely amazing um i
did say that we were going to go back to
this
service class and clean this code up a
little bit
so i'm going to show you guys how to
make this a little cleaner we're going
to say let users equal
documents.compactmap
so this applies like a mapping
to the documents right returns an array
containing the non-null results of
calling the given transformation with
each element of this sequence so
basically it just allows us to shorten
up this for loop so we can add some
curly brackets there and we're going to
say dollar sign 0 data
as user dot self
and then i believe we have to mark this
with a try
and we can literally just delete all
this code and delete this code up at the




about:blank



    237/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
top and we could say completion
users which we already have right there
so go ahead and build that
and that should succeed so you guys
notice that we shorten this up to one
line of code so let me explain this
really quick this is what's known as a
higher order function in swift so it
allows us to pretty much just shorten up
like for loops and stuff like that so
basically guys what we want to do is
take data from this documents array and
map it or transform it into user objects
so we do so with this compact map we
have to use our try statement and then
this dollar sign zero just represents
each element in that documents array so
we can say dollar sign zero dot data as
user dot self and store that in this
users array and then execute our
completion handler so let's run this one
more time and see if our change or
refactor works there
and then after this we are going to get
into building a search functionality for
this guy so you guys can see this still
works beautifully
the only thing we have to do
is now add a search bar up at the top so
we can filter through our users and
that's going to be fun and exciting as
well guys so this is looking absolutely
awesome we're coming up on the point
where we're gonna uh sort of get into
the final
like um
what's it called pieces of the app where


about:blank

    238/3156/7/23, 1:25 AM    about:blank
Main subtitle
we're gonna be uploading a tweet and
Second subtitle
displaying them in this list here um so
it's really coming together guys like i
said next up is search then uploading
tweets and then some cleanup of the app
and it's gonna be a pretty sweet project
for you guys to have i hope you're
enjoying this so far guys make sure you
smash that like and subscribe button if
you haven't already and also check out
my other online courses that i have the
links are in the description as i'm sure
i've mentioned in this video already but
let's keep going
all right guys so let's hop back into
this explore view and figure out what we
got to do um first off swift ui does
have their own like custom search
implementation
but you have to do it with their list
component and i don't really like lists
uh for a number of reasons um so i do
like to keep this scroll view and lazy v
stack formation
so that comes at a cost we do have to
build our own custom search bar but it's
really not that hard um
so let's just go ahead and do that now
so we're going to hop into our
components folder
and we're going to create a swift ui
view
and it's going to be a
search bar we're going to call it yeah
we could just call it search bar
um
so we're gonna have a binding property




about:blank



    239/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
up at the top guys text string
and let's go ahead and get our preview
opened up just so we can sort of see
this coming together
um
and in the preview just go ahead and say
dot constant
and give it some open quotes
and let's go ahead and just resume on
that preview
should come up pretty soon uh missing
label uh text
just like that
so hit resume
now that our preview is good and let's
just go ahead and build out this search
bar
all right guys so it's going to be
an h stack
so we're going to create this h stack
here we're going to create a text field
oops
text field
we're going to add search as the
placeholder and our text
is going to be that binding text
property
and we're going to give it a padding of
8
another padding of dot horizontal
24 i'll explain that in a sec dot
background is
color open parenthesis dot system gray
six
right there
so let's see how this looks so far
so try again on the preview


about:blank

    240/3156/7/23, 1:25 AM    about:blank
Main subtitle
why are you yelling at me
Second subtitle
that's really oh why did i do that no
open brackets stefan you dummy
all right so that looks pretty good so
far now we just need to stick a
magnifying glass in there guys we're
actually going to do that with an
overlay so but before that give it a
corner radius of 8 and then we're going
to say dot overlay
and hit enter on that and we're going to
say h stack on the overlay
image system name
magnifying glass
dot foreground color
of dot gray
dot frame and we're going to say min
width
is 0
max width is dot infinity
and the alignment is dot leading okay so
you're going to notice that moves the
overlay all the way over to the
left which is really nice
and then we're going to give it a
padding of dot leading 8 and that's
going to move it just a tad over right
there
um and then on the whole thing guys on
this whole h stack
we're just going to give it a padding of
dot horizontal
four
right so that's our search bar right
there it looks pretty smooth
um to get a better look at it you could
say dot preview layout




about:blank



    241/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
dot size that fits
and that will shrink the preview down to
show you exactly what the search bar
looks like there so that is uh pretty
simple guys that was pretty quick and
easy now we're just going to go and add
this search bar into our uh
our explorer view here
so let's go back into our explore view
and in this v stack you guys can
literally just go here and above the
scroll view add a search bar it's going
to ask you for some text though so we
need to provide it with some text so
we're going to say state private var
search text
equals blank
and then pass in that text search text
and let's just give it some all around
padding
and go ahead and run this on our
simulator
to see how that's looking um shouldn't
really need the preview anymore so let
me just close that out
and let's see what this guy looks like
and then we can actually add the search
functionality which isn't going to be
that hard guys
um so we go here
and check that out boys and girls
um
so that looks great guys and now we just
want to be able to like type stuff into
the search bar
and
you know have it be able to filter


about:blank

    242/3156/7/23, 1:25 AM    about:blank
Main subtitle
through these users for us
Second subtitle
so
let's go ahead and get started on that
now
so basically what we want to do guys is
hop back into our view model
and we are going to want to filter this
user's array
based on
the user search text that they type in
so they type in some search text we want
to filter this array
to only return
users that where the username or the
full name contains that search text or
query so we're going to make a computed
property here we're going to call it
searchable users
it's going to be an array of users
but you guys notice here that we need
access to this search text so we're
actually going to place the search text
on the view model we're going to say
published var search text
equals a blank string
and we're going to go back to the
explorer view delete this state property
and for this guy uh delete that and say
dollar sign view model dot search text
okay so then we can now go back to the
view model and compute this searchable
user's property based on this search
text so we're just going to say if
search text dot is empty
and else
if it's empty we just want to return the
user's array if it's not we want to




about:blank



    243/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
filter it somehow
so really quickly guys we're going to
lower case the query we're going to say
let lowercase
query equal search text dot lowercase
then we're going to say return
users.filter and open up some curly
brackets
and let's say
zero
dot or dollar sign zero dot username dot
contains
oops dot contains
lowercase query
uh or
dollar sign dot zero dot full name dot
contains
lowercase query
so
now we should be able to build this and
it should work
and then we can just go back to our
explore view
and replace viewmodel.users with
viewmodel.searchable
users
and we go and let's run the code
and this should
work guys
if my calculations are correct
so let's see moment of truth baby
let's go i'm excited i'm excited
so we go here and i'm going to start
typing out
daniel oh check it out baby let's go
uh okay well hold on
that should


about:blank

    244/3156/7/23, 1:25 AM    about:blank
Main subtitle
it looks like our filtering lando norris
Second subtitle
okay so it looks like the filtering is a
little off but it's pretty good right
we see carlos and then let's say like
dot signs right
um oh okay so i see the problem
uh let's go back to the view model
and let's say full name dot lowercase
dot contains query so this is case
sensitive guys and you want to just make
sure everything is lower case so we're
lower casing everything in the query
just in case the user would go like
carlos signs you know or
lando norris
um
right so and you can see that there's
auto capitalization on the first letter
which could potentially return like
nothing
um and you guys notice when we delete
everything everything just goes back to
normal which is great um
but we also have to full lowercase the
full name so if i type in like daniel
space
um
let's go ahead and just run this and see
if it works that space shouldn't affect
anything
so let's see
it's like 95 percent there right
and if there's a bug we can always come
back to it and fix it towards the end so
i want to see
lando
norris okay yeah now it's working




about:blank



    245/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
awesome
so i can now say daniel re
yep it's working so if i if i type in
like an x okay yep so guys that is
looking absolutely phenomenal
and let's make sure that when we click
on one of those users it actually takes
us over to their profile that takes us
over to carlos signs that's great
so that looks absolutely awesome right
now guys you notice we can still access
our side menu from anywhere in the
application and you know do all these
good things like go to our profile log
our user out log our uh and go to the
login page so this is looking freaking
awesome man i'm really proud of this
hope you guys are too the next step is
gonna be probably the funnest part of
the app we saved the best for last where
we're gonna get into
uploading tweets to the database and
displaying them in our user feed that's
going to be absolutely amazing guys
let's go ahead and hop to the next
chapter and get started with that all
right guys so let's take a look at this
new tweet view that's what i have opened
up in my xcode project here so first
thing we need to do is actually get some
user information into this view right we
have to display the user's profile image
and then allow them to tweet so after
that we're going to go over how to
upload a tweet to the database and then
how to download that information from
the database and display it in our feed


about:blank

    246/3156/7/23, 1:25 AM    about:blank
Main subtitle
so
Second subtitle
we have two options for how to get the
user into this new tweet view guys we
could create an environment object
environment object var view model or we
could we should call it off viewmodel
is of type off viewmodel
and we could do it this way and then you
know say do like the if-let statement so
let's see where is that circle
so on this circle you could just go here
and say like
if let user equals
authviewmodel.currentuser
then we go up to the top
import
kingfisher and then replace this guy
with
kf image
and then it's url
string
user dot profile image url bam all right
then we say dot resizable dot scaled to
fill dot clips or clip shape
is a circle
just like that
so if you build that it should work
right
it looks good so let's actually just go
ahead and run this and see
what that looks like in our simulator
that should be our first thing
checked off the list there
the other option you guys would have
is to uh do what we did with the profile
where we
use a dependency injection right where




about:blank



    247/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
we don't um
we didn't access the off view model here
we just initialized this with a user so
like i said before guys i think either
way is fine it's really just personal
preference to you
so let's go ahead and go here and you
notice that that looks really good right
that's our user profile image showing up
there beautifully so now let's go over
what we need to do to actually upload a
tweet to the database
so
i want us to go and create a new service
class so this is going to be called
tweet service
so it's going to be a swift file
hit next
tweet service
and this is just going to be a struct
called tweet service
we need to import firebase up at the top
and we're going to have a function
called upload tweet
just like that
and we need to look at exactly what we
need to upload to the database for
our tweet right so what i mean by that
is what data are we going to be
uploading to the database
um and how is that going to look so
basically i want us to create a new
collection that's going to be called
tweets and then each tweet will be its
own document very similar to this uh how
this user's guide is structured and then
we're just gonna have the associated


about:blank

    248/3156/7/23, 1:25 AM    about:blank
Main subtitle
metadata of the tweet like
Second subtitle
um
the you the user id of the owner of the
tweet the tweet id here
uh the tweet caption
and when that tweet was made okay so
that's pretty simple
um so let's just go ahead and figure out
what we need in this function
so it should just be the caption of the
tweet right so that's something that we
need to grab from this view and pass to
this function when we want to upload it
so that should be it right there
so
we also just we need a couple more
things but we can grab them inside of
this file so we can say guard let uid
equals auth.auth.currentuser.uid
else return so this is just going to get
the current user id because we need
information about who uploaded the tweet
right because if you guys look at tweets
it has information about the user that
uploaded it so we're going to use this
user id to eventually grab that user
data for our tweet
so then we're going to create this data
dictionary we're going to say let data
equal
and it's going to be a dictionary so
it's going to be uid and it's just going
to be uid just like that
and then we're going to have the caption
and it's going to be caption just like
that
then we're going to um




about:blank



    249/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
have a likes property as well that's
going to be it's going to default to
zero obviously
and then we are going to have uh the
timestamp
just like this of the tweet
and that's going to be this timestamp
object that we get from firebase
and we just pass in the date so that
will give us the exact moment that the
tweet was uploaded so that we can
display how long ago that tweet was
uploaded
okay
so let me just clean this up a little
bit guys i'm pretty sure that's all we
need
and let's go ahead and build that
and we need to cast this as a string any
dictionary like this because we have
different data types as our values
um
so that should be fine
now yeah okay now we just have to upload
this guy
so
we're going to say let
we could just say
firestore.firestore.collection
tweets
dot document
and we're actually just going to auto
generate a document guys so we just say
document
and then we can say dot
set data
with a completion here


about:blank

    250/3156/7/23, 1:25 AM    about:blank
Main subtitle
let me actually get that document guy
Second subtitle
up there
and then we'll do the set data on a new
line
just like this so now it's going to ask
us for the data we want to upload
and then we have some completion
right so for now we can just add a print
statement that says like hey
did upload tweet
and when we get this print statement we
know that we'll have successfully
uploaded our tweet and we're actually
going to end up doing something here
a little bit later on guys so for now
let's just go ahead and figure out where
we want to implement this guy so
in our new tweet view
we want it to be so that when we hit
that upload tweet button right this guy
right here we upload our tweet
so we actually need to create a view
model for this guy
to uh
put that sort of logic in there so we're
gonna create a file in the view model
folder we're going to call it upload
tweet
view model
and i'm going to say class upload tweet
view model
it's going to be observable object
and then we're just going to have um
our function here called upload tweet
we're going to initialize our service
we're going to say let service equal
tweet service




about:blank



    251/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and
uh
we could say with caption caption string
because we do need that caption data
then we're just gonna say service dot
upload tweet
and we're gonna pass in the caption
so that looks pretty good now we can
just hop back to this new tweet view
and
we can initialize our view model so
we're going to say at observed object
var viewmodel
equals
upload tweet view model
and then right down here guys we're just
gonna go and say view model dot upload
tweet with caption and we are gonna pass
in the caption because we have access to
that inside of our new tweet view so
that's pretty smooth
let's go ahead and run this and see if
it actually uploads that information to
our database properly
and there's a little bit more work we
have to do there
and i'm also gonna give you guys some
more breakdown
of why
we use an extra service class there's a
couple reasons and i'm gonna give you
some pros and cons
and we're gonna like tie that back into
our user service class as well
so let's see we go here
what's happening
uh first test tweet right so then we say


about:blank

    252/3156/7/23, 1:25 AM    about:blank
Main subtitle
tweet and bam it uploaded that looks
Second subtitle
great so let's go back here whoa
oh okay that's weird
um and let's see we refresh our page
and guys we can now see some tweets and
we see this tweet id it has our caption
our number of likes
um the timestamp and the owner of the
user that uploaded it so let's go ahead
and just double check that this is right
i'm logged in as val terry botas this
was the uid and we can see that this
provides us with all of valtteri
bottas's information so that looks great
right but
we do have some issues here first off
once that tweet has finished uploading
we want to dismiss that view right so
let's go over how we want to do that
so we could go back to our tweet service
and we could add a completion parameter
here
so we could just say completion at
escaping
parentheses
arrow void and put a boolean variable in
here
and guys we could handle the error in
this case because uploading a tweet
is uh something where if it fails you do
want to let the user know so let's go
ahead and and see what this is going to
look like we're going to say if let
error equals error we're just going to
say completion
false
and we're going to print debug failed to




about:blank



    253/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
upload tweet with
error error dot localized description
and then we return
okay and then
we can say uh
else basically just completion true
right so if the completion is true we
know we successfully uploaded it if it's
false we know that we failed so now if
we build our project you guys are going
to notice we get an error because we
have to implement this completion
handler so this is actually this is
going to be pretty sweet what we're
going to do here guys so basically we
want to dismiss this screen once the
tweet has uploaded right
so let's
uh figure out how we're going to do that
so first of all let's recall this
function
upload tweet
we pass in the caption
and now we have our um
what's it called completion handler and
we can just say success and then here we
can say if success
and else right so
here we want to say dismiss
screen
somehow right but we're inside of the
view model so it's like okay well how
the hell are we going to do that
right
and here we want to maybe like show
error message to user
okay


about:blank

    254/3156/7/23, 1:25 AM    about:blank
Main subtitle
so
Second subtitle
basically guys we want to have some
published property
um inside of our view model that's going
to allow us to you know set that somehow
and once that changes we could then
go back to our new tweet view and
execute this uh
wrapped value.dismiss guy
so
let's go ahead and add a publish
property we're going to say at published
var
uh did upload tweet
and it's gonna be false and then here we
if we're successful we just say self dot
did upload tweet equals true
and here we're not going to really
handle the error guys that
is going to be left in like the
completed source code of the project
right now i just want to get this
functionality down
so now that we've done that we have to
go back to our new tweet view to
actually figure out how we can listen
for changes
on that um
did upload tweet
uh
published property okay so let's figure
out how we're going to do that so we're
going to double click on that v stack
bracket guys the like the
parent v stack and we're going to go all
the way down to the bottom here and
we're going to use this dot on receive




about:blank



    255/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
function so
this adds an action to perform when this
view detects data by emitted by the
given publisher right so that's exactly
what we want
we're going to publish that
did upload tweet property to true and
then this is where we're going to
receive that notification and be able to
execute some code so we're going to say
on receive
we're going to say view model
dot dollar signed did upload tweet and
then this is where we're going to
perform something and we get access to
the publisher's output in this case it's
a boolean so we're going to go here and
say success and then we're going to say
if success
presentation mode dot wrapped value dot
dismiss
so
this is where we get access to that uh
property like the actual output of the
publisher and we want to make sure it's
true before we actually dismiss the uh
that sheet or that view because if we
dismiss it when it's false that's not
what we want to do right if it's false
we would ideally display some error
message to the user and we could also
have that logic in here
so let's just go and make another tweet
we're gonna say test tweet to see if
this dismisses the view
and then we're gonna hit tweet and bam
look at that guys it dismisses it and we


about:blank

    256/3156/7/23, 1:25 AM    about:blank
Main subtitle
can go back to
Second subtitle
our tweets uh
collection
and this is the tweet that i just made
right
if you guys can't see that let me just
zoom in on it
test tweet to see if this dismisses the
view so that is absolutely perfect
that's dismissing our tweet our new
tweet view as expected now all that's
left to do is actually fetch these
tweets okay so the first thing we gotta
do to in order to get that done is go
back into our tweet service and write a
fetch tweets function so we're gonna go
here and say funk
fetch tweets
and we're gonna go back into this tweets
collection right here
and then we're gonna say dot get
documents
so we're going to say snapshot
not worried about the error and now
let's just go and say guard let
documents
equal
snapshot.documents else return
and let's just go ahead and say
documents
dot for each doc
let's say print doc dot data
and guys we're printing out all these
users here we don't want to do that
anymore
so let's go back to the user service and
just uh




about:blank



    257/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
where are we printing that guy out oh
that should be in our um
explore view model
so let's see explore
view model
and yeah that's where we're printing out
the user so we don't want to do that
so now we just need to go
and
call this fetch tweets function
using this tweet service okay so let's
figure out where we want to do that
um so we want that in our feed
i don't believe we have a feed view
model yet
so let's see yeah we don't so let's go
ahead and create that now
swift file
feed view model
and it's the same exact principles guys
we're going to create a class called
feed view model
it's going to be an observable object
we're going to initialize it
and when we initialize it we're going to
call this funk fetch tweets
we need access to our service we're
going to say let service equal tweet
service
and we're going to say service dot fetch
tweets
and then call our fetch tweets function
right here
so now guys we need to create this view
model inside of our feed view so we're
gonna say at observed objects
var view model


about:blank

    258/3156/7/23, 1:25 AM    about:blank
Main subtitle
is equal to our feed view model
Second subtitle
and we're going to go ahead and run this
i remove that navigation title i don't
think we need that down there
um but anyway guys yeah just go ahead
and run this and we should notice that
we get a print statement back showing us
those two tweets that we've created
and then all that's left to do is create
our data model
let's see
right so here they are let's go
um guys they should be down at the
bottom of your console i see my caption
that says first test tweet
and then i see my caption that says test
tweet to see if this dismisses the view
awesome
so
um very similar to what we did with our
user object guys we need to create a
tweet object so that we can map this
into some sort of object in our code map
all that data to an object so that we
can ultimately display them in this list
very similar to what we did
with our explore view so let's see
explore view we have this list or lazy v
stack whatever and we loop through
some array of data in this case it was
users in this case for the feed it's
just going to be tweets right
but we need that tweet object so let's
go ahead and create it now
so we are going to say new swift file
we're going to say it's a tweet
and we're going to create first of all




about:blank



    259/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
guys go ahead and import firebase
firestore swift we're going to create a
struct which is a tweet
it's going to be identifiable and
decodable
we're going to have a caption which is a
string we're going to have a timestamp
which is a timestamp
just like that
um then we're also going to have a uid
which is a string
and this user id is different than the
id guys the uid is the author of the
tweet that's their user id
so we need this document id bar
string which is optional
and i think we need to import firebase
to get access to that timestamp property
so let's see let's run that again
and those errors should go away
and let's see and then we also have this
likes property guys so we need to do
that as well
so we're going to say var likes is zero
excuse me the reason likes is a variable
guys and the rest of these things are
constants is because the likes can
change obviously right
oh this actually needs to be an integer
so
that looks pretty good for now
um we're going to work later on how to
get the actual user information so
actually let's just go ahead and add one
more property
it's going to be an optional user okay
and i'll explain this in a little bit


about:blank

    260/3156/7/23, 1:25 AM    about:blank
Main subtitle
and don't worry guys i haven't forgotten
Second subtitle
about explaining the purpose of these
service classes either those
explanations are coming
so really quickly let's go back into our
tweet service
and now we want to map this information
we're getting back
into a tweets array so first things
first let's add our completion of at
escaping
void and it's going to be an array of
the tweet object we just created
and then
we can just remove this docs dot for
each guy and use that nice fancy compact
map we used before so we're going to say
let tweets equal documents dot compact
map
then we'll say dollar sign zero dot data
as
tweet dot self
and then we out we can't forget to mark
that with a try
and then we're gonna say completion
tweets
now if we run our project
we're gonna notice we get an error and
that's going to be back in our view
model
because we need to
have this
recall this function so that it has the
tweets in the completion
and we also need guys a publish property
up at the top
so when this guy changes we can have




about:blank



    261/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
that take effect in our actual tweet
or our feed right so now we go here and
say self.tweets equals tweets
go ahead and hit command b
and
that should be good to go now all we
have to do is go back to our feed view
and
remove this sort of static
loop of 0 to 20 and say view model dot
tweets
and then we'll go tweet in
and in this tweet row view let's just go
ahead and do this now
we're going to hop into that to do that
guys i just hold down command and click
and then it says jump to definition
we need to initialize this with a tweet
i know i'm moving kind of quickly now
guys but it's because we've done this
stuff before and we're coming up on like
six hours of video time so i'm trying to
get this done a little bit faster um but
it should be nothing new at this point
right so now
we can't do anything with this circle
image yet because we don't have the user
data we haven't fetched that yet we need
to do that in a little bit
um
but we do okay so we can't do this
either but we can change the tweet
caption
so we can go here and say tweet.caption
and that looks pretty good um so let's
just go ahead and run this and see if
that is showing us with the actual tweet


about:blank

    262/3156/7/23, 1:25 AM    about:blank
Main subtitle
caption that we have and then we're
Second subtitle
gonna go over how to get the user data
um okay so we don't need this preview
anymore
go back to your feed view we can delete
this id backslash dot self
and then here we need to pass in the
tweet
to the tweet row view
and let's run that oh we got one more
error
var tweets view um okay
oh so this is happening in our um
profile view so let's fix this fix this
as well
uh actually guys let's just go ahead and
comment this out for now
we're going to go over how to fix that
in a little bit i want i really want to
get this stuff working in the feed
so we can move on to sort of finishing
the app up and adding in all these nice
little extra touches
oh look at that baby let's go
so we have first test tweet and this is
the second tweet that we have so now
guys all we need to do
is focus on how we're going to get this
user data for these tweets so let's
figure out how we're going to do that so
that we can actually display the correct
user information there
then we are going to go over how to
display the user's tweets in their
profile view so we'll be able to go to
like a user profile
and i'll be able to see carlos sanz's




about:blank



    263/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
tweets and i'll be able to see valtteri
bottas's tweets and all that good stuff
so this is really coming close to coming
together guys get excited let's go ahead
and figure out this next step
okay guys so basically what we need to
do is hop back into this feed view model
and we're going to reuse one of our user
service functions where we can fetch a
user using a uid
to get the tweet user information so you
guys remember we have access to the uid
of the user that owns a tweet the tweet
so this serves as a pointer to the user
id we need to go to in our user
structure to fetch that user data and
then essentially set that optional user
property on the tweet
so let's figure out how we're going to
do it so go back to your feed view model
and here we can say tweets.4 each tweet
and we're going to say let uid equal
tweet.uid
then we can go here and we can create a
user service
and we can say user service dot fetch
user with uid uid
and now we have access to the user from
this function so we can see how nice it
is to have a reusable function like this
right so we don't have to have that code
in multiple places this is
one of the main reasons we create a
separate service class for these
functions because if we just stuck all
this code into a view model we wouldn't
be able to reuse it we have to have it


about:blank

    264/3156/7/23, 1:25 AM    about:blank
Main subtitle
in a
Second subtitle
sort of central location that allows us
to reuse these functions so that's a
prime example of why we create separate
service classes guys it's for
reusability
so um we actually need access to the
index of the tweet that we're looking at
guys so imagine we have an array of
tweets right so let me just add a
comment here we have like tweet one
tweet two
tweet three tweet four
okay so each one of these tweets has a
user property that we need to set on it
so we're gonna loop through each one
we're gonna get the uid property
associated with that tweet and then
we're going to fetch the user but now we
need to be able to say hey tweet1 dot
user equals user well we the only way
for us to do that is to have access to
the index so we're going to write this
for loop a little differently we're
going to say 4i
in
xero
up to tweets.count
we're going to say
let
tweet or let uid
equal tweets
i dot uid
and then we're going to copy and paste
this guy
and now
we have for this particular iteration




about:blank



    265/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
we're going to say
tweets
i dot user
equals user
so now whenever it sets that property
because this is a published variable
it's going to republish that
ooh tweets is a let constant what are
you talking about
this is a var
oh we need to say self.tweets
build
that right
okay so it was confusing these two guys
uh
the tweets and the completion and the
self.tweet so it's very important to
distinguish between those two things
so
now guys when this fetch tweets
functions runs it goes and gets all of
our tweets and displays the tweet data
and then sort of as a separate process
goes and gets the user information sets
the user property on the tweet object
and then displays will be able to
display the user information but we got
to go back to that tweet row view so
let's open that up tweet row view
and we need to go and now we can replace
some of this stuff with actual user
information
so
on this h stack guys we could just go
and cut
all this code out
or let's see


about:blank

    266/3156/7/23, 1:25 AM    about:blank
Main subtitle
yeah so we could actually just cut this
Second subtitle
uh
this h stack
and say like if let user equals tweet
dot user
paste it in there now we can do this we
can say hey text is uh
user dot full name
and this guy is going to be
user.username
and we're going to worry about that
timestamp in a little bit right now the
most important part is actually
displaying the user information on the
tweet and to see if our code is actually
working
oh snap and then we got to do the
profile image as well but we'll do that
in just a second
um by this point you guys should know
how to do that by now we've done it
quite a few times but we're gonna go
over it anyway
oh look at that boys and girls
so we noticed that we see valtteri
bottas his full name and his username
and the caption so now all we need to do
is get this profile image figured out
and that's going to be pretty easy so
actually guys
uh
we put this in the wrong spot
so let's just go ahead and cut this h
stack information back
and uh put it back on its own we need to
wrap the we need to place the if let
inside of like or higher up in the code




about:blank



    267/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
so
let's see where do we want to place it
we have this h stack right so we want to
do it on this whole h stack right here
and i don't think there's any more user
information that we need to have right
so that's fine so let's go ahead and
where it says profile image plus user
info plus tweet let's just go ahead and
cut this whole thing out and then wrap
that in an iflat user equals tweet dot
user
and then paste that in there and now we
go up to the top we import kingfisher
and we say kf image
um what's it called
url right string user.profile image url
bam
and now we can remove this foreground
color we don't want that then we'll say
dot clip shape
circle
we need to make it dot resizable
and we have this frame
let's put that right there oops
and we also need to make it dot scaled
to fill
cool
all right so let's now go ahead and see
if this works guys
and it should if we did everything
correctly
and
that will have our app looking pretty
darn good right
moment of truth
let's go


about:blank

    268/3156/7/23, 1:25 AM    about:blank
Main subtitle
let's go baby
Second subtitle
all right we got our tweets showing up
looking really really good guys what you
should do is actually sign in as a
couple different users and
tweet uh make a couple different tweets
from some different accounts so that
this tweet will actually sorry this feed
will actually look like a real-life
twitter feed with information coming
from different users so that's looking
awesome the next step or piece of the
puzzle
is to be able to go to the user's
profile and actually see tweets that are
unique to them okay and then we're also
gonna fix some other stuff in this
profile with like this edit profile
button and all that good stuff so get
excited guys we are almost done i'm
super proud of how far you guys have
come i hope you're learning a lot and
that you're really loving this course
and there's a lot more stuff like this
to come but let's get this finished up
before i start talking too much
all right guys so i actually uh off
camera uploaded some tweets from some
different accounts i think you guys
should do the same
so the app is looking really really
great right now but there are a couple
things i want to take care of before we
go back into the profile view so we do
notice that the tweets are not in the
correct order so this was the most
recent tweet that i made but it's all




about:blank



    269/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
the way at the bottom of the feed so
we're going to want to sort our tweets
by the most recent okay so we're going
to go back to our tweet service and
luckily we can handle this sort on
the back end or server side so
in this fetch tweets function
let's go ahead and just uh indent that
line right there and then we could say
dot order by
field and then we're gonna use this
descending property so by field and
descending we're gonna say timestamp
descending is i believe it's false
um and let's just go ahead and highlight
this hit command or sorry control i
just to indent everything properly
and let's go ahead and run this and see
if that fixes our problem if not we'll
just change this value to true i can't
remember which one it is
um
and then after that guys there is one
other thing i want to do that uh is
involved with the scrolling of the feed
it's a very simple fix so
that is not right so let's actually make
this descending is true
run that again
and you guys notice that we do get a
little bit of like a flicker on the
tweets
before they come into view
that's because we're fetching the tweets
first
and then the user information but i
think it's fine


about:blank

    270/3156/7/23, 1:25 AM    about:blank
Main subtitle
um okay guys so that looks pretty good
Second subtitle
right
um
now we have the most recent tweets on
the top and we didn't have to do any
sorting on the client side which is
really nice like we didn't have to sort
this array we told firestore to sort the
stuff for us which uh takes
more str which uh like removes stress
from the client side or doesn't add
unnecessary load or computation to the
client side which is what we want right
typically anytime you can put some load
or complex tasks on the back end that's
what you should do because on the client
side you want to preserve things like
battery life and limit the data usage
and stuff like that so that's looking
really good guys um i don't know if this
is what you guys app looks like but you
should have it so that like as you
scroll you can sort of see the
navigation bar get grayed out a little
bit so if that's not what yours is
looking like um i think to fix it all
you have to do is go on to this feed
view and then you can say dot navigation
bar
display mode and say dot inline
and that should fix the problem
because if if the navigation bar stays
translucent it kind of looks messy and
doesn't look super clean so those are
just some quick fixes that i wanted to
get done before we moved on to fetching
user profile tweets right so you guys




about:blank



    271/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
noticed that that looks really clean
and this app is seriously coming
together guys it's almost done
so now i want us to go to the profile
and figure out how to fetch tweets that
this user has made right so our feed is
just a collection of uh tweets from
multiple users obviously when you go to
a user's profile you want to be able to
see the tweets that they have made
uniquely so let's figure out how to do
that so we're gonna hop back into our
tweet service
and
we're gonna create another function here
called fetch
tweets
for uid
and that's going to be a string
and it's going to be really similar to
this
guy right here
so we're we can pretty much copy and
paste this
and we're just going to add something to
the query guys um so once again this is
going to have a completion of at
escaping you know
pretty much just copy this guy
bam
all right we just add another
parameter to our query
unfortunately
firestore is limited in this way you
can't order by one field
and then do another filter um that we're
going to do here so we actually have to


about:blank

    272/3156/7/23, 1:25 AM    about:blank
Main subtitle
delete this order by and then we're
Second subtitle
going to say
dot where field
is equal to so just start typing out
like where
field
is equal to there we go so we're gonna
say where field uid is equal to
um
the
let's see
um we need the current user id or the
yeah so i accidentally deleted that
parameter so we're going to say 4 uid
uid which is a string and then we pass
that into here so basically what this is
going to do guys is it's going to go
into the firestore collection of tweets
and it's only going to get us tweets
where
this uid field
right let's see this uid field is equal
to the user that we want to fetch tweets
for so like let's say i go to daniel
ricardo
um
he's gonna have his own set of tweets
that like where the uid is equal to his
uid firestore will filter all that data
for us and only give us back daniel
ricardo's tweets so that is absolutely
amazing and it makes our life a lot
easier and once again puts that stress
on the back end instead of the client
side which is what we want
but the downside to this is like i said
guys you can't do where field is equal




about:blank



    273/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
to and an order by on the timestamp so
we have to sort those ourselves but
luckily that's not too bad
so
we're going to say
actually go ahead and make this a var
and we're going to say completion tweets
dot sorted by
uh and we're going to go here and say
dollarsign0.timestamp.date
is
greater than
dollarsign1.timestamp.datevalue
so the sort is pretty simple and it
doesn't cost us a lot and unfortunately
it's just something we have to do here
so now let's go ahead and figure out
where we're going to call this
fetchtweets4uid function
and it's going to be back in our profile
view model
so we don't actually have a profile view
model
so we're going to create one
profile view model
and guys actually go back to that file
we didn't actually mutate this
so we can actually just keep it as a let
constant but anyway go back to your
profile view model now we're going to
say class profile
view model
observable objects
we're going to say at published var
tweets
is equal to an array of tweets we're
gonna say let service equal


about:blank

    274/3156/7/23, 1:25 AM    about:blank
Main subtitle
tweet service
Second subtitle
let user service
equal user oh no we don't need the user
service actually
uh we might um
we'll see no actually we don't that's
awesome we'll figure that out in a
second
so let's see we have the tweet service
when we initialize this guy we want to
fetch those user tweets so we're going
to say
funk
fetch user tweets
we're going to say service dot fetch
tweets for uid and we need access to the
user id so we're actually going to
initialize this profile view model with
the user id guys we're going to say init
we can actually just initialize it with
the user
and we're going to go up here and say
private let user be a user we can
actually make this service
private as well
and we're going to go here say self.user
equals user
and then we're going to say self.fetch
user tweets
so now we'll pass in our user id we'll
say user.uid
or a dot id
sorry and it's optional so let's just
give it a default value or we could say
guard let uid equal user.id
else return
and just pass in this uid




about:blank



    275/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and now we get back our array of tweets
and we can say self.tweets equals tweets
so
that's pretty freaking smooth um i am
going to oh let's delete that in it i'm
going to explain this in more detail
once we see it working guys so we're
going to get some errors
um
namely oh no we have it we actually
haven't initialized this profile view
model anywhere so let's go back to our
profile view and initialize this bad boy
so i'm going to go up to the top and i'm
going to say at observed
object bar view model
equals profile view model just like that
and
here we don't really
need the user anymore because we can
access it through the profile view model
and you guys will notice that this gives
us an error because we need to pass in a
user to it so this is actually how we
have to do that we just cast it just
like this as a profile view model then
we can say self dot view model equals
profile view model
and pass in that user and let's actually
just go ahead and delete this user
and that's going to throw some errors
and we can just replace user with view
model dot user
build again
oh so we actually need to make this user
a public property that's my bad
boom


about:blank

    276/3156/7/23, 1:25 AM    about:blank
Main subtitle
the service remains private because this
Second subtitle
is the only class we're going to access
that service through
so we build and here we just say view
model dot user dot that and view model
dot user dot full name
and that should be good guys
so
now that we've sort of
introduced that functionality
here's the last piece of the puzzle
so now we can go here and replace this
for each zero to nine with view model
dot tweets
use this tweet in
and now we create our tweet row view and
we have a tweet to pass into it
and this is our tweets view property all
the way down at the bottom below your
tweet filter bar
so
guys
i really think
that is going to work
and as promised
i'm going to give a full breakdown of
everything we just did
because i know we went through it kind
of quickly um even though i think i did
a pretty good job explaining it i'm
going to go over it one more time just
in case you guys are a little lost
well let's go ahead and see if this is
working all right so i'm going to go to
my profile
and check that out so
we're getting back lewis hamilton's




about:blank



    277/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
tweets right but we still need to fetch
the user data for those tweets
luckily we already have access to the
user from the profile so we know all of
these tweets are going to belong to
lewis hamilton so we have that user on
the view model already
so if we go back to our profile view
model
we can say
um
tweets
or let's see
we gotta loop through the tweets
and set the user property so we'll say
self or
dot tweets dot for each
tweet
tweet uh
um or actually guys we need to use we
need to do the four in loop so we're
gonna say four i in 0
up to tweets
we're going to say self dot tweets i dot
user
equals user
xerotweets.com there we go
uh it should equal self.user
yup
okay so that should be good to go
and now that the user data is all there
it's going to set that information up
for us nicely
but we do know this is working um
because we know that we made two tweets
with lewis hamilton
and there were two items showing up


about:blank

    278/3156/7/23, 1:25 AM    about:blank
Main subtitle
there so let's go back to his profile
Second subtitle
and bam look at that only lewis
hamilton's tweets are showing up and
let's go and check out some other guys
so i made some tweets from carlos sanz
forza ferrari bam that's looking awesome
and i made some tweets with valtteri
bosata's account yep
so that's looking absolutely amazing
guys amazing right
we are fetching tweets unique to users
um and then displaying them in their
profile and then in the feed we have a
list of tweets from everyone that's
absolutely amazing so as promised before
we move on i'm going to do a quick
breakdown of that feature
so i think you guys might be really
starting to see the beauty
of having these service classes separate
because
we have to do um
you know
things with these service classes in
multiple places in the app right like
fetching tweets or up maybe you want to
upload a tweet from a different place in
the app mainly uh the user service as
well right we want to be able to fetch
user information in multiple places in
the application so these service classes
give us reusable code where we can you
know
reuse these functions in multiple places
across the app instead of copy and
pasting the same exact code in multiple
places that's a




about:blank



    279/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
huge principle of programming don't
repeat yourself the dry principle but
anyway
um so in this tweet service we wrote a
function to fetch tweets for a
particular user id
and then we get back um a completion
handler of the tweets that belong to
that user so
we wrote a query to filter our tweets
where that field uid is equal to the
user id that we pass in in this function
so when i go to lewis hamilton's page
the the user id that i pass into this
function is lewis hamilton's user id it
goes and gets me all of the tweets that
belong to him and gives them back to me
and once again that filtering is
happening on the back end not on the
client side imagine
that i went and fetched all the tweets
that exist in the app and then
filtered down
to
to just get back two of lewis hamilton's
tweets out of potentially millions or
billions or trillions of tweets right
that would be extremely inefficient to
do on the client side and extremely
unnecessary so it's really awesome that
we can do this server side okay guys a
little bit of back-end engineering for
you guys
um
and then we just get the documents we
map them and then we sort the tweets
here once again we have to do that


about:blank

    280/3156/7/23, 1:25 AM    about:blank
Main subtitle
client-side because firestore does not
Second subtitle
give us the capability to do this where
field is equal to and order by timestamp
all in a single query kind of annoying
but it is what it is firestore is great
so i'm not complaining
so then we create a profile view model
guys and we did something a little
tricky here we initialized it with a
user
and that's because this view model needs
to know something about the user that we
are fetching data for right so we need
to be able to get access
to the user id of whose profile we're
looking at so when i go to my current
user's profile this is the current user
id
and we could get that uh another way but
what happens when i go to you know
someone else's profile
i have i'm passing a user into this
profile and then i'm passing that user
into this view model as well
and um
then i can get access to the user id
that i need to call this service fetch
tweets for uid right then we get the
tweets back and we know that this is
like another like efficiency improvement
we don't have to go and fetch the user
for these tweets right because we know
that we already have that data so we
don't actually have to go and fetch that
user for these tweets we can just say
hey the user for the tweet is equal to
self.user so that's just a quick




about:blank



    281/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
explanation of what we just did guys
there's a couple more things i want to
wrap up on the profile like we got to
fix this edit profile follow button
and other than that this has really come
together nicely um i am gonna show you
guys how to like tweets as well and then
we're gonna go over how to uh
display the users liked tweets in the
profile as well as a nice little bonus
feature for you guys um if you guys want
the rest of this stuff like how to
implement notifications and messages
like direct messaging and stuff and some
other really cool features just go to my
website as i'm sure i've mentioned the
link is in the description and you guys
will see how to get access to that
source code with all of the completed
features so let's keep going guys we're
almost done couple more features and
then we're going to wrap this up and but
it looks really great so far and i'm
really happy with what we got so let's
keep going
so let's talk about what's going to
happen when we want to like a tweet what
we have to do
so we want to click this button have
some process happen and then we want to
update the ui to show that this tweet
has been liked and then we want this
heart to be filled in with a red color
so we also want it to be
such that if we were to close the app
out like say imagine i just closed the
app and relaunched it that if i liked


about:blank

    282/3156/7/23, 1:25 AM    about:blank
Main subtitle
this tweet i would want that data to
Second subtitle
persist and i would want the app to load
with this tweet already liked right and
that's going to be unique to specific
users right so for example if i log in
as lewis hamilton and i like carlos
signs his tweet
when i close out the app and i'm still
logged in as lewis hamilton i want to
show that i've liked the tweet but if i
were to log in as a different user that
hasn't liked the tweet obviously we
don't want to show that they've liked
that tweet so we're gonna be uploading
some information to the database here so
i want us to hop into our tweet service
guys and we're gonna write a function
for us to like a tweet
and
before we go into what we have to do i
always like to just add a print
statement
like tweet here
and let's figure out where exactly we
want to call this function so this like
button if you guys remember exists in
that tweet row view file
so we just go to core i believe we go to
components and then tweets and we have
tweet row view right and we go down here
and we have all of our buttons right
here and this is the like button so we
can see that we left a comment that says
action goes here so this is where we're
going to want to call our function
but it's like how do we actually get
access to that like tweet function right




about:blank



    283/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
this is inside of a service class
you don't want to initialize a service
class inside of your inside of a view
you want to do that inside of a view
model so in this components folder guys
we're going to go ahead and create a new
folder two new
folders we're going to say view model
and name this guy views
and we're going to place that
tweet row view into the view
folder and then we're going to create a
view model here
so this is going to be a swift file
and we're going to call it tweet row
view model
and this is just like any other view
model it's going to be we're going to
name it tweet row view model
it's going to be an observable object
and let's go ahead and initialize this
service so we're going to say private
let service equal tweet service
and then we'll have a function called
like tweet
and we'll say service dot like tweet
and now we can initialize this view
model back in our view
so that we can call that function and
what we're actually gonna do guys is
replace
this uh
initializer here
uh with a tweet with an action with the
view model so we're actually gonna say
let view model
tweet row view model


about:blank

    284/3156/7/23, 1:25 AM    about:blank
Main subtitle
and we're gonna initialize this guy with
Second subtitle
a tweet
and then we're going to say
self.viewmodel equals tweet row
viewmodel
and we're going to pass in this tweet
here and we actually need to make that
initializer in our tweet
row viewmodel
so we're going to go here and say init
tweet
tweet
and then we can go here and say
let tweets
tweet
and self dot tweet equals tweet and guys
this helps us sort of stay consistent
with this mvvm architecture
um let me put this below the tweet
so
technically you're supposed to
initialize your model inside of the view
model and then initialize the view with
your view model and use the view model
to configure the view that's like
standard mvvm architecture
oops
tweet there we go
um so now everywhere we that we were
using just the tweet we can just say
viewmodel.tweet.user
uh
view
model.tweet.caption
and that should be good to go
and just to clarify guys there is like
it's okay to initialize your view with




about:blank



    285/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
like your model
um you don't always have to create a
view model if it's just adding
unnecessary complexity like sometimes
the view model just adds an unnecessary
layer
of uh of like communication between
views and models
but in this case we do sort of need this
view model because we are going to be
making api calls from this view
so and that's why we're uh introducing
this view model here
and nothing really changes that much
right so now
we you guys will notice that we have
access to our view model here we can say
view model dot like tweet
which is awesome
so now let's actually go ahead and run
this code guys
and see if that we're getting that print
statement back
so if you guys remember in our tweet
service it just says like tweet here and
then we'll go over what we actually need
to do to upload this information from
the database and update our ui once the
tweet has actually been liked
so i click this and you guys are seeing
that we have this uh sorry my toolbar's
in the way here guys let me see if i can
get that out of the way i can't but you
guys should be seeing that print
statement show up in your console so
that's looking really good all right now
let's go over what we actually want to


about:blank

    286/3156/7/23, 1:25 AM    about:blank
Main subtitle
do to get this information in the
Second subtitle
database
so guys what we're going to do
is we want to keep track of what users
have liked what tweets right so that'll
make more sense in a little bit but
essentially imagine we go to the profile
and we want to fetch all the tweets that
a user has liked that's what this like
section is going to be for so on our
users guy we're going to have another
collection so the awesome part about
firestore is that you can have sub
collections on documents so basically we
would create a sub collection here
that's going to be called like user
likes and then we'll just store all of
the tweet ids that that user has liked
and that's going to help us do a couple
things which we'll see here in a little
bit
so let's just delete this line of code
um we're going to need our current uid
so guard let uid equal off the
auth.currentuser.uid else return
and this is because we need to obviously
you know store this in the currently
used logged in users
liked tweets
right you wouldn't want to
like a tweet and then not use the
current user id for who liked that tweet
so then we're gonna say
let
let's just create a reference here user
likes ref equal
firestore.firestore.collection




about:blank



    287/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
users.document
uid dot collection user dash likes so
you guys notice this is a pretty lengthy
uh sort of query
um
huh
it's weird that it's
like indents it weirdly we i mean you
can kind of leave that on one line
doesn't matter
all right now we're going to say uh
and then oh also guys i forgot
we also have on this tweets guy we have
to keep track of the number of likes so
we're going to have to go there update
the like count and then
um we are going to have to go into the
users list and update the the user's
list of like to tweets so a couple
things we got to do so now we're going
to say firestore dot firestore
dot collection
tweets
and you guys are going to notice that we
need the tweet id of the tweet that's
been liked right so in my database i
have to know which tweet to go to to
update the light count so what we're
going to do is add an input parameter
here like tweet
which is a tweet
and then we can go here and say dot
collection or sorry dot document
tweet.id just like that so that's
awesome and then we can say
dot
update data with a completion handler


about:blank

    288/3156/7/23, 1:25 AM    about:blank
Main subtitle
and we're just going to say
Second subtitle
likes
and then we're going to say tweet
dot likes plus one
so let's imagine the tweet likes was
like five it's going to go into the
structure
and this is uh
just give that a default value guys but
it should always be there
if you want we can say guard let tweet
id equal tweet id else return just to be
super safe
and then we could replace this with
tweet id
anyway we're just gonna go into that
structure and update the like so this is
going to go into the tweet id it's going
to find the likes guy and it's going to
increment it by 1.
so now we can just hit enter on this
completion block and then within this
completion we can update our user likes
reference so we can just go here guys
and say user likes ref
dot document
tweet id
dot set data
and this is a little tricky
so we're going to use a completion we're
actually just going to set it with a
blank dictionary and i'll show you guys
why in a little bit but on this
completion
we're going to just go ahead and say
print
debug




about:blank



    289/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
did like tweet
and now we should update ui okay so like
once the tweet has been liked and we
know that all of the back end processes
have completed then we can update our ui
and we're going to see this print
statement show up when all that is done
and we're going to update our model
object here
in order to make that happen but for now
i just want to see if this is uh if our
backend functionality is working and i'm
going to explain it to you guys in a
little bit more detail so that
it makes more sense so we're going to
get an error guys and that's because we
need to actually pass this tweet in to
this function and you guys will notice
that our initializer with this tweet on
this view model is now coming in handy
because we have access to the tweet that
we need to like so we're going to say
like tweet
and then here
we're just going to pass in that tweet
so now it knows what tweet to update the
likes property on and then it's going to
know how to update that user like
structure that we're going to create so
let's go ahead and run this
and see what we got boys and girls
so let's keep an eye on our back end
and let me go to like let's see
this tweet from lewis hamilton mercedes
is the best team on the planet bar none
i'm the best driver
um so that's this guy right here so


about:blank

    290/3156/7/23, 1:25 AM    about:blank
Main subtitle
watch pay attention to this likes
Second subtitle
parameter guys let me
zoom in on this a little bit
so i hit this button
bam and you guys notice that it updated
that likes property and then here let's
find lewis hamilton's uh
document now you notice we have a user
likes collection
and this is going to be a pointer to the
tweet id that we just liked guys and all
we need is the tweet id we don't need
any actual document data we just want
this to serve as like a list
of the user the the the tweets that a
user has liked and we can take these ids
and go back into the tweets collection
and fetch them you guys will notice that
this is the tweet we just liked so that
matches up perfectly so
that's going to help us one figure out
whether or not we've already liked to
tweet and then it's also going to help
us display the list of the tweets that a
user has liked
but uh before we get into that we need
to actually update our ui
so
what i'm gonna do guys is hop into this
model our tweet model
and i'm gonna add another optional
property it's going to be called did
like and it's just a boolean
excuse me
um
typically guys i would just default this
to false so it doesn't have to be




about:blank



    291/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
optional
but um
that would cause this decode to fail
which is kind of annoying um but i guess
firebase just needs to update their code
but essentially you just make it an
optional boolean or optional property
and that won't cause the decode to fail
what i mean by that is we don't have
this did like property in the database
because um it doesn't make sense to keep
that like property in the database
because whether or not we liked it is
unique to each individual user we want
this to be sort of like a global data
store
that doesn't contain information unique
to specific users because some people
will have liked it some people won't but
all of this stuff is universal
information about the tweet this is more
so like a user relation to the tweet
so we're just going to make it this
optional property i'm pretty sure we
could give it a default value of false
but it does have to be optional
so just go ahead and run your code one
more time just to make sure that we're
still successfully fetching these tweets
and
and
loading our data correctly
so that should be fine
you guys notice this is still okay
but we noticed that hey this is the
tweet we liked and it's not showing we
we need like i don't want to hit this


about:blank

    292/3156/7/23, 1:25 AM    about:blank
Main subtitle
like button again
Second subtitle
and increment the like count a second
time
each user can only like a tweet once
so
now what we're going to do is use this
model property of did like
and um figure out how we're going to
adjust uh what we want to do with our uh
like function
so back in our tweet service we can't
modify this from here meaning we don't
want to update our tweet model from this
service class right that's just not how
the architecture is supposed to work we
need to do that from the view model so
what we're going to do is add our own
completion handler to this like tweet
function so that we can access it in the
view model so the view model will know
when all of these back end processes
have completed so we can update our
model object and have that in turn
update our ui that's how this lifecycle
is supposed to work so we're going to
say completion
at escaping
bool
void
and here guys we're just going to go
into this completion block and say
completion true
and you can go ahead and build that
and just to make sure we don't have any
errors in our service class and we don't
we're going to get one in our view model
because we need to actually implement




about:blank



    293/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
this completion handler now so just go
ahead and delete that like tweet and
retype it pass in the tweet
and we don't actually need that boolean
variable we just need to know that this
process has completed so if you guys
want you could actually go back to the
tweet service and just delete that
and make make this completion just
execute just like that
so now we can go back to our tweet view
model or a tweet row view model and
um let's actually just retype this one
more time
and you guys notice it just opens up a
block for us
now we can modify this tweet object okay
so it actually has to be a variable and
it actually has to be a published
variable because when that tweet gets
modified we want to publish that change
and update our ui so we're going to say
published var tweet which is a tweet
here we set it and now we can say
self.tweet.did like equals true
and let's just go ahead and run this
code
or build it just to make sure there's no
errors and we can continue on
and it should be fine the last thing we
need to do is update our view
to make it so that when that did like
property is true
this is a red heart and when it's false
it's this blank heart
alright guys so let's hop back into our
tweet row view


about:blank

    294/3156/7/23, 1:25 AM    about:blank
Main subtitle
and we're going to want to
Second subtitle
do some modification on this button here
so
uh what i mean by that is now this image
name is going to depend on whether or
not the tweet has been liked so we're
going to go here and we're just going to
cut that and we're going to say view
model
oops view model dot tweet dot did like
yes
is going to be heart dot phil
no is just going to be our heart
and then we're also going to need a
foreground color so we're going to go
here and say dot foreground color
view model dot tweet dot did like
and it looks like this needs a um
it needs to be unwrapped so let's just
give it a default value of false
because it it should default to false
and then uh we'll say the same thing
here
you know default value of false is going
to be
uh
color
dot system red oops
actually we guys we can just say dot red
guys and no is dot gray
so that should be the last piece of that
puzzle there's a couple other things we
have to do
um
oh we need a question mark right there
so build
that and let's go ahead and like a tweet




about:blank



    295/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
and see if that works but there are like
i said going to be a couple other things
we have to do to really complete this
feature so i'm going to run this
and the two things that we we have to do
guys are we have to write the code to
unlike a tweet
and then we have to write the code out
to check and see if a user has liked the
tweet when the app launches so you can
see here that i have liked one of these
tweets but i'm not i don't have any code
in my application to check and see if
i've liked all these tweets so
as far as the app is concerned none of
these tweets have been liked yet even
though that information exists in the
database we have to do a check so really
quickly i'm going to go ahead here like
this
huh
so i know why that didn't work and that
is because this is not an observed
object so
we have to go here and say observed
object var view model
and now we can run this again and that
should work
so guys if your view model is not
observed
um as we just saw there it does not
observe changes that publishers make
so you have to have this relation of uh
you know having the view model be
something that is observable and then in
the tweet in the view file you observe
the view model and the changes that


about:blank

    296/3156/7/23, 1:25 AM    about:blank
Main subtitle
happens to it so let's see there and
Second subtitle
boom let's go that's working
oh man i really love it when comes
together like that guys it pumps me up i
guess that makes me a dork but who cares
so that is working and it looks
beautiful we're liking a tweet and we
can go back to our database and we can
see that if we go to our users
let's see lewis hamilton should now have
a list of three tweets that he's liked
so let's just look at the ids mine is
lwr m9k and se
so i go back here and we should see that
we have lwr that's one of the tweets i
liked se that's another one and m9k is
the other one and you guys can see here
that we are accurate re accurately
reflecting the like count of those
tweets
so the next thing i want to do guys is
write some code to check and see if we
have liked a tweet and then
we will then update our ui
um to like make this information
actually persist right so if you guys
notice like right now it says i've liked
the tweet so pay attention seven time f1
world champion has entered the chat
and if i run the app again guys you guys
are going to notice that when it shows
up again
that tweet
isn't liked anymore even though that
information exists in the database and
this is pretty buggy right now because
if i hit this like button again it would




about:blank



    297/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
increment the like count to two right
which is not something we want to happen
so we need to write the code to unlike a
tweet and check and see if a tweet has
been liked before we can move on to the
profile stuff so we're almost done so
let's go back into our tweet service and
we're going to write a function called
func check
if
user liked tweet
and we need access to the tweet
and we're going to need another
completion of at escaping
void
but this time we actually need a boolean
variable guys because we want this
completion handler to tell us whether or
not the tweet has been liked
so we basically just need to go
into the user's uh
data structure
and we need to check this user likes
collection and if the tweet id that
we're looking at is exists in this list
we know that the user has liked that
tweet if not they haven't so that's
pretty simple to do we're just going to
say firestore
firestore dot collection
users
dot document and we need our uid here so
let's just copy and paste this guy right
there and we need the tweet id as well
so let's copy that in there as well
um we're going to say document uid
dot


about:blank

    298/3156/7/23, 1:25 AM    about:blank
Main subtitle
collection user dash likes right so
Second subtitle
let's uh
make this a little bit more readable
just like that
dot
get document or sorry let's uh let's see
dot document
tweet id
dot get document
snapshot
and error and this is pretty smooth guys
we can just say completion
snapshot dot exists
so let's actually
say guard let snapshot
equal snapshot
else return because we don't want it to
be optional
and then we can say
completionsnapshot.exists
so this dot exists guy
is just going to tell us whether or not
that document exists right so if it
exists we get back true if not we get
back false and that will ultimately tell
us whether or not we liked that tweet so
let's go ahead and figure out where
we're gonna call this okay
so
back on the tweet row view model
when we initialize this view
or this view model with a tweet
we can just go ahead and call that you
know that function that we just wrote so
let's write a function check
if user liked tweet
and we call service dot check if user




about:blank



    299/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
like tweet we pass in our tweet and this
completion will say did like in and
we're just going to say self.tweet
or let's actually only update it if did
like is true right because it's
automatically false
and if it
once we get this back the only way the
only time we want to actually update
that
that tweet is if it's actually been
liked if it's false we don't want to
unnecessarily publish that just to have
it show the same information that the
tweet hasn't been liked so we're just
going to say if did like
self.tweet.did equals true
and let's build that
should be good to go then we're going to
go here and say check if user like tweet
and we're going to run our code and we
should see
all the tweets we've liked
show up with a red heart if we did this
right
and that's going to be pretty freaking
awesome man so let's hope for the best
let's go yes let's go
let's go right these are all the tweets
that
this currently logged in user has liked
right so that's awesome let's like
another one let's like first test tweet
and let's just go ahead and run the app
again and see if that persists
and then the last thing we got to do
guys before we move on to the profile oh


about:blank

    300/3156/7/23, 1:25 AM    about:blank
Main subtitle
check that out that is so nice right
Second subtitle
there let's go
um we just got to write the function to
unlike a tweet and then make it so that
if the tweet has been liked if we click
it again we unlike the tweet and delete
that information in the database so
let's hop back to the tweet service and
write this unlike tweet function
so we're just gonna say funk unlike
tweet
tweet
tweet
and we can just copy this completion
we need the same information
that we have here
and we uh
let's see
guys i think we don't actually need
to
uh make this a separate function but
let's go ahead and type it out and then
refactor it so basically we're going to
go into this
tweets collection and we're going to
decrement the like count
so we're going to say
firestore dot firestore dot collection
tweets
dot document tweet id
dot update data
and we're just gonna go
grab this dictionary right here
but we're gonna to say tweet.likes -1
and we're also going to add a guard
check here guys that says guard let
or we're just going to say guard




about:blank



    301/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
tweet.likes
is greater than or equal to zero else
return
or sorry greater than zero because if
the tweet like count is zero we don't
want to be able to unlike the tweet and
have the likes go into the negative so
this is just an additional logic check
or logic gate to make sure that we you
know keep our data
valid in the application
so then we're going to hit completion on
this error or enter on that completion
block
and we need to go and delete the
user likes ref
tweet id so we're going to copy that
and we are going to say user likes ref
dot
document
tweet
dot id dot delete
with a completion
and we just do underscore error in and
then we execute our own completion
handler
so that's our unlike tweet function
um it's pretty similar to this stuff
guys but
it's uh not similar enough to where i
would care to refactor it like
we have some different functionality
like we're deleting data
and stuff like that so i'm just going to
leave these as two separate functions
and it'll probably make our life a
little bit easier actually


about:blank

    302/3156/7/23, 1:25 AM    about:blank
Main subtitle
so
Second subtitle
now what we need to do is go to this
tweet row view
and we need to update how we call this
or you know
uh
the logic for this button so we're going
to say
view model dot tweet dot did like yes
and then we're gonna say uh view
model dot
unlike tweet
oh we need that function in the view
model
so really quickly guys let's go back to
the view model and add this unlike tweet
function we're going to say funk unlike
tweet
service dot unlike tweet
tweet
completion self.tweet
dot did like equals false
so
we want to be able to have the user
unlike the tweet and reset the like back
to its original state
so now we have this unlike tweet
function we're gonna go back to our
tweet row view and we're gonna say
unlike tweet no
view model dot like tweet
so
that should be good guys so what this is
saying um we need to give this a default
value again which is kind of annoying
yes
no




about:blank



    303/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
let's go ahead and build that
and that should be good to go so what
this is saying guys is if the tweet has
been liked right so right now it's in
the liked state like did like is true
then when we click it we want to unlike
the tweet and if the tweet has not been
liked then we want to like the tweet so
that's what this is doing right here so
now let's go ahead run this test it out
and then we'll be able to move on to
fetching um
the tweets the users liked and
displaying them in the profile and we'll
be pretty much done with the app so it's
getting pretty exciting so
first off guys let's go ahead and
see
if this data actually gets deleted so
i'm going to just unlike this and you
guys notice that we had a value
disappear
and then if i go back to the tweets
let's see if we can find that tweet
seven time f1 world champion
boom the likes is now zero so let's
unlike another one
i believe it's this one you guys noticed
that the like count decremented to zero
and that you know now it's only two
liked tweets in my feed and if i were to
run this code again
we should notice that those other tweets
that we just unliked
are not showing up as liked anymore and
that the other two
uh persist as liked so that is looking


about:blank

    304/3156/7/23, 1:25 AM    about:blank
Main subtitle
absolutely phenomenal guys that's um
Second subtitle
you know just how you introduce a liking
system for any kind of content
so the next step here is to finish up
this profile so we want to one
adjust this button so that it shows the
right data or the right title and then
we want to be able to click on likes and
have it show a different list of tweets
so that's going to be really exciting
and that is going to wrap it up for the
course so almost done guys stick with me
through this to the end this last part
is going to be fun and add a little bit
more flair to the app so let's go ahead
and get it done now
all right guys so we are on the home
stretch here let's hop back into our
tweet service and we are gonna add
another function here to fetch our users
liked tweets so before we do that guys i
actually just want to grab all these
like functions so we have those here
let's create an extension on our service
so we're just gonna say extension tweet
service
and paste them all in there and we're
going to add a mark
and say likes here so this just helps us
like compartmentalize or segment our
service to make it a little cleaner
because you can see here that we're
adding quite a bit of functions and you
know if you guys want you could uh sort
of categorize these as well
um you could into like fetching and
uploading and stuff like that i just




about:blank



    305/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
wanted to show you how to sort of clean
that up a little bit so we're going to
add something to this extension we're
going to say funk
fetch liked tweets
for uid uid which is a string
and then we're going to have a
completion
of at escaping
void and it's going to be an array of
tweets
just like this so basically guys the
reason we have these this input
parameter here is because when we go to
a user's profile we want to fetch the
likes for that specific user so for
example here i would fetch lewis
hamilton's suites
and here you know if i go to like the
search page i would want to fetch carlos
sanz's tweets here
right
so that's why we pass in this uid and
we're going to be calling this function
in the profile view model so let's just
go ahead and say print debug fetch
liked tweets here and let's go ahead and
see if we can figure out where to call
this
so we're going to go back into our core
folder we're going to go to profile view
models profile view model and you guys
see that we already have our tweet
service set up here so now we're just
going to go here and say funk fetch
liked tweets
and we're going to say service dot fetch


about:blank

    306/3156/7/23, 1:25 AM    about:blank
Main subtitle
liked tweets for uid user.id
Second subtitle
tweets in and we're gonna need to unwrap
that so we're gonna go here
and then we are going to pass in that
uid to this function and let's just go
ahead and
um
call this in our init we're going to say
self.fetch like tweets and we're going
to create another published variable
called liked tweets
and it's going to equal
a tweet array so here basically guys
what we're going to do is make it so
that
when we select this tweets filter it
gives us back these tweets when we
select this likes filter it gives us
back these likes or liked tweets array
and you know
we're just going to add a function in in
here in just a second to get that done
right now i just want to make sure that
our function is actually getting called
and we get that print statement back
so let's see
it should show up when our profile view
initializes so let's go to our profile
and we see here that we have fetch liked
tweets here so that's looking really
good
now we just need to write the code to
fetch that stuff
so
it's basically what we have to do guys
is we have to do a chained fetch here so
what that means is we have to go into




about:blank



    307/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
this user likes structure grab the tweet
ids
take the tweet id
go back to this tweets guy and then grab
use that id to get the associated tweet
data so that we can actually construct
or create our tweet object in our code
so
uh it's not that bad let's just go ahead
and figure out how to do it so i'm gonna
say uh
first off
firestore dot firestore.collectionusers
dot document so i need my user id which
i have right here
so let's enter there and then we're
gonna say dot collection
user dash likes
dot get documents
snapshot and we don't need to worry
about the error
then what we're going to say is guard
let documents
equal snapshot documents else return and
these guys are a bunch of blank
documents
right you guys remember all we have is
this list of
ids but these are actually still treated
as documents they're just blank so we
just need to grab all of the ids that we
have here so basically what we can say
is documents
dot for each
doc
in
then we're going to say let tweet id


about:blank

    308/3156/7/23, 1:25 AM    about:blank
Main subtitle
equal doc dot document id just like that
Second subtitle
so that's going to give us the actual
tweet id and once again that represents
what this id is right here this is the
document id and the way we set our back
end up is that this is a pointer to the
actual tweet that we need to get so now
um
i don't believe we have a fetch tweet
function like a single fetch tweet
so we're gonna have to write that out
so we just need to say firestore dot
firestore dot collection
tweets
dot document tweet id
and let's go ahead and press enter there
and then we just say get document
completion snapshot error
and now we just need to map our tweet or
that document data into a tweet guys so
we're gonna say
uh guard let tweet equal
um
hold on
we need to get the document first so
we're going to say guard let document
equal snapshot dot document ooh no that
is the document awesome
so one sec
bear with me so now we're just going to
say guard let tweet equal try
snapshots dot data as tweet
dot self
else return
and we need to be able to append this to
some sort of array so we're going to
create that up at the top we're going to




about:blank



    309/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
say var tweets equals tweet
and then we're going to say tweets dot
append
oops
tweet right
and then guys um
i believe
then we say completion
tweets just like that
so
that is looking pretty good
now we just need to uh go ahead and set
that liked tweets guy in our profile
view model so here we just go ahead and
say self dot liked tweets equals tweets
and now we need to add our filter
function right so
basically guys we're just going to add a
function here we're going to say funk
tweets
for filter filter
tweets uh filter view model
and it's gonna give us back an array of
tweets
just like this and we're going to say
switch filter
case tweets we're just going to return
tweets
case replies we can also just return
tweets because we don't have replies and
then for the likes we're going to return
liked tweets so this is super super
smooth guys we're using this filter to
help us you know select the correct data
source that we want our list to be
populated with and then all we have to
do is go back to our profile


about:blank

    310/3156/7/23, 1:25 AM    about:blank
Main subtitle
view and instead in the tweet list view
Second subtitle
so right down here we just say view
model dot tweets
for filter
uh
and i believe we can just say self dot
selected filter
so that is super super smooth let's go
ahead and run this
and see if that is showing up correctly
and by my calculations
it should be
and then the last thing we got to do is
update that edit profile button and this
app is freaking done
let's go i'm pumped man
so let's go to our profile
boom
likes oh
oh wait dang we still gotta fetch the
user information
almost there guys we are almost there
let's keep it going so we do actually
have to fetch the unique users for this
um
because we uh we can like other people's
tweets and display them there those
these tweets aren't always going to be
from us
so in our tweet service
let's see let's see
we could do that here
or we could do it in our profile view
model
so let's see um i think we did that
somewhere else
in our feed view model maybe




about:blank



    311/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
yes so we did it here
so we can literally just go here
copy this
in your fetch tweets function in the
view model guys
no wait yeah yeah we need to copy that
and then we can go here
and say for i in tweets.com let that
equal uid self.user service so we need
our user service in here
with uid uid user in self.litetweets
i dot user equals user so now we just
need to create this user service so
we're going to say
private let user service equal user
service
and we can build this
and that should be good to go guys
so that is looking pretty good
i think that's gonna solve our problem
and then we'll be done
so let's go to lewis hamilton's profile
we go here and boom
check that out baby let's go
so we can see here that this is lewis
hamilton's list of like tweets and now
guys we kind of have that really awesome
animation too where like it like sort of
reloads that tweet list for us right so
that is looking
absolutely phenomenal right there um app
is looking super super smooth the last
thing we need to do guys is update this
button right here and that is going to
be a super simple fix so pretty much
what i want us to do is hop into our
user model file


about:blank

    312/3156/7/23, 1:25 AM    about:blank
Main subtitle
and we're going to create this computed
Second subtitle
property we're going to say is current
user
which is a bool
and we're going to return
and we actually need to import firebase
up at the top
we're going to say
auth.auth.currentuser.uid
equals id
so basically if the currently logged in
user's id is equal to this userid
property on our object we know that
they're the current user and that's
going to help us figure out this button
title so let's actually hop back to our
profile view model and we're going to
create a computed property here so i'm
going to say
var
action button title
and it's going to be a string
and we're going to say if
self dot user dot is current user
uh wait we can actually just wrap this
in a ternary we can say return user dot
is current user yes
edit profile
no
follow
and we'll just replace where we see edit
profile with this view model dot action
button title so profile view
let's see edit profile we just go here
guys and we say view model
dot action button title
so that's in this action buttons




about:blank



    313/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle
property
and we can run this
and
that should work and guys
now we are finally done with this app
right that's almost seven hours of
content give yourself a huge pat on the
back man this is an amazing project to
add to your portfolio you guys learned
some amazing skills we pretty much just
built a full scale application with
nothing but swift ui so let's go ahead
and check and see if this works we're
seeing edit profile there which is great
we go to someone else's profile and we
see that follow button showing up there
that's awesome and we notice that this
likes or this guy here is also
successfully uh showing up
so man uh what a ride that has been guys
thanks so much for joining me on it once
again if you guys want the completed
source code for this um go ahead and
check out the link in my description
also have some links in my description
to a bunch of other courses that i have
with both ui kit and swift ui so make
sure you guys check that out as well
like and subscribe to the channel tons
more free content coming your way just
like this i'm probably going to do
either instagram or chat app or maybe
even a crypto app next so get excited
for that guys big things coming to the
channel once again thanks so much for
taking time out of your day to code with
me see you later guys peace out


about:blank

    314/3156/7/23, 1:25 AM    about:blank
Main subtitle    Second subtitle




about:blank    315/315